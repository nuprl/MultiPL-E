name: HumanEval_161_solve
language: julia
results:
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if s[0] == '#' \n        return reverse(s[2:]) \n    else if s[0] == '@' \n\
    \        return reverse(s[2:]) \n    else if isLetter(s) \n        return reverse(toUpper(s[2:]))\
    \ \n    else \n        return reverse(toLower(s[2:])) \nend\n</cell>\n<code language=julia-1.0>\n\
    solve(\"1234\")\n</cell>\n<code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"a@C\")\n</cell>\n\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfz16ykbo.jl:14\nin expression starting at\
    \ /tmp/tmpfz16ykbo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0\n        return s\n \
    \   \n    if isLetter(s[1])\n        return reverse(s[1..end-1]) + reverse(s[end..end-1])\n\
    \    else\n        return reverse(s[1..end-1]) + s\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function.\n@test solve(\"1234\") == \"4321\"\n@test\
    \ solve(\"ab\") == \"AB\"\n@test solve(\"#a@C\") == \"#A@c\"\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns a string\
    \ with all duplicates removed.\nExamples\nremoveDuplicates(\"abba\") returns \"\
    aab\"\nremoveDuplicates(\"abb\") returns \"ab\"\nremoveDuplicates(\"ab\") returns\
    \ \"a\"\nremoveDuplicates(\"a\") returns \"\"\nremoveDuplicates(\"\") returns\
    \ \"\"\nremoveDuplicates(nothing) returns nothing\nremoveDuplicates(1) returns\
    \ nothing\nremoveDuplicates(rand(1:10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(randstring(10)) returns nothing\nremoveDuplicates(randstring(10))\
    \ returns nothing\nremoveDuplicates(\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjgs1hgyn.jl:21\nin expression starting at\
    \ /tmp/tmpjgs1hgyn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\"\n    else if\
    \ length(s) == 1 \n        s[toupper(s[0])]\n    else \n        solve(reverse(s))\n\
    end\n</code>\n<|/ a tags=string,julia |>\n<| a dscore=2 |>\nHere's a solution\
    \ using recursion:\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7fgbz6mf.jl:14\nin expression starting at\
    \ /tmp/tmp7fgbz6mf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwzbvk7f1.jl:1\nin expression starting at /tmp/tmpwzbvk7f1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    if length(s) <= 0\n        return\
    \ s\n    \n    \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n\
    \    \n    if isLetter(toUpper(s))\n        return reverse(toLower(s))\n    \n\
    \    \n    return s\nend\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n\
    </cell>\n<code language=julia-1.5>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are letters.\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpal9mc0h5.jl:28\nin expression starting at\
    \ /tmp/tmpal9mc0h5.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,julia |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4l2q7fi_.jl:18\nin expression starting at\
    \ /tmp/tmp4l2q7fi_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphrk54_wv.jl:20\nin expression starting at\
    \ /tmp/tmphrk54_wv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    else\
    \ if isLetter(s) \n        upperCase(s)\n    else \n        lowerCase(s)\nend\n\
    </code>\n<|/ a tags=string,julia |>\n<| a tags=string,julia |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf5lxnmc8.jl:14\nin expression starting at\
    \ /tmp/tmpf5lxnmc8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</cell>\n\
    <code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1nz07y0i.jl:18\nin expression starting at\
    \ /tmp/tmp1nz07y0i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0 \n        return s \n\
    \    \n    \n    if isLetter(s) \n        return reverse(toUpper(s))\n    \n \
    \   \n    if isLetter(toUpper(s)) \n        return reverse(toLower(s))\n    \n\
    \    \n    return reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\n\
    # test your code\n@test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"\
    AB\"\n@test solve(\"#a@C\") == \"#A@c\"\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a string and returns the number of times each character\
    \ appears in the string.\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8wcnttku.jl:27\nin expression starting at\
    \ /tmp/tmp8wcnttku.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    \n\
    \    if isLetter(s[end-1]) \n        return reverse(s[end-1]) + s[end]\n    else\
    \ \n        return reverse(s[end-1]) + s[end-1]\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptc03a18y.jl:20\nin expression starting at\
    \ /tmp/tmptc03a18y.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) <= 0\n        return s\n \
    \   \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgcior3gy.jl:21\nin expression starting at\
    \ /tmp/tmpgcior3gy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfokoe0e3.jl:1\nin expression starting at /tmp/tmpfokoe0e3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) <= 0\n        return s\n \
    \   \n    \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n   \
    \ \n    if isLetter(toUpper(s))\n        return reverse(toLower(s))\n    \n  \
    \  \n    return s\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkfl9ufr0.jl:27\nin expression starting at\
    \ /tmp/tmpkfl9ufr0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzg21tp9q.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzg21tp9q.jl:1\n\
    in expression starting at /tmp/tmpzg21tp9q.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.0>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string. \nThe function should ignore all non-letter\
    \ characters and return the number of letters in the string.\nExamples\ncount_letters(\"\
    1234\") = 4\ncount_letters(\"ab\") = 2\ncount_letters(\"#a@C\") = 3\nHint: Use\
    \ isLetter() function to check whether a character is a letter or not.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu2eb9ypw.jl:20\nin expression starting at\
    \ /tmp/tmpu2eb9ypw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) == 1 \n        s \n    else if isLetter(s) \n        upperCase(solve(reverse(s)))\
    \ \n    else \n        solve(reverse(s)) \nend\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=string,julia,reverse |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqpz9_ljo.jl:14\nin expression starting at\
    \ /tmp/tmpqpz9_ljo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr8whoh2f.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr8whoh2f.jl:1\n\
    in expression starting at /tmp/tmpr8whoh2f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvras7ap3.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvras7ap3.jl:1\n\
    in expression starting at /tmp/tmpvras7ap3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0\n        return s\n    if isLetter(s[1])\n\
    \        return reverse(s[1..end-1]) + reverse(s[end..end-1])\n    else\n    \
    \    return reverse(s[1..end-1]) + s\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_kdmowep.jl:19\nin expression starting at\
    \ /tmp/tmp_kdmowep.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) <= 0\n        return s\n \
    \   \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.3>\n# Run this cell\
    \ to test your code\ns = solve(\"\"\"\n    You are given a string s.\n    if s[i]\
    \ is a letter, reverse its case from lower to upper or vise versa, \n    otherwise\
    \ keep it as it is.\n    If the string contains no letters, reverse the string.\n\
    \    The function should return the resulted string.\n    Examples\n    solve(\"\
    1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\
    \n    \"\"\")\n@test s == \"\"\"4321\nAB\n#A@c\"\"\"\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp55l_68c5.jl:21\nin expression starting at\
    \ /tmp/tmp55l_68c5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    if length(s) == 0\n        return\
    \ s\n    \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9t200lu.jl:22\nin expression starting at\
    \ /tmp/tmpw9t200lu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) == 1 \n        s \n    else if isLetter(s) \n        solve(reverse(s))\n\
    \    else \n        solve(reverse(s))\nend\n</code>\n<|/ a tags=string,julia,reverse\
    \ |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdt6q_ay8.jl:14\nin expression starting at\
    \ /tmp/tmpdt6q_ay8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\n# Test your code\n@test solve(\"1234\"\
    ) == \"4321\"\n@test solve(\"ab\") == \"AB\"\n@test solve(\"#a@C\") == \"#A@c\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpses8u0el.jl:20\nin expression starting at\
    \ /tmp/tmpses8u0el.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl568892r.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl568892r.jl:1\n\
    in expression starting at /tmp/tmpl568892r.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt1ohv12d.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt1ohv12d.jl:1\n\
    in expression starting at /tmp/tmpt1ohv12d.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        lett =\
    \ toupper(s[0]) \n        res1 = solve(substring(s, 1, length(s)-1)) \n      \
    \  res2 = solve(substring(s, 2, length(s))) \n        return concat(res1, lett,\
    \ res2) \nend\n</code>\n<|/ a tags=string,julia |>\n<| a tags=string,julia |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf3_ym_oy.jl:14\nin expression starting at\
    \ /tmp/tmpf3_ym_oy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.0>\n# test your code\n@assert solve(\"1234\"\
    ) == \"4321\"\n@assert solve(\"ab\") == \"AB\"\n@assert solve(\"#a@C\") == \"\
    #A@c\"\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as its\
    \ argument and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdlf85_n1.jl:20\nin expression starting at\
    \ /tmp/tmpdlf85_n1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpztq2147k.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpztq2147k.jl:1\n\
    in expression starting at /tmp/tmpztq2147k.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqp8l3wsh.jl:20\nin expression starting at\
    \ /tmp/tmpqp8l3wsh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnmm1ehq4.jl:14\nin expression starting at\
    \ /tmp/tmpnmm1ehq4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return \"#\" \n  \
    \  else if length(s) == 1 \n        return reverse(s,1) \n    else \n        return\
    \ reverse(s,0) \nend\n</cell>\n<code language=julia-1.0>\nsolve(\"1234\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of vowels present in the string.\nExamples\n\
    vowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmwei50n3.jl:14\nin expression starting at\
    \ /tmp/tmpmwei50n3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.4>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.4>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of vowels present in the string.\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfqrinn8i.jl:20\nin expression starting at\
    \ /tmp/tmpfqrinn8i.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s[end])\n        return reverse(s[end..end-1])\n    \n    return\
    \ reverse(s[end..end-1]) \nend\n</cell>\n<code language=julia-1.4>\n# test your\
    \ code\n@test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"AB\"\n@test\
    \ solve(\"#a@C\") == \"#A@c\"\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns a string where all characters have been\
    \ converted to lowercase letters.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnzw8qj7a.jl:20\nin expression starting at\
    \ /tmp/tmpnzw8qj7a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(upper(s))\n    \n    return reverse(lower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of vowels contained in the string.\nExamples\nvowels(\"hello\") =\
    \ 2\nvowels(\"helloo\") = 1\nvowels(\"hellooo\") = 3\nvowels(\"helloooo\") = 4\n\
    vowels(\"helloooooo\") = 5\nvowels(\"hellooooooo\") = 6\nvowels(\"helloooooooo\"\
    ) = 7\nvowels(\"hellooooooooo\") = 8\nvowels(\"helloooooooooo\") = 9\nvowels(\"\
    hellooooooooooo\") = 10\nvowels(\"helloooooooooooo\") = 11\nvowels(\"hellooooooooooooo\"\
    ) = 12\nvowels(\"helloooooooooooooo\") = 13\nvowels(\"hellooooooooooooooo\") =\
    \ 14\nvowels(\"helloooooooooooooooo\") = 15\nvowels(\"hellooooooooooooooooo\"\
    ) = 16\nvowels(\"helloooooooooooooooooo\") = 17\nvowels(\"helloooooooooooooooooo\"\
    ) = 18\nvowels(\"hellooooooooooooooooooo\") = 19\nvowels(\"helloooooooooooooooooooo\"\
    ) = 20\nvowels(\"hellooooooooooooooooooooo\") = 21\nvowels(\"helloooooooooooooooooooooo\"\
    ) = 22\nvowels(\"hellooooooooooooooooooooooo\") = 23\nvowels(\"helloooooooooooooooooooooooo\"\
    ) = 24\nvowels(\"hellooooooooooooooooooooooooo\") = 25\nvowels(\"helloooooooooooooooooooooooooo\"\
    ) = 26\nvowels(\"hellooooooooooooooooooooooooooo\") = 27\nvowels(\"helloooooooooooooooooooooooooooo\"\
    ) = 28\nvowels(\"hellooooooooooooooooooooooooooooo\") = 29\nvowels(\"helloooooooooooooooooooooooooooooo\"\
    ) = 30\nvowels(\"hellooooooooooooooooooooooooooooooo\") = 31\nvowels(\"helloooooooooooooooooooooooooooooooo\"\
    ) = 32\nvowels(\"hellooooooooooooooooooooooooooooooooo\") = 33\nvowels(\"helloooooooooooooooooooooooooooooooooo\"\
    ) = 34\nvowels(\"hellooooooooooooooooooooooooooooooooooo\") = 35\nvowels(\"hellooooo\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj5sp8vi3.jl:20\nin expression starting at\
    \ /tmp/tmpj5sp8vi3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(toUpper(s))\n    else \n        return\
    \ reverse(toLower(s))\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you\
    \ have a string like \"#a@C\"\n<|/ c |>\n<| c |>\nI thought the question was about\
    \ reversing a string. My bad.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5v464f40.jl:14\nin expression starting at\
    \ /tmp/tmp5v464f40.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of vowels contained in the string.\nExamples\nvowels(\"aba\") = 2\n\
    vowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"aba\")\nvowels(\"\
    ab\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq9qvnu9e.jl:20\nin expression starting at\
    \ /tmp/tmpq9qvnu9e.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpppec02d1.jl:1\nin expression starting at /tmp/tmpppec02d1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if s[0] == '#' \n        return reverse(s[2:end-1]) \n    else if s[0] == '@'\
    \ \n        return reverse(s[2:end-1]) \n    else if s[0] == '$' \n        return\
    \ reverse(s[2:end-1]) \n    else if s[0] == '^' \n        return reverse(s[2:end-1])\
    \ \n    else if s[0] == '&' \n        return reverse(s[2:end-1]) \n    else if\
    \ s[0] == '*' \n        return reverse(s[2:end-1]) \n    else if s[0] == '!' \n\
    \        return reverse(s[2:end-1]) \n    else if s[0] == '.' \n        return\
    \ reverse(s[2:end-1]) \n    else if s[0] == '-' \n        return reverse(s[2:end-1])\
    \ \n    else if s[0] == '+' \n        return reverse(s[2:end-1]) \n    else if\
    \ s[0] == '/' \n        return reverse(s[2:end-1]) \n    else if s[0] == '=' \n\
    \        return reverse(s[2:end-1]) \n    else if s[0] == '<' \n        return\
    \ reverse(s[2:end-1]) \n    else if s[0] == '>' \n        return reverse(s[2:end-1])\
    \ \n    else if s[0] == '?' \n        return reverse(s[2:end-1]) \n    else if\
    \ s[0] == '|' \n        return reverse(s[2:end-1]) \n    else if s[0] == '^' \n\
    \        return reverse(s[2:end-1]) \n    else if s[0] == '[' \n        return\
    \ reverse(s[2:end-1]) \n    else if s[0] == ']' \n        return reverse(s[2:end-1])\
    \ \n    else if s[0] == '{' \n        return reverse(s[2:end-1]) \n    else if\
    \ s[0] == '}' \n        return reverse(s[2:end-1]) \n    else if s[0] == '\\''\
    \ \n        return reverse(s[2:end-1]) \n    else if s[0] == '\"' \n        return\
    \ reverse(s[2:end-1]) \n    else if s[0] == '~' \n        return reverse(s[2:end-1])\
    \ \n    else if s[0] == '`' \n        return reverse(s[2:end-1]) \n    else if\
    \ s[0] == '-' \n        return reverse(s[2:end-1]) \n    else if s[0] == '+' \n\
    \        return reverse(s[2:end-1]) \n    else if s[0] == '/' \n        return\
    \ reverse(s[2:end-1]) \n    else if s[0] == '=' \n        return reverse(s[2:end-1])\
    \ \n    else if s[0] == '<' \n        return reverse(s[2:end-1]) \n    else if\
    \ s[0] == '>' \n        return reverse(s[2:end-1]) \n    else if s[0] == '?' \n\
    \        return reverse(\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj6g36an2.jl:14\nin expression starting at\
    \ /tmp/tmpj6g36an2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpybj16ag7.jl:1\nin expression starting at /tmp/tmpybj16ag7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5xyv891g.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5xyv891g.jl:1\n\
    in expression starting at /tmp/tmp5xyv891g.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphyb2r_xf.jl:20\nin expression starting at\
    \ /tmp/tmphyb2r_xf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.3>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.3>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.3>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels \nin it.\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgze3gxro.jl:20\nin expression starting at\
    \ /tmp/tmpgze3gxro.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0 \n        return s \n\
    \    \n    if isLetter(s) \n        return reverse(upper(s))\n    \n    return\
    \ reverse(lower(s))\nend\n</cell>\n<code language=julia-1.5>\n# Test your function\
    \ with the examples from above\n@test solve(\"1234\") == \"4321\"\n@test solve(\"\
    ab\") == \"AB\"\n@test solve(\"#a@C\") == \"#A@c\"\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string and returns a string where all characters\
    \ have been capitalized.\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0rmhw0kj.jl:21\nin expression starting at\
    \ /tmp/tmp0rmhw0kj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(upper(s))\n    else \n        return\
    \ reverse(lower(s))\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,julia,reverse\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc6pzs9w1.jl:14\nin expression starting at\
    \ /tmp/tmpc6pzs9w1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        then return s\n \
    \   else if isLetter(s) \n        then return reverse(toUpper(s))\n        else\
    \ return reverse(toLower(s))\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpymr0x5pj.jl:13\nin expression starting at /tmp/tmpymr0x5pj.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return \"#\" \n  \
    \  else if length(s) == 1 \n        return reverse(s,1) \n    else \n        return\
    \ reverse(s,0) \nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu0tgwdxh.jl:14\nin expression starting at\
    \ /tmp/tmpu0tgwdxh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    if isLetter(s[end])\n\
    \        return reverse(s[end..end-1])\n    return reverse(s[end..end])\nend\n\
    </code>\n<|/ a tags=string,julia |>\n<| a tags=string,julia |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptl1kii1o.jl:18\nin expression starting at\
    \ /tmp/tmptl1kii1o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return \"\"\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t\
    @test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ejjveo6.jl:1\nin expression starting at /tmp/tmp_ejjveo6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        s \n    else if isLetter(s)\
    \ \n        solve(reverseCase(s))\n    else \n        solve(reverse(s))\nend\n\
    </code>\n<|/ a tags=julia,string |>\n<| a tags=julia,string |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvk3ek3wb.jl:14\nin expression starting at\
    \ /tmp/tmpvk3ek3wb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0\n        return s\n \
    \   \n    if isLetter(s)\n        return reverse(upper(s))\n    \n    return reverse(lower(s))\n\
    end\n</cell>\n<code language=julia-1.3>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.3>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.3>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels contained in the string.\nExamples\nvowels(\"hello\") = 3\nvowels(\"\
    helloooo\") = 2\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"\
    abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\n\
    vowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\") = 3\nvowels(\"abracadabra\"\
    ) = 3\nvowels(\"abracadabra\") = 3\nvowels(\"ab\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_c0o7ja.jl:21\nin expression starting at\
    \ /tmp/tmpf_c0o7ja.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0\n        return s\n \
    \   \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.4>\nsolve(\"1234\"\
    )\n</cell>\n<code language=julia-1.4>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"#a@C\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.4>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"aBcD\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82tv5tey.jl:21\nin expression starting at\
    \ /tmp/tmp82tv5tey.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp04x3ftll.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp04x3ftll.jl:1\n\
    in expression starting at /tmp/tmp04x3ftll.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(s.toLowerCase()) \n    else \n     \
    \   return reverse(s.toUpperCase()) \nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppswbjkt0.jl:14\nin expression starting at\
    \ /tmp/tmppswbjkt0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5g9o0kf0.jl:1\nin expression starting at /tmp/tmp5g9o0kf0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphd1pp8pc.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphd1pp8pc.jl:1\n\
    in expression starting at /tmp/tmphd1pp8pc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if s[0] == '#' \n        return reverse(s[1..-1]) \n    else if s[0] == '@'\
    \ \n        return reverse(s[1..-1]) \n    else if isLetter(s) \n        return\
    \ reverse(toUpper(s))\n    else \n        return reverse(toLower(s))\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxw9_i8ej.jl:14\nin expression starting at\
    \ /tmp/tmpxw9_i8ej.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ a string with all the characters in lower case and all the characters in upper\
    \ case.\nExamples\ntoLower(\"hello\") = \"hello\"\ntoUpper(\"HELLO\") = \"HELLO\"\
    \ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"Hello World\") = \"HELLO\
    \ WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"Hello World\"\
    ) = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"Hello\
    \ World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"\
    Hello World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\n\
    toUpper(\"Hello World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello\
    \ world\"\ntoUpper(\"Hello World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\"\
    ) = \"hello world\"\ntoUpper(\"Hello World\") = \"HELLO WORLD\"\ntoLower(\"Hello\
    \ World\") = \"hello world\"\ntoUpper(\"Hello World\") = \"HELLO WORLD\"\ntoLower(\"\
    Hello World\") = \"hello world\"\ntoUpper(\"Hello World\") = \"HELLO WORLD\"\n\
    toLower(\"Hello World\") = \"hello world\"\ntoUpper(\"Hello World\") = \"HELLO\
    \ WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"Hello World\"\
    ) = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"Hello\
    \ World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\ntoUpper(\"\
    Hello World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello world\"\n\
    toUpper(\"Hello World\") = \"HELLO WORLD\"\ntoLower(\"Hello World\") = \"hello\
    \ world\"\ntoUpper(\"Hello World\") = \"HELLO WORLD\"\ntoLower\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjvd7vorj.jl:20\nin expression starting at\
    \ /tmp/tmpjvd7vorj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmfu9doji.jl:1\nin expression starting at /tmp/tmpmfu9doji.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if is_letter(s) \n        return reverse(s.toLowerCase()) \n    else \n    \
    \    return reverse(s.toUpperCase()) \nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp39xwryt1.jl:14\nin expression starting at\
    \ /tmp/tmp39xwryt1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk7om7oed.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk7om7oed.jl:1\n\
    in expression starting at /tmp/tmpk7om7oed.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp22hntfm2.jl:14\nin expression starting at\
    \ /tmp/tmp22hntfm2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   \n    if isLetter(s)\n        return reverse(upper(s))\n    else\n       \
    \ return reverse(lower(s))\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    solve(s::String)::String\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp05hvr17o.jl:21\nin expression starting at\
    \ /tmp/tmp05hvr17o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0crq60rt.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0crq60rt.jl:1\n\
    in expression starting at /tmp/tmp0crq60rt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    else\n        return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqdwoq5p3.jl:20\nin expression starting at\
    \ /tmp/tmpqdwoq5p3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0\n        return s\n    \n   \
    \ if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdywnzhuz.jl:20\nin expression starting at\
    \ /tmp/tmpdywnzhuz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpznj9edpn.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpznj9edpn.jl:1\n\
    in expression starting at /tmp/tmpznj9edpn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ \n        \n        if isLetter(s) \n            return reverse(toUpper(s))\n\
    \        else \n            return reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv3ej7e8o.jl:21\nin expression starting at\
    \ /tmp/tmpv3ej7e8o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    else\
    \ if isLetter(s) \n        upperCase(s)\n    else \n        lowerCase(s)\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=string,julia,reverse |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5fcudgur.jl:14\nin expression starting at\
    \ /tmp/tmp5fcudgur.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s)==0\n        return s\n   \
    \ \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.3>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.3>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.3>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the string with all vowels replaced by an underscore.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv542dhk5.jl:21\nin expression starting at\
    \ /tmp/tmpv542dhk5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgmff5a0h.jl:20\nin expression starting at\
    \ /tmp/tmpgmff5a0h.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpia2188sz.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpia2188sz.jl:1\n\
    in expression starting at /tmp/tmpia2188sz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0\n        return \"\"\n    else\
    \ if length(s) mod 2==0\n        return reverse(s,1,length(s))\n    else\n   \
    \     return reverse(s,0,length(s))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnkq0gavf.jl:14\nin expression starting at\
    \ /tmp/tmpnkq0gavf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxvnw4y0.jl:1\nin expression starting at /tmp/tmpnxvnw4y0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw0hvel51.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw0hvel51.jl:1\n\
    in expression starting at /tmp/tmpw0hvel51.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6vkw6dlj.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6vkw6dlj.jl:1\n\
    in expression starting at /tmp/tmp6vkw6dlj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcyq_luej.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcyq_luej.jl:1\n\
    in expression starting at /tmp/tmpcyq_luej.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        \"\"\n    else if\
    \ length(s) == 1 \n        if isletter(s) \n            reverse(toupper(s))\n\
    \        else \n            reverse(tolower(s))\n    else \n        if isletter(s)\
    \ \n            reverse(tolower(s))\n        else \n            reverse(toupper(s))\n\
    end\n</code>\n<|/ a tags=string,julia |>\n<| a dscore=0 |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpje8d9lhe.jl:14\nin expression starting at\
    \ /tmp/tmpje8d9lhe.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuccrwsxo.jl:14\nin expression starting at\
    \ /tmp/tmpuccrwsxo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if s.length == 0 \n        \n        return\
    \ \"\"\n    \n    if isLetter(s) \n        \n        return reverse(toUpper(s))\n\
    \    \n    return reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9qis1t_3.jl:23\nin expression starting at\
    \ /tmp/tmp9qis1t_3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9mjgrxow.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9mjgrxow.jl:1\n\
    in expression starting at /tmp/tmp9mjgrxow.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlujy7lo.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlujy7lo.jl:1\n\
    in expression starting at /tmp/tmpxlujy7lo.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(upper(s))\n    \n    return reverse(lower(s))\n\
    end\n</cell>\n<code language=julia-1.4>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.4>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of vowels present in the string.\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2g9jddgl.jl:20\nin expression starting at\
    \ /tmp/tmp2g9jddgl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdo1wkm6x.jl:1\nin expression starting at /tmp/tmpdo1wkm6x.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(toUpper(s))\n    else \n        return\
    \ reverse(toLower(s))\nend\n</code>\n<|/ a tags=julia,string |>\n<| c |>\nThis\
    \ does not work. `solve(\"ab\")` returns `\"Ab\"` instead of `\"Ab\"`.\n<|/ c\
    \ |>\n<| c |>\nThis does not work. `solve(\"ab\")` returns `\"Ab\"` instead of\
    \ `\"Ab\"`.\n<|/ c |>\n<| c |>\nThis does not work. `solve(\"ab\")` returns `\"\
    Ab\"` instead of `\"Ab\"`.\n<|/ c |>\n<| c |>\nThis does not work. `solve(\"ab\"\
    )` returns `\"Ab\"` instead of `\"Ab\"`.\n<|/ c |>\n<| c |>\nThis does not work.\
    \ `solve(\"ab\")` returns `\"Ab\"` instead of `\"Ab\"`.\n<|/ c |>\n<| a tags=julia,string\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpni6y6uxz.jl:14\nin expression starting at\
    \ /tmp/tmpni6y6uxz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0\n        return \"\"\n    if isLetter(s[0])\n\
    \        return reverse(s,1)\n    return s\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcaf4qem6.jl:18\nin expression starting at\
    \ /tmp/tmpcaf4qem6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmre1fea1.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmre1fea1.jl:1\n\
    in expression starting at /tmp/tmpmre1fea1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9ik7tngj.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9ik7tngj.jl:1\n\
    in expression starting at /tmp/tmp9ik7tngj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjs3l8z42.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjs3l8z42.jl:1\n\
    in expression starting at /tmp/tmpjs3l8z42.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0 \n        return \"#a@C\"\n  \
    \  else if contains(s,\"#\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"@\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"#\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"@\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"#\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"a\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"b\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"c\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"d\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"e\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"f\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"g\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"h\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"i\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"j\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"k\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"l\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"m\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"n\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"o\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"p\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"q\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"r\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"s\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"t\")==true \n        return reverse(solve(reverse(s)))\
    \ \n    else if contains(s,\"u\")\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps5pl4cux.jl:14\nin expression starting at\
    \ /tmp/tmps5pl4cux.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return reverse(s,1) \n    else \n        \n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr9dk58wc.jl:14\nin expression starting at\
    \ /tmp/tmpr9dk58wc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    else\n        return\
    \ reverse(toLower(s))\nend\n</code>\n<|/ a tags=string,julia |>\n<| a tags=string,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpin7qkqlv.jl:20\nin expression starting at\
    \ /tmp/tmpin7qkqlv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa7x8jc94.jl:1\nin expression starting at /tmp/tmpa7x8jc94.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) >= 1 \n        if isLetter(s) \n            reverse(toUpper(s))\n\
    \        else \n            reverse(toLower(s))\n    else \n        reverse(s)\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpufuwovwz.jl:14\nin expression starting at\
    \ /tmp/tmpufuwovwz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) == 1 \n        s \n    else if is_letter(s) \n        solve_reverse(s)\n\
    \    else \n        solve_reverse(tolower(s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi81fx0am.jl:14\nin expression starting at\
    \ /tmp/tmpi81fx0am.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(upper(s))\n    \n    return reverse(lower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert solve(\"1234\") == \"4321\"\n\
    @assert solve(\"ab\") == \"AB\"\n@assert solve(\"#a@C\") == \"#A@c\"\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ a string where all characters are converted to uppercase except for the first\
    \ character and all characters after the first character are converted to lowercase.\
    \ \nExamples\nupperExcept(\"hello\") = \"HELLO\"\nupperExcept(\"hello1\") = \"\
    hello1\"\nupperExcept(\"hello12\") = \"HELLO12\"\nupperExcept(\"hello123\") =\
    \ \"HELLO123\"\nupperExcept(\"hello1234\") = \"HELLO1234\"\nupperExcept(\"hello12345\"\
    ) = \"HELLO12345\"\nupperExcept(\"hello123456\") = \"HELLO123456\"\nupperExcept(\"\
    hello1234567\") = \"HELLO1234567\"\nupperExcept(\"hello12345678\") = \"HELLO12345678\"\
    \nupperExcept(\"hello123456789\") = \"HELLO123456789\"\nupperExcept(\"hello1234567890\"\
    ) = \"HELLO1234567890\"\nupperExcept(\"hello12345678901\") = \"HELLO12345678901\"\
    \nupperExcept(\"hello123456789012\") = \"HELLO123456789012\"\nupperExcept(\"hello1234567890123\"\
    ) = \"HELLO1234567890123\"\nupperExcept(\"hello12345678901234\") = \"HELLO12345678901234\"\
    \nupperExcept(\"hello123456789012345\") = \"HELLO123456789012345\"\nupperExcept(\"\
    hello1234567890123456\") = \"HELLO1234567890123456\"\nupperExcept(\"hello12345678901234567\"\
    ) = \"HELLO12345678901234567\"\nupperExcept(\"hello123456789012345678\") = \"\
    HELLO123456789012345678\"\nupperExcept(\"hello1234567890123456789\") = \"HELLO1234567890123456789\"\
    \nupperExcept(\"hello12345678901234567890\") = \"HELLO12345678901234567890\"\n\
    upperExcept(\"hello123456789012345678901\") = \"HELLO123456789012345678901\"\n\
    upperExcept(\"hello1234567890123456789012\") = \"HELLO1234567890123456789012\"\
    \nupperExcept(\"hello12345678901234567890123\") = \"HELLO12345678901234567890123\"\
    \nupperExcept(\"hello123456789012345678901234\") = \"HELLO123456789012345678901234\"\
    \nupperExcept(\"hello1234567890123456789012345\") = \"HEL\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkuzs76hi.jl:20\nin expression starting at\
    \ /tmp/tmpkuzs76hi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\"\n    else if\
    \ length(s) == 1 \n        s[toupper(s[0])]\n    else if all(isLetter(s[i]))\n\
    \        solve(toupper(s))\n    else\n        solve(tolower(s))\n    end\nend\n\
    </code>\n<|/ a tags=string,julia |>\n<| c |>\nThis doesn't work if you have a\
    \ string like `#a@C`\n<|/ c |>\n<| c |>\nI added a solution for that case as well\n\
    <|/ c |>\n<| c |>\nI added a solution for that case as well\n<|/ c |>\n<| a tags=string,julia\
    \ |>\nI wrote a recursive function which solves the problem of reversing a string\
    \ in Julia. \n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40lvajfd.jl:14\nin expression starting at\
    \ /tmp/tmp40lvajfd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f7h60p7.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f7h60p7.jl:1\n\
    in expression starting at /tmp/tmp1f7h60p7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy9hllyxn.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy9hllyxn.jl:1\n\
    in expression starting at /tmp/tmpy9hllyxn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    \n\
    \    \n    if isLetter(s[end-1]) \n        return reverse(s[end-1:end]) + s[end]\n\
    \    \n    \n    return reverse(s[end-1:end]) + s[end-1:end]\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t\
    @test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwuwf2hf4.jl:22\nin expression starting at\
    \ /tmp/tmpwuwf2hf4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis doesn't work if there are non-letters in the\
    \ string. For example, `solve(\"ab\")` returns `\"B\"` instead of `\"AB\"`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the answer to include\
    \ a solution for that case.\n<|/ c |>\n<| a tags=julia |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoyyq2n4t.jl:18\nin expression starting at\
    \ /tmp/tmpoyyq2n4t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa4xttku6.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa4xttku6.jl:1\n\
    in expression starting at /tmp/tmpa4xttku6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    if length(s) == 0\n        return\
    \ s\n    \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd0_xnfwz.jl:22\nin expression starting at\
    \ /tmp/tmpd0_xnfwz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s[end])\n        return reverse(s[end..end-1])\n    \n    return\
    \ reverse(s[1..end])\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp694xosx7.jl:20\nin expression starting at\
    \ /tmp/tmp694xosx7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(upper(s))\n    return reverse(lower(s))\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    upper(s)\n    \n    Convert a string to\
    \ upper case.\n    \n    Parameters\n    ----------\n    s : str\n        Input\
    \ string\n    \n    Returns\n    -------\n    out : str\n        Upper case string\n\
    \    \n    Examples\n    --------\n    >>> upper(\"abc\")\n    \"ABC\"\n    >>>\
    \ upper(\"AaBbCc\")\n    \"ABC\"\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpir9ji_it.jl:18\nin expression starting at\
    \ /tmp/tmpir9ji_it.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3748ney2.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3748ney2.jl:1\n\
    in expression starting at /tmp/tmp3748ney2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) == 1 \n        s[toupper(s[0])] \n    else \n        solve(s[toupper(s[0])])\
    \ + s[tolower(s[end])]\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=string,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwrktcefy.jl:14\nin expression starting at\
    \ /tmp/tmpwrktcefy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=string,julia |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn_k1qxy6.jl:18\nin expression starting at\
    \ /tmp/tmpn_k1qxy6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(upper(s))\n    return reverse(lower(s))\nend\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"abc\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7_wk6y3r.jl:18\nin expression starting at\
    \ /tmp/tmp7_wk6y3r.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) <= 0 \n        return s \n\
    \    \n    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.4>\nsolve(\"1234\"\
    )\n</cell>\n<code language=julia-1.4>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns a string where all characters are reversed.\nExamples\nreverse(\"\
    hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\")\
    \ = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\
    \nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"\
    hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\"\
    ) = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\
    \nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"\
    hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\")\
    \ = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\
    \nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"\
    hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\"\
    ) = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\
    \nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"\
    hello\") = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\")\
    \ = \"olleh\"\nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\
    \nreverse(\"hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"\
    hello123\") = \"321ello\"\nreverse(\"hello\") = \"olleh\"\nreverse(\"hello123\"\
    ) = \"321ello\"\nreverse(\"\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp36_c4108.jl:21\nin expression starting at\
    \ /tmp/tmp36_c4108.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbhugb9rc.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbhugb9rc.jl:1\n\
    in expression starting at /tmp/tmpbhugb9rc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    if length(s) <= 0\n        return\
    \ s\n    \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    solve2(s)\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvd6x1cth.jl:22\nin expression starting at\
    \ /tmp/tmpvd6x1cth.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0\n        return s\n    if isletter(s)\n\
    \        chars = split(s, \"\")\n        chars = chars[2:end]\n        chars =\
    \ chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n \
    \       chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = chars[2:end]\n        chars = chars[2:end]\n        chars = chars[2:end]\n\
    \        chars = char\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t\
    @test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpusgv3q5g.jl:1\nin expression starting at /tmp/tmpusgv3q5g.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the string with all vowels replaced by \"*\".\nExamples\nvowels(\"abracadabra\"\
    ) returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\
    \nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\"\
    ) returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\
    \nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\"\
    ) returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\
    \nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\"\
    ) returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\
    \nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\"\
    ) returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\
    \nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\"\
    ) returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\
    \nvowels(\"abracadabra\") returns \"*a*b*c*a*b*c*a*b\"\nvowels(\"abracad\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd5jaz_9_.jl:20\nin expression starting at\
    \ /tmp/tmpd5jaz_9_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5_mx5h0l.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5_mx5h0l.jl:1\n\
    in expression starting at /tmp/tmp5_mx5h0l.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) <= 0\n        return s\n \
    \   \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\"\
    )\n</cell>\n<code language=julia-1.5>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the number of vowels present in the string.\nExamples\nvowels(\"\
    hello\") = 2\nvowels(\"hellooo\") = 3\nvowels(\"aba\") = 1\nvowels(\"abacaba\"\
    ) = 2\nvowels(\"abacabacaba\") = 3\nvowels(\"abacabacabacaba\") = 4\nvowels(\"\
    abacabacabacabacaba\") = 5\nvowels(\"abacabacabacabacabacaba\") = 6\nvowels(\"\
    abacabacabacabacabacabacaba\") = 7\nvowels(\"abacabacabacabacabacabacabacaba\"\
    ) = 8\nvowels(\"abacabacabacabacabacabacabacabacaba\") = 9\nvowels(\"abacabacabacabacabacabacabacabacabacaba\"\
    ) = 10\nvowels(\"abacabacabacabacabacabacabacabacabacabacaba\") = 11\nvowels(\"\
    abacabacabacabacabacabacabacabacabacabacabacaba\") = 12\nvowels(\"abacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    ) = 13\nvowels(\"abacabacabacabacabacabacabacabacabacabacabacabacabacaba\") =\
    \ 14\nvowels(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\")\
    \ = 15\nvowels(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    ) = 16\nvowels(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    ) = 17\nvowels(\"abacabacabacabacabac\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpau4lo_z3.jl:21\nin expression starting at\
    \ /tmp/tmpau4lo_z3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppbqjahrv.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppbqjahrv.jl:1\n\
    in expression starting at /tmp/tmppbqjahrv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return reverse(s,1) \n    else \n        \n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nlhxc_2.jl:14\nin expression starting at\
    \ /tmp/tmp3nlhxc_2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn819tm_h.jl:14\nin expression starting at\
    \ /tmp/tmpn819tm_h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(upper(s))\n    \n    return reverse(lower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels contained in the string.\nExamples\nvowels(\"abracadabra\") = 6\n\
    vowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\") = 6\nvowels(\"abracadabra\"\
    ) = 6\nvowels(\"abracadabra\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp23bfei4a.jl:20\nin expression starting at\
    \ /tmp/tmp23bfei4a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</code>\n\
    <|/ a tags=string,julia |>\n<| c |>\nThis doesn't work for \"#a@C\"\n<|/ c |>\n\
    <| c |>\nIt works for me. Are you sure you copied it correctly? I tested it on\
    \ Julia 0.6.2\n<|/ c |>\n<| c |>\nYes, I copied it correctly. I'm on 0.6.2\n<|/\
    \ c |>\n<| c |>\nI tested it on 0.6.2 too. Are you sure you copied it correctly?\
    \ I tested it on Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested it on 0.6.2 too. Are\
    \ you sure you copied it correctly? I tested it on Julia 0.6.2\n<|/ c |>\n<| a\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp41y311ng.jl:18\nin expression starting at\
    \ /tmp/tmp41y311ng.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        then return s\n \
    \   else if isLetter(s) \n        then return reverse(toUpper(s))\n        else\
    \ return reverse(toLower(s))\nend\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp59hf823p.jl:13\nin expression starting at /tmp/tmp59hf823p.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if s.length == 0 \n        return s \n\
    \    \n    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\n# test your code\n\
    @test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"AB\"\n@test solve(\"\
    #a@C\") == \"#A@c\"\n</cell>\n<text>\n4.2 Write a Julia function named isPalindrome\
    \ that takes a string as its argument and determines whether the string is a palindrome\
    \ or not.\nThe function should return a boolean value.\nThe function should only\
    \ use loops, no conditional statements.\nExamples\nisPalindrome(\"A man, a plan,\
    \ a canal: Panama\") = true\nisPalindrome(\"A man, a plan, a canal: Panama\")\
    \ = false\nisPalindrome(\"A man, a plan, a canal: Panama\") = false\nisPalindrome(\"\
    A man, a plan, a canal: Panama\") = false\nisPalindrome(\"A man, a plan, a canal:\
    \ Panama\") = false\nisPalindrome(\"A man, a plan, a canal: Panama\") = false\n\
    isPalindrome(\"A man, a plan, a canal: Panama\") = false\nisPalindrome(\"A man,\
    \ a plan, a canal: Panama\") = false\nisPalindrome(\"A man, a plan, a canal: Panama\"\
    ) = false\nisPalindrome(\"A man, a plan, a canal: Panama\") = false\nisPalindrome(\"\
    A man, a plan, a canal: Panama\") = false\nisPalindrome(\"A man, a plan, a canal:\
    \ Panama\") = false\nisPalindrome(\"A man, a plan, a canal: Panama\") = false\n\
    isPalindrome(\"A man, a plan, a canal: Panama\") = false\nisPalindrome(\"A man,\
    \ a plan, a canal: Panama\") = false\nisPalindrome(\"A man, a plan, a canal: Panama\"\
    ) = false\nisPalindrome(\"A man, a plan, a canal: Panama\") = false\nisPalindrome(\"\
    A man, a plan, a canal: Panama\") = false\nisPalindrome(\"A man\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4k_i0866.jl:21\nin expression starting at\
    \ /tmp/tmp4k_i0866.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return \"#\" \n  \
    \  else if length(s) == 1 \n        return toupper(s[0]) \n    else \n       \
    \ \n        \n        \n        \n        \n        \n        \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswef7322.jl:14\nin expression starting at\
    \ /tmp/tmpswef7322.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(toUpper(toLower(s))) \n    else \n \
    \       return reverse(toLower(s)) \nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmbxorjpd.jl:14\nin expression starting at\
    \ /tmp/tmpmbxorjpd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeyxouww0.jl:14\nin expression starting at\
    \ /tmp/tmpeyxouww0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    solve(s::String)::String\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphobanvc_.jl:20\nin expression starting at\
    \ /tmp/tmphobanvc_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(upper(s))\n    else \n        return\
    \ reverse(lower(s))\nend\n</code>\n<|/ a tags=julia,string |>\n<| c |>\nThis doesn't\
    \ work if there are multiple letters in the string. For example, `solve(\"ab\"\
    )` returns `\"A\"` instead of `\"AB\"`.\n<|/ c |>\n<| c |>\nYes, you are right.\
    \ I've edited my answer to fix this issue. Thanks!\n<|/ c |>\n<| a tags=julia,string\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy8j4frxt.jl:14\nin expression starting at\
    \ /tmp/tmpy8j4frxt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0 then return s\n    else if isLetter(s)\
    \ then \n        upperCase(s)\n    else \n        lowerCase(s)\n    end\nend\n\
    </code>\n<|/ a tags=string,julia |>\n<| a tags=string,julia |>\nA simple solution:\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpujqypd3n.jl:12\nin expression starting at /tmp/tmpujqypd3n.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmk_d5s95.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmk_d5s95.jl:1\n\
    in expression starting at /tmp/tmpmk_d5s95.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        return\
    \ reverse(toupper(s[0])) ++ reverse(tolower(s[1])) ++ reverse(tolower(s[2])) \n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp94cxzqyb.jl:14\nin expression starting at\
    \ /tmp/tmp94cxzqyb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    \n\
    \    \n    if isLetter(s[end-1]) \n        return reverse(s[end-1]) + reverse(s[end])\n\
    \    \n    \n    return reverse(s[end-1]) + s\nend\n</cell>\n<code language=julia-1.0>\n\
    solve(\"1234\")\n</cell>\n<code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of vowels contained\
    \ in the string.\nExamples\nvowels(\"hello\") = 2\nvowels(\"hellooo\") = 3\nvowels(\"\
    abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\n\
    vowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\"\
    ) = 7\nvowels(\"abracadabra\") = 7\nvowels(\"abracadabra\") = 7\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpksabl2we.jl:22\nin expression starting at\
    \ /tmp/tmpksabl2we.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0 \n        return s \n\
    \    \n    \n    if isLetter(s) \n        return reverse(toUpper(s))\n    \n \
    \   \n    if isLetter(toUpper(s)) \n        return reverse(toLower(s))\n    \n\
    \    \n    return s \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeq63_s1h.jl:27\nin expression starting at\
    \ /tmp/tmpeq63_s1h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0\n        return \"\"\n    if isLetter(s[0])\n\
    \        return reverse(s,1)\n    return reverse(s,0)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdy6ux9f7.jl:1\nin expression starting at /tmp/tmpdy6ux9f7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi73td1nz.jl:18\nin expression starting at\
    \ /tmp/tmpi73td1nz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return reverse(s,1) \n    else \n        \n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjfr9t1fp.jl:14\nin expression starting at\
    \ /tmp/tmpjfr9t1fp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpeuclaz5p.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpeuclaz5p.jl:1\n\
    in expression starting at /tmp/tmpeuclaz5p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s)==0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</code>\n\
    <|/ a tags=string,julia,reverse |>\n<| a tags=string,julia,reverse |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8nykknkd.jl:18\nin expression starting at\
    \ /tmp/tmp8nykknkd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if all(isLetter(s)) \n        return reverse(toUpper(s))\n    else \n      \
    \  return reverse(toLower(s))\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=1\
    \ |>\nI wrote a package for solving this problem called ReverseStrings.jl\n<code>\n\
    julia> using ReverseStrings\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcy37feb1.jl:14\nin expression starting at\
    \ /tmp/tmpcy37feb1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    \n\
    \    if isLetter(s[end-1]) \n        return reverse(s[end-1]) + reverse(s[end])\n\
    \    else \n        return reverse(s[end-1]) + s\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40uv731e.jl:20\nin expression starting at\
    \ /tmp/tmp40uv731e.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(toUpper(s))\n    else \n        return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.0>\nsolve(\"1234\"\
    )\n</cell>\n<code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of vowels present in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgtufqx1.jl:14\nin expression starting at\
    \ /tmp/tmppgtufqx1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4yclphte.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4yclphte.jl:1\n\
    in expression starting at /tmp/tmp4yclphte.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.0>\n# Test your function with the example\n\
    @test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"AB\"\n@test solve(\"\
    #a@C\") == \"#A@c\"\n</cell>\n<text>\n4.3 Write a function that takes a string\
    \ and returns a string where all characters have been capitalized.\nExamples\n\
    capitalize(\"hello\") = \"Hello\"\ncapitalize(\"hello world\") = \"Hello World\"\
    \ncapitalize(\"i love julia\") = \"I Love Julia\"\nHint: You may want to use replace()\
    \ with a regular expression to capitalize all letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd93ioday.jl:20\nin expression starting at\
    \ /tmp/tmpd93ioday.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr4z3v2n7.jl:1\nin expression starting at /tmp/tmpr4z3v2n7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s[1])\n        return reverse(s[1..end-1]) + reverse(s[end..end-1])\n\
    \    else\n        return reverse(s[1..end-1]) + s\nend\n</cell>\n<code language=julia-1.5>\n\
    # Test your code\n@test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"\
    AB\"\n@test solve(\"#a@C\") == \"#A@c\"\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a string as input and returns the number of characters in\
    \ the string that are not letters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeiuf7_yu.jl:20\nin expression starting at\
    \ /tmp/tmpeiuf7_yu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels present in the string.\nExamples\nvowels(\"hello\") = 1\nvowels(\"\
    abracadabra\") = 3\nvowels(\"#a@C\") = 1\nvowels(\"#a@C#\") = 2\nvowels(\"#a@C#@\"\
    ) = 3\nvowels(\"#a@C#@#\") = 4\nvowels(\"#a@C#@#@\") = 5\nvowels(\"#a@C#@#@#\"\
    ) = 6\nvowels(\"#a@C#@#@#@\") = 7\nvowels(\"#a@C#@#@#@#\") = 8\nvowels(\"#a@C#@#@#@#\"\
    ) = 9\nvowels(\"#a@C#@#@#@#@\") = 10\nvowels(\"#a@C#@#@#@#@#\") = 11\nvowels(\"\
    #a@C#@#@#@#@#\") = 12\nvowels(\"#a@C#@#@#@#@#\") = 13\nvowels(\"#a@C#@#@#@#@#\"\
    ) = 14\nvowels(\"#a@C#@#@#@#@#\") = 15\nvowels(\"#a@C#@#@#@#@#\") = 16\nvowels(\"\
    #a@C#@#@#@#@#\") = 17\nvowels(\"#a@C#@#@#@#@#\") = 18\nvowels(\"#a@C#@#@#@#@#\"\
    ) = 19\nvowels(\"#a@C#@#@#@#@#\") = 20\nvowels(\"#a@C#@#@#@#@#\") = 21\nvowels(\"\
    #a@C#@#@#@#@#\") = 22\nvowels(\"#a@C#@#@#@#@#\") = 23\nvowels(\"#a@C#@#@#@#@#\"\
    ) = 24\nvowels(\"#a@C#@#@#@\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp62mqelm8.jl:20\nin expression starting at\
    \ /tmp/tmp62mqelm8.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqy8mjqrg.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqy8mjqrg.jl:1\n\
    in expression starting at /tmp/tmpqy8mjqrg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        return\
    \ reverse(solve(reverse(s))) \nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6vm6wljy.jl:14\nin expression starting at\
    \ /tmp/tmp6vm6wljy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnshd2lh4.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnshd2lh4.jl:1\n\
    in expression starting at /tmp/tmpnshd2lh4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    else\
    \ if all(isLetter(s[i]))\n        uppercase = reverse(upperCase(s))\n        lowercase\
    \ = reverse(lowerCase(s))\n        return uppercase + lowercase\n    else\n  \
    \      return reverse(upperCase(s))\n    end\nend\n</code>\n<|/ a tags=string,julia\
    \ |>\n<| a tags=string,julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0m2d7vmv.jl:14\nin expression starting at\
    \ /tmp/tmp0m2d7vmv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\"\n    elseif length(s)\
    \ <= 1 \n        s\n    elseif isLetter(s) \n        upperCase(solve(reverse(s)))\
    \ \n    else\n        solve(reverse(s))\n    end\nend\n</code>\n<|/ a tags=string,julia\
    \ |>\n<| a tags=string,julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppcpry2gl.jl:22\nin expression starting at\
    \ /tmp/tmppcpry2gl.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(upper(s))\n    \n    return reverse(lower(s))\n\
    end\n</cell>\n<code language=julia-1.4>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.4>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.4>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels contained in the string.\nExamples\nvowels(\"hello\") = 2\nvowels(\"\
    abracadabra\") = 3\nvowels(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqhg72awz.jl:20\nin expression starting at\
    \ /tmp/tmpqhg72awz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of vowels present in the string.\nExamples\nvowels(\"abracadabra\"\
    ) \u279E 5\nvowels(\"abracadabra\") \u279E 3\nvowels(\"abracadabra\") \u279E 0\n\
    vowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"\
    abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\"\
    ) \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E\
    \ -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"\
    abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\"\
    ) \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E\
    \ -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"\
    abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\"\
    ) \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E\
    \ -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"\
    abracadabra\") \u279E -1\nvowels(\"abracadabra\") \u279E -1\nvowels(\"abracadabra\"\
    ) \u279E -1\nvowel\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph2g07yhm.jl:20\nin expression starting at\
    \ /tmp/tmph2g07yhm.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(upper(s))\n    else \n        return\
    \ reverse(lower(s))\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work.\
    \ Try it on `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nThanks for pointing out. I've\
    \ fixed the code now.\n<|/ c |>\n<| a tags=string,julia,reverse |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsaeu7xkp.jl:14\nin expression starting at\
    \ /tmp/tmpsaeu7xkp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0 then return \"\"\n    if isLetter(s)\
    \ then return reverse(toUpper(s))\n    else return reverse(toLower(s))\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=string,julia,reverse |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0814653g.jl:12\nin expression starting at /tmp/tmp0814653g.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    else\n        return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.5>\n# test your code\n\
    @test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"AB\"\n@test solve(\"\
    #a@C\") == \"#A@c\"\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of vowels \nin the string.\nExamples\nvowels(\"\
    abracadabra\") \u279E 5\nvowels(\"abra\") \u279E 3\nvowels(\"abraz\") \u279E 0\n\
    vowels(\"abra\") \u279E 3\nHint: You may want to use regular expressions.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp7jnf7sa.jl:20\nin expression starting at\
    \ /tmp/tmpp7jnf7sa.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp07yz9cfh.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp07yz9cfh.jl:1\n\
    in expression starting at /tmp/tmp07yz9cfh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.0>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels contained in the string.\nExamples\nvowels(\"hello\") = 2\nvowels(\"\
    abracadabra\") = 3\nvowels(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpog0odl67.jl:20\nin expression starting at\
    \ /tmp/tmpog0odl67.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return reverse(s,1) \n    else \n        \n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy8i6ff_l.jl:14\nin expression starting at\
    \ /tmp/tmpy8i6ff_l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert solve(\"1234\") == \"4321\"\n\
    @assert solve(\"ab\") == \"AB\"\n@assert solve(\"#a@C\") == \"#A@c\"\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpke8_jgvu.jl:20\nin expression starting at\
    \ /tmp/tmpke8_jgvu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if s.length == 0\n        return \"\"\n\
    \    \n    if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return\
    \ reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.0>\nsolve(\"1234\"\
    )\n</cell>\n<code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"#a@C\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"aBcD\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"aBcD\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpojdyhpm2.jl:21\nin expression starting at\
    \ /tmp/tmpojdyhpm2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphd57ry30.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphd57ry30.jl:1\n\
    in expression starting at /tmp/tmphd57ry30.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        error(\"String is\
    \ empty\")\n    else if length(s) == 1 \n        return s\n    else if isLetter(s)\
    \ \n        return reverse(toUpper(s))\n    else \n        return reverse(toLower(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40hslg1d.jl:14\nin expression starting at\
    \ /tmp/tmp40hslg1d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return reverse(s,1) \n    else \n        \n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi8wu_6l9.jl:14\nin expression starting at\
    \ /tmp/tmpi8wu_6l9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz2_31k1_.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz2_31k1_.jl:1\n\
    in expression starting at /tmp/tmpz2_31k1_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(toUpper(s))\n    else \n        return\
    \ reverse(toLower(s))\nend\n</code>\n<|/ a tags=julia,string |>\n<| a tags=julia,string\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjta9wtzr.jl:14\nin expression starting at\
    \ /tmp/tmpjta9wtzr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    if isLetter(s[end])\n\
    \        return reverse(s[end..end-1])\n    return s\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc2p955jc.jl:18\nin expression starting at\
    \ /tmp/tmpc2p955jc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s[end])\n        return reverse(s[end..end-1])\n    \n    return\
    \ reverse(s[end..end-1])\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptddxa7pg.jl:20\nin expression starting at\
    \ /tmp/tmptddxa7pg.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) == 1 \n        s[toupper(s[0])] \n    else \n        solve(s[toupper(s[0])])\
    \ + s[tolower(s[end-1])]\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1jqt95j.jl:14\nin expression starting at\
    \ /tmp/tmpk1jqt95j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if isletter(s) \n        return reverse(toupper(s))\n    else \n        return\
    \ reverse(tolower(s)) \nend\n</code>\n<|/ a tags=string,julia |>\n<| c |>\nThis\
    \ doesn't work if the string contains any non-letters. For example, `solve(\"\
    ab\")` returns `\"Ab\"` instead of `\"Ab\"`.\n<|/ c |>\n<| c |>\nYes, you are\
    \ right. I edited my answer to fix this problem.\n<|/ c |>\n<| a |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp43cmzlrn.jl:14\nin expression starting at\
    \ /tmp/tmp43cmzlrn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(upper(s))\n    else \n        return\
    \ reverse(lower(s))\nend\n</cell>\n<code language=julia-1.0>\nsolve(\"1234\")\n\
    </cell>\n<code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of vowels present in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp43yc7xne.jl:14\nin expression starting at\
    \ /tmp/tmp43yc7xne.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt9_pt99o.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt9_pt99o.jl:1\n\
    in expression starting at /tmp/tmpt9_pt99o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0cllxk85.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0cllxk85.jl:1\n\
    in expression starting at /tmp/tmp0cllxk85.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf5643fgy.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf5643fgy.jl:1\n\
    in expression starting at /tmp/tmpf5643fgy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return reverse(s,1) \n    else \n        \n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkmcbjh7c.jl:14\nin expression starting at\
    \ /tmp/tmpkmcbjh7c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpskflcda4.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpskflcda4.jl:1\n\
    in expression starting at /tmp/tmpskflcda4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmvcyk5yv.jl:1\nin expression starting at /tmp/tmpmvcyk5yv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy5oybtm0.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy5oybtm0.jl:1\n\
    in expression starting at /tmp/tmpy5oybtm0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    if length(s) == 0 \n        return\
    \ s \n    \n    if isLetter(s) \n        return reverse(toUpper(s))\n    \n  \
    \  return reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.3>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzjd1f3bh.jl:22\nin expression starting at\
    \ /tmp/tmpzjd1f3bh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        local\
    \ result = \"\"\n        for c in s \n            local upper = toupper(c)\n \
    \           local lower = tolower(c)\n            if upper == lower \n       \
    \         then upper = upper\n                else upper = lower\n           \
    \ end\n            result = result .. upper\n        end\n        return result\n\
    \    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,lowercase,uppercase,haskell\
    \ |>\n<code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5edqweqi.jl:14\nin expression starting at\
    \ /tmp/tmp5edqweqi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvmvab_6a.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvmvab_6a.jl:1\n\
    in expression starting at /tmp/tmpvmvab_6a.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0\n        return s\n    if isLetter(s)\n\
    \        return reverse(toUpper(s))\n    return reverse(toLower(s))\nend\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.0>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of vowels in it.\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfens0sjt.jl:18\nin expression starting at\
    \ /tmp/tmpfens0sjt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s[end])\n        return reverse(s[end..end-1])\n    \n    return\
    \ reverse(s[end..end-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciwxjby0.jl:1\nin expression starting at /tmp/tmpciwxjby0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"ab\")\n</cell>\n<code language=julia-1.5>\nsolve(\"#a@C\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7nd9lk5.jl:20\nin expression starting at\
    \ /tmp/tmph7nd9lk5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        error(\"String is\
    \ empty\")\n    elseif s[0] == '#' \n        error(\"String starts with #\")\n\
    \    elseif isLetter(s) \n        solve_reverse(s)\n    else\n        solve_reverse(toUpper(s))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph4c8xjy5.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  BoundsError: attempt to access\
    \ 4-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] solve(s::String)\n\
    \     @ Main /tmp/tmph4c8xjy5.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmph4c8xjy5.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmph4c8xjy5.jl:26\ntest set:\
    \ Error During Test at /tmp/tmph4c8xjy5.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"1234\") == \"4321\"\n  BoundsError: attempt to access 4-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] solve(s::String)\n\
    \     @ Main /tmp/tmph4c8xjy5.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmph4c8xjy5.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmph4c8xjy5.jl:26\ntest set:\
    \ Error During Test at /tmp/tmph4c8xjy5.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"ab\") == \"AB\"\n  BoundsError: attempt to access 2-codeunit String\
    \ at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] solve(s::String)\n\
    \     @ Main /tmp/tmph4c8xjy5.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph4c8xjy5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if s[0] == '#' \n        return reverse(s[2:]) \n    else if s[0] == '@' \n\
    \        return reverse(s[2:]) \n    else if s[0] == 'a' \n        return reverse(s[2:])\
    \ \n    else if s[0] == 'b' \n        return reverse(s[2:]) \n    else if s[0]\
    \ == 'c' \n        return reverse(s[2:]) \n    else if s[0] == 'd' \n        return\
    \ reverse(s[2:]) \n    else if s[0] == 'e' \n        return reverse(s[2:]) \n\
    \    else if s[0] == 'f' \n        return reverse(s[2:]) \n    else if s[0] ==\
    \ 'g' \n        return reverse(s[2:]) \n    else if s[0] == 'h' \n        return\
    \ reverse(s[2:]) \n    else if s[0] == 'i' \n        return reverse(s[2:]) \n\
    \    else if s[0] == 'j' \n        return reverse(s[2:]) \n    else if s[0] ==\
    \ 'k' \n        return reverse(s[2:]) \n    else if s[0] == 'l' \n        return\
    \ reverse(s[2:]) \n    else if s[0] == 'm' \n        return reverse(s[2:]) \n\
    \    else if s[0] == 'n' \n        return reverse(s[2:]) \n    else if s[0] ==\
    \ 'o' \n        return reverse(s[2:]) \n    else if s[0] == 'p' \n        return\
    \ reverse(s[2:]) \n    else if s[0] == 'q' \n        return reverse(s[2:]) \n\
    \    else if s[0] == 'r' \n        return reverse(s[2:]) \n    else if s[0] ==\
    \ 's' \n        return reverse(s[2:]) \n    else if s[0] == 't' \n        return\
    \ reverse(s[2:]) \n    else if s[0] == 'u' \n        return reverse(s[2:]) \n\
    \    else if s[0] == 'v' \n        return reverse(s[2:]) \n    else if s[0] ==\
    \ 'w' \n        return reverse(s[2:]) \n    else if s[0] == 'x' \n        return\
    \ reverse(s[2:]) \n    else if s[0] == 'y' \n        return reverse(s[2:]) \n\
    \    else if s[0] == 'z' \n        return reverse(s[2:]) \n    else \n       \
    \ return reverse(s[2:]) \nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3a0adn3.jl:14\nin expression starting at\
    \ /tmp/tmpb3a0adn3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s[end])\n        return reverse(s[end..end-1])\n    \n    return\
    \ reverse(s[1..end])\nend\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\"\
    )\n</cell>\n<code language=julia-1.5>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the number of characters in the string that are letters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") ==\
    \ \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
    ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
    ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2duts2co.jl:20\nin expression starting at\
    \ /tmp/tmp2duts2co.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    \n\
    \    if isLetter(s) \n        return reverse(toUpper(s))\n    \n    return reverse(toLower(s))\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyhfgi7eq.jl:20\nin expression starting at\
    \ /tmp/tmpyhfgi7eq.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        \"\" \n    else if\
    \ length(s) == 1 \n        s[toupper(s[0])] \n    else \n        solve(reverse(s))\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `solve(\"ab\")` returns\
    \ `\"A\"` instead of `\"AB\"`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| a tags=recursion,julia |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy1yc_x2j.jl:14\nin expression starting at\
    \ /tmp/tmpy1yc_x2j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_mepp0dd.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_mepp0dd.jl:1\n\
    in expression starting at /tmp/tmp_mepp0dd.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkf076rbf.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkf076rbf.jl:1\n\
    in expression starting at /tmp/tmpkf076rbf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(upper(s))\n    else \n        return\
    \ reverse(lower(s))\nend\n</code>\n<|/ a tags=string,julia |>\n<| a dscore=0 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoth6w332.jl:14\nin expression starting at\
    \ /tmp/tmpoth6w332.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    if length(s) == 0 \n        \n        return\
    \ \"\"\n    \n    \n    if isLetter(s) \n        \n        return reverse(toUpper(s))\n\
    \    \n    \n    return reverse(toLower(s))\nend\n</cell>\n<code language=julia-1.0>\n\
    solve(\"1234\")\n</cell>\n<code language=julia-1.0>\nsolve(\"ab\")\n</cell>\n\
    <code language=julia-1.0>\nsolve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of characters in the string.\n\
    Examples\ncount(\"abc\") = 3\ncount(\"ab\") = 2\ncount(\"a\") = 1\ncount(\"\"\
    ) = 0\ncount(nothing) = 0\nHint: Use length() function\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkvjv2fir.jl:25\nin expression starting at\
    \ /tmp/tmpkvjv2fir.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 1 \n        return s\n    else\
    \ if isletter(s) \n        solve(s)\n    else\n        solve(reverse(s))\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8nnedvki.jl:14\nin expression starting at\
    \ /tmp/tmp8nnedvki.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpoj5lvizl.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoj5lvizl.jl:1\n\
    in expression starting at /tmp/tmpoj5lvizl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length==0 \n        return s \n    else\
    \ if length(filter(x -> x>='a' && x<='z',s)) == 0 \n        return reverse(s)\
    \ \n    else \n        return reverse(transform(s,toUpper)) \nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    transform(str::String, func::Function)\n  \
    \  Transforms the string str using the function func.\n    For example,\n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    transform(\"hello\", x -> x + 1) \n    transform(\"\
    hello\", x -> x + 1) \n    \nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0xehwv58.jl:14\nin expression starting at\
    \ /tmp/tmp0xehwv58.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(s.toLowerCase()) \n    else \n     \
    \   return reverse(s.toUpperCase()) \nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,julia,reverse\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkqb0d8vy.jl:14\nin expression starting at\
    \ /tmp/tmpkqb0d8vy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) <= 0\n        return s\n    \n \
    \   if isLetter(s)\n        return reverse(upper(s))\n    else\n        return\
    \ reverse(lower(s))\nend\n</cell>\n<code language=julia-1.5>\nsolve(\"1234\")\n\
    </cell>\n<code language=julia-1.5>\nsolve(\"ab\")\n</cell>\n<code language=julia-1.5>\n\
    solve(\"#a@C\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the number of characters in the string.\nExamples\ncount(\"1234\"\
    ) = 4\ncount(\"ab\") = 2\ncount(\"#a@C\") = 3\nHint: use the length function.\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgke_vw5e.jl:20\nin expression starting at\
    \ /tmp/tmpgke_vw5e.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if s.length == 0 \n        return s \n    else\
    \ if isLetter(s) \n        return reverse(toUpper(s))\n    else \n        return\
    \ reverse(toLower(s))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5x5s5ct8.jl:14\nin expression starting at\
    \ /tmp/tmp5x5s5ct8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\
    \n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\nfunction\
    \ solve(s::String)::String \n    if length(s) == 0 \n        return s \n    else\
    \ if length(s) == 1 \n        return toupper(s[0]) \n    else \n        return\
    \ reverse(solve(reverse(s))) \nend\n</code>\n<|/ a tags=string,julia,reverse |>\n\
    <| c |>\nI like this solution, but I wonder if there is a more efficient way of\
    \ doing this without using recursion.\n<|/ c |>\n<| c |>\nI believe that there\
    \ is an efficient way of doing this without recursion, but I haven't thought it\
    \ through yet. I'll post it here if I figure it out.\n<|/ c |>\n<| c |>\nI added\
    \ a solution without recursion.\n<|/ c |>\n<| c |>\nI added a solution without\
    \ recursion.\n<|/ c |>\n<| a dscore=2 |>\nI believe that there is an efficient\
    \ way of doing this without recursion, but I haven't thought it through yet. I'll\
    \ post it here if I figure it out.\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqkwtke66.jl:14\nin expression starting at\
    \ /tmp/tmpqkwtke66.jl:14\n"
  exit_code: 1
  status: SyntaxError

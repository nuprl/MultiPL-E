name: HumanEval_102_choose_num
language: julia
prompt: "\"\"\"This function takes two positive numbers x and y and returns the\n\
  \    biggest even integer number that is in the range [x, y] inclusive. If \n  \
  \  there's no such number, then the function should return -1.\n\n    For example:\n\
  \    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\nfunction\
  \ choose_num(x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
  \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
  \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
  \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
  \ 546) == 546)\nend\n"
completions: ["    if x < y \n        then return -1\n    else if x == y \n      \
    \  then return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    if x > y \n        then return\
    \ -1\n    else \n        if x == 0 \n            then return y\n        else \n\
    \            if y % x == 0 \n                then return y\n            else \n\
    \                choose_num(x-1, y)\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I edited my answer to include a link to the\
    \ code I tested.\n<|/ c |>\n<| c |>\nI see what you mean. My mistake. Thanks for\
    \ pointing that out.\n<|/ c |>\n<| c |>\nI edited my answer to include a link\
    \ to the code I tested.\n<|/ c |>\n<| c |>\nI added a second solution that works\
    \ with negative numbers as well.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    if\
    \ x < y \n        then return choose_num(y, x)\n    else \n        if x == y \n\
    \            then return x\n        else \n            if x % 2 == 0 \n      \
    \          then return choose_num(x / 2, y)\n            else \n             \
    \   if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n   \
    \             else \n                    if x > y \n                        then\
    \ return choose_num(x / 2, y / 2)\n                    else \n               \
    \         return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes a positive integer number\
    \ n and returns the sum of its digits. \nFor example, choose_num(12) = 1 + 2 +\
    \ 3 = 6", "    if x > y \n        then return -1\n    else \n        if x == 0\
    \ \n            then return y\n        else \n            if y == 0 \n       \
    \         then return x\n            else \n                if x % 2 == 0 \n \
    \                   then return choose_num(x / 2, y)\n                else \n\
    \                    if y % 2 == 0 \n                        then return choose_num(x,\
    \ y / 2)\n                    else \n                        return choose_num(x\
    \ / 2, y / 2)\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a number is prime or not.\
    \ \nThe function should take one integer number as an argument and should return\
    \ true or false accordingly.", "    if x < y \n        then return -1\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0 && y % 2 == 0\n   \
    \     then return choose_num(x/2, y/2)\n    else if x % 2 == 0 && y % 2 != 0\n\
    \        then return choose_num(x/2, y)\n    else if x % 2 != 0 && y % 2 == 0\n\
    \        then return choose_num(x, y/2)\n    else if x % 2 != 0 && y % 2 != 0\n\
    \        then return choose_num(x, y)\n    else return -1\nend\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThis doesn't work. Try choose_num(12, 15).\n<|/ c |>\n\
    <| c |>\nIt does work. Try it yourself. It returns 14. Try it yourself with choose_num(12,\
    \ 15).\n<|/ c |>\n<| c |>\nIt doesn't work. Try it yourself. It returns 14. Try\
    \ it yourself with choose_num(12, 15).\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it yourself. It returns 14. Try it yourself with choose_num(12, 15).\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work. Try it yourself. It returns 14. Try it yourself\
    \ with choose_num(12, 15).\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    if x < y\
    \ \n        then return choose_num(y, x)\n        else return x\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an integer and returns the sum of its digits.\
    \ \nFor example, choose_num(12) = 1 + 2 = 3. \nIf the number is negative, return\
    \ -1.", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        x % 2 == 0 && y % 2 == 0 ? x :\
    \ choose_num(x / 2, y / 2)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.3>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 36)\n</cell>\n\
    <code language=julia-1.3>\n", "    if x > y \n        then return -1\n    else\
    \ \n        if x == y \n            then return x\n        else \n           \
    \ if x % 2 == 0 && y % 2 == 0 \n                then return choose_num(x / 2,\
    \ y / 2)\n            else \n                if x % 2 == 0 \n                \
    \    then return choose_num(x / 2, y)\n                else \n               \
    \     if y % 2 == 0 \n                        then return choose_num(x, y / 2)\n\
    \                    else \n                        return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an integer number x and returns its factorial. \nThe factorial\
    \ of a number $n$ is defined as:", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 && y % 2 == 0\n                then return choose_num(x\
    \ / 2, y / 2)\n            else \n                if x % 2 == 0\n            \
    \        then return choose_num(x / 2, y)\n                else \n           \
    \         if y % 2 == 0\n                        then return choose_num(x, y /\
    \ 2)\n                    else \n                        return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<text>\nProblem 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such\n    number, then the function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \   else if x == y \n        then return x\n    else \n        x % 2 == 0 && y\
    \ % 2 == 0 && choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2) \n         \
    \   >= choose_num(x / 2, y / 2)\n            ? choose_num(x / 2, y / 2)\n    \
    \        : -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd number that is in the range [x, y] inclusive. If\
    \ there's no such \n    number, then the function should return -1.", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\nend\n</code>\n<|/ a tags=julia,function,if-statement\
    \ |>\n<| a tags=julia,function,if-statement |>\n<code>", "    if x > y \n    \
    \    then return -1\n    else \n        if x == y \n            then return x\n\
    \        else \n            if x % 2 == 0 \n                then return choose_num(x\
    \ / 2, y)\n            else \n                if y % 2 == 0 \n               \
    \     then return choose_num(x, y / 2)\n                else \n              \
    \      if x % 2 == y % 2 \n                        then return choose_num(x /\
    \ 2, y / 2)\n                    else \n                        if x == y / 2\
    \ \n                            then return x\n                        else \n\
    \                            if x > y / 2 \n                                then\
    \ return -1\n                            else \n                             \
    \   if x == y / 2 \n                                    then return x\n      \
    \                          else \n                                    return -1\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer $n$ and returns the number\
    \ of digits in $n$. \nFor example, choose_num(12) should return 2.", "    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y / 2)\n                else \n \
    \                   if x % 2 == 0 \n                        then return choose_num(x\
    \ / 2, y)\n                    else \n                        if y % 2 == 0 \n\
    \                            then return choose_num(x, y / 2)\n              \
    \          else \n                            if x % 2 == 0 \n               \
    \                 then return choose_num(x / 2, y)\n                         \
    \   else \n                                if y % 2 == 0 \n                  \
    \                  then return choose_num(x, y / 2)\n                        \
    \        else \n                                    return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number n and returns the sum of its\
    \ digits. \nFor example, choose_num(12) = 1 + 2 = 3. \nThe function should work\
    \ for any positive integer number.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ - y, y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| a\
    \ tags=julia,recursion,function |>\n<code>", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      choose_num(y - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits in $n$. \nFor example,\
    \ choose_num(12) = 2.", "    if x < y \n        then return -1\n    else if x\
    \ == y \n        then return x\n    else \n        choose_num(x + 1, y)\nend\n\
    </code>\n<|/ a tags=julia,recursion |>\n<| a tags=julia,recursion |>\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 36)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 37)\n",
  "    if x > y \n        then return -1\n    else \n        if x == y \n        \
    \    then return x\n        else \n            if x % 2 == 0 \n              \
    \  then return choose_num(x / 2, y)\n            else \n                if y %\
    \ 2 == 0 \n                    then return choose_num(x, y / 2)\n            \
    \    else \n                    let x = x + 1\n                    let y = y +\
    \ 1\n                    let z = choose_num(x, y)\n                    if z ==\
    \ -1 \n                        then return -1\n                    else return\
    \ z\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes a positive integer number and returns its\
    \ factorial. \nThe factorial of a number is the product of all the numbers from\
    \ 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nThe function\
    \ should return -1 if the number passed as argument is not positive.", "    if\
    \ x < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd integer number that is in the range [x, y] inclusive. If\
    \ \n    there's no such number, then the function should return -1.", "    if\
    \ x < y \n        then return choose_num(y, x)\n        \n    else if x == y \n\
    \        then return x\n        \n    else \n        x % 2 == 0 && y % 2 == 0\
    \ ? \n            choose_num(x / 2, y / 2) + \n            choose_num(x / 2, y\
    \ / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x /\
    \ 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / 2) + \n            choose_num(x\
    \ / 2, y / 2) + \n            choose_num(x / 2, y / ", "    if x > y \n      \
    \  then return -1\n    else if x < y \n        then return -1\n    else \n   \
    \     local z::Int64 = 0\n        while z < x \n            do z = z + 2\n   \
    \     end \n        while z < y \n            do z = z + 2\n        end \n   \
    \     return z\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer n and returns n^2.",
  "    if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n    else\
    \ \n        then return choose_num(x / 2, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer number and returns its \n    factorial. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its \n    factorial.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if x > y \n    \
    \    then return -1\n    else if x < y \n        then return choose_num(y, x)\n\
    \    else \n        local i::Int64 = 1\n        while i <= y \n            do\
    \ if x % i == 0 \n                then return i\n            end\n           \
    \ i = i + 1\n        end\n        return -1\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer number n and returns the number of \ndigits in the number n.\
    \ For example, choose_num(12) should return 2, because \n12 is divisible by 10.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        choose_num(x, y)\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer number x and returns the number of \n    digits in x. For example, choose_num(12)\
    \ should return 2.", "    if x < y \n        then return choose_num(y, x)\n  \
    \      else return x\n    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the biggest odd integer number that is in the range [x,\
    \ y] inclusive. If there's no such number, then the function should return -1.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        even = choose_num(x div 2, y)\n       \
    \ if even > -1\n            then return even\n        else \n            odd =\
    \ choose_num(x div 2, y)\n            if odd > -1\n                then return\
    \ odd\n            else \n                return -1\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer number x and returns the number of digits in x. \nFor example,\
    \ choose_num(12) should return 2.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(x / 2, y / 2)\n              \
    \      else \n                        return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer $n$ and returns the number of digits in $n$. \nFor example, choose_num(12)\
    \ should return 2.", "    if x < y \n        then return choose_num(y, x)\n  \
    \  else \n        x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>", "    if x < y \n        then return -1\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits in $n$. For example, choose_num(12)\
    \ should return 2.", "    if x < y \n        then return -1\n    else if x ==\
    \ y \n        then return x\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question is about Julia, not Python.\n\
    <|/ c |>\n<| c |>\nThe question was tagged Julia as well. My answer was in Julia.\
    \ Sorry for the misunderstanding.\n<|/ c |>\n<| a tags=julia,recursion |>\n<code>",
  "    if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x - 2, y + 1)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=julia,recursion |>\n<code>", "    if x > y \n        then return\
    \ -1\n    else \n        if x == y \n            then return x\n        else \n\
    \            choose_num(x + 1, y)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ n and returns the number of digits in n. \nFor example, choose_num(12) = 2,\
    \ because 12 is twelve digits.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        x % 2 ==\
    \ 0 ? x : choose_num(x / 2, y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a dscore=2 |>\nI wanted to add an answer that uses no loops or recursion.\
    \ \n<code>", "    if x > y \n        then return -1\n    else \n        if x ==\
    \ y \n            then return x\n        else \n            if x % 2 == 0\n  \
    \              then return choose_num(x / 2, y)\n            else \n         \
    \       if y % 2 == 0\n                    then return choose_num(x, y / 2)\n\
    \                else \n                    if x % 2 == 0\n                  \
    \      then return choose_num(x / 2, y / 2)\n                    else \n     \
    \                   if y % 2 == 0\n                            then return choose_num(x\
    \ / 2, y / 2)\n                        else \n                            if x\
    \ % 2 == 0\n                                then return choose_num(x / 2, y /\
    \ 2)\n                            else \n                                if y\
    \ % 2 == 0\n                                    then return choose_num(x / 2,\
    \ y / 2)\n                                else \n                            \
    \        return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes a positive integer number\
    \ x and returns the number of digits in x.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y\n        then return x\n    else \n   \
    \     choose_num(y - 1, x)\n    end\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nThanks for your answer! I appreciate it! I didn't know that you\
    \ can do `if x < y then return choose_num(y, x)` instead of `if x < y then return\
    \ choose_num(y, x) else return x`\n<|/ c |>\n<| c |>\nYes, you can do that. Just\
    \ remember that `if` statements don't return anything.\n<|/ c |>\n<| a |>\nThe\
    \ other answers here are great, but I thought I'd add my own answer to show how\
    \ this can be done using an iterator:\n<code>", "    if x > y \n        then return\
    \ -1\n    else \n        if x == 0 \n            then return y\n        else \n\
    \            if y % x == 0 \n                then return y\n            else \n\
    \                return choose_num(x - 1, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer number and returns its factorial. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      x % 2 == 0 && y % 2 == 0 && choose_num(x / 2, y / 2) * choose_num(x / 2,\
    \ y / 2) \n            < choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2) +\
    \ choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2)\n            && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) + choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) \n            < choose_num(x / 2, y / 2) * choose_num(x / 2, y /\
    \ 2) + choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2)\n            && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) + choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) \n            < choose_num(x / 2, y / 2) * choose_num(x / 2, y /\
    \ 2) + choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2)\n            && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) + choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) \n            < choose_num(x / 2, y / 2) * choose_num(x / 2, y /\
    \ 2) + choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2)\n            && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) + choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) \n            < choose_num(x / 2, y / 2) * choose_num(x / 2, y /\
    \ 2) + choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2)\n            && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) + choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) \n            < choose_num(x / 2, y / 2) * choose_num(x / 2, y /\
    \ 2) + choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2)\n            && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) + choose_num(x / 2, y / ", "    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 2, y - 1)\nend\n</code>\n<|/ a tags=julia |>\n\
    <| c |>\nI believe this answer should be the accepted one. While the other answers\
    \ provide some useful insights, this one actually answers the question as asked.\n\
    <|/ c |>\n<| a tags=julia |>\n<code>", "    if x < y \n        then return -1\n\
    \    else if x == y \n        then return x\n    else \n        choose_num(x +\
    \ 1, y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nThis doesn't\
    \ seem to work for me. `choose_num(12, 15)` returns `-1` instead of `14`.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine for me. Are you sure you copied\
    \ it correctly?\n<|/ c |>\n<| c |>\nYes, I copied it correctly. I'm running Julia\
    \ 0.6.0.\n<|/ c |>\n<| c |>\nI tested it on 0.6.0 too. Are you sure you copied\
    \ it correctly? What happens if you run `choose_num(12, 15)` from the REPL?\n\
    <|/ c |>\n<| c |>\nYes, I copied it correctly. I'm running Julia 0.6.0.\n<|/ c\
    \ |>\n<| a dscore=2 |>\nI believe this can be done in one line using mapslices:\n\
    <code>\njulia> mapslices(x -> x % 2 == 0 ? x : -1, 12, 15)\n14\n</code>\n<|/ a\
    \ tags=julia,recursion |>\n<| c |>\nThis doesn't seem to work for me. `mapslices(x\
    \ -> x % 2 == 0 ? x : -1, 12, 15)` returns `-1` instead of `14`.\n<|/ c |>\n<|\
    \ c |>\nI tested it and it works fine for me. Are you sure you copied it correctly?\n\
    <|/ c |>\n<| c |>\nI copied it correctly. I'm running Julia 0.6.0.\n<|/ c |>\n\
    <| c |>\nI tested it on 0.6.0 too. Are you sure you copied it correctly? What\
    \ happens if you run `choose_num(12, 15)` from the REPL?\n<|/ c |>\n<| c |>\n\
    Yes, I copied it correctly. I'm running Julia 0.6.0.\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    if x == y\n        then return x\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y\
    \ / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n \
    \       \n    if y % 2 == 0\n        then return choose_num(x / 2, y)\n      \
    \  \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n       \
    \ \n    if y % 2 == 0\n        then return choose_num(x / 2, y)\n        \n  \
    \  if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n   \
    \ if y % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if x\
    \ % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y %\
    \ 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if x % 2 == 0\n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n      \
    \  then return choose_num(x / 2, y)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y\
    \ / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if x % 2 == 0\n        then ", "    if x < y \n        then return\
    \ -1\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work.\
    \ Try `choose_num(12, 15)` - it returns `14` instead of `-1`.\n<|/ c |>\n<| c\
    \ |>\nI didn't test it, but I believe it works. I tested it before posting my\
    \ answer. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it works. I tested it before\
    \ posting my answer. Try it yourself.\n<|/ c |>\n<| c |>\nI tested it myself before\
    \ posting my answer. Try it yourself.\n<|/ c |>\n<| c |>\nI tested it myself before\
    \ posting my answer. Try it yourself.\n<|/ c |>\n<| a tags=julia,recursion |>\n\
    <code>", "    if x > y \n        then return -1\n    else if x < y \n        then\
    \ return choose_num(y, x)\n    else return x \nend \n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<| c\
    \ |>\nI edited my answer. Now it works. Thanks for pointing out.\n<|/ c |>\n<|\
    \ a dscore=1 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y \n        then return x\n    else \n        x % 2 == 0 &&\
    \ y % 2 == 0 \n            ? choose_num(x / 2, y / 2)\n            : choose_num(x\
    \ / 2, y / 2) + 1\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| c\
    \ |>\nThanks for your answer! I appreciate it!\n<|/ c |>\n<| a dscore=2 |>\nI\
    \ believe that this is what you are looking for:\n<code>", "    if x < y \n  \
    \      then return choose_num(y, x)\n    else \n        if x == y \n         \
    \   then return x\n        else \n            if x % 2 == 0 && y % 2 == 0 \n \
    \               then return choose_num(x / 2, y / 2)\n            else \n    \
    \            if x % 2 == 0 \n                    then return choose_num(x / 2,\
    \ y)\n                else \n                    if y % 2 == 0 \n            \
    \            then return choose_num(x, y / 2)\n                    else \n   \
    \                     return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x > y \n        then return -1\n    else \n        if x == y \n\
    \            then return x\n        else \n            if x % 2 == 0 \n      \
    \          then return choose_num(x / 2, y)\n            else \n             \
    \   if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n   \
    \             else \n                    if x % 2 == 1 \n                    \
    \    then return choose_num(x / 2, y)\n                    else \n           \
    \             if y % 2 == 1 \n                            then return choose_num(x,\
    \ y / 2)\n                        else \n                            if x == y\
    \ \n                                then return x\n                          \
    \  else \n                                if x < y \n                        \
    \            then return choose_num(x / 2, y)\n                              \
    \  else \n                                    if x > y \n                    \
    \                    then return choose_num(x, y / 2)\n                      \
    \              else return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer number\
    \ and returns its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7\
    \ 2 \xD7 1", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y \n        then return x\n    else \n        choose_num(y - 1, x)\nend\n\
    </code>\n<|/ a tags=julia,recursion |>\n<| c |>\nThis doesn't seem to work for\
    \ `choose_num(12, 15)`\n<|/ c |>\n<| c |>\nI fixed the bug and added a test case\
    \ to my answer\n<|/ c |>\n<| a |>\nHere's a solution using recursion:\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else \n        if x ==\
    \ y \n            then return x\n        else \n            if x % 2 == 0 \n \
    \               then return choose_num(x / 2, y)\n            else \n        \
    \        if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n\
    \                else \n                    if x % 2 == y % 2 \n             \
    \           then return choose_num(x / 2, y / 2)\n                    else \n\
    \                        if x == y / 2 \n                            then return\
    \ x\n                        else \n                            if y % 2 == x\
    \ / 2 \n                                then return choose_num(x, y / 2)\n   \
    \                         else \n                                if y % 2 == y\
    \ / 2 \n                                    then return choose_num(x, y / 2)\n\
    \                                else \n                                    return\
    \ -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes a positive integer number and returns its\
    \ \n    factorial. Factorial of a number is the product of all the numbers \n\
    \    up to and including that number. For example, 5! = 5 x 4 x 3 x 2 x 1 = 120.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        choose_num(y - 1, x)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 12)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer n and returns the number of \n    digits in n. For example,\
    \ choose_num(123) = 2.", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y\n        then return x\n    else \n        choose_num(y -\
    \ 1, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a positive integer number and returns its factorial. \nFor example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(x / 2, y / 2)\n              \
    \      else \n                        return -1\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer number and returns its factorial. \nFor example, factorial(5) = 5 *\
    \ 4 * 3 * 2 * 1 = 120.", "    if x > y \n        then return -1\n    else if x\
    \ < y\n        then return choose_num(y, x)\n    else if x == y\n        then\
    \ return x\n    else \n        choose_num(x - y, y - x)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work if x is greater than y\n<|/ c |>\n<| c |>\nIt\
    \ does work if x is greater than y\n<|/ c |>\n<| c |>\nIt doesn't work if x is\
    \ greater than y, but does work if x is less than y\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if x is greater than y, but does work if x is less than y\n<|/ c |>\n<|\
    \ c |>\nIt doesn't work if x is greater than y, but does work if x is less than\
    \ y\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    if x > y \n        then return\
    \ -1\n    else if x < y\n        then return choose_num(y, x)\n    else return\
    \ x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd integer number that is in the range [x, y] inclusive. If\
    \ \n    there's no such number, then the function should return -1.", "    if\
    \ x < y \n        then return -1\n    else if x == y \n        then return x\n\
    \    else \n        choose_num(x + 1, y)\nend\n</code>\n<|/ a tags=julia |>\n\
    <| a dscore=1 |>\n<code>", "    if x < y \n        then return -1\n    else \n\
    \        if x == y \n            then return x\n        else \n            if\
    \ x % 2 == 0 \n                then return choose_num(x / 2, y)\n            else\
    \ \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x % 2 == y % 2 \n    \
    \                    then return x\n                    else \n              \
    \          if x % 2 == y % 2 \n                            then return y\n   \
    \                     else \n                            if x % 2 != y % 2 \n\
    \                                then return -1\n                            else\
    \ \n                                return -1\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of numbers and returns the sum of all the\nnumbers in the array. \nWrite\
    \ a function that takes an array of numbers and returns the product of all\nthe\
    \ numbers in the array. \nWrite a function that takes an array of numbers and\
    \ returns the smallest number\nthat is greater than or equal to the sum of the\
    \ numbers in the array. \nWrite a function that takes an array of numbers and\
    \ returns the largest number\nthat is less than or equal to the product of the\
    \ numbers in the array. \nWrite a function that takes an array of numbers and\
    \ returns the average of the\nnumbers in the array. \nWrite a function that takes\
    \ an array of numbers and returns the median of the\nnumbers in the array. \n\
    Write a function that takes an array of numbers and returns the mode of the\n\
    numbers in the array. \nWrite a function that takes an array of numbers and returns\
    \ the standard deviation\nof the numbers in the array. \nWrite a function that\
    \ takes an array of numbers and returns the variance of the\nnumbers in the array.\
    \ \nWrite a function that takes an array of numbers and returns the sum of the\
    \ squares\nof the numbers in the array. \nWrite a function that takes an array\
    \ of numbers and returns the product of the\nsquares of the numbers in the array.\
    \ \nWrite a function that takes an array of numbers and returns the sum of the\
    \ cubes\nof the numbers in the array. \nWrite a function that takes an array of\
    \ numbers and returns the product of the\ncubes of the numbers in the array. \n\
    Write a function that takes an array of numbers and returns the sum of the power\n\
    of the numbers in the array. \nWrite a function that takes an array of numbers\
    \ and returns the product of the\npower of the numbers in the array. \nWrite a\
    \ function that takes an array of numbers and returns the sum of the logarithms\n\
    of the numbers in the array. \nWrite a function that takes an array of numbers\
    \ and returns the product of the\nlogarithms of the numbers in the array. \nWrite\
    \ a function that takes an array of numbers and returns the sum of the reciprocals\n\
    of the numbers in the array. \nWrite a function that takes an array of numbers\
    \ and returns the product of the\nreciprocals of the numbers in the array. ",
  "    if x > y \n        then return -1\n    else \n        local z = x\n       \
    \ while z < y \n            do z = z * 2\n            until z > y\n        return\
    \ z\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer number and returns its \nfactorial. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) >= x && choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) <= y \n            ? choose_num(x / 2, y / 2) * choose_num(x / 2,\
    \ y / 2)\n            : -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return -1\n    else if x == y\n  \
    \      then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    end\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. You're\
    \ just repeating what the OP already knows.\n<|/ c |>\n<| c |>\nI thought it would\
    \ be helpful to give a solution that doesn't use recursion.\n<|/ c |>\n<| c |>\n\
    The OP already knows how to solve this problem using recursion. He wants to know\
    \ how to solve it without recursion.\n<|/ c |>\n<| c |>\nI thought the OP was\
    \ asking how to solve it without recursion.\n<|/ c |>\n<| c |>\nThe OP already\
    \ knows how to solve this problem using recursion. He wants to know how to solve\
    \ it without recursion.\n<|/ c |>\n<| a |>\n<code>", "    if x > y \n        then\
    \ return -1\n    else \n        if x == y \n            then return x\n      \
    \  else \n            if x % 2 == 0 \n                then return choose_num(x\
    \ / 2, y)\n            else \n                if y % 2 == 0 \n               \
    \     then return choose_num(x, y / 2)\n                else \n              \
    \      if x % 2 == y % 2 \n                        then return choose_num(x /\
    \ 2, y / 2)\n                    else \n                        if x % 2 == y\
    \ % 2 \n                            then return choose_num(x / 2, y / 2)\n   \
    \                     else \n                            if x % 2 != y % 2 \n\
    \                                then return choose_num(x / 2, y / 2)\n      \
    \                      else \n                                return -1\nend\n\
    </cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer $n$ and returns the number\
    \ of digits\nof the number $n$. For example, choose_num(12) should return 2.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 ? \n         \
    \   choose_num(x / 2, y / 2) : \n            choose_num(x / 2, y / 2) + 1\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y \n        then return x\n    else \n        x % 2 == 0 && y % 2 == 0\
    \ ? x : -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer n and returns\
    \ the sum of its digits. \nFor example, choose_num(12) = 1 + 2 = 3 and choose_num(123)\
    \ = 1 + 2 + 3 = 6. \nThe function should work for any positive integer n.", " \
    \   if x < y \n        then return choose_num(y, x)\n        \n    else if x ==\
    \ y \n        then return x\n        \n    else \n        choose_num(y - 1, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an integer and returns the number of digits in it.", " \
    \   if x < y \n        then return choose_num(y, x)\n    else if x == y \n   \
    \     then return x\n    else \n        choose_num(y - 1, x)\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. Once\
    \ you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26833463)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I thought that my answer was a solution to the problem and I wanted\
    \ to share it with the community. Anyway, I edited my answer and added a code\
    \ snippet that solves the problem.\n<|/ c |>\n<| c |>\nI appreciate your efforts,\
    \ but this does not provide an answer to the question. Once you have sufficient\
    \ [reputation](https://stackoverflow.com/help/whats-reputation) you will be able\
    \ to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26833463)\n<|/ c |>\n<| c |>\nI appreciate\
    \ your efforts, but this does not provide an answer to the question. Once you\
    \ have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26833463)\n<|/ c |>\n<| c |>\nI appreciate\
    \ your efforts, but this does not provide an answer to the question. Once you\
    \ have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [", "    if x < y \n        then return choose_num(y, x)\n\
    \    else \n        x % 2 == 0 && y % 2 == 0 && x > y \n            ? x \n   \
    \         : -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such\n    number, then the function should return -1.",
  "    if x < y \n        then return choose_num(y, x)\n        end if\n    if x ==\
    \ y\n        then return x\n        end if\n    if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        end if\n    if x > y\n        then return choose_num(y,\
    \ x)\n        end if\n    return -1\nend function\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=julia,algorithm |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y \n        then return x\n        \n    else\
    \ \n        x % 2 == 0 && y % 2 == 0 && choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) >= x && choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2) <= y\n\
    \        \n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:", "    if x < y\
    \ \n        then return -1\n    else \n        if x == y \n            then return\
    \ x\n        else \n            choose_num(x + 1, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 37)\n</cell>\n<code language=julia-",
  "    if x < y \n        then return choose_num(y, x)\n    else \n        x % 2 ==\
    \ 0 && y % 2 == 0 ? x : -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer number\
    \ x and returns the number of digits in x. \nFor example, choose_num(12) should\
    \ return 2.", "    if x > y \n        then return -1\n    else if x == y \n  \
    \      then return x\n    else \n        choose_num(x - 2, y - 1)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return\
    \ choose_num(y, x)\n        \n    else if x == y \n        then return x\n   \
    \     \n    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n  \
    \      \n    else \n        then return choose_num(x / 2, y)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that checks if a number is prime or not. \nThe function should take\
    \ one number as an argument and should return true or false accordingly.", " \
    \   if x < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,function,if-statement\
    \ |>\nThe most efficient way is to use an if statement to check whether a number\
    \ is evenly divisible by another number. \n<code>", "    if x < y \n        then\
    \ return -1\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd number that is in the range [x, y] inclusive. If there's no such\
    \ \n    number, then the function should return -1.", "    if x < y \n       \
    \ then return -1\n    else if x == y \n        then return x\n    else \n    \
    \    choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. `choose_num(12, 15)` returns `14` instead of `-1`.\n<|/ c |>\n\
    <| c |>\nYes, I forgot to add that case. Thanks for pointing it out.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "    if x > y \n        then return -1\n    else if\
    \ x < y \n        then return -1\n    else if x == y \n        then return x\n\
    \    else \n        local i = x\n        local j = y\n        while i <= j \n\
    \            do \n                i = i + 2\n            until i > j\n       \
    \     if i % 2 == 0 \n                then return i\n            else\n      \
    \          j = j - 1\n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer $n$ and returns the number of digits in $n$. \nFor example, choose_num(12)\
    \ = 2, because $12 = 2^0 + 2^1$. \nWrite a function that takes an integer $n$\
    \ and returns the number of digits in $n$. \nFor example, choose_num(12) = 2,\
    \ because $12 = 2^0 + 2^1$. \nWrite a function that takes an integer $n$ and returns\
    \ the number of digits in $n$. \nFor example, choose_num(12) = 2, because $12\
    \ = 2^0 + 2^1$. \nWrite a function that takes an integer $n$ and returns the number\
    \ of digits in $n$. \nFor example, choose_num(12) = 2, because $12 = 2^0 + 2^1$.\
    \ \nWrite a function that takes an integer $n$ and returns the number of digits\
    \ in $n$. \nFor example, choose_num(12) = 2, because $12 = 2^0 + 2^1$. \nWrite\
    \ a function that takes an integer $n$ and returns the number of digits in $n$.\
    \ \nFor example, choose_num(12) = 2, because $12 = 2^0 + 2^1$. \nWrite a function\
    \ that takes an integer $n$ and returns the number of digits in $n$. \nFor example,\
    \ choose_num(12) = 2, because $12 = 2^0 + 2^1$. \nWrite a function that takes\
    \ an integer $n$ and returns the number of digits in $n$. \nFor example, choose_num(12)\
    \ = 2, because $12 = 2^0 + 2^1$. \nWrite a function that takes an integer $n$\
    \ and returns the number of digits in $n$. \nFor example, choose_num(12) = 2,\
    \ because $12 = 2^0 + 2^1$. \nWrite a function that takes an integer $n$ and returns\
    \ the number of digits in $n$. \nFor example, choose_num(12) = 2, because $12\
    \ = 2^0 + 2^1$. \nWrite a function that takes an integer $n$ and returns the number\
    \ of digits in $n$. \nFor example, ", "    if x < y \n        then return -1\n\
    \    else \n        if x == y \n            then return x\n        else \n   \
    \         if x % 2 == 0 \n                then return choose_num(x/2, y)\n   \
    \         else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y/2)\n                else \n                    if x == y \n\
    \                        then return x\n                    else \n          \
    \              if x % 2 == 0 \n                            then return choose_num(x/2,\
    \ y)\n                        else \n                            if y % 2 == 0\
    \ \n                                then return choose_num(x, y/2)\n         \
    \                   else \n                                if x == y \n      \
    \                              then return x\n                               \
    \ else \n                                    return -1\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer and returns the next greater \nnumber\
    \ after it. For example, if the input is 3, the function should return 4.", " \
    \   if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a |>\n\
    <| a tags=julia,recursion |>\nHere's a recursive solution that is similar to what\
    \ was proposed in the other answers, but I wanted to show how you can do this\
    \ without recursion.\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x % 2 == 0 \n            then return x\n        else\
    \ \n            if y % 2 == 0 \n                then return y\n            else\
    \ \n                if x % 2 == y % 2 \n                    then return choose_num(x\
    \ / 2, y / 2)\n                else \n                    if x % 2 == y % 2 \n\
    \                        then return choose_num(x / 2, y / 2) + 1\n          \
    \          else \n                        return -1\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nThis doesn't seem to work when x is larger than y\n<|/ c |>\n<|\
    \ c |>\nIt doesn't work for me when x is larger than y\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Now it works.\n<|/ c |>\n<| c |>\nThis doesn't work for me. `choose_num(12,\
    \ 15) = 14` but `choose_num(13, 12) = -1`\n<|/ c |>\n<| c |>\nI fixed the bug.\
    \ Now it works.\n<|/ c |>\n<| a tags=julia,recursion |>\nThis can be done using\
    \ an iterative solution:\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(y / 2, x)\n                  \
    \  else \n                        return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the biggest odd number that is in the range\
    \ [x, y] inclusive. If there's no such number, then the function should return\
    \ -1.", "    if x < y \n        then return -1\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer number and returns its \nfactorial.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if x < y \n   \
    \     then return -1\n    else if x == y \n        then return x\n    else if\
    \ x % 2 == 0 \n        then return choose_num(x / 2, y)\n    else \n        choose_num(x\
    \ / 2, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ x and returns the sum of its digits. \nFor example, choose_num(12) = 1 + 2 =\
    \ 3. \nIf the number is negative, return -1.", "    if x > y \n        then return\
    \ -1\n    else if x < y \n        then return choose_num(y, x)\n    else return\
    \ x\nend\n</cell>\n<code language=julia-0.6>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a positive integer number x and returns\
    \ the largest odd number that is in the range [x, x + 10] inclusive.", "    if\
    \ x < y \n        then return -1\n    else if x == y \n        then return x\n\
    \    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else return\
    \ choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its \n    factorial. For example, factorial(5) = 5 \xD7 4\
    \ \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a positive integer number and returns its factorial. \n\
    For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "    if x > y \n      \
    \  then return -1\n    else if x == y \n        then return x\n    else \n   \
    \     choose_num(x - 2, y - 1)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an integer x and returns the number of digits in the number\
    \ x.", "    if x > y \n        then return -1\n    else if x < y \n        then\
    \ return -1\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ - 2, y - 1)\nend\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    if x <\
    \ y \n        then return -1\n    else if x == y \n        then return x\n   \
    \ else \n        choose_num(x - 2, y - 1)\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 \n            ? if x % 2 ==\
    \ 0 && y % 2 == 0 \n                then return x \n                else return\
    \ y\n            : x % 2 == 0 && y % 2 != 0 \n                ? return y\n   \
    \             : x % 2 != 0 && y % 2 == 0 \n                    ? return x\n  \
    \                  : -1\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| c\
    \ |>\nThis doesn't answer the question. OP wants to know how to use `if` statements\
    \ to solve this problem.\n<|/ c |>\n<| c |>\nI agree with you. I just wanted to\
    \ show a way to solve this problem using if-else statements. I didn't want to\
    \ give a complete solution. Thanks for your comment.\n<|/ c |>\n<| c |>\nI believe\
    \ that OP wants to know how to use `if` statements to solve this problem. He is\
    \ asking how to solve this problem using if-else statements. I believe that my\
    \ answer solves the problem using if-else statements. I believe that my answer\
    \ solves the problem using if-else statements. I believe that my answer solves\
    \ the problem using if-else statements. I believe that my answer solves the problem\
    \ using if-else statements. I believe that my answer solves the problem using\
    \ if-else statements. I believe that my answer solves the problem using if-else\
    \ statements. I believe that my answer solves the problem using if-else statements.\
    \ I believe that my answer solves the problem using if-else statements. I believe\
    \ that my answer solves the problem using if-else statements. I believe that my\
    \ answer solves the problem using if-else statements. I believe that my answer\
    \ solves the problem using if-else statements. I believe that my answer solves\
    \ the problem using if-else statements. I believe that my answer solves the problem\
    \ using if-else statements. I believe that my answer solves the problem using\
    \ if-else statements.\n<|/ c |>\n<| c |>\nI believe that my answer solves the\
    \ problem using if-else statements. I believe that my answer solves the problem\
    \ using if-else statements. I believe that my answer solves the problem using\
    \ if-else statements. I believe that my answer solves the problem using if-else\
    \ statements. I believe that my answer solves the problem using if-else statements.\
    \ I believe that my answer solves the problem using if-else statements. I believe\
    \ that my answer solves the ", "    if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x + 1, y)\n\
    \    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    if\
    \ x > y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y / 2)\n                else \n \
    \                   if x == y / 2 \n                        then return x\n  \
    \                  else \n                        if y % 2 == 1 \n           \
    \                 then return choose_num(x, y / 2)\n                        else\
    \ \n                            if x % 2 == 1 \n                             \
    \   then return choose_num(x / 2, y)\n                            else \n    \
    \                            if x > y / 2 \n                                 \
    \   then return -1\n                                else \n                  \
    \                  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer number\
    \ x and returns the number that \nis divisible by 3 or 5 (but not both). For example:\n\
    \    choose_num(12) = 6\n    choose_num(13) = -1\n    choose_num(15) = 5\n   \
    \ choose_num(17) = -1\n    choose_num(19) = -1\n    choose_num(21) = 3\n    choose_num(23)\
    \ = -1\n    choose_num(25) = -1\n    choose_num(27) = -1\n    choose_num(29) =\
    \ -1\n    choose_num(31) = 12\n    choose_num(33) = -1\n    choose_num(35) = -1\n\
    \    choose_num(37) = -1\n    choose_num(39) = -1\n    choose_num(41) = 12\n \
    \   choose_num(43) = 12\n    choose_num(45) = -1\n    choose_num(47) = -1\n  \
    \  choose_num(49) = -1\n    choose_num(51) = 12\n    choose_num(53) = 12\n   \
    \ choose_num(55) = -1\n    choose_num(57) = -1\n    choose_num(59) = -1\n    choose_num(61)\
    \ = 12\n    choose_num(63) = -1\n    choose_num(65) = -1\n    choose_num(67) =\
    \ -1\n    choose_num(69) = -1\n    choose_num(71) = 12\n    choose_num(73) = 12\n\
    \    choose_num(75) = -1\n    choose_num(77) = -1\n    choose_num(79) = -1\n \
    \   choose_num(81) = 12\n    choose_num(83) = 12\n    choose_num(85) = -1\n  \
    \  choose_num(87) = -1\n    choose_num(89) = -1\n    choose_num(91) = 12\n   \
    \ choose_num(93) = 12\n    choose_num(95) = -1\n    choose_num(97) = -1\n    choose_num(99)\
    \ = -1\n    choose_num(101) = 12\n    choose_num(103) = 12\n    choose_num(",
  "    if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x - 2, y + 1)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,recursion,algorithm |>\nI wrote a recursive function which\
    \ returns the biggest even number in the range [x, y]\n<code>", "    if x < y\
    \ \n        then return choose_num(y, x)\n    else \n        x % 2 == 0 && y %\
    \ 2 == 0 && choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2) >= x && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) <= y \n            ? choose_num(x / 2,\
    \ y / 2) * choose_num(x / 2, y / 2)\n            : -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the biggest even integer number that is\
    \ in the range [x, y] inclusive. If there's no such number, then the function\
    \ should return -1.", "    if x < y \n        then return -1\n    else if x ==\
    \ y \n        then return x\n    else \n        choose_num(x + 1, y)\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer number and returns its \n    factorial.\
    \ For example, factorial(5) = 5 * 5 * 5 = 250.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        x % 2 == 0 ? x : choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \nfactorial. For example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \n    factorial. For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120.", "    if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x + 1, y)\n\
    end\n</code>\n<|/ a tags=julia,recursion |>\n<| a dscore=0 |>\n<code>", "    if\
    \ x < y \n        then return -1\n    else if x == y\n        then return x\n\
    \    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a |>\n<|\
    \ c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\n\
    I didn't test it but I think it works. I tested it on julia 0.6.2\n<|/ c |>\n\
    <| c |>\nIt works on 0.6.2 too. Just tested it on 0.6.2. But it won't work on\
    \ 0.6.1 because `choose_num` was introduced in 0.6.2.\n<|/ c |>\n<| c |>\nI tested\
    \ it on 0.6.1 too. Just tested it on 0.6.1. But it won't work on 0.6.0 because\
    \ `choose_num` was introduced in 0.6.0\n<|/ c |>\n<| c |>\nI tested it on 0.6.0\
    \ too. Just tested it on 0.6.0. But the function doesn't work. `choose_num(12,\
    \ 15)` returns `-1` instead of `14`.\n<|/ c |>\n<| a dscore=2 |>\nThe answer by\
    \ is correct, but I thought I'd add some explanation.\nThe function choose_num\
    \ is recursive, but it's also iterative. Iterative functions are easier to understand\
    \ and are often faster than recursive functions. In Julia, iterative functions\
    \ are implemented as macros. So the function choose_num is actually implemented\
    \ as a macro.\nThe macro expands to:\n<code>", "    if x < y \n        then return\
    \ -1\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ + 1, y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| c\
    \ |>\nThis doesn't work if you pass it negative numbers. For example, `choose_num(-10,\
    \ 10)` returns `-1` instead of `10`.\n<|/ c |>\n<| c |>\nIt works fine for me\
    \ on Julia 1.5.1. What version are you using?\n<|/ c |>\n<| c |>\nI'm using Julia\
    \ 1.5.1. I guess it might be a version issue. I'm using Julia 1.5.1 on Ubuntu\
    \ 14.04.\n<|/ c |>\n<| c |>\nOk, I see what's happening now. You're not supposed\
    \ to use `x::Int64` as a type annotation. Instead, you should use `choose_num(x::Int64,\
    \ y::Int64)::Int64`. I've edited my answer to reflect this.\n<|/ c |>\n<| c |>\n\
    Thanks, I didn't know that. I've edited my answer to reflect this.\n<|/ c |>\n\
    <| a tags=julia,recursion,function |>\nHere's a solution that doesn't use recursion:\n\
    <code>", "    if x < y \n        then return choose_num(y, x)\n    else \n   \
    \     x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits in $n$. \nFor example,\
    \ choose_num(12) = 2.", "    if x < y \n        then return -1\n    else if x\
    \ == y \n        then return x\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer $n$ and returns $n$ if it's\
    \ even, \n$n+1$ if it's odd, and $-1$ otherwise.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 ? x : -1\n\
    end\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer n and returns n raised\
    \ to the power of 2. \nFor example, choose_num(12) should return 24. \nThe function\
    \ should work for any positive integer n.", "    if x > y \n        then return\
    \ -1\n    else if x < y \n        then return choose_num(y, x)\n    else \n  \
    \      choose_num(x - y, x + y)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,algorithm\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ \n        x % 2 == 0 && y % 2 == 0 \n            ? if x < y \n             \
    \   then return choose_num(y, x)\n                else return -1\n           \
    \ : x % 2 == 0 && y % 2 == 1 \n                ? if x < y \n                 \
    \   then return choose_num(y, x)\n                    else return -1\n       \
    \         : x % 2 == 1 && y % 2 == 0 \n                    ? if x < y \n     \
    \                   then return choose_num(y, x)\n                        else\
    \ return -1\n                    : x % 2 == 1 && y % 2 == 1 \n               \
    \         ? if x < y \n                            then return choose_num(y, x)\n\
    \                            else return -1\n                        : return\
    \ -1\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   if x < y \n        then return choose_num(y, x)\n    else if x == y \n   \
    \     then return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n\
    <|/ a tags=julia,recursion,function |>\n<| c |>\nThis doesn't seem to work for\
    \ me. `choose_num(12, 15)` returns `-1` instead of `14`.\n<|/ c |>\n<| c |>\n\
    It works for me (Julia 0.6.1). Which version are you using?\n<|/ c |>\n<| c |>\n\
    I'm using 0.6.1. I guess it's time to update my Julia installation. Thanks for\
    \ your help!\n<|/ c |>\n<| c |>\nI updated my Julia installation and it works\
    \ now. Thanks again!\n<|/ c |>\n<| a dscore=2 |>\nThe other answers here are great,\
    \ but I thought I'd add my own answer because I wanted to see how it compared\
    \ against the other answers. I ran this on Julia 0.6.1.\n<code>", "    if x <\
    \ y \n        then return -1\n    else if x == y \n        then return x\n   \
    \ else \n        choose_num(x - 2, y - 1)\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a |>\n<code>", "    if x < y \n        then return -1\n    else if x\
    \ == y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes an\
    \ integer n and returns the factorial of n. \n    Factorial of a number is defined\
    \ as the product of all the integers \n    less than or equal to it. For example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(x / 2, y / 2)\n              \
    \      else \n                        return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits in $n$. \nFor example,\
    \ choose_num(12) should return 2.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 && x /= 2 && y /= 2\n      \
    \  then return choose_num(x / 2, y / 2)\n        else return -1\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 36)\n</cell>\n<code language=julia-1.0", "    if x < y \n     \
    \   then return -1\n    else if x == y \n        then return x\n    else \n  \
    \      choose_num(x - 2, y - 1)\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ \n        x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x + 1, y)\n\
    \    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26859468)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to find\
    \ the biggest even number between x and y, and I provided a solution that does\
    \ exactly that. He also asked how to do it in Julia, and I provided a solution\
    \ in Julia. He also asked how to do it in Python, and I provided a solution in\
    \ Python. He also asked how to do it in R, and I provided a solution in R. He\
    \ also asked how to do it in Haskell, and I provided a solution in Haskell. He\
    \ also asked how to do it in R, and I provided a solution in R. He also asked\
    \ how to do it in Julia, and I provided a solution in Julia. He also asked how\
    \ to do it in Python, and I provided a solution in Python. He also asked how to\
    \ do it in R, and I provided a solution in R. He also asked how to do it in Haskell,\
    \ and I provided a solution in Haskell. He also asked how to do it in Julia, and\
    \ I provided a solution in Julia.\n<|/ c |>\n<| c |>\nHe also asked how to do\
    \ it in Python, and I provided a solution in Python. He also asked how to do it\
    \ in R, and I provided a solution in R. He also asked how to do it in Haskell,\
    \ and I provided a solution in Haskell. He also asked how to do it in Julia, and\
    \ I provided a solution in Julia. He also asked how to do it in Python, and I\
    \ provided a solution in Python. He also asked how to do it in R, and I provided\
    \ a solution in R. He also asked how to do it in Haskell, and I provided a solution\
    \ in Haskell. He also asked how to do it in Julia, and I provided a solution in\
    \ Julia.\n<|/ c |>\n<| c |>\nHe also asked how to do it in Python, and I provided\
    \ a solution in Python. He also ", "    if x < y \n        then return -1\n  \
    \  else if x == y \n        then return x\n    else \n        choose_num(x + 1,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x > y \n        then return choose_num(y, x)\n        \n\
    \    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nProblem 2\nWrite a function that takes a positive integer number\
    \ x and returns the \n    biggest odd number that is in the range [x, x + 10]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x > y \n        then return -1\n    else if x < y \n        then\
    \ return choose_num(y, x)\n    else \n        choose_num(x div 2, y div 2)\n \
    \   end\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer x and returns the number\
    \ of times it appears in the list [x, x + 1, ..., x + 100]. For example, choose_num(12)\
    \ should return 3.", "    if x < y \n        then return choose_num(y, x)\n  \
    \      else return x\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    smallest integer number that is in the range [x,\
    \ y] inclusive. If \n    there's no such number, then the function should return\
    \ -1.", "    if x < y \n        then return -1\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the number of \n    digits in n. For example,\
    \ choose_num(123) = 2.", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y\n        then return x\n    else \n        x % 2 == 0 && y\
    \ % 2 == 0 ? choose_num(x / 2, y / 2) : -1\nend\n</code>\n<|/ a |>\n<| c |>\n\
    This doesn't work when `x == y`\n<|/ c |>\n<| c |>\nYes, I forgot about that case.\
    \ Thanks for pointing it out. I've updated the answer.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        x % 2 == 0 && y % 2 ==\
    \ 0 ? x : -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer number n and returns the sum of its\
    \ digits. \nFor example, choose_num(123) = 1 + 2 + 3 = 6. \nThe function should\
    \ work for negative numbers as well. \nFor example, choose_num(-123) = 1 + 2 +\
    \ 3 = -6. \nThe function should work for numbers whose absolute value is less\
    \ than 10. \nFor example, choose_num(12) = 1 + 2 = 3. \nThe function should work\
    \ for numbers whose absolute value is greater than 10. \nFor example, choose_num(123)\
    \ = 1 + 2 + 3 + 4 + 5 = 17.", "    if x > y \n        then return -1\n    else\
    \ \n        if x == y \n            then return x\n        else \n           \
    \ if x % 2 == 0 \n                then return choose_num(x / 2, y)\n         \
    \   else \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x > y \n             \
    \           then return choose_num(x / 2, y / 2)\n                    else \n\
    \                        return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x - 2, y -\
    \ 1)\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| a dscore=2 |>\n<code>",
  "    if x < y \n        then return -1\n    else if x == y\n        then return\
    \ x\n    else \n        choose_num(x - 2, y - 1)\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        x % 2 ==\
    \ 0 && y % 2 == 0 ? \n            choose_num(x / 2, y / 2) + x : \n          \
    \  choose_num(x / 2, y) + x\n    end\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a dscore=1 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0\n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0\n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x % 2 ==\
    \ 0\n                        then return choose_num(x / 2, y / 2)\n          \
    \          else \n                        if y % 2 == 0\n                    \
    \        then return choose_num(x / 2, y)\n                        else \n   \
    \                         if x % 2 == 0\n                                then\
    \ return choose_num(x, y / 2)\n                            else \n           \
    \                     if y % 2 == 0\n                                    then\
    \ return choose_num(x, y)\n                                else \n           \
    \                         return -1\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return -1\n    else if x == y \n \
    \       then return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `choose_num(12,\
    \ 15)` returns `14` instead of `-1`.\n<|/ c |>\n<| c |>\nThanks for pointing that\
    \ out. I've updated the answer. Now it works.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y\n     \
    \   then return x\n    else \n        choose_num(y - 1, x)\n    end\nend\n</code>\n\
    <|/ a tags=julia,recursion,function |>\n<| c |>\nThis doesn't work if x is larger\
    \ than y, and also doesn't work if x is smaller than y.\n<|/ c |>\n<| c |>\nI\
    \ fixed the problem you mentioned\n<|/ c |>\n<| c |>\nThis doesn't work if x is\
    \ larger than y, and also doesn't work if x is smaller than y.\n<|/ c |>\n<| c\
    \ |>\nI fixed the problem you mentioned\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if x is larger than y, and also doesn't work if x is smaller than y.\n<|/ c\
    \ |>\n<| a dscore=4 |>\nThe other answers here are great, but I thought I'd add\
    \ my own solution, since I find it easier to read and understand.\n<code>", " \
    \   if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its factorial. \nThe factorial of a number\
    \ $n$ is defined as:", "    if x < y \n        then return -1\n    else if x ==\
    \ y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a dscore=1 |>\n<code>", "    if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x - 2, y -\
    \ 1)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd integer number that is in the range [x, y] inclusive. If\
    \ \n    there's no such number, then the function should return -1.", "    if\
    \ x < y \n        then return choose_num(y, x)\n        \n    if x == y \n   \
    \     then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits\nof $n$. For example,\
    \ choose_num(12) should return 2, because $12$ has two digits.", "    if x > y\
    \ \n        then return -1\n    else if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x - 2, y -\
    \ 1)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number x and returns the sum of its\
    \ digits. \nFor example, choose_num(12) = 1 + 2 = 3.", "    if x > y \n      \
    \  then return -1\n    else \n        if x == y \n            then return x\n\
    \        else \n            if x % 2 == 0 && y % 2 == 0 \n                then\
    \ return choose_num(x / 2, y / 2)\n            else \n                if x % 2\
    \ == 0 \n                    then return choose_num(x / 2, y)\n              \
    \  else \n                    if y % 2 == 0 \n                        then return\
    \ choose_num(x, y / 2)\n                    else \n                        return\
    \ -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd number that is in the range [x, y] inclusive. If there's\
    \ no such\n    number, then the function should return -1.", "    if x < y \n\
    \        then return choose_num(y, x)\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(y - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 37)\n</", "    if x > y \n        then\
    \ return -1\n    else if x == y \n        then return x\n    else \n        choose_num(x+1,\
    \ y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nThis doesn't\
    \ seem to work for me. `choose_num(12, 15)` returns `-1` instead of `14`.\n<|/\
    \ c |>\n<| c |>\nIt works for me on Julia 1.5.1. What version are you using?\n\
    <|/ c |>\n<| c |>\nI'm using 1.5.1. I guess it might be a problem with my version\
    \ of Julia. I'll try it on another computer.\n<|/ c |>\n<| c |>\nIt works on 1.5.1\
    \ too. Maybe it's an issue with my version of Julia. I'll try it on another computer.\n\
    <|/ c |>\n<| c |>\nIt works on 1.5.1 too. Maybe it's an issue with my version\
    \ of Julia. I'll try it on another computer.\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    if x == y \n        then return x\n        \n    if x % 2 == 0 \n       \
    \ then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x > y \n        then return choose_num(y,\
    \ x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nThe factorial of a number $n$ is defined\
    \ as:", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        choose_num(y - 1, x)\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis doesn't work if x is negative and y is positive.\n\
    <|/ c |>\n<| c |>\nIt doesn't work for negative numbers, it works for positive\
    \ numbers. If you try `choose_num(-2, 3)` it will return `-1`.\n<|/ c |>\n<| c\
    \ |>\nYes, it works for positive numbers. But it returns -1 for negative numbers.\
    \ I guess it would be better to return `choose_num(y, x)` instead of `-1`.\n<|/\
    \ c |>\n<| c |>\nYes, I agree, I've edited the answer to reflect that.\n<|/ c\
    \ |>\n<| c |>\nI guess this should be the accepted answer. Thanks!\n<|/ c |>\n\
    <| a tags=julia |>\n<code>", "    if x > y \n        then return -1\n    else\
    \ if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x - 2, y - 1)\nend\n</code>\n<|/ a |>\n<| a\
    \ dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \        else return x\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer $n$\
    \ and returns the number of digits in $n$. \nFor example, choose_num(12) should\
    \ return 2.", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    if x == y \n        then return x\n        \n    if x % 2 == 0 \n       \
    \ then return choose_num(x / 2, y)\n        \n    return choose_num(x / 2, y)\
    \ + 1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes in two positive integers x and y and returns the\nsmallest\
    \ even integer number that is in the range [x, y] inclusive. If \nthere's no such\
    \ number, then the function should return -1.", "    if x > y \n        then return\
    \ -1\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x % 2 ==\
    \ y % 2 \n                        then return choose_num(x / 2, y / 2)\n     \
    \               else \n                        if x % 2 == y % 2 \n          \
    \                  then return choose_num(x / 2, y / 2)\n                    \
    \    else \n                            if x % 2 != y % 2 \n                 \
    \               then return choose_num(x / 2, y / 2)\n                       \
    \     else \n                                return -1\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits in $n$. \nFor example,\
    \ choose_num(12) should return 2.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else if x % 2 == 0\n    \
    \    then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes in two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x < y \n        then return -1\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 36)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 37)\n</cell>\n\
    <code language=", "    if x < y \n        then return -1\n    else \n        if\
    \ x == y \n            then return x\n        else \n            if x % 2 == 0\
    \ \n                then return choose_num(x / 2, y)\n            else \n    \
    \            if y % 2 == 0 \n                    then return choose_num(x, y /\
    \ 2)\n                else \n                    if x > y \n                 \
    \       then return choose_num(x / 2, y)\n                    else \n        \
    \                return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer $n$\
    \ and returns the number of digits in the number $n$. \nFor example, choose_num(12)\
    \ should return 2.", "    if x > y \n        then return -1\n    else if x < y\
    \ \n        then return -1\n    else \n        local z = 0\n        while z <\
    \ y do \n            z = z + 2 \n            if z > y \n                then return\
    \ -1\n            end\n        end\n        return z\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x - 2, y - 1)\nend\n</cell>\n<code language=julia-0.6>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer x and returns the number of times it appears in the list [1, 2, 3, ...,\
    \ x].", "    if x < y \n        then return -1\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n\
    <|/ c |>\n<| c |>\nIt works fine for me. Can you please elaborate on what is not\
    \ working?\n<|/ c |>\n<| c |>\nIt doesn't work for `choose_num(12, 15)`.\n<|/\
    \ c |>\n<| c |>\nIt works for me. Can you please elaborate on what is not working?\n\
    <|/ c |>\n<| c |>\nIt doesn't work for `choose_num(12, 15)`.\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if x < y \n        then return -1\n    else if x == y\n  \
    \      then return x\n    else \n        choose_num(x - 2, y - 1)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the biggest even integer number that is in the range [x, y] inclusive.\
    \ If there's no such number, then the function should return -1.", "    if x >\
    \ y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        even = choose_num(x div 2, y)\n        if even > -1\n\
    \            then return even\n        else \n            odd = choose_num(x div\
    \ 2, y)\n            if odd > -1\n                then return odd\n          \
    \  else \n                return -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nProblem 4\nWrite a function that takes a\
    \ positive integer number and returns its \n    factorial number.", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        x % 2 == 0 &&\
    \ y % 2 == 0 && x /= 2 || y /= 2\n        then return x\n    else return -1\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd number that is in the range [x, y] inclusive. If there's\
    \ no such \n    number, then the function should return -1.", "    if x > y \n\
    \        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nThe factorial of a number $n$ is defined\
    \ as the product of all the integers \nsmaller than $n$. For example, $6! = 720$.\
    \ \nThe factorial of a negative number is not defined, so you should return $-1$.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 && x /= 2 || y\
    \ /= 2\n        then return choose_num(x, y)\n    else \n        return -1\nend\n\
    </cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer number and returns its factorial.\
    \ \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 3628800.", " \
    \   if x < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,recursion |>\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else \n        if x ==\
    \ y \n            then return x\n        else \n            if x % 2 == 0 \n \
    \               then return choose_num(x / 2, y)\n            else \n        \
    \        if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n\
    \                else \n                    if x % 2 == y % 2 \n             \
    \           then return x\n                    else \n                       \
    \ if x == y \n                            then return x\n                    \
    \    else \n                            if x > y \n                          \
    \      then return choose_num(y, x)\n                            else \n     \
    \                           if x < y \n                                    then\
    \ return choose_num(y, x)\n                                else \n           \
    \                         return -1\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of integers in the range [x, y] inclusive that satisfy the condition\
    \ $x \\leq y \\leq 10^9$. \nFor example, choose_num(12, 15) should return 3.",
  "    if x < y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else\
    \ \n        then return choose_num(x, y / 2)\nend\n</code>\n<|/ a |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ \n        x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 && y % 2 == 0 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == 0 && y % 2 != 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if x % 2 != 0 && y %\
    \ 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ 0 && y % 2 != 0 \n        then return choose_num(x, y)\n        \n    return\
    \ -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer n and returns its factorial.\
    \ \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if x > y \n  \
    \      then return -1\n    else \n        if x == y \n            then return\
    \ x\n        else \n            if x % 2 == 0 \n                then return choose_num(x\
    \ / 2, y)\n            else \n                if y % 2 == 0 \n               \
    \     then return choose_num(x, y / 2)\n                else \n              \
    \      if x % 2 == 0 \n                        then return choose_num(x / 2, y)\n\
    \                    else \n                        if y % 2 == 0 \n         \
    \                   then return choose_num(x, y / 2)\n                       \
    \ else \n                            if x % 2 == 1 \n                        \
    \        then return choose_num(x / 2, y)\n                            else \n\
    \                                if y % 2 == 1 \n                            \
    \        then return choose_num(x, y / 2)\n                                else\
    \ \n                                    return -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number x and returns the sum of its digits. \nFor example,\
    \ choose_num(12) = 1 + 2 = 3 and choose_num(123) = 1 + 2 + 3 = 6. \nThe function\
    \ should work for negative numbers as well.", "    if x < y \n        then return\
    \ -1\n    else if x == y \n        then return x\n    else if x % 2 == 0 && y\
    \ % 2 == 0 \n        then return choose_num(x / 2, y / 2)\n    else \n       \
    \ choose_num(x / 2, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1", "    if x < y \n        then return choose_num(y, x)\n   \
    \     else return x\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers and returns the number of \ntimes each number\
    \ appears in the array. For example, if the array is [1, 1, \n2, 2, 3, 3], then\
    \ the function should return [1, 1, 2, 2, 3, 3].", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) >= x && choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) <= y \n            ? choose_num(x / 2, y / 2) * choose_num(x / 2,\
    \ y / 2)\n            : -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ $n$ and returns the number of digits in $n$. For example, choose_num(12) should\
    \ return 3.", "    if x < y \n        then return choose_num(y, x)\n    else \n\
    \        x % 2 == 0 && y % 2 == 0 && choose_num(x / 2, y / 2) < x && choose_num(x\
    \ / 2, y / 2) < y\n            ? choose_num(x / 2, y / 2)\n            : -1\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer number x and returns\
    \ the number of \ndigits in the number x.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        if x % 2 == 0 \n            then return\
    \ x\n        else \n            if y % 2 == 0 \n                then return y\n\
    \            else \n                if x % 2 == y % 2 \n                    then\
    \ return x\n                else \n                    if x % 2 == y % 2 \n  \
    \                      then return y\n                    else \n            \
    \            if x % 2 == 0 \n                            then return x\n     \
    \                   else \n                            if y % 2 == 0 \n      \
    \                          then return y\n                            else \n\
    \                                return -1\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try `choose_num(12, 15)`\n<|/ c |>\n<| c |>\n\
    It does work. Try `choose_num(12, 15)`\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ `choose_num(12, 15)`\n<|/ c |>\n<| c |>\nIt does work. Try `choose_num(12, 15)`\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try `choose_num(12, 15)`\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    if x == y \n        then return x\n        \n    if x % 2 == 0 \n       \
    \ then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 != y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    return -1\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<text>\nProblem 2\nWrite a function that takes an\
    \ array of integers and returns the sum of the \n    integers in the array. For\
    \ example:", "    if x < y \n        then return -1\n    else \n        if x ==\
    \ y \n            then return x\n        else \n            if x % 2 == 0 \n \
    \               then return choose_num(x / 2, y)\n            else \n        \
    \        if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n\
    \                else \n                    if x % 2 == y % 2 \n             \
    \           then return choose_num(x / 2, y / 2)\n                    else \n\
    \                        if x % 2 == y % 2 \n                            then\
    \ return choose_num(x / 2, y / 2)\n                        else \n           \
    \                 if x % 2 == 0 \n                                then return\
    \ choose_num(x / 2, y)\n                            else \n                  \
    \              if y % 2 == 0 \n                                    then return\
    \ choose_num(x, y / 2)\n                                else \n              \
    \                      return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer and\
    \ returns the sum of its digits. \nFor example, choose_num(12) = 1 + 2 = 3.",
  "    if x < y \n        then return choose_num(y, x)\n    else \n        x % 2 ==\
    \ 0 && y % 2 == 0 \n            ? if x < y \n                then return x\n \
    \               else return y\n            : x % 2 == 0 && y % 2 == 1 \n     \
    \           ? if x < y \n                    then return y\n                 \
    \   else return x\n                : x % 2 == 1 && y % 2 == 0 \n             \
    \       ? if x < y \n                        then return x\n                 \
    \       else return y\n                    : x % 2 == 1 && y % 2 == 1 \n     \
    \                   ? if x < y \n                            then return y\n \
    \                           else return x\n                        : -1\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer $n$ and returns the\
    \ number of digits in $n$. \nFor example, choose_num(12) should return 2.", " \
    \   if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else if x % 2 == 0 && y % 2 == 0\n        then return choose_num(x /\
    \ 2, y / 2)\n    else if x % 2 == 0 && y % 2 != 0\n        then return choose_num(x\
    \ / 2, y)\n    else if x % 2 != 0 && y % 2 == 0\n        then return choose_num(x,\
    \ y / 2)\n    else if x % 2 != 0 && y % 2 != 0\n        then return choose_num(x,\
    \ y)\n    else return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x < y \n        then return -1\n    else if x == y \n        then\
    \ return x\n    else if x % 2 == 0 && y % 2 == 0\n        then return choose_num(x\
    \ / 2, y / 2)\n    else \n        choose_num(x / 2, y)\n    end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=julia,recursion |>\n<code>", "    if x < y \n   \
    \     then return choose_num(y, x)\n    else if x == y \n        then return x\n\
    \    else \n        x % 2 == 0 && y % 2 == 0 ? x : choose_num(x / 2, y / 2)\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,recursion |>\n<code>", "    if\
    \ x < y \n        then return -1\n    else if x == y\n        then return x\n\
    \    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n    else \n        return choose_num(x / 2, y)\nend\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns an array of numbers from 1 to n where each\
    \ number \nis divisible by k. For example, if k is 3, then the function should\
    \ return \n[1, 2, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30].", "    if x < y \n   \
    \     then return -1\n    else if x == y\n        then return x\n    else if x\
    \ % 2 == 0\n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer x and returns the number\
    \ of digits in x. \nFor example, choose_num(12) should return 2.", "    if x <\
    \ y \n        then return -1\n    else if x == y \n        then return x\n   \
    \ else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        x % 2 == 0 ? x : choose_num(x\
    \ / 2, y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| a dscore=1\
    \ |>\nI came up with a solution that is more efficient than others posted here\
    \ and I thought I'd share it here for future reference.\n<code>", "    if x <\
    \ y \n        then return choose_num(y, x)\n    else \n        choose_num(x, y)\n\
    end\n</cell>\n<code language=julia-0.6>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer number and returns its factorial.\
    \ \n    For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if x < y \n\
    \        then return choose_num(y, x)\n        \n    if x == y \n        then\
    \ return x\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2,\
    \ y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return x\n        \n    if x %\
    \ 2 == y % 2 \n        then return y\n        \n    if x % 2 == y % 2 \n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n \
    \       then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n \
    \       then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  ", "    if x > y \n        then return -1\n    else \n        if x % 2 == 0\
    \ \n            then return x\n        else \n            if y % 2 == 0 \n   \
    \             then return y\n            else \n                if x % 2 == y\
    \ % 2 \n                    then return x\n                else \n           \
    \         if x % 2 != y % 2 \n                        then return -1\n       \
    \             else \n                        if x == y \n                    \
    \        then return x\n                        else \n                      \
    \      if x > y \n                                then return -1\n           \
    \                 else \n                                return -1\n</code>\n\
    <|/ a tags=julia,if-statement |>\n<| c |>\nThis does not answer the question.\
    \ `choose_num(12, 15)` should return `14` not `-1`.\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. I'll edit my answer accordingly.\n<|/ c |>\n<|\
    \ c |>\nI edited my answer. Now it does exactly what the OP wanted.\n<|/ c |>\n\
    <| c |>\nI edited my answer again. Now it does exactly what the OP wanted.\n<|/\
    \ c |>\n<| c |>\nI edited my answer again. Now it does exactly what the OP wanted.\n\
    <|/ c |>\n<| a tags=julia,if-statement |>\nThis can be done with if-else statements:\n\
    <code>", "    if x > y \n        then return -1\n    else if x < y \n        then\
    \ return -1\n    else if x == y\n        then return x\n    else \n        choose_num(x\
    \ - 2, y - 2)\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| c |>\n\
    This doesn't work if x is negative and y is positive.\n<|/ c |>\n<| c |>\nIt works\
    \ if x is negative and y is positive. Try it yourself.\n<|/ c |>\n<| c |>\nI did.\
    \ `choose_num(-2, 2)` returns `-1` instead of `2`.\n<|/ c |>\n<| c |>\nI see what\
    \ you mean. I've updated my answer.\n<|/ c |>\n<| c |>\nI see what you mean. I've\
    \ updated my answer.\n<|/ c |>\n<| a dscore=2 |>\nThe other answers here are all\
    \ good, but I thought I'd add my own solution:\n<code>", "    if x < y \n    \
    \    then return choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0\
    \ ? x : -1\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't work if x\
    \ is negative and y is positive.\n<|/ c |>\n<| c |>\nI added a version that works\
    \ with negative numbers as well.\n<|/ c |>\n<| c |>\nThis doesn't work if x is\
    \ negative and y is positive.\n<|/ c |>\n<| c |>\nI added a version that works\
    \ with negative numbers as well.\n<|/ c |>\n<| a tags=julia |>\n<code>", "   \
    \ if x < y \n        then return choose_num(y, x)\n    else \n        if x % 2\
    \ == 0 && y % 2 == 0 \n            then return x\n        else return -1\n   \
    \ end\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\n<code>", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        x % 2 == 0 &&\
    \ y % 2 == 0 && x /= 2 || y /= 2\n        then return x\n    else return -1\n\
    end\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd integer number that is in the range [x, y] inclusive. If\
    \ \n    there's no such number, then the function should return -1.", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x - y, x + y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the biggest odd number that is in the range\
    \ [x, y] inclusive. If there's no such number, then the function should return\
    \ -1.", "    if x > y \n        then return -1\n    else if x < y \n        then\
    \ return choose_num(y, x)\n    else \n        choose_num(x, y)\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 ? x : -1\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \n    factorial. Factorial of a number\
    \ is defined as the product of all the \n    numbers from 1 to that number. For\
    \ example, factorial(5) = \n    5*4*3*2*1 = 120.", "    if x < y \n        then\
    \ return -1\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the \n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x < y \n        then return -1\n    else if x == y\n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/\
    \ a |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27825859)\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question. He asked how to find the biggest even number\
    \ in a range. He also asked how to do it in Julia. He also asked how to do it\
    \ in Python. He also asked how to do it in R. He also asked how to do it in C.\
    \ He also asked how to do it in C++. He also asked how to do it in C#. He also\
    \ asked how to do it in Java. He also asked how to do it in Haskell. He also asked\
    \ how to do it in Swift. He also asked how to do it in C. He also asked how to\
    \ do it in C#. He also asked how to do it in Julia. He also asked how to do it\
    \ in Python. He also asked how to do it in R. He also asked how to do it in C.\
    \ He also asked how to do it in C++. He also asked how to do it in C#. He also\
    \ asked how to do it in Java. He also asked how to do it in Haskell. He also asked\
    \ how to do it in Swift. He also asked how to do it in C. He also asked how to\
    \ do it in C#. He also asked how to do it in Julia. He also asked how to do it\
    \ in Python. He also asked how to do it in R. He also asked how to do it in C.\
    \ He also asked how to do it in C++. He also asked how to do it in C#. He also\
    \ asked how to do it in Java. He also asked how to do it in Haskell. He also asked\
    \ how to do it in Swift. He also asked how to do it in C. He also asked how to\
    \ do it in C#. He also asked how to do it in Julia. He also asked how to do it\
    \ in Python. He also asked how to do it in R. He also asked how to do ", "   \
    \ if x < y \n        then return -1\n    else \n        if x == y \n         \
    \   then return x\n        else \n            if x % 2 == 0 \n               \
    \ then return choose_num(x / 2, y)\n            else \n                if y %\
    \ 2 == 0 \n                    then return choose_num(x, y / 2)\n            \
    \    else \n                    if x % 2 == 0 \n                        then return\
    \ choose_num(x / 2, y)\n                    else \n                        if\
    \ y % 2 == 0 \n                            then return choose_num(x, y / 2)\n\
    \                        else \n                            if x % 2 == 1 \n \
    \                               then return choose_num(x / 2, y)\n           \
    \                 else \n                                if y % 2 == 1 \n    \
    \                                then return choose_num(x, y / 2)\n          \
    \                      else \n                                    return -1\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer $n$ and returns the number\
    \ of digits\nof $n$ that are less than $10$. For example, choose_num(12) should\
    \ return 2.", "    if x > y \n        then return -1\n    else \n        choose_num(x\
    \ - 1, y)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer number\
    \ x and returns the sum of its digits. \nFor example, choose_num(12) = 1 + 2 +\
    \ 3 = 6. \nThe function should work for negative numbers as well.", "    if x\
    \ > y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 2, y + 1)\nend\n</code>\n<|/ a |>\n<| a dscore=0\
    \ |>\n<code>", "    if x > y \n        then return -1\n    else if x < y \n  \
    \      then return -1\n    else if x == y \n        then return x\n    else if\
    \ x % 2 == 0 \n        then return choose_num(x / 2, y)\n    else \n        then\
    \ return choose_num(x, y / 2)\nend\n</code>\n<|/ a tags=julia,recursion |>\n<|\
    \ a tags=julia,recursion |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer $n$ and returns the number of digits\
    \ in $n$. \nFor example, choose_num(12) should return 2.", "    if x < y \n  \
    \      then return -1\n    else if x == y \n        then return x\n    else \n\
    \        choose_num(x + 1, y)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer x and returns the number of \n    digits\
    \ in x. For example, choose_num(123) = 2.", "    if x < y \n        then return\
    \ -1\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ + 1, y)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(y - 1, x)\n\
    end\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nThis doesn't seem to work.\
    \ `choose_num(12, 15)` returns `14` instead of `-1`.\n<|/ c |>\n<| c |>\nAh, I\
    \ see what you mean. I'll edit my answer in a bit.\n<|/ c |>\n<| c |>\nI edited\
    \ my answer with a new function which should work. Let me know if that works.\n\
    <|/ c |>\n<| c |>\nThis doesn't seem to work. `choose_num(12, 15)` returns `14`\
    \ instead of `-1`.\n<|/ c |>\n<| c |>\nAh, I see what you mean. I'll edit my answer\
    \ in a bit.\n<|/ c |>\n<| a tags=julia,recursion |>\n<code>", "    if x < y \n\
    \        then return choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2\
    \ == 0 && x /= 2 && y /= 2\n            ? choose_num(x / 2, y / 2)\n         \
    \   : -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its \n    factorial. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 =\
    \ 120.", "    if x < y \n        then return choose_num(y, x)\n        \n    if\
    \ x == y \n        then return x\n        \n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the biggest odd number that is in the range [x, y] inclusive.\
    \ If there's no such number, then the function should return -1.", "    if x <\
    \ y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y / 2)\n                else \n \
    \                   let z = x + y\n                    if z % 2 == 0 \n      \
    \                  then return choose_num(x / 2, y / 2)\n                    else\
    \ \n                        return z\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.", "    if x < y \n        then return -1\n    else if x ==\
    \ y \n        then return x\n    else \n        choose_num(x - 2, y - 1)\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=julia,recursion |>\n<code>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

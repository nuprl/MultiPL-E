name: HumanEval_28_concatenate
language: julia
results:
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptxgbxq4v.jl:9\nin expression starting at /tmp/tmptxgbxq4v.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3cpkhfak.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3cpkhfak.jl:1\n\
    in expression starting at /tmp/tmp3cpkhfak.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[:]\n\
    \    \n    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplosyv8ro.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplosyv8ro.jl:1\n\
    in expression starting at /tmp/tmplosyv8ro.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpft4gjmno.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft4gjmno.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft4gjmno.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpft4gjmno.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft4gjmno.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft4gjmno.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpft4gjmno.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqu4_givy.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpqu4_givy.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqu4_givy.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqu4_givy.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpqu4_givy.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqu4_givy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqu4_givy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqu4_givy.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqu4_givy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqu4_givy.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqu4_givy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcax_c978.jl:12\nin expression starting at\
    \ /tmp/tmpcax_c978.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpykngjnl9.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpykngjnl9.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpykngjnl9.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpykngjnl9.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpykngjnl9.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykngjnl9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykngjnl9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpykngjnl9.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykngjnl9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykngjnl9.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykngjnl9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsk9fa50i.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsk9fa50i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsk9fa50i.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsk9fa50i.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == \"\"\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == \"\"\n        return strings[end]\n\
    \    end\n    \n    return first + last + strings[2:end]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt6p1416o.jl:35\n  Test threw exception\n\
    \  Expression: candidate([\"x\", \"y\", \"z\"]) == \"xyz\"\n  MethodError: no\
    \ method matching +(::String, ::String)\n  Closest candidates are:\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] +(::String, ::String, ::Vector{String})\n     @ Base ./operators.jl:655\n\
    \   [2] concatenate(strings::Vector{String})\n     @ Main /tmp/tmpt6p1416o.jl:27\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt6p1416o.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt6p1416o.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpt6p1416o.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n  MethodError:\
    \ no method matching +(::String, ::String)\n  Closest candidates are:\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] +(::String, ::String, ::Vector{String})\n     @ Base ./operators.jl:655\n\
    \   [2] concatenate(strings::Vector{String})\n     @ Main /tmp/tmpt6p1416o.jl:27\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt6p1416o.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt6p1416o.jl:33\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6p1416o.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6o0x690.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6o0x690.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6o0x690.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc6o0x690.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6o0x690.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6o0x690.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6o0x690.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp562bksf6.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp562bksf6.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp562bksf6.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp562bksf6.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp562bksf6.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp562bksf6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp562bksf6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp562bksf6.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp562bksf6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp562bksf6.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp562bksf6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ea_66t3.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp7ea_66t3.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7ea_66t3.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7ea_66t3.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp7ea_66t3.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ea_66t3.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ea_66t3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7ea_66t3.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ea_66t3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ea_66t3.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ea_66t3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_f8vj3p5.jl:73\nin expression starting at\
    \ /tmp/tmp_f8vj3p5.jl:73\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpftv1l7w9.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpftv1l7w9.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpftv1l7w9.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpftv1l7w9.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpftv1l7w9.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpftv1l7w9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpftv1l7w9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpftv1l7w9.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpftv1l7w9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpftv1l7w9.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpftv1l7w9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert concatenate([\"a\", \"b\", \"c\"]) == \"abc\"\n@assert concatenate([\"\
    a\", \"b\", \"c\", \" \"]) == \"a b c \"\n@assert concatenate([\"a\", \"b\", \"\
    c\", \" \", \" \"]) == \"a b c \"\n@assert concatenate([\"a\", \"b\", \"c\", \"\
    \ \", \" \", \" \"]) == \"a b c \"\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a vector of strings and returns a new vector with each string separated\
    \ by a space. For example, [\"a\", \"b\", \"c\"] \u2192 [\"a b\", \"c\"].\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmbh490p.jl:9\nin expression starting at /tmp/tmpcmbh490p.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzxh9yiex.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxh9yiex.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxh9yiex.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzxh9yiex.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxh9yiex.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxh9yiex.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxh9yiex.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpn_75vd5a.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn_75vd5a.jl:1\n\
    in expression starting at /tmp/tmpn_75vd5a.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0q41_f_8.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0q41_f_8.jl:1\n\
    in expression starting at /tmp/tmp0q41_f_8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsw3_oi43.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsw3_oi43.jl:1\n\
    in expression starting at /tmp/tmpsw3_oi43.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjstbaqfe.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpjstbaqfe.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjstbaqfe.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjstbaqfe.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpjstbaqfe.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjstbaqfe.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjstbaqfe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjstbaqfe.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjstbaqfe.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjstbaqfe.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjstbaqfe.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwmqo93av.jl:12\nin expression starting at\
    \ /tmp/tmpwmqo93av.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbs3p7c4a.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbs3p7c4a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbs3p7c4a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbs3p7c4a.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbs3p7c4a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbs3p7c4a.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbs3p7c4a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa2550rjy.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpa2550rjy.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpa2550rjy.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpa2550rjy.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpa2550rjy.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2550rjy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2550rjy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa2550rjy.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2550rjy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2550rjy.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2550rjy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82082lgr.jl:12\nin expression starting at\
    \ /tmp/tmp82082lgr.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    last = strings[end]\n    \n    if length(last) == 0\n    \
    \    return strings[2]\n    end\n    \n    strings[2] = first\n    \n    for i\
    \ = 2:end\n        strings[i] = strings[i-1] + last\n    end\n    \n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppv8zx20x.jl:29\nin expression\
    \ starting at /tmp/tmppv8zx20x.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    if length(strings) == 0\n        return \"\"\
    \n    end\n    \n    strings = strings[2:end]\n    \n    if length(strings) ==\
    \ 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n\
    \    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = string\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp512ffn21.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp512ffn21.jl:1\n\
    in expression starting at /tmp/tmp512ffn21.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp55zufqz8.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp55zufqz8.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp55zufqz8.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp55zufqz8.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp55zufqz8.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55zufqz8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55zufqz8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp55zufqz8.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55zufqz8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55zufqz8.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55zufqz8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgem_v59.jl:12\nin expression starting at\
    \ /tmp/tmpqgem_v59.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpax0skiqb.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpax0skiqb.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpax0skiqb.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpax0skiqb.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpax0skiqb.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpax0skiqb.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpax0skiqb.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxnxp_uxo.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxnxp_uxo.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxnxp_uxo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxnxp_uxo.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxnxp_uxo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxnxp_uxo.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxnxp_uxo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp02hpoht0.jl:12\nin expression starting at\
    \ /tmp/tmp02hpoht0.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7968kekw.jl:9\nin expression starting at /tmp/tmp7968kekw.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    if first[1] == first[2]\n        return first[1] .. strings[2]\
    \ \n    end\n    \n    return first[1] .. strings[2] .. first[3] \nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk_5vrwix.jl:27\nin expression starting at\
    \ /tmp/tmpk_5vrwix.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeqjwztih.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeqjwztih.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeqjwztih.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpeqjwztih.jl:18\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeqjwztih.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeqjwztih.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeqjwztih.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_hph7afi.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hph7afi.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hph7afi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_hph7afi.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hph7afi.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hph7afi.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_hph7afi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjr99mfkg.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpjr99mfkg.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjr99mfkg.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjr99mfkg.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpjr99mfkg.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjr99mfkg.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjr99mfkg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjr99mfkg.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjr99mfkg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjr99mfkg.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjr99mfkg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg3b0l05z.jl:12\nin expression starting at\
    \ /tmp/tmpg3b0l05z.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    return join(strings,\
    \ \"\")\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns a string with each letter capitalized.\nusing Test\n\n@testset begin\n\
    \ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t\
    @test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\",\
    \ \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1srmspr.jl:11\nin expression starting at\
    \ /tmp/tmpt1srmspr.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa3fcmosm.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa3fcmosm.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa3fcmosm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa3fcmosm.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa3fcmosm.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa3fcmosm.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa3fcmosm.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpke_eyffc.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpke_eyffc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpke_eyffc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpke_eyffc.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpke_eyffc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpke_eyffc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpke_eyffc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqczrl4kf.jl:11\nin expression starting at\
    \ /tmp/tmpqczrl4kf.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1o41ykid.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o41ykid.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o41ykid.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1o41ykid.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpis0dto2f.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpis0dto2f.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpis0dto2f.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpis0dto2f.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpis0dto2f.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis0dto2f.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis0dto2f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpis0dto2f.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis0dto2f.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis0dto2f.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpis0dto2f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppd8nbom0.jl:20\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppd8nbom0.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppd8nbom0.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppd8nbom0.jl:21\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppd8nbom0.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppd8nbom0.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppd8nbom0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    if length(strings)\
    \ == 1\n        return strings[1]\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5d2mid5z.jl:12\nin expression starting at\
    \ /tmp/tmp5d2mid5z.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsq2r_911.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq2r_911.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsq2r_911.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpsq2r_911.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq2r_911.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsq2r_911.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsq2r_911.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxewykq6u.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpxewykq6u.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxewykq6u.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxewykq6u.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpxewykq6u.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxewykq6u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxewykq6u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxewykq6u.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxewykq6u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxewykq6u.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxewykq6u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxkv2nbr.jl:9\nin expression starting at /tmp/tmpnxkv2nbr.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ldw4skn.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ldw4skn.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ldw4skn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp4ldw4skn.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ldw4skn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ldw4skn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ldw4skn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\nusing Test\n\n@testset begin\n\n\
    candidate = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaf4ymygf.jl:12\nin expression starting at\
    \ /tmp/tmpaf4ymygf.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2zeprd5s.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zeprd5s.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zeprd5s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2zeprd5s.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zeprd5s.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zeprd5s.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zeprd5s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps7i5j37s.jl:9\nin expression starting at /tmp/tmps7i5j37s.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptr6m8wb3.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmptr6m8wb3.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptr6m8wb3.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptr6m8wb3.jl:16\ntest set:\
    \ Test Failed at /tmp/tmptr6m8wb3.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptr6m8wb3.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptr6m8wb3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptr6m8wb3.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptr6m8wb3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptr6m8wb3.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptr6m8wb3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeywr42wr.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpeywr42wr.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpeywr42wr.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeywr42wr.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpeywr42wr.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeywr42wr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeywr42wr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeywr42wr.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeywr42wr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeywr42wr.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeywr42wr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq60btnz6.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq60btnz6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq60btnz6.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpq60btnz6.jl:18\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq60btnz6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq60btnz6.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq60btnz6.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpulhsxsgq.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpulhsxsgq.jl:1\n\
    in expression starting at /tmp/tmpulhsxsgq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoj5ojjio.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoj5ojjio.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoj5ojjio.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoj5ojjio.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpazcnanmk.jl:20\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazcnanmk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazcnanmk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpazcnanmk.jl:21\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazcnanmk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazcnanmk.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazcnanmk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy3zqwsuh.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3zqwsuh.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3zqwsuh.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy3zqwsuh.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3zqwsuh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3zqwsuh.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3zqwsuh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8n33f3pc.jl:12\nin expression starting at\
    \ /tmp/tmp8n33f3pc.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj38_3hwa.jl:12\nin expression starting at\
    \ /tmp/tmpj38_3hwa.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy919xqe4.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy919xqe4.jl:1\n\
    in expression starting at /tmp/tmpy919xqe4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1qv88gv4.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp1qv88gv4.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1qv88gv4.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1qv88gv4.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp1qv88gv4.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1qv88gv4.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1qv88gv4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1qv88gv4.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1qv88gv4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1qv88gv4.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1qv88gv4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz154cd68.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpz154cd68.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpz154cd68.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpz154cd68.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpz154cd68.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz154cd68.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz154cd68.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz154cd68.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz154cd68.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz154cd68.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz154cd68.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp107jr8wm.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp107jr8wm.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp107jr8wm.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp107jr8wm.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    if length(strings)\
    \ == 1\n        return strings[1]\n    \n    strings = strings[2:end]\n    \n\
    \    return strings[1] ++ strings[2] ++ strings[3]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_f1_xm5.jl:12\nin expression starting at\
    \ /tmp/tmpb_f1_xm5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of strings and returns a vector\
    \ of integers representing the number of times each string appears in the vector.\
    \ For example, if the input vector is [\"a\", \"b\", \"c\", \"a\", \"b\", \"a\"\
    , \"c\"], the output vector should be [1, 1, 2, 1, 1, 2, 1]. Hint: use the built-in\
    \ function count!\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t\
    @test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp037wfmvz.jl:10\nin expression starting at\
    \ /tmp/tmp037wfmvz.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoum1w1y7.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpoum1w1y7.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpoum1w1y7.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoum1w1y7.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpoum1w1y7.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoum1w1y7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoum1w1y7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoum1w1y7.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoum1w1y7.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoum1w1y7.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoum1w1y7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\n</cell>\n<text>\nThe function concatenate\
    \ is now available to us. Let's try it out on some examples:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ad_ctgk.jl:12\nin expression starting at\
    \ /tmp/tmp5ad_ctgk.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplhszt16w.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmplhszt16w.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplhszt16w.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplhszt16w.jl:16\ntest set:\
    \ Test Failed at /tmp/tmplhszt16w.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhszt16w.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhszt16w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplhszt16w.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhszt16w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhszt16w.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhszt16w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1w4kkf_e.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp1w4kkf_e.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1w4kkf_e.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1w4kkf_e.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp1w4kkf_e.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w4kkf_e.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w4kkf_e.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1w4kkf_e.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w4kkf_e.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w4kkf_e.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1w4kkf_e.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsf3h_4fy.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpsf3h_4fy.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsf3h_4fy.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsf3h_4fy.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpsf3h_4fy.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf3h_4fy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf3h_4fy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsf3h_4fy.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf3h_4fy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf3h_4fy.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsf3h_4fy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc2vjms19.jl:12\nin expression starting at\
    \ /tmp/tmpc2vjms19.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk8n2d4g9.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk8n2d4g9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk8n2d4g9.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk8n2d4g9.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc7rfj450.jl:12\nin expression starting at\
    \ /tmp/tmpc7rfj450.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpciq22je4.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpciq22je4.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpciq22je4.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpciq22je4.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpciq22je4.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpciq22je4.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpciq22je4.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxt9c6sok.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpxt9c6sok.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt9c6sok.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxt9c6sok.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpxt9c6sok.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxt9c6sok.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxt9c6sok.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxt9c6sok.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxt9c6sok.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxt9c6sok.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxt9c6sok.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2sgf_2l.jl:9\nin expression starting at /tmp/tmpz2sgf_2l.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj_0eqo3d.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_0eqo3d.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_0eqo3d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj_0eqo3d.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_0eqo3d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_0eqo3d.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_0eqo3d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    strings = strings[1:end-1]\n    return join(strings,\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23l_c08u.jl:19\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"y\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23l_c08u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23l_c08u.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp23l_c08u.jl:20\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23l_c08u.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23l_c08u.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23l_c08u.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd2wa82cf.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd2wa82cf.jl:1\n\
    in expression starting at /tmp/tmpd2wa82cf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy12y49c8.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy12y49c8.jl:1\n\
    in expression starting at /tmp/tmpy12y49c8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpal3hhg5e.jl:12\nin expression starting at\
    \ /tmp/tmpal3hhg5e.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwoxpjf5w.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoxpjf5w.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoxpjf5w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwoxpjf5w.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoxpjf5w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoxpjf5w.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwoxpjf5w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9ow10on.jl:9\nin expression starting at /tmp/tmpw9ow10on.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoduw090w.jl:17\nin expression starting at\
    \ /tmp/tmpoduw090w.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    \n    return\
    \ join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp49sbomck.jl:21\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"y\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp49sbomck.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp49sbomck.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp49sbomck.jl:22\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp49sbomck.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp49sbomck.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp49sbomck.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc82jd0f6.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc82jd0f6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc82jd0f6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc82jd0f6.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc82jd0f6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc82jd0f6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc82jd0f6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.3>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnf831kov.jl:11\nin expression starting at\
    \ /tmp/tmpnf831kov.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk5jhmja1.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5jhmja1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5jhmja1.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5jhmja1.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpybb683qp.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpybb683qp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpybb683qp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpybb683qp.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wxyz\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpybb683qp.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpybb683qp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpybb683qp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuxg10seg.jl:9\nin expression starting at /tmp/tmpuxg10seg.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp25sumuvv.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp25sumuvv.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp25sumuvv.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp25sumuvv.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp25sumuvv.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25sumuvv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25sumuvv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp25sumuvv.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25sumuvv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25sumuvv.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp25sumuvv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    if first[1] == first[2]\n        return strings[1] + strings[2]\n\
    \    end\n    \n    return strings[1] + strings[2] + strings[3]\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkl8excau.jl:27\nin expression starting at\
    \ /tmp/tmpkl8excau.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjpdyx9wv.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpjpdyx9wv.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjpdyx9wv.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjpdyx9wv.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpjpdyx9wv.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjpdyx9wv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjpdyx9wv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjpdyx9wv.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjpdyx9wv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjpdyx9wv.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjpdyx9wv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm9hef7is.jl:11\nin expression starting at\
    \ /tmp/tmpm9hef7is.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3bki67wu.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bki67wu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bki67wu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3bki67wu.jl:26\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bki67wu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bki67wu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3bki67wu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmb5ewkkh.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpmb5ewkkh.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmb5ewkkh.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmb5ewkkh.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpmb5ewkkh.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmb5ewkkh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmb5ewkkh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmb5ewkkh.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmb5ewkkh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmb5ewkkh.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmb5ewkkh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9iqncc_z.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9iqncc_z.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9iqncc_z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9iqncc_z.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wxyz\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9iqncc_z.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9iqncc_z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9iqncc_z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbk61k8_p.jl:12\nin expression starting at\
    \ /tmp/tmpbk61k8_p.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi19jo1v2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpi19jo1v2.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi19jo1v2.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi19jo1v2.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpi19jo1v2.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi19jo1v2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi19jo1v2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi19jo1v2.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi19jo1v2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi19jo1v2.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi19jo1v2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjqp7uisx.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqp7uisx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqp7uisx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpjqp7uisx.jl:18\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqp7uisx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqp7uisx.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqp7uisx.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy2intyi1.jl:12\nin expression starting at\
    \ /tmp/tmpy2intyi1.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_3u31yqi.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_3u31yqi.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_3u31yqi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_3u31yqi.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_3u31yqi.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_3u31yqi.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_3u31yqi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@test concatenate([\"a\", \"b\", \"c\"]) == \"abc\"\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of strings and returns\
    \ a vector of strings where each string in the original vector is concatenated\
    \ with the string \"-\".\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxwwptxz5.jl:12\nin expression starting at\
    \ /tmp/tmpxwwptxz5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplwvkk22s.jl:12\nin expression starting at\
    \ /tmp/tmplwvkk22s.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp1fpysa5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpp1fpysa5.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpp1fpysa5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpp1fpysa5.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpp1fpysa5.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1fpysa5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1fpysa5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp1fpysa5.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1fpysa5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1fpysa5.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp1fpysa5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqsy6shkf.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpqsy6shkf.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqsy6shkf.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqsy6shkf.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpqsy6shkf.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsy6shkf.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsy6shkf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqsy6shkf.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsy6shkf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsy6shkf.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsy6shkf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    return join(strings,\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2y0idul.jl:12\nin expression starting at\
    \ /tmp/tmpz2y0idul.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5g8erith.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5g8erith.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5g8erith.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5g8erith.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5g8erith.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5g8erith.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5g8erith.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg53qvpcj.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg53qvpcj.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg53qvpcj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg53qvpcj.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg53qvpcj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg53qvpcj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg53qvpcj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptkxevjpv.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmptkxevjpv.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptkxevjpv.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptkxevjpv.jl:16\ntest set:\
    \ Test Failed at /tmp/tmptkxevjpv.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkxevjpv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkxevjpv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptkxevjpv.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkxevjpv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkxevjpv.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptkxevjpv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdtizt5n7.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpdtizt5n7.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdtizt5n7.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdtizt5n7.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpdtizt5n7.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtizt5n7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtizt5n7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdtizt5n7.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtizt5n7.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtizt5n7.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdtizt5n7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplrx18ldu.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplrx18ldu.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplrx18ldu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplrx18ldu.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplrx18ldu.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplrx18ldu.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplrx18ldu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxv7gu63c.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpxv7gu63c.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxv7gu63c.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxv7gu63c.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpxv7gu63c.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxv7gu63c.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxv7gu63c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxv7gu63c.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxv7gu63c.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxv7gu63c.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxv7gu63c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxom_031s.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpxom_031s.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxom_031s.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxom_031s.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpxom_031s.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxom_031s.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxom_031s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxom_031s.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxom_031s.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxom_031s.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxom_031s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpluuoxscz.jl:12\nin expression starting at\
    \ /tmp/tmpluuoxscz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpee2jc3me.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee2jc3me.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee2jc3me.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpee2jc3me.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee2jc3me.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee2jc3me.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpee2jc3me.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpomv3yj8v.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpomv3yj8v.jl:1\n\
    in expression starting at /tmp/tmpomv3yj8v.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    first = strings[1]\n\
    \    \n    if first == ''\n        return strings[2]\n    \n    last = strings[end]\n\
    \    \n    if last == ''\n        return strings[1] + strings[2]\n    \n    return\
    \ first + last\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6w85zcn3.jl:12\nin expression starting at\
    \ /tmp/tmp6w85zcn3.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps241p5ej.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps241p5ej.jl:1\n\
    in expression starting at /tmp/tmps241p5ej.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnex4e0zh.jl:12\nin expression starting at\
    \ /tmp/tmpnex4e0zh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprk0vwdav.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprk0vwdav.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprk0vwdav.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprk0vwdav.jl:26\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprk0vwdav.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprk0vwdav.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprk0vwdav.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb8w2fb3i.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpb8w2fb3i.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb8w2fb3i.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb8w2fb3i.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpb8w2fb3i.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8w2fb3i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8w2fb3i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb8w2fb3i.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8w2fb3i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8w2fb3i.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8w2fb3i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkn110n4f.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkn110n4f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkn110n4f.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpkn110n4f.jl:18\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkn110n4f.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkn110n4f.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkn110n4f.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1o6s_r4m.jl:11\nin expression starting at\
    \ /tmp/tmp1o6s_r4m.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj_irotfy.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpj_irotfy.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj_irotfy.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj_irotfy.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpj_irotfy.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_irotfy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_irotfy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj_irotfy.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_irotfy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_irotfy.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_irotfy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa0pygej_.jl:12\nin expression starting at\
    \ /tmp/tmpa0pygej_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp44dhtpr4.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44dhtpr4.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44dhtpr4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp44dhtpr4.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44dhtpr4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44dhtpr4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp44dhtpr4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl9y941j6.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpl9y941j6.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpl9y941j6.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpl9y941j6.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpl9y941j6.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9y941j6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9y941j6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl9y941j6.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9y941j6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9y941j6.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9y941j6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwhfqxnzc.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpwhfqxnzc.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwhfqxnzc.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwhfqxnzc.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpwhfqxnzc.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwhfqxnzc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwhfqxnzc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwhfqxnzc.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwhfqxnzc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwhfqxnzc.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwhfqxnzc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzmomzkut.jl:12\nin expression starting at\
    \ /tmp/tmpzmomzkut.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpafate0ux.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpafate0ux.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpafate0ux.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpafate0ux.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpafate0ux.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpafate0ux.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpafate0ux.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpafate0ux.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpafate0ux.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpafate0ux.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpafate0ux.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1toqjd8l.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1toqjd8l.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1toqjd8l.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1toqjd8l.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoqiknkgx.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoqiknkgx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoqiknkgx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoqiknkgx.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoqiknkgx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoqiknkgx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoqiknkgx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphcj3y_1c.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmphcj3y_1c.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphcj3y_1c.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphcj3y_1c.jl:16\ntest set:\
    \ Test Failed at /tmp/tmphcj3y_1c.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcj3y_1c.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcj3y_1c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphcj3y_1c.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcj3y_1c.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcj3y_1c.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphcj3y_1c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpih9ot7xt.jl:12\nin expression starting at\
    \ /tmp/tmpih9ot7xt.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    last = strings[end]\n    \n    if length(last) == 0\n    \
    \    return strings[end]\n    end\n    \n    strings[end] = last[1:end]\n    \n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptrlpqs7_.jl:31\nin expression starting at\
    \ /tmp/tmptrlpqs7_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplip0gkqz.jl:9\nin expression starting at /tmp/tmplip0gkqz.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyk_rdhhl.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyk_rdhhl.jl:1\n\
    in expression starting at /tmp/tmpyk_rdhhl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8i0bl4s.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8i0bl4s.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8i0bl4s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq8i0bl4s.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8i0bl4s.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8i0bl4s.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8i0bl4s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2jr68bjd.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2jr68bjd.jl:1\n\
    in expression starting at /tmp/tmp2jr68bjd.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpewiiqspm.jl:12\nin expression starting at\
    \ /tmp/tmpewiiqspm.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5tios6h.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5tios6h.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5tios6h.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpo5tios6h.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5tios6h.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5tios6h.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5tios6h.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3kjpf_is.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp3kjpf_is.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3kjpf_is.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3kjpf_is.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp3kjpf_is.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kjpf_is.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kjpf_is.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3kjpf_is.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kjpf_is.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kjpf_is.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3kjpf_is.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaezajfx4.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaezajfx4.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaezajfx4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpaezajfx4.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaezajfx4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaezajfx4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaezajfx4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj6olajwr.jl:12\nin expression starting at\
    \ /tmp/tmpj6olajwr.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[end-1:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4w2py__g.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [-1:0]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{String},\
    \ I::Tuple{UnitRange{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] getindex\n     @ ./array.jl:867\
    \ [inlined]\n   [4] concatenate(strings::Vector{String})\n     @ Main /tmp/tmp4w2py__g.jl:9\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp4w2py__g.jl:17 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp4w2py__g.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp4w2py__g.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4w2py__g.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4w2py__g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4w2py__g.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4w2py__g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4w2py__g.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4w2py__g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a vector of strings and returns a vector\
    \ of strings where each string is the concatenation of all the strings in the\
    \ original vector. For example, if the input vector is [\"a\", \"b\", \"c\"],\
    \ the output vector should be [\"abc\"].\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpydhrcp4m.jl:10\nin expression starting at\
    \ /tmp/tmpydhrcp4m.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzzyfw72g.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpzzyfw72g.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzzyfw72g.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzzyfw72g.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpzzyfw72g.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzyfw72g.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzyfw72g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzzyfw72g.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzyfw72g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzyfw72g.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzyfw72g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_r60jpdz.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_r60jpdz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_r60jpdz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_r60jpdz.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_r60jpdz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_r60jpdz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_r60jpdz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpirjby4ws.jl:12\nin expression starting at\
    \ /tmp/tmpirjby4ws.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpefiif5sv.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefiif5sv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefiif5sv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpefiif5sv.jl:26\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefiif5sv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefiif5sv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpefiif5sv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_z89rxsz.jl:9\nin expression starting at /tmp/tmp_z89rxsz.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi8g19fxs.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8g19fxs.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8g19fxs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi8g19fxs.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8g19fxs.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8g19fxs.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8g19fxs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8z0nza52.jl:12\nin expression starting at\
    \ /tmp/tmp8z0nza52.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyu53d79z.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyu53d79z.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyu53d79z.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpyu53d79z.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyu53d79z.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyu53d79z.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyu53d79z.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqbm0npdh.jl:12\nin expression starting at\
    \ /tmp/tmpqbm0npdh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[end-1:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg86xglol.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [-1:0]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{String},\
    \ I::Tuple{UnitRange{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] getindex\n     @ ./array.jl:867\
    \ [inlined]\n   [4] concatenate(strings::Vector{String})\n     @ Main /tmp/tmpg86xglol.jl:9\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpg86xglol.jl:17 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpg86xglol.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpg86xglol.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg86xglol.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg86xglol.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg86xglol.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg86xglol.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg86xglol.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg86xglol.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfjjv2b_h.jl:12\nin expression starting at\
    \ /tmp/tmpfjjv2b_h.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptp88ny7p.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptp88ny7p.jl:1\n\
    in expression starting at /tmp/tmptp88ny7p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpae38hcgn.jl:12\nin expression starting at\
    \ /tmp/tmpae38hcgn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppjmj_q59.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjmj_q59.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjmj_q59.jl:15\ntest set: Test\
    \ Failed at /tmp/tmppjmj_q59.jl:18\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjmj_q59.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjmj_q59.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjmj_q59.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpalaypwyu.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpalaypwyu.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpalaypwyu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpalaypwyu.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpalaypwyu.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpalaypwyu.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpalaypwyu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, '') \nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp24_4a63k.jl:11\nin expression starting at\
    \ /tmp/tmp24_4a63k.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2wa1dvta.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wa1dvta.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wa1dvta.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2wa1dvta.jl:26\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wa1dvta.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wa1dvta.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2wa1dvta.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3x5moapa.jl:12\nin expression starting at\
    \ /tmp/tmp3x5moapa.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpclt739bc.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpclt739bc.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpclt739bc.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpclt739bc.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpclt739bc.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclt739bc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclt739bc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpclt739bc.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclt739bc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclt739bc.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclt739bc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0zkt4oi7.jl:12\nin expression starting at\
    \ /tmp/tmp0zkt4oi7.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjes2e81u.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpjes2e81u.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjes2e81u.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjes2e81u.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpjes2e81u.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjes2e81u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjes2e81u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjes2e81u.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjes2e81u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjes2e81u.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjes2e81u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsf825x5i.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpsf825x5i.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsf825x5i.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsf825x5i.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpsf825x5i.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf825x5i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf825x5i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsf825x5i.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf825x5i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf825x5i.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsf825x5i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxi7qx89j.jl:12\nin expression starting at\
    \ /tmp/tmpxi7qx89j.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp414xb4h5.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp414xb4h5.jl:1\n\
    in expression starting at /tmp/tmp414xb4h5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjyxf_pvv.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpjyxf_pvv.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjyxf_pvv.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjyxf_pvv.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpjyxf_pvv.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjyxf_pvv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjyxf_pvv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjyxf_pvv.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjyxf_pvv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjyxf_pvv.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjyxf_pvv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1li593p6.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1li593p6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1li593p6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1li593p6.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1li593p6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1li593p6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1li593p6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of strings and returns a vector\
    \ of strings where each string is the concatenation of all the strings in the\
    \ original vector.\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbfbsewi6.jl:10\nin expression starting at\
    \ /tmp/tmpbfbsewi6.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnkbmjylk.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnkbmjylk.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnkbmjylk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnkbmjylk.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"wxyz\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnkbmjylk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnkbmjylk.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnkbmjylk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi86rjaq7.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi86rjaq7.jl:1\n\
    in expression starting at /tmp/tmpi86rjaq7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6s7lsao.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6s7lsao.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6s7lsao.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc6s7lsao.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6s7lsao.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6s7lsao.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6s7lsao.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpueg3o1do.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpueg3o1do.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpueg3o1do.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpueg3o1do.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpueg3o1do.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpueg3o1do.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpueg3o1do.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpueg3o1do.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpueg3o1do.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpueg3o1do.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpueg3o1do.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0x2kpzbn.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp0x2kpzbn.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0x2kpzbn.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0x2kpzbn.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp0x2kpzbn.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0x2kpzbn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0x2kpzbn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0x2kpzbn.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0x2kpzbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0x2kpzbn.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0x2kpzbn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph2cxe4dn.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmph2cxe4dn.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph2cxe4dn.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph2cxe4dn.jl:16\ntest set:\
    \ Test Failed at /tmp/tmph2cxe4dn.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph2cxe4dn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph2cxe4dn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph2cxe4dn.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph2cxe4dn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph2cxe4dn.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph2cxe4dn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp94aablmw.jl:12\nin expression starting at\
    \ /tmp/tmp94aablmw.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz3aykchr.jl:9\nin expression starting at /tmp/tmpz3aykchr.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkfka8fop.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmpkfka8fop.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkfka8fop.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkfka8fop.jl:16\ntest set:\
    \ Test Failed at /tmp/tmpkfka8fop.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkfka8fop.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkfka8fop.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkfka8fop.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkfka8fop.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkfka8fop.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkfka8fop.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbxb5lcvu.jl:12\nin expression starting at\
    \ /tmp/tmpbxb5lcvu.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgl_lk7b_.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgl_lk7b_.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgl_lk7b_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgl_lk7b_.jl:17\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgl_lk7b_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgl_lk7b_.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgl_lk7b_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphcyr5oad.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmphcyr5oad.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphcyr5oad.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphcyr5oad.jl:16\ntest set:\
    \ Test Failed at /tmp/tmphcyr5oad.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcyr5oad.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcyr5oad.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphcyr5oad.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcyr5oad.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcyr5oad.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphcyr5oad.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx6myg86c.jl:12\nin expression starting at\
    \ /tmp/tmpx6myg86c.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkffuwrd8.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"z\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkffuwrd8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkffuwrd8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkffuwrd8.jl:26\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"zwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkffuwrd8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkffuwrd8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkffuwrd8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    return\
    \ join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptxqzltyv.jl:23\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptxqzltyv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptxqzltyv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptxqzltyv.jl:24\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptxqzltyv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptxqzltyv.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptxqzltyv.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_k2c9zii.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_k2c9zii.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_k2c9zii.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_k2c9zii.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_k2c9zii.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_k2c9zii.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_k2c9zii.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp17ptrbc_.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Vector{String} at index [0]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] concatenate(strings::Vector{String})\n\
    \     @ Main /tmp/tmp17ptrbc_.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp17ptrbc_.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp17ptrbc_.jl:16\ntest set:\
    \ Test Failed at /tmp/tmp17ptrbc_.jl:18\n  Expression: candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp17ptrbc_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp17ptrbc_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp17ptrbc_.jl:19\n  Expression: candidate([\"x\", \"y\", \"\
    z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp17ptrbc_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp17ptrbc_.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17ptrbc_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK

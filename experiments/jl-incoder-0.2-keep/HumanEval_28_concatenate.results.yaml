name: HumanEval_28_concatenate
language: julia
results:
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp614bkpp_.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp614bkpp_.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6sm0m5c2.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp6sm0m5c2.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp6sm0m5c2.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[:]\n\
    \    \n    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_r0s55yo.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp_r0s55yo.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp_r0s55yo.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ma4pd17.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ma4pd17.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ma4pd17.jl:16\ntest set: Test Failed at /tmp/tmp7ma4pd17.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7ma4pd17.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ma4pd17.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ma4pd17.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx_y77aeo.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpx_y77aeo.jl:9\n\
    \   [3] top-level scope at /tmp/tmpx_y77aeo.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx_y77aeo.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpx_y77aeo.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpx_y77aeo.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx_y77aeo.jl:16\ntest set: Test Failed at /tmp/tmpx_y77aeo.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpx_y77aeo.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx_y77aeo.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_y77aeo.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp86f9oht2.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp86f9oht2.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_ene5rzi.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp_ene5rzi.jl:9\n\
    \   [3] top-level scope at /tmp/tmp_ene5rzi.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_ene5rzi.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp_ene5rzi.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_ene5rzi.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ene5rzi.jl:16\ntest set: Test Failed at /tmp/tmp_ene5rzi.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_ene5rzi.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ene5rzi.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ene5rzi.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1wqp_0_c.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1wqp_0_c.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1wqp_0_c.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wqp_0_c.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == \"\"\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == \"\"\n        return strings[end]\n\
    \    end\n    \n    return first + last + strings[2:end]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwoxkqtaa.jl:35\n  Test threw exception\n\
    \  Expression: candidate([\"x\", \"y\", \"z\"]) == \"xyz\"\n  MethodError: no\
    \ method matching +(::String, ::String)\n  Closest candidates are:\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n  Stacktrace:\n\
    \   [1] +(::String, ::String, ::Array{String,1}) at ./operators.jl:529\n   [2]\
    \ concatenate(::Array{String,1}) at /tmp/tmpwoxkqtaa.jl:27\n   [3] top-level scope\
    \ at /tmp/tmpwoxkqtaa.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwoxkqtaa.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpwoxkqtaa.jl:36\n  Test threw exception\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at operators.jl:529\n  Stacktrace:\n   [1] +(::String, ::String,\
    \ ::Array{String,1}) at ./operators.jl:529\n   [2] concatenate(::Array{String,1})\
    \ at /tmp/tmpwoxkqtaa.jl:27\n   [3] top-level scope at /tmp/tmpwoxkqtaa.jl:36\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwoxkqtaa.jl:33\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwoxkqtaa.jl:31\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvasasmak.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvasasmak.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvasasmak.jl:16\ntest set: Test Failed at /tmp/tmpvasasmak.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvasasmak.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvasasmak.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvasasmak.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf4qpqpud.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpf4qpqpud.jl:9\n\
    \   [3] top-level scope at /tmp/tmpf4qpqpud.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf4qpqpud.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpf4qpqpud.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf4qpqpud.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4qpqpud.jl:16\ntest set: Test Failed at /tmp/tmpf4qpqpud.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf4qpqpud.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4qpqpud.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4qpqpud.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpccli5jcz.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpccli5jcz.jl:9\n\
    \   [3] top-level scope at /tmp/tmpccli5jcz.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpccli5jcz.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpccli5jcz.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpccli5jcz.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpccli5jcz.jl:16\ntest set: Test Failed at /tmp/tmpccli5jcz.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpccli5jcz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpccli5jcz.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpccli5jcz.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp693zuxnn.jl:73\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp693zuxnn.jl:73\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxi76yxa2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpxi76yxa2.jl:9\n\
    \   [3] top-level scope at /tmp/tmpxi76yxa2.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxi76yxa2.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpxi76yxa2.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxi76yxa2.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxi76yxa2.jl:16\ntest set: Test Failed at /tmp/tmpxi76yxa2.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxi76yxa2.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxi76yxa2.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxi76yxa2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert concatenate([\"a\", \"b\", \"c\"]) == \"abc\"\n@assert concatenate([\"\
    a\", \"b\", \"c\", \" \"]) == \"a b c \"\n@assert concatenate([\"a\", \"b\", \"\
    c\", \" \", \" \"]) == \"a b c \"\n@assert concatenate([\"a\", \"b\", \"c\", \"\
    \ \", \" \", \" \"]) == \"a b c \"\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a vector of strings and returns a new vector with each string separated\
    \ by a space. For example, [\"a\", \"b\", \"c\"] \u2192 [\"a b\", \"c\"].\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpk0vcpixr.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk0vcpixr.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpza56hubq.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpza56hubq.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza56hubq.jl:16\ntest set: Test Failed at /tmp/tmpza56hubq.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpza56hubq.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza56hubq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpza56hubq.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4pjhyzdw.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp4pjhyzdw.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp4pjhyzdw.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk_p5r_2g.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpk_p5r_2g.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpk_p5r_2g.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmponv0zlse.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmponv0zlse.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmponv0zlse.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp936xnmst.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp936xnmst.jl:9\n\
    \   [3] top-level scope at /tmp/tmp936xnmst.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp936xnmst.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp936xnmst.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp936xnmst.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp936xnmst.jl:16\ntest set: Test Failed at /tmp/tmp936xnmst.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp936xnmst.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp936xnmst.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp936xnmst.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppj2wknfv.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppj2wknfv.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp80sxdpog.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp80sxdpog.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp80sxdpog.jl:16\ntest set: Test Failed at /tmp/tmp80sxdpog.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp80sxdpog.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp80sxdpog.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80sxdpog.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpov0prop_.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpov0prop_.jl:9\n\
    \   [3] top-level scope at /tmp/tmpov0prop_.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpov0prop_.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpov0prop_.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpov0prop_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpov0prop_.jl:16\ntest set: Test Failed at /tmp/tmpov0prop_.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpov0prop_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpov0prop_.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov0prop_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp5lk82_rb.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5lk82_rb.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    last = strings[end]\n    \n    if length(last) == 0\n    \
    \    return strings[2]\n    end\n    \n    strings[2] = first\n    \n    for i\
    \ = 2:end\n        strings[i] = strings[i-1] + last\n    end\n    \n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmps9iundnq.jl:29\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmps9iundnq.jl:29\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    if length(strings) == 0\n        return \"\"\
    \n    end\n    \n    strings = strings[2:end]\n    \n    if length(strings) ==\
    \ 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n\
    \    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = string\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyx74if8l.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpyx74if8l.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpyx74if8l.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg9j8q5fg.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpg9j8q5fg.jl:9\n\
    \   [3] top-level scope at /tmp/tmpg9j8q5fg.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg9j8q5fg.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpg9j8q5fg.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg9j8q5fg.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg9j8q5fg.jl:16\ntest set: Test Failed at /tmp/tmpg9j8q5fg.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg9j8q5fg.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg9j8q5fg.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg9j8q5fg.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpnlwire9k.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnlwire9k.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvmkv16s5.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvmkv16s5.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmkv16s5.jl:14\ntest set: Test Failed at /tmp/tmpvmkv16s5.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvmkv16s5.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmkv16s5.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvmkv16s5.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfkagttjn.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfkagttjn.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfkagttjn.jl:16\ntest set: Test Failed at /tmp/tmpfkagttjn.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfkagttjn.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfkagttjn.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkagttjn.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp9x2k_ii1.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9x2k_ii1.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpawlp13hc.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpawlp13hc.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    if first[1] == first[2]\n        return first[1] .. strings[2]\
    \ \n    end\n    \n    return first[1] .. strings[2] .. first[3] \nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmxmgp9ul.jl:27\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmxmgp9ul.jl:27\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwesbezcn.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwesbezcn.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwesbezcn.jl:15\ntest set: Test Failed at /tmp/tmpwesbezcn.jl:18\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwesbezcn.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwesbezcn.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwesbezcn.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps2jwavsn.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps2jwavsn.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2jwavsn.jl:16\ntest set: Test Failed at /tmp/tmps2jwavsn.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmps2jwavsn.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2jwavsn.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps2jwavsn.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy809sxn8.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpy809sxn8.jl:9\n\
    \   [3] top-level scope at /tmp/tmpy809sxn8.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy809sxn8.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpy809sxn8.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy809sxn8.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy809sxn8.jl:16\ntest set: Test Failed at /tmp/tmpy809sxn8.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy809sxn8.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy809sxn8.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy809sxn8.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpottl0j3h.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpottl0j3h.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    return join(strings,\
    \ \"\")\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns a string with each letter capitalized.\nusing Test\n\n@testset begin\n\
    \ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t\
    @test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\",\
    \ \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5r9wdz9h.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5r9wdz9h.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3meibxxb.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp3meibxxb.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3meibxxb.jl:14\ntest set: Test Failed at /tmp/tmp3meibxxb.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3meibxxb.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3meibxxb.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3meibxxb.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzavn263p.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzavn263p.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzavn263p.jl:16\ntest set: Test Failed at /tmp/tmpzavn263p.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzavn263p.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzavn263p.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzavn263p.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp40lbc0a6.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp40lbc0a6.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbtujcy07.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbtujcy07.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbtujcy07.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbtujcy07.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0li4dq5d.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp0li4dq5d.jl:9\n\
    \   [3] top-level scope at /tmp/tmp0li4dq5d.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0li4dq5d.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp0li4dq5d.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0li4dq5d.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0li4dq5d.jl:16\ntest set: Test Failed at /tmp/tmp0li4dq5d.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0li4dq5d.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0li4dq5d.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0li4dq5d.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40e8iyno.jl:20\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp40e8iyno.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40e8iyno.jl:18\ntest set: Test Failed at /tmp/tmp40e8iyno.jl:21\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp40e8iyno.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40e8iyno.jl:18\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40e8iyno.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    if length(strings)\
    \ == 1\n        return strings[1]\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpcemot3gs.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcemot3gs.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe5mvf0nt.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpe5mvf0nt.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe5mvf0nt.jl:14\ntest set: Test Failed at /tmp/tmpe5mvf0nt.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe5mvf0nt.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe5mvf0nt.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5mvf0nt.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqcbinnhp.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpqcbinnhp.jl:9\n\
    \   [3] top-level scope at /tmp/tmpqcbinnhp.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqcbinnhp.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpqcbinnhp.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqcbinnhp.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqcbinnhp.jl:16\ntest set: Test Failed at /tmp/tmpqcbinnhp.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqcbinnhp.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqcbinnhp.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqcbinnhp.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2yga33xe.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2yga33xe.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_3bnefq7.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_3bnefq7.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_3bnefq7.jl:14\ntest set: Test Failed at /tmp/tmp_3bnefq7.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_3bnefq7.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_3bnefq7.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_3bnefq7.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\nusing Test\n\n@testset begin\n\n\
    candidate = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpoo9igxqa.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpoo9igxqa.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpesyad0ag.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpesyad0ag.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesyad0ag.jl:16\ntest set: Test Failed at /tmp/tmpesyad0ag.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesyad0ag.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesyad0ag.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpesyad0ag.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpwdej_d9o.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwdej_d9o.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp__drdcb2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp__drdcb2.jl:9\n\
    \   [3] top-level scope at /tmp/tmp__drdcb2.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp__drdcb2.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp__drdcb2.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp__drdcb2.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp__drdcb2.jl:16\ntest set: Test Failed at /tmp/tmp__drdcb2.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp__drdcb2.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp__drdcb2.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp__drdcb2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp98jcyguj.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp98jcyguj.jl:9\n\
    \   [3] top-level scope at /tmp/tmp98jcyguj.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp98jcyguj.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp98jcyguj.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp98jcyguj.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp98jcyguj.jl:16\ntest set: Test Failed at /tmp/tmp98jcyguj.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp98jcyguj.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp98jcyguj.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp98jcyguj.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0br173r4.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0br173r4.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0br173r4.jl:15\ntest set: Test Failed at /tmp/tmp0br173r4.jl:18\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0br173r4.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0br173r4.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0br173r4.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq7ztjr1s.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpq7ztjr1s.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpq7ztjr1s.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpocvsh3ql.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpocvsh3ql.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpocvsh3ql.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocvsh3ql.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxxotlixu.jl:20\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxxotlixu.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxxotlixu.jl:18\ntest set: Test Failed at /tmp/tmpxxotlixu.jl:21\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxxotlixu.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxxotlixu.jl:18\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxxotlixu.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_lnbnaqt.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_lnbnaqt.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_lnbnaqt.jl:14\ntest set: Test Failed at /tmp/tmp_lnbnaqt.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_lnbnaqt.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_lnbnaqt.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_lnbnaqt.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa6etsiu0.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa6etsiu0.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmptfpc31ft.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptfpc31ft.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa7u61jom.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpa7u61jom.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpa7u61jom.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1486g56f.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp1486g56f.jl:9\n\
    \   [3] top-level scope at /tmp/tmp1486g56f.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1486g56f.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp1486g56f.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1486g56f.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1486g56f.jl:16\ntest set: Test Failed at /tmp/tmp1486g56f.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1486g56f.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1486g56f.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1486g56f.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgqm07d6f.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpgqm07d6f.jl:9\n\
    \   [3] top-level scope at /tmp/tmpgqm07d6f.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgqm07d6f.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpgqm07d6f.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgqm07d6f.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgqm07d6f.jl:16\ntest set: Test Failed at /tmp/tmpgqm07d6f.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgqm07d6f.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgqm07d6f.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgqm07d6f.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmu4qpbpg.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmu4qpbpg.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmu4qpbpg.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmu4qpbpg.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    if length(strings)\
    \ == 1\n        return strings[1]\n    \n    strings = strings[2:end]\n    \n\
    \    return strings[1] ++ strings[2] ++ strings[3]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpp0isf0z4.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp0isf0z4.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of strings and returns a vector\
    \ of integers representing the number of times each string appears in the vector.\
    \ For example, if the input vector is [\"a\", \"b\", \"c\", \"a\", \"b\", \"a\"\
    , \"c\"], the output vector should be [1, 1, 2, 1, 1, 2, 1]. Hint: use the built-in\
    \ function count!\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t\
    @test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0vzo6zct.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0vzo6zct.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ps2wv0e.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp1ps2wv0e.jl:9\n\
    \   [3] top-level scope at /tmp/tmp1ps2wv0e.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1ps2wv0e.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp1ps2wv0e.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ps2wv0e.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ps2wv0e.jl:16\ntest set: Test Failed at /tmp/tmp1ps2wv0e.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ps2wv0e.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ps2wv0e.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ps2wv0e.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\n</cell>\n<text>\nThe function concatenate\
    \ is now available to us. Let's try it out on some examples:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpqesu8z48.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqesu8z48.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl7bagy6m.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpl7bagy6m.jl:9\n\
    \   [3] top-level scope at /tmp/tmpl7bagy6m.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl7bagy6m.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpl7bagy6m.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpl7bagy6m.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7bagy6m.jl:16\ntest set: Test Failed at /tmp/tmpl7bagy6m.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpl7bagy6m.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7bagy6m.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7bagy6m.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5h_kxylb.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp5h_kxylb.jl:9\n\
    \   [3] top-level scope at /tmp/tmp5h_kxylb.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5h_kxylb.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp5h_kxylb.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5h_kxylb.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5h_kxylb.jl:16\ntest set: Test Failed at /tmp/tmp5h_kxylb.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5h_kxylb.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5h_kxylb.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5h_kxylb.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8ksm1q3b.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp8ksm1q3b.jl:9\n\
    \   [3] top-level scope at /tmp/tmp8ksm1q3b.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8ksm1q3b.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp8ksm1q3b.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8ksm1q3b.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ksm1q3b.jl:16\ntest set: Test Failed at /tmp/tmp8ksm1q3b.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8ksm1q3b.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ksm1q3b.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ksm1q3b.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwlay6v6o.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwlay6v6o.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp8379zqj.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp8379zqj.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp8379zqj.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8379zqj.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf5nd4y87.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf5nd4y87.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp962tdj83.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp962tdj83.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp962tdj83.jl:14\ntest set: Test Failed at /tmp/tmp962tdj83.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp962tdj83.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp962tdj83.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp962tdj83.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpityo95_r.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpityo95_r.jl:9\n\
    \   [3] top-level scope at /tmp/tmpityo95_r.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpityo95_r.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpityo95_r.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpityo95_r.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpityo95_r.jl:16\ntest set: Test Failed at /tmp/tmpityo95_r.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpityo95_r.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpityo95_r.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpityo95_r.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmposhx3g8p.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmposhx3g8p.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_v0q448y.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_v0q448y.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v0q448y.jl:16\ntest set: Test Failed at /tmp/tmp_v0q448y.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_v0q448y.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v0q448y.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_v0q448y.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    strings = strings[1:end-1]\n    return join(strings,\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcmx2zgt1.jl:19\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"y\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcmx2zgt1.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmx2zgt1.jl:17\ntest set: Test Failed at /tmp/tmpcmx2zgt1.jl:20\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcmx2zgt1.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmx2zgt1.jl:17\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcmx2zgt1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7vdc7i7n.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp7vdc7i7n.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp7vdc7i7n.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp52gp1vti.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp52gp1vti.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp52gp1vti.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmprppnmokd.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprppnmokd.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwgby04dw.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwgby04dw.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwgby04dw.jl:16\ntest set: Test Failed at /tmp/tmpwgby04dw.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwgby04dw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwgby04dw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwgby04dw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpd_xjrvxq.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd_xjrvxq.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8dglt5s6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8dglt5s6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    \n    return\
    \ join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0_nbzdin.jl:21\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"y\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0_nbzdin.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_nbzdin.jl:19\ntest set: Test Failed at /tmp/tmp0_nbzdin.jl:22\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0_nbzdin.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_nbzdin.jl:19\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_nbzdin.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi4ve5gtd.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi4ve5gtd.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4ve5gtd.jl:16\ntest set: Test Failed at /tmp/tmpi4ve5gtd.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpi4ve5gtd.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4ve5gtd.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi4ve5gtd.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.3>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkcrywwfn.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkcrywwfn.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4nzm13zz.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4nzm13zz.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4nzm13zz.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4nzm13zz.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnbx6_uay.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnbx6_uay.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnbx6_uay.jl:16\ntest set: Test Failed at /tmp/tmpnbx6_uay.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wxyz\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnbx6_uay.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnbx6_uay.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnbx6_uay.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgui4_ejs.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgui4_ejs.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxkqnisue.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpxkqnisue.jl:9\n\
    \   [3] top-level scope at /tmp/tmpxkqnisue.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxkqnisue.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpxkqnisue.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxkqnisue.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkqnisue.jl:16\ntest set: Test Failed at /tmp/tmpxkqnisue.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxkqnisue.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkqnisue.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxkqnisue.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    if first[1] == first[2]\n        return strings[1] + strings[2]\n\
    \    end\n    \n    return strings[1] + strings[2] + strings[3]\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp6k0lg_r.jl:27\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp6k0lg_r.jl:27\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn9kqerbs.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpn9kqerbs.jl:9\n\
    \   [3] top-level scope at /tmp/tmpn9kqerbs.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn9kqerbs.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpn9kqerbs.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn9kqerbs.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn9kqerbs.jl:16\ntest set: Test Failed at /tmp/tmpn9kqerbs.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn9kqerbs.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn9kqerbs.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn9kqerbs.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2xew1361.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2xew1361.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoie84gzv.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoie84gzv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoie84gzv.jl:23\ntest set: Test Failed at /tmp/tmpoie84gzv.jl:26\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpoie84gzv.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoie84gzv.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoie84gzv.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv3_xmyyy.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpv3_xmyyy.jl:9\n\
    \   [3] top-level scope at /tmp/tmpv3_xmyyy.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpv3_xmyyy.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpv3_xmyyy.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpv3_xmyyy.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv3_xmyyy.jl:16\ntest set: Test Failed at /tmp/tmpv3_xmyyy.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpv3_xmyyy.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv3_xmyyy.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3_xmyyy.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5re0_eb.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn5re0_eb.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn5re0_eb.jl:16\ntest set: Test Failed at /tmp/tmpn5re0_eb.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wxyz\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn5re0_eb.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn5re0_eb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5re0_eb.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgxaz4mb7.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgxaz4mb7.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp54ypkbaw.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp54ypkbaw.jl:9\n\
    \   [3] top-level scope at /tmp/tmp54ypkbaw.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp54ypkbaw.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp54ypkbaw.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp54ypkbaw.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp54ypkbaw.jl:16\ntest set: Test Failed at /tmp/tmp54ypkbaw.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp54ypkbaw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp54ypkbaw.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54ypkbaw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2tn7u1om.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2tn7u1om.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2tn7u1om.jl:15\ntest set: Test Failed at /tmp/tmp2tn7u1om.jl:18\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2tn7u1om.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2tn7u1om.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2tn7u1om.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpx_a7dj9g.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx_a7dj9g.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpny8vsnhs.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpny8vsnhs.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpny8vsnhs.jl:16\ntest set: Test Failed at /tmp/tmpny8vsnhs.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpny8vsnhs.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpny8vsnhs.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpny8vsnhs.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@test concatenate([\"a\", \"b\", \"c\"]) == \"abc\"\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of strings and returns\
    \ a vector of strings where each string in the original vector is concatenated\
    \ with the string \"-\".\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppo531yvg.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppo531yvg.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpf93sq223.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf93sq223.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppy47fnsk.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmppy47fnsk.jl:9\n\
    \   [3] top-level scope at /tmp/tmppy47fnsk.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppy47fnsk.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmppy47fnsk.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmppy47fnsk.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppy47fnsk.jl:16\ntest set: Test Failed at /tmp/tmppy47fnsk.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmppy47fnsk.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppy47fnsk.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppy47fnsk.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp915nn4x3.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp915nn4x3.jl:9\n\
    \   [3] top-level scope at /tmp/tmp915nn4x3.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp915nn4x3.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp915nn4x3.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp915nn4x3.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp915nn4x3.jl:16\ntest set: Test Failed at /tmp/tmp915nn4x3.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp915nn4x3.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp915nn4x3.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp915nn4x3.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    return join(strings,\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp9tijubr7.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9tijubr7.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp68r5_fkp.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp68r5_fkp.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp68r5_fkp.jl:16\ntest set: Test Failed at /tmp/tmp68r5_fkp.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp68r5_fkp.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp68r5_fkp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp68r5_fkp.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsesf3tzw.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsesf3tzw.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsesf3tzw.jl:16\ntest set: Test Failed at /tmp/tmpsesf3tzw.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsesf3tzw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsesf3tzw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsesf3tzw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxa7ukpxk.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpxa7ukpxk.jl:9\n\
    \   [3] top-level scope at /tmp/tmpxa7ukpxk.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxa7ukpxk.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpxa7ukpxk.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxa7ukpxk.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxa7ukpxk.jl:16\ntest set: Test Failed at /tmp/tmpxa7ukpxk.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxa7ukpxk.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxa7ukpxk.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxa7ukpxk.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8lb9h7v5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp8lb9h7v5.jl:9\n\
    \   [3] top-level scope at /tmp/tmp8lb9h7v5.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8lb9h7v5.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp8lb9h7v5.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8lb9h7v5.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lb9h7v5.jl:16\ntest set: Test Failed at /tmp/tmp8lb9h7v5.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8lb9h7v5.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lb9h7v5.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lb9h7v5.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm7p0r04t.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm7p0r04t.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7p0r04t.jl:16\ntest set: Test Failed at /tmp/tmpm7p0r04t.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpm7p0r04t.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7p0r04t.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7p0r04t.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzcki8ely.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpzcki8ely.jl:9\n\
    \   [3] top-level scope at /tmp/tmpzcki8ely.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpzcki8ely.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpzcki8ely.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzcki8ely.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzcki8ely.jl:16\ntest set: Test Failed at /tmp/tmpzcki8ely.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzcki8ely.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzcki8ely.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzcki8ely.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgrwfn8yb.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpgrwfn8yb.jl:9\n\
    \   [3] top-level scope at /tmp/tmpgrwfn8yb.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgrwfn8yb.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpgrwfn8yb.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgrwfn8yb.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgrwfn8yb.jl:16\ntest set: Test Failed at /tmp/tmpgrwfn8yb.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgrwfn8yb.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgrwfn8yb.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgrwfn8yb.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpllky7cjk.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpllky7cjk.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv1hi519b.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpv1hi519b.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv1hi519b.jl:14\ntest set: Test Failed at /tmp/tmpv1hi519b.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpv1hi519b.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv1hi519b.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv1hi519b.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpoydqu5rg.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpoydqu5rg.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpoydqu5rg.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    first = strings[1]\n\
    \    \n    if first == ''\n        return strings[2]\n    \n    last = strings[end]\n\
    \    \n    if last == ''\n        return strings[1] + strings[2]\n    \n    return\
    \ first + last\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpx5j4113_.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx5j4113_.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphgfqd0uy.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmphgfqd0uy.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmphgfqd0uy.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpf6ebwqvn.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf6ebwqvn.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdnij8i90.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdnij8i90.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdnij8i90.jl:23\ntest set: Test Failed at /tmp/tmpdnij8i90.jl:26\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdnij8i90.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdnij8i90.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdnij8i90.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjyfp35lz.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpjyfp35lz.jl:9\n\
    \   [3] top-level scope at /tmp/tmpjyfp35lz.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjyfp35lz.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpjyfp35lz.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjyfp35lz.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyfp35lz.jl:16\ntest set: Test Failed at /tmp/tmpjyfp35lz.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjyfp35lz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyfp35lz.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjyfp35lz.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzzv3okwu.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzzv3okwu.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzv3okwu.jl:15\ntest set: Test Failed at /tmp/tmpzzv3okwu.jl:18\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzv3okwu.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzv3okwu.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzv3okwu.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpitb5774_.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpitb5774_.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg8p41s4d.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpg8p41s4d.jl:9\n\
    \   [3] top-level scope at /tmp/tmpg8p41s4d.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg8p41s4d.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpg8p41s4d.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg8p41s4d.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg8p41s4d.jl:16\ntest set: Test Failed at /tmp/tmpg8p41s4d.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg8p41s4d.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg8p41s4d.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg8p41s4d.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsjnm3r89.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsjnm3r89.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplzddb1qu.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplzddb1qu.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzddb1qu.jl:16\ntest set: Test Failed at /tmp/tmplzddb1qu.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmplzddb1qu.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzddb1qu.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzddb1qu.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppmpbywxi.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmppmpbywxi.jl:9\n\
    \   [3] top-level scope at /tmp/tmppmpbywxi.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppmpbywxi.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmppmpbywxi.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmppmpbywxi.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppmpbywxi.jl:16\ntest set: Test Failed at /tmp/tmppmpbywxi.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmppmpbywxi.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppmpbywxi.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppmpbywxi.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9fsdy0v0.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp9fsdy0v0.jl:9\n\
    \   [3] top-level scope at /tmp/tmp9fsdy0v0.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9fsdy0v0.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp9fsdy0v0.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9fsdy0v0.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9fsdy0v0.jl:16\ntest set: Test Failed at /tmp/tmp9fsdy0v0.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9fsdy0v0.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9fsdy0v0.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9fsdy0v0.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpo2hzmbs2.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo2hzmbs2.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl_p54q0x.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpl_p54q0x.jl:9\n\
    \   [3] top-level scope at /tmp/tmpl_p54q0x.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl_p54q0x.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpl_p54q0x.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpl_p54q0x.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl_p54q0x.jl:16\ntest set: Test Failed at /tmp/tmpl_p54q0x.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpl_p54q0x.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl_p54q0x.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl_p54q0x.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp747bd54g.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n   Evaluated: \"kwxyz\" == \"\
    xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp747bd54g.jl:18\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp747bd54g.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp747bd54g.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg0wbvgl8.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg0wbvgl8.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg0wbvgl8.jl:16\ntest set: Test Failed at /tmp/tmpg0wbvgl8.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg0wbvgl8.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg0wbvgl8.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg0wbvgl8.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpahb1z92j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpahb1z92j.jl:9\n\
    \   [3] top-level scope at /tmp/tmpahb1z92j.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpahb1z92j.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpahb1z92j.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpahb1z92j.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpahb1z92j.jl:16\ntest set: Test Failed at /tmp/tmpahb1z92j.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpahb1z92j.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpahb1z92j.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahb1z92j.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpeyoxxnxr.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeyoxxnxr.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    last = strings[end]\n    \n    if length(last) == 0\n    \
    \    return strings[end]\n    end\n    \n    strings[end] = last[1:end]\n    \n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp39wel4uv.jl:31\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp39wel4uv.jl:31\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgc_kqt_k.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgc_kqt_k.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0x2fnntk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp0x2fnntk.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp0x2fnntk.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy4s643fq.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy4s643fq.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy4s643fq.jl:16\ntest set: Test Failed at /tmp/tmpy4s643fq.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy4s643fq.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy4s643fq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy4s643fq.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp98i8fwul.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp98i8fwul.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp98i8fwul.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2fjvcgba.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2fjvcgba.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_9a5uy4n.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_9a5uy4n.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_9a5uy4n.jl:14\ntest set: Test Failed at /tmp/tmp_9a5uy4n.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_9a5uy4n.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_9a5uy4n.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_9a5uy4n.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ypbss_w.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp7ypbss_w.jl:9\n\
    \   [3] top-level scope at /tmp/tmp7ypbss_w.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7ypbss_w.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp7ypbss_w.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7ypbss_w.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ypbss_w.jl:16\ntest set: Test Failed at /tmp/tmp7ypbss_w.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7ypbss_w.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ypbss_w.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ypbss_w.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6z6qxb67.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6z6qxb67.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6z6qxb67.jl:16\ntest set: Test Failed at /tmp/tmp6z6qxb67.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6z6qxb67.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6z6qxb67.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6z6qxb67.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdvi7s67d.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdvi7s67d.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[end-1:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp84uxdu2i.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [-1:0]\n  Stacktrace:\n   [1] throw_boundserror(::Array{String,1},\
    \ ::Tuple{UnitRange{Int64}}) at ./abstractarray.jl:537\n   [2] checkbounds at\
    \ ./abstractarray.jl:502 [inlined]\n   [3] getindex at ./array.jl:794 [inlined]\n\
    \   [4] concatenate(::Array{String,1}) at /tmp/tmp84uxdu2i.jl:9\n   [5] top-level\
    \ scope at /tmp/tmp84uxdu2i.jl:17\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp84uxdu2i.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp84uxdu2i.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp84uxdu2i.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp84uxdu2i.jl:16\ntest set: Test Failed at /tmp/tmp84uxdu2i.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp84uxdu2i.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp84uxdu2i.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp84uxdu2i.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a vector of strings and returns a vector\
    \ of strings where each string is the concatenation of all the strings in the\
    \ original vector. For example, if the input vector is [\"a\", \"b\", \"c\"],\
    \ the output vector should be [\"abc\"].\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7eq2is6g.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7eq2is6g.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxhsugbhw.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpxhsugbhw.jl:9\n\
    \   [3] top-level scope at /tmp/tmpxhsugbhw.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxhsugbhw.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpxhsugbhw.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxhsugbhw.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxhsugbhw.jl:16\ntest set: Test Failed at /tmp/tmpxhsugbhw.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxhsugbhw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxhsugbhw.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhsugbhw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpui57hs9b.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpui57hs9b.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpui57hs9b.jl:16\ntest set: Test Failed at /tmp/tmpui57hs9b.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpui57hs9b.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpui57hs9b.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpui57hs9b.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8n6m5r37.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8n6m5r37.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4yfku3fz.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4yfku3fz.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4yfku3fz.jl:23\ntest set: Test Failed at /tmp/tmp4yfku3fz.jl:26\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4yfku3fz.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4yfku3fz.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4yfku3fz.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmppfj18p0k.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppfj18p0k.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp783c20cz.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp783c20cz.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp783c20cz.jl:16\ntest set: Test Failed at /tmp/tmp783c20cz.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp783c20cz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp783c20cz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp783c20cz.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[:]\n\
    \    \n    if \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp5ncr5h43.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5ncr5h43.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2vqyoxr8.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2vqyoxr8.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2vqyoxr8.jl:14\ntest set: Test Failed at /tmp/tmp2vqyoxr8.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2vqyoxr8.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2vqyoxr8.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2vqyoxr8.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpybuppijd.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpybuppijd.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[end-1:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0_0e7hyj.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [-1:0]\n  Stacktrace:\n   [1] throw_boundserror(::Array{String,1},\
    \ ::Tuple{UnitRange{Int64}}) at ./abstractarray.jl:537\n   [2] checkbounds at\
    \ ./abstractarray.jl:502 [inlined]\n   [3] getindex at ./array.jl:794 [inlined]\n\
    \   [4] concatenate(::Array{String,1}) at /tmp/tmp0_0e7hyj.jl:9\n   [5] top-level\
    \ scope at /tmp/tmp0_0e7hyj.jl:17\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp0_0e7hyj.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp0_0e7hyj.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0_0e7hyj.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_0e7hyj.jl:16\ntest set: Test Failed at /tmp/tmp0_0e7hyj.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0_0e7hyj.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_0e7hyj.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_0e7hyj.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpy5e_pnd_.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy5e_pnd_.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8bv3bfpu.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp8bv3bfpu.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp8bv3bfpu.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeihjnu_o.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeihjnu_o.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ptu0jlk.jl:17\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1ptu0jlk.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ptu0jlk.jl:15\ntest set: Test Failed at /tmp/tmp1ptu0jlk.jl:18\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ptu0jlk.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ptu0jlk.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ptu0jlk.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps2ol5w0h.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps2ol5w0h.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2ol5w0h.jl:16\ntest set: Test Failed at /tmp/tmps2ol5w0h.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmps2ol5w0h.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2ol5w0h.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps2ol5w0h.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, '') \nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpd0d0widu.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd0d0widu.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps3_dwtmp.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps3_dwtmp.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps3_dwtmp.jl:23\ntest set: Test Failed at /tmp/tmps3_dwtmp.jl:26\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmps3_dwtmp.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps3_dwtmp.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps3_dwtmp.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzrwqsxx8.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzrwqsxx8.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8z3nf10v.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp8z3nf10v.jl:9\n\
    \   [3] top-level scope at /tmp/tmp8z3nf10v.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8z3nf10v.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp8z3nf10v.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8z3nf10v.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8z3nf10v.jl:16\ntest set: Test Failed at /tmp/tmp8z3nf10v.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8z3nf10v.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8z3nf10v.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8z3nf10v.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp755fhgvf.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp755fhgvf.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd86o6mrr.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpd86o6mrr.jl:9\n\
    \   [3] top-level scope at /tmp/tmpd86o6mrr.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpd86o6mrr.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpd86o6mrr.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd86o6mrr.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd86o6mrr.jl:16\ntest set: Test Failed at /tmp/tmpd86o6mrr.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd86o6mrr.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd86o6mrr.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd86o6mrr.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptix8f9wh.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmptix8f9wh.jl:9\n\
    \   [3] top-level scope at /tmp/tmptix8f9wh.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmptix8f9wh.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmptix8f9wh.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmptix8f9wh.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptix8f9wh.jl:16\ntest set: Test Failed at /tmp/tmptix8f9wh.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmptix8f9wh.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptix8f9wh.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptix8f9wh.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpes3erhvk.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpes3erhvk.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjgz6r5e_.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpjgz6r5e_.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpjgz6r5e_.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd4h8ob45.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpd4h8ob45.jl:9\n\
    \   [3] top-level scope at /tmp/tmpd4h8ob45.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpd4h8ob45.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpd4h8ob45.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd4h8ob45.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd4h8ob45.jl:16\ntest set: Test Failed at /tmp/tmpd4h8ob45.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd4h8ob45.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd4h8ob45.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4h8ob45.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsk_xzih0.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsk_xzih0.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsk_xzih0.jl:16\ntest set: Test Failed at /tmp/tmpsk_xzih0.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsk_xzih0.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsk_xzih0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsk_xzih0.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of strings and returns a vector\
    \ of strings where each string is the concatenation of all the strings in the\
    \ original vector.\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ew475po.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ew475po.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = sort(strings)\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdt5azulx.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdt5azulx.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdt5azulx.jl:16\ntest set: Test Failed at /tmp/tmpdt5azulx.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"wxyz\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdt5azulx.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdt5azulx.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdt5azulx.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    strings = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo190a0wp.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpo190a0wp.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpo190a0wp.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkr5nqait.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkr5nqait.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkr5nqait.jl:16\ntest set: Test Failed at /tmp/tmpkr5nqait.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkr5nqait.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkr5nqait.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkr5nqait.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp77whlit2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp77whlit2.jl:9\n\
    \   [3] top-level scope at /tmp/tmp77whlit2.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp77whlit2.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp77whlit2.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp77whlit2.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77whlit2.jl:16\ntest set: Test Failed at /tmp/tmp77whlit2.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp77whlit2.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77whlit2.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp77whlit2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5b_km2i_.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmp5b_km2i_.jl:9\n\
    \   [3] top-level scope at /tmp/tmp5b_km2i_.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5b_km2i_.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmp5b_km2i_.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5b_km2i_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5b_km2i_.jl:16\ntest set: Test Failed at /tmp/tmp5b_km2i_.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5b_km2i_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5b_km2i_.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5b_km2i_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt_qyfo38.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpt_qyfo38.jl:9\n\
    \   [3] top-level scope at /tmp/tmpt_qyfo38.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpt_qyfo38.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpt_qyfo38.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpt_qyfo38.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_qyfo38.jl:16\ntest set: Test Failed at /tmp/tmpt_qyfo38.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpt_qyfo38.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_qyfo38.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt_qyfo38.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmr_jshm4.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmr_jshm4.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = ''\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpkf1txy9e.jl:9\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkf1txy9e.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplyvz6z4_.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmplyvz6z4_.jl:9\n\
    \   [3] top-level scope at /tmp/tmplyvz6z4_.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplyvz6z4_.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmplyvz6z4_.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmplyvz6z4_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplyvz6z4_.jl:16\ntest set: Test Failed at /tmp/tmplyvz6z4_.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmplyvz6z4_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplyvz6z4_.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplyvz6z4_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2n8twwia.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2n8twwia.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpla2apeze.jl:16\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"\" == \"xyz\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpla2apeze.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpla2apeze.jl:14\ntest set: Test Failed at /tmp/tmpla2apeze.jl:17\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpla2apeze.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpla2apeze.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpla2apeze.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwgouganh.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpwgouganh.jl:9\n\
    \   [3] top-level scope at /tmp/tmpwgouganh.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwgouganh.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpwgouganh.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwgouganh.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwgouganh.jl:16\ntest set: Test Failed at /tmp/tmpwgouganh.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwgouganh.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwgouganh.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwgouganh.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmposf4586u.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmposf4586u.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxnimhpl5.jl:25\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"z\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxnimhpl5.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxnimhpl5.jl:23\ntest set: Test Failed at /tmp/tmpxnimhpl5.jl:26\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"zwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxnimhpl5.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxnimhpl5.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxnimhpl5.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    return\
    \ join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = concatenate;\n\
    \t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"x\", \"y\"\
    , \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"])\
    \ == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp95mlmx_2.jl:23\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp95mlmx_2.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95mlmx_2.jl:21\ntest set: Test Failed at /tmp/tmp95mlmx_2.jl:24\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmp95mlmx_2.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95mlmx_2.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp95mlmx_2.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
    \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppwhywhjg.jl:18\n  Expression: candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\"\n   Evaluated: \"yz\" == \"xyz\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppwhywhjg.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppwhywhjg.jl:16\ntest set: Test Failed at /tmp/tmppwhywhjg.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"yzwk\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmppwhywhjg.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppwhywhjg.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     2      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwhywhjg.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([])) ==\
    \ \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx5uj8tg_.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{String}([])) == \"\"\n  BoundsError: attempt to\
    \ access 0-element Array{String,1} at index [0]\n  Stacktrace:\n   [1] setindex!\
    \ at ./array.jl:826 [inlined]\n   [2] concatenate(::Array{String,1}) at /tmp/tmpx5uj8tg_.jl:9\n\
    \   [3] top-level scope at /tmp/tmpx5uj8tg_.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx5uj8tg_.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpx5uj8tg_.jl:18\n  Expression: candidate([\"x\", \"y\", \"z\"]) == \"\
    xyz\"\n   Evaluated: \"xy\" == \"xyz\"\nStacktrace:\n [1] top-level scope at /tmp/tmpx5uj8tg_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5uj8tg_.jl:16\ntest set: Test Failed at /tmp/tmpx5uj8tg_.jl:19\n\
    \  Expression: candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\"\n \
    \  Evaluated: \"xyzw\" == \"xyzwk\"\nStacktrace:\n [1] top-level scope at /tmp/tmpx5uj8tg_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5uj8tg_.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      1      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5uj8tg_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
    \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction\
    \ concatenate(strings::Vector{String})::String \n    strings = strings[:]\n  \
    \  return join(strings, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = concatenate;\n\t@test(candidate(Vector{String}([])) == \"\")\n\t@test(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"x\", \"y\", \"z\", \"w\"\
    , \"k\"]) == \"xyzwk\")\nend\n"
  stdout: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  stderr: ''
  exit_code: 0
  status: OK

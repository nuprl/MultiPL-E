name: HumanEval_77_iscube
language: julia
results:
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpalrn49pi.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpalrn49pi.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpke4onyp_.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpke4onyp_.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube only works with positive integers\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqayefmqp.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqayefmqp.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi333rwki.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpi333rwki.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppzts782h.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmppzts782h.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp2gfx_l7.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpp2gfx_l7.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvuz1stht.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvuz1stht.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt0fqblm3.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt0fqblm3.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8ffvdnpx.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ffvdnpx.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_m6_e5_d.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_m6_e5_d.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjkow60dw.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpjkow60dw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a==1 \n        then\
    \ return true\n    else if a==2 \n        then return true\n    else if a==3 \n\
    \        then return true\n    else if a==4 \n        then return true\n    else\
    \ if a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyxui2h92.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpyxui2h92.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvm12tl3a.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvm12tl3a.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</code>\n<|/ a\
    \ tags=julia |>\n<| c |>\nThanks for your answer! I edited my question to make\
    \ it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ that uses `if` statements.\n<|/ c |>\n<| c |>\nThanks for your answer! I edited\
    \ my question to make it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a solution that uses `if` statements.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer! I edited my question to make it more clear.\n<|/ c |>\n<| a |>\n\
    I believe that your problem can be solved using Julia's built-in function Base.promote_rules.\n\
    <code>\njulia> Base.promote_rules(::Type{Int}, ::Type{Int64}) = Int64\npromote_rules\
    \ (generic function with 1 method)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt6s3atsc.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpt6s3atsc.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpagjbn13p.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpagjbn13p.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfhpnn0bn.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpfhpnn0bn.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpphx7_q1a.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpphx7_q1a.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc97hvb18.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpc97hvb18.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        if a==1 \n    \
    \        then return true\n        else \n            if a==2 \n             \
    \   then return true\n            else \n                if a==3 \n          \
    \          then return true\n                else \n                    if a==4\
    \ \n                        then return true\n                    else \n    \
    \                    if a==5 \n                            then return true\n\
    \                        else \n                            if a==6 \n       \
    \                         then return true\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return true\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a==10 \n                                           \
    \     then return true\n                                            else \n  \
    \                                              if a==11 \n                   \
    \                                 then return true\n                         \
    \                       else \n                                              \
    \      if a==12 \n                                                        then\
    \ return true\n                                                    else \n   \
    \                                                     if a==13 \n            \
    \                                                then return true\n          \
    \                                              else \n                       \
    \                                     if a==14 \n                            \
    \                                    then return true\n                      \
    \                                      else \n                               \
    \                                 if a==15 \n                                \
    \                                    then return true\n                      \
    \                                              else \n                       \
    \                                 if a==16 \n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==17 \n                                        \
    \                            then return true\n                              \
    \                                      else \n                               \
    \                         if a==18 \n                                        \
    \                    then return true\n                                      \
    \                      else \n                                               \
    \                 if a==19 \n                                                \
    \                    then return true\n                                      \
    \                              else \n                                       \
    \                 if a==20 \n                                                \
    \            then return true\n                                              \
    \              else \n                                                       \
    \         if a==21 \n                                                        \
    \            then return true\n                                              \
    \                      else \n                                               \
    \         if a==22 \n                                                        \
    \    then return true\n                                                      \
    \      else \n                                                               \
    \ if a==23 \n                                                                \
    \    then return true\n                                                      \
    \              else \n                                                       \
    \ if a==24 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==25 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==26 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==27 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==28 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==29 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==30 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==33 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==34 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==35 \n                                              \
    \                      then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcpxpfjya.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpcpxpfjya.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpscnub93l.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpscnub93l.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else \n        return iscube(a-1)\
    \ or iscube(a*a)\nend\n</cell>\n<code language=julia-1.5>\niscube(10)\n</cell>\n\
    <code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\niscube(64)\n\
    </cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"or\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc4jnywwz.jl:17\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpc4jnywwz.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpiu_bnkvl.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpiu_bnkvl.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp84sobt7e.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp84sobt7e.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else \n        return iscube(a-1)\
    \ or iscube(a*a) or iscube(a*a*a)\nend\n</cell>\n<code language=julia-1.5>\niscube(1)\n\
    </cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\
    \t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"or\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphgbe9ddt.jl:17\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphgbe9ddt.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy28_72px.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy28_72px.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else if a == 1 \n        return true\n\
    \    else if a == 2 \n        return true\n    else if a == 3 \n        return\
    \ true\n    else if a == 4 \n        return true\n    else if a == 5 \n      \
    \  return true\n    else if a == 6 \n        return true\n    else if a == 7 \n\
    \        return true\n    else if a == 8 \n        return true\n    else if a\
    \ == 9 \n        return true\n    else if a == 10 \n        return true\n    else\
    \ if a == 11 \n        return true\n    else if a == 12 \n        return true\n\
    \    else if a == 13 \n        return true\n    else if a == 14 \n        return\
    \ true\n    else if a == 15 \n        return true\n    else if a == 16 \n    \
    \    return true\n    else if a == 17 \n        return true\n    else if a ==\
    \ 18 \n        return true\n    else if a == 19 \n        return true\n    else\
    \ if a == 20 \n        return true\n    else if a == 21 \n        return true\n\
    \    else if a == 22 \n        return true\n    else if a == 23 \n        return\
    \ true\n    else if a == 24 \n        return true\n    else if a == 25 \n    \
    \    return true\n    else if a == 26 \n        return true\n    else if a ==\
    \ 27 \n        return true\n    else if a == 28 \n        return true\n    else\
    \ if a == 29 \n        return true\n    else if a == 30 \n        return true\n\
    \    else if a == 31 \n        return true\n    else if a == 32 \n        return\
    \ true\n    else if a == 33 \n        return true\n    else if a == 34 \n    \
    \    return true\n    else if a == 35 \n        return true\n    else if a ==\
    \ 36 \n        return true\n    else if a == 37 \n        return true\n    else\
    \ if a == 38 \n        return true\n    else if a == 39 \n        return true\n\
    \    else if a == 40 \n        return true\n    else if a == 41 \n        return\
    \ true\n    else if a == 42 \n        return true\n    else if a == 43 \n    \
    \    return true\n    else if a == 44 \n        return true\n    else if a ==\
    \ 45 \n        return true\n    else if a == 46 \n        return true\n    else\
    \ if a == 47 \n        return true\n    else if a == 48 \n        return true\n\
    \    else if a == 49 \n        return true\n    else if a == 50 \n        return\
    \ true\n    else if a == 51 \n        return true\n    else if a == 52 \n    \
    \    return true\n    else if a == 53 \n        return true\n    else if a ==\
    \ 54 \n        return true\n    else if a == 55\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp393nikpw.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp393nikpw.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvr211g46.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvr211g46.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphxggok26.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphxggok26.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpli_6lfab.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpli_6lfab.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfdll98cc.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpfdll98cc.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_65rbw46.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_65rbw46.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2dsjmii9.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp2dsjmii9.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpitfwjype.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpitfwjype.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnhfsbtcv.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnhfsbtcv.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else return False\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert iscube(2) == true\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an integer a and returns True \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    iscube(2) ==> True\n    iscube(-1) ==> True\n   \
    \ iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzyln4j2m.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpzyln4j2m.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpchmsh8q_.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpchmsh8q_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == -1 \n        then return true\n    else if a ==\
    \ -2 \n        then return true\n    else if a == -3 \n        then return true\n\
    \    else if a == -4 \n        then return true\n    else if a == -5 \n      \
    \  then return true\n    else if a == -6 \n        then return true\n    else\
    \ if a == -7 \n        then return true\n    else if a == -8 \n        then return\
    \ true\n    else if a == -9 \n        then return true\n    else if a == 10 \n\
    \        then return true\n    else if a == 11 \n        then return true\n  \
    \  else if a == 12 \n        then return true\n    else if a == 13 \n        then\
    \ return true\n    else if a == 14 \n        then return true\n    else if a ==\
    \ 15 \n        then return true\n    else if a == 16 \n        then return true\n\
    \    else if a == 17 \n        then return true\n    else if a == 18 \n      \
    \  then return true\n    else if a == 19 \n        then return true\n    else\
    \ if a == 20 \n        then return true\n    else if a == 21 \n        then return\
    \ true\n    else if a == 22 \n        then return true\n    else if a == 23 \n\
    \        then return true\n    else if a == 24 \n        then return true\n  \
    \  else if a == 25 \n        then return true\n    else if a == 26 \n        then\
    \ return true\n    else if a == 27 \n        then return true\n    else if a ==\
    \ 28 \n        then return true\n    else if a == 29 \n        then return true\n\
    \    else if a == 30 \n        then return true\n    else if a == 31 \n      \
    \  then return true\n    else if a == 32 \n        then return true\n    else\
    \ if a == 33 \n        then return true\n    else if a == 34 \n        then return\
    \ true\n    else if a == 35 \n        then return true\n    else if a == 36 \n\
    \        then return true\n    else if a == 37 \n        then return true\n  \
    \  else if a == 38 \n        then return true\n    else if a == 39 \n        then\
    \ return true\n    else if a == 40 \n        then return true\n    else if a ==\
    \ 41 \n        then return true\n    else if a == 42 \n        then return true\n\
    \    else if a == 43 \n        then return true\n    else if a == 44 \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpugpsc_r3.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpugpsc_r3.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%3 != 0 \n        then\
    \ return false\n    else \n        return iscube(a/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns a vector\
    \ of integers \nwhere each element is the product of all the integers in the original\
    \ vector. \nExamples:\n    product([1,2,3]) ==> 6\n    product([1,3,5]) ==> 15\n\
    \    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp94dtal7v.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp94dtal7v.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%4 == 0\n        then\
    \ return true\n    else if a%8 == 0\n        then return true\n    else if a%16\
    \ == 0\n        then return true\n    else if a%32 == 0\n        then return true\n\
    \    else if a%64 == 0\n        then return true\n    else return false\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert iscube(1) == true\n@assert iscube(2)\
    \ == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n@assert iscube(0)\
    \ == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an integer a and returns True \n    if this ingeger is a\
    \ perfect power of some integer number.\n    Note: you may assume the input is\
    \ always valid.\n    Examples:\n    isperfect(1) ==> True\n    isperfect(2) ==>\
    \ True\n    isperfect(3) ==> True\n    isperfect(4) ==> False\n    isperfect(5)\
    \ ==> False\n    isperfect(6) ==> False\n    isperfect(7) ==> False\n    isperfect(8)\
    \ ==> False\n    isperfect(9) ==> False\n    isperfect(10) ==> False\n    isperfect(11)\
    \ ==> False\n    isperfect(12) ==> False\n    isperfect(13) ==> False\n    isperfect(14)\
    \ ==> False\n    isperfect(15) ==> False\n    isperfect(16) ==> False\n    isperfect(17)\
    \ ==> False\n    isperfect(18) ==> False\n    isperfect(19) ==> False\n    isperfect(20)\
    \ ==> False\n    isperfect(21) ==> False\n    isperfect(22) ==> False\n    isperfect(23)\
    \ ==> False\n    isperfect(24) ==> False\n    isperfect(25) ==> False\n    isperfect(26)\
    \ ==> False\n    isperfect(27) ==> False\n    isperfect(28) ==> False\n    isperfect(29)\
    \ ==> False\n    isperfect(30) ==> False\n    isperfect(31) ==> False\n    isperfect(32)\
    \ ==> False\n    isperfect(33) ==> False\n    isperfect(34) ==> False\n    isperfect(35)\
    \ ==> False\n    isperfect(36) ==> False\n    isperfect(37) ==> False\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcnpcy9je.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpcnpcy9je.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo3d0_q2o.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpo3d0_q2o.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_pb1wga_.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_pb1wga_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuk3bhe9w.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpuk3bhe9w.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</code>\n<|/ a\
    \ tags=julia,if-statement |>\n<| a |>\nIn Julia 1.3 you can use the ternary operator\
    \ ?. to write an if-else statement:\n<code>\njulia> iscube(x::Int64) = x == 0\
    \ || x == 1 ? true : false\niscube (generic function with 1 method)\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4axvt05z.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp4axvt05z.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv0hacbz5.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv0hacbz5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else \n        then return false\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Write a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9z5cc162.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp9z5cc162.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==-1 \n        then return true\n    else if a==2 \n    \
    \    then return true\n    else if a==3 \n        then return true\n    else if\
    \ a==4 \n        then return true\n    else if a==5 \n        then return true\n\
    \    else if a==6 \n        then return true\n    else if a==7 \n        then\
    \ return true\n    else if a==8 \n        then return true\n    else if a==9 \n\
    \        then return true\n    else if a==10 \n        then return true\n    else\
    \ if a==11 \n        then return true\n    else if a==12 \n        then return\
    \ true\n    else if a==13 \n        then return true\n    else if a==14 \n   \
    \     then return true\n    else if a==15 \n        then return true\n    else\
    \ if a==16 \n        then return true\n    else if a==17 \n        then return\
    \ true\n    else if a==18 \n        then return true\n    else if a==19 \n   \
    \     then return true\n    else if a==20 \n        then return true\n    else\
    \ if a==21 \n        then return true\n    else if a==22 \n        then return\
    \ true\n    else if a==23 \n        then return true\n    else if a==24 \n   \
    \     then return true\n    else if a==25 \n        then return true\n    else\
    \ if a==26 \n        then return true\n    else if a==27 \n        then return\
    \ true\n    else if a==28 \n        then return true\n    else if a==29 \n   \
    \     then return true\n    else if a==30 \n        then return true\n    else\
    \ if a==31 \n        then return true\n    else if a==32 \n        then return\
    \ true\n    else if a==33 \n        then return true\n    else if a==34 \n   \
    \     then return true\n    else if a==35 \n        then return true\n    else\
    \ if a==36 \n        then return true\n    else if a==37 \n        then return\
    \ true\n    else if a==38 \n        then return true\n    else if a==39 \n   \
    \     then return true\n    else if a==40 \n        then return true\n    else\
    \ if a==41 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoqo00zah.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpoqo00zah.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz9tamz1i.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpz9tamz1i.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp28x2w5u_.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp28x2w5u_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv0vas5sc.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv0vas5sc.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0nn6hm52.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0nn6hm52.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false \n    else \n        return iscube(a*a)\
    \ == true \nend\n</cell>\n<code language=julia-1.5>\niscube(1)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\niscube(-1)\n\
    </cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a square of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    issquare(2) ==> True\n    issquare(4)\
    \ ==> False\n    issquare(-1) ==> True\n    issquare(64) ==> True\n    issquare(0)\
    \ ==> True\n    issquare(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp738916fx.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp738916fx.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7hevifu1.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7hevifu1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2730f43o.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp2730f43o.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0iec1aph.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp0iec1aph.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphjk49_vn.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphjk49_vn.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%3 ==0 \n        then\
    \ return true\n    else return false\nend\n</cell>\n<code language=julia-1.0>\n\
    iscube(1)\n</cell>\n<code language=julia-1.0>\niscube(2)\n</cell>\n<code language=julia-1.0>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.0>\niscube(64)\n</cell>\n<code language=julia-1.0>\n\
    iscube(0)\n</cell>\n<code language=julia-1.0>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a square of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    issquare(2) ==> True\n    issquare(4)\
    \ ==> False\n    issquare(-1) ==> True\n    issquare(64) ==> True\n    issquare(0)\
    \ ==> True\n    issquare(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt2e979dn.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpt2e979dn.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprcfzb5so.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmprcfzb5so.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphyllhu9i.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphyllhu9i.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqcx1stmi.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqcx1stmi.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else \n        if a==1 \n    \
    \        then return True\n        else \n            if a==2 \n             \
    \   then return True\n            else \n                if a==3 \n          \
    \          then return True\n                else \n                    if a==4\
    \ \n                        then return True\n                    else \n    \
    \                    if a==5 \n                            then return True\n\
    \                        else \n                            if a==6 \n       \
    \                         then return True\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return True\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ True\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ True\n                                        else return False\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis does not answer the question. The question asks\
    \ for a function that takes an integer and returns a boolean.\n<|/ c |>\n<| c\
    \ |>\nThe question asks for a function that takes an integer and returns a boolean.\n\
    <|/ c |>\n<| c |>\nThe question asks for a function that takes an integer and\
    \ returns a boolean.\n<|/ c |>\n<| c |>\nThe question asks for a function that\
    \ takes an integer and returns a boolean.\n<|/ c |>\n<| c |>\nThe question asks\
    \ for a function that takes an integer and returns a boolean.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp92yl1yhb.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp92yl1yhb.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp03lz9rit.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp03lz9rit.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplbg0b80u.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmplbg0b80u.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu2_ng36e.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpu2_ng36e.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr0icrbf9.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpr0icrbf9.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpno30h2qt.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpno30h2qt.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpptig1pl5.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpptig1pl5.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5m0h_60t.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp5m0h_60t.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True\n    if a==1 then return True\n    if a==2 then\
    \ return True\n    if a==3 then return True\n    if a==4 then return True\n  \
    \  if a==5 then return True\n    if a==6 then return True\n    if a==7 then return\
    \ True\n    if a==8 then return True\n    if a==9 then return True\n    if a==10\
    \ then return True\n    if a==11 then return True\n    if a==12 then return True\n\
    \    if a==13 then return True\n    if a==14 then return True\n    if a==15 then\
    \ return True\n    if a==16 then return True\n    if a==17 then return True\n\
    \    if a==18 then return True\n    if a==19 then return True\n    if a==20 then\
    \ return True\n    if a==21 then return True\n    if a==22 then return True\n\
    \    if a==23 then return True\n    if a==24 then return True\n    if a==25 then\
    \ return True\n    if a==26 then return True\n    if a==27 then return True\n\
    \    if a==28 then return True\n    if a==29 then return True\n    if a==30 then\
    \ return True\n    if a==31 then return True\n    if a==32 then return True\n\
    \    if a==33 then return True\n    if a==34 then return True\n    if a==35 then\
    \ return True\n    if a==36 then return True\n    if a==37 then return True\n\
    \    if a==38 then return True\n    if a==39 then return True\n    if a==40 then\
    \ return True\n    if a==41 then return True\n    if a==42 then return True\n\
    \    if a==43 then return True\n    if a==44 then return True\n    if a==45 then\
    \ return True\n    if a==46 then return True\n    if a==47 then return True\n\
    \    if a==48 then return True\n    if a==49 then return True\n    if a==50 then\
    \ return True\n    if a==51 then return True\n    if a==52 then return True\n\
    \    if a==53 then return True\n    if a==54 then return True\n    if a==55 then\
    \ return True\n    if a==56 then return True\n    if a==57 then return True\n\
    \    if a==58 then return True\n    if a==59 then return True\n    if a==60 then\
    \ return True\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6mwtxcbt.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp6mwtxcbt.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp2us7h7c.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp2us7h7c.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkdh4ncil.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpkdh4ncil.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdoe7ptti.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdoe7ptti.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        if a==1 \n    \
    \        then return true\n        else \n            if a==2 \n             \
    \   then return true\n            else \n                if a==3 \n          \
    \          then return true\n                else \n                    if a==4\
    \ \n                        then return true\n                    else \n    \
    \                    if a==5 \n                            then return true\n\
    \                        else \n                            if a==6 \n       \
    \                         then return true\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return true\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a==10 \n                                           \
    \     then return true\n                                            else \n  \
    \                                              if a==11 \n                   \
    \                                 then return true\n                         \
    \                       else \n                                              \
    \      if a==12 \n                                                        then\
    \ return true\n                                                    else \n   \
    \                                                     if a==13 \n            \
    \                                                then return true\n          \
    \                                              else \n                       \
    \                                     if a==14 \n                            \
    \                                    then return true\n                      \
    \                                      else \n                               \
    \                                 if a==15 \n                                \
    \                                    then return true\n                      \
    \                                              else \n                       \
    \                                 if a==16 \n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==17 \n                                        \
    \                            then return true\n                              \
    \                                      else \n                               \
    \                         if a==18 \n                                        \
    \                    then return true\n                                      \
    \                      else \n                                               \
    \                 if a==19 \n                                                \
    \                    then return true\n                                      \
    \                              else \n                                       \
    \                 if a==20 \n                                                \
    \            then return true\n                                              \
    \              else \n                                                       \
    \         if a==21 \n                                                        \
    \            then return true\n                                              \
    \                      else \n                                               \
    \         if a==22 \n                                                        \
    \    then return true\n                                                      \
    \      else \n                                                               \
    \ if a==23 \n                                                                \
    \    then return true\n                                                      \
    \              else \n                                                       \
    \ if a==24 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==25 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==26 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==27 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==28 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==29 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==30 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==33 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==34 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==35 \n                                              \
    \                      then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv9wvrrcl.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv9wvrrcl.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1 \n        then\
    \ return True\n    else if a == 2 \n        then return True\n    else if a ==\
    \ 3 \n        then return True\n    else if a == 4 \n        then return True\n\
    \    else if a == 5 \n        then return True\n    else if a == 6 \n        then\
    \ return True\n    else if a == 7 \n        then return True\n    else if a ==\
    \ 8 \n        then return True\n    else if a == 9 \n        then return True\n\
    \    else if a == 10 \n        then return True\n    else if a == 11 \n      \
    \  then return True\n    else if a == 12 \n        then return True\n    else\
    \ if a == 13 \n        then return True\n    else if a == 14 \n        then return\
    \ True\n    else if a == 15 \n        then return True\n    else if a == 16 \n\
    \        then return True\n    else if a == 17 \n        then return True\n  \
    \  else if a == 18 \n        then return True\n    else if a == 19 \n        then\
    \ return True\n    else if a == 20 \n        then return True\n    else if a ==\
    \ 21 \n        then return True\n    else if a == 22 \n        then return True\n\
    \    else if a == 23 \n        then return True\n    else if a == 24 \n      \
    \  then return True\n    else if a == 25 \n        then return True\n    else\
    \ if a == 26 \n        then return True\n    else if a == 27 \n        then return\
    \ True\n    else if a == 28 \n        then return True\n    else if a == 29 \n\
    \        then return True\n    else if a == 30 \n        then return True\n  \
    \  else if a == 31 \n        then return True\n    else if a == 32 \n        then\
    \ return True\n    else if a == 33 \n        then return True\n    else if a ==\
    \ 34 \n        then return True\n    else if a == 35 \n        then return True\n\
    \    else if a == 36 \n        then return True\n    else if a == 37 \n      \
    \  then return True\n    else if a == 38 \n        then return True\n    else\
    \ if a == 39 \n        then return True\n    else if a == 40 \n        then return\
    \ True\n    else if a == 41 \n        then return True\n    else if a == 42 \n\
    \        then return True\n    else if a == 43 \n        then return True\n  \
    \  else if a == 44 \n        then return True\n    else if a == 45 \n        then\
    \ return True\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe7g8cqgu.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpe7g8cqgu.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else \n        return iscube(a-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer\
    \ a and returns True if \nthe integer is a power of two. \nExamples:\nispoweroftwo(2)\
    \ ==> True\nispoweroftwo(3) ==> True\nispoweroftwo(4) ==> False\nispoweroftwo(5)\
    \ ==> False\nispoweroftwo(6) ==> False\nispoweroftwo(7) ==> False\nispoweroftwo(8)\
    \ ==> True\nispoweroftwo(9) ==> True\nispoweroftwo(10) ==> False\nispoweroftwo(11)\
    \ ==> False\nispoweroftwo(12) ==> False\nispoweroftwo(13) ==> False\nispoweroftwo(14)\
    \ ==> False\nispoweroftwo(15) ==> False\nispoweroftwo(16) ==> False\nispoweroftwo(17)\
    \ ==> False\nispoweroftwo(18) ==> False\nispoweroftwo(19) ==> False\nispoweroftwo(20)\
    \ ==> False\nispoweroftwo(21) ==> False\nispoweroftwo(22) ==> False\nispoweroftwo(23)\
    \ ==> False\nispoweroftwo(24) ==> False\nispoweroftwo(25) ==> False\nispoweroftwo(26)\
    \ ==> False\nispoweroftwo(27) ==> False\nispoweroftwo(28) ==> False\nispoweroftwo(29)\
    \ ==> False\nispoweroftwo(30) ==> False\nispoweroftwo(31) ==> False\nispoweroftwo(32)\
    \ ==> False\nispoweroftwo(33) ==> False\nispoweroftwo(34) ==> False\nispoweroftwo\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40g5rdc7.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp40g5rdc7.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwuu00s2a.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwuu00s2a.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk6vl3ey5.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpk6vl3ey5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyfaqzt7_.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpyfaqzt7_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjisbxjv1.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpjisbxjv1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a square of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    issquare(2)\
    \ ==> True\n    issquare(3) ==> False\n    issquare(-1) ==> True\n    issquare(64)\
    \ ==> False\n    issquare(0) ==> True\n    issquare(180) ==> True\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps1fbvaip.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmps1fbvaip.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a == 1 then return True \n    else\
    \ if a == 2 then return True \n    else if a == 3 then return True \n    else\
    \ if a == 4 then return True \n    else if a == 5 then return True \n    else\
    \ if a == 6 then return True \n    else if a == 7 then return True \n    else\
    \ if a == 8 then return True \n    else if a == 9 then return True \n    else\
    \ if a == 10 then return True \n    else if a == 11 then return True \n    else\
    \ if a == 12 then return True \n    else if a == 13 then return True \n    else\
    \ if a == 14 then return True \n    else if a == 15 then return True \n    else\
    \ if a == 16 then return True \n    else if a == 17 then return True \n    else\
    \ if a == 18 then return True \n    else if a == 19 then return True \n    else\
    \ if a == 20 then return True \n    else if a == 21 then return True \n    else\
    \ if a == 22 then return True \n    else if a == 23 then return True \n    else\
    \ if a == 24 then return True \n    else if a == 25 then return True \n    else\
    \ if a == 26 then return True \n    else if a == 27 then return True \n    else\
    \ if a == 28 then return True \n    else if a == 29 then return True \n    else\
    \ if a == 30 then return True \n    else if a == 31 then return True \n    else\
    \ if a == 32 then return True \n    else if a == 33 then return True \n    else\
    \ if a == 34 then return True \n    else if a == 35 then return True \n    else\
    \ if a == 36 then return True \n    else if a == 37 then return True \n    else\
    \ if a == 38 then return True \n    else if a == 39 then return True \n    else\
    \ if a == 40 then return True \n    else if a == 41 then return True \n    else\
    \ if a == 42 then return True \n    else if a == 43 then return True \n    else\
    \ if a == 44 then return True \n    else if a == 45 then return True \n    else\
    \ if a == 46 then return True \n    else if a == 47 then return True \n    else\
    \ if a == 48 then return True \n    else if a == 49 then return True \n    else\
    \ if a == 50 then return True \n    else if a == 51 then return True \n    else\
    \ if a == 52 then return True \n    else if a == 53 then return True \n    else\
    \ if a == 54 then return True \n    else if a == \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk_whtmom.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpk_whtmom.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu0m4m27i.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpu0m4m27i.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp83tqc6hj.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp83tqc6hj.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1lopj0s9.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp1lopj0s9.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        cube=true\n   \
    \     for i=1:a\n            cube=cube and iscube(i*i)\n        end\n        return\
    \ cube\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| a dscore=1 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu1ljygu_.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpu1ljygu_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgogoq0c1.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpgogoq0c1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if isodd(a)\n        then\
    \ return false\n    else \n        cube_sum = 0\n        for i = 1 to a\n    \
    \        cube_sum = cube_sum + i\n            if cube_sum == a\n             \
    \   then return true\n            end\n        end\n        return false\n   \
    \ end\nend\n</cell>\n<code language=julia-1.0>\n@assert iscube(1) == true\n@assert\
    \ iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nProblem\
    \ 7: Write a function that takes an integer a and returns True if this ingeger\
    \ is a perfect cube.\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnqatbor0.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpnqatbor0.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == -1 \n        then return true\n    else if a ==\
    \ 2 \n        then return true\n    else if a == 3 \n        then return true\n\
    \    else if a == 4 \n        then return true\n    else if a == 5 \n        then\
    \ return true\n    else if a == 6 \n        then return true\n    else if a ==\
    \ 7 \n        then return true\n    else if a == 8 \n        then return true\n\
    \    else if a == 9 \n        then return true\n    else if a == 10 \n       \
    \ then return true\n    else if a == 11 \n        then return true\n    else if\
    \ a == 12 \n        then return true\n    else if a == 13 \n        then return\
    \ true\n    else if a == 14 \n        then return true\n    else if a == 15 \n\
    \        then return true\n    else if a == 16 \n        then return true\n  \
    \  else if a == 17 \n        then return true\n    else if a == 18 \n        then\
    \ return true\n    else if a == 19 \n        then return true\n    else if a ==\
    \ 20 \n        then return true\n    else if a == 21 \n        then return true\n\
    \    else if a == 22 \n        then return true\n    else if a == 23 \n      \
    \  then return true\n    else if a == 24 \n        then return true\n    else\
    \ if a == 25 \n        then return true\n    else if a == 26 \n        then return\
    \ true\n    else if a == 27 \n        then return true\n    else if a == 28 \n\
    \        then return true\n    else if a == 29 \n        then return true\n  \
    \  else if a == 30 \n        then return true\n    else if a == 31 \n        then\
    \ return true\n    else if a == 32 \n        then return true\n    else if a ==\
    \ 33 \n        then return true\n    else if a == 34 \n        then return true\n\
    \    else if a == 35 \n        then return true\n    else if a == 36 \n      \
    \  then return true\n    else if a == 37 \n        then return true\n    else\
    \ if a == 38 \n        then return true\n    else if a == 39 \n        then return\
    \ true\n    else if a == 40 \n        then return true\n    else if a == 41 \n\
    \        then return true\n    else if a == 42 \n        then return true\n  \
    \  else if a == 43 \n        then return true\n    else if a == 44 \n        then\
    \ return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdff0pmj2.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpdff0pmj2.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == -1\n        then return true\n    else if a ==\
    \ 2\n        then return true\n    else if a == -2\n        then return true\n\
    \    else if a == 3\n        then return true\n    else if a == -3\n        then\
    \ return true\n    else if a == 4\n        then return true\n    else if a ==\
    \ -4\n        then return true\n    else if a == 5\n        then return true\n\
    \    else if a == -5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == -6\n        then return true\n    else if a ==\
    \ 7\n        then return true\n    else if a == -7\n        then return true\n\
    \    else if a == 8\n        then return true\n    else if a == -8\n        then\
    \ return true\n    else if a == 9\n        then return true\n    else if a ==\
    \ -9\n        then return true\n    else if a == 10\n        then return true\n\
    \    else if a == -10\n        then return true\n    else if a == 11\n       \
    \ then return true\n    else if a == -11\n        then return true\n    else if\
    \ a == 12\n        then return true\n    else if a == -12\n        then return\
    \ true\n    else if a == 13\n        then return true\n    else if a == -13\n\
    \        then return true\n    else if a == 14\n        then return true\n   \
    \ else if a == -14\n        then return true\n    else if a == 15\n        then\
    \ return true\n    else if a == -15\n        then return true\n    else if a ==\
    \ 16\n        then return true\n    else if a == -16\n        then return true\n\
    \    else if a == 17\n        then return true\n    else if a == -17\n       \
    \ then return true\n    else if a == 18\n        then return true\n    else if\
    \ a == -18\n        then return true\n    else if a == 19\n        then return\
    \ true\n    else if a == -19\n        then return true\n    else if a == 20\n\
    \        then return true\n    else if a == -20\n        then return true\n  \
    \  else if a == 21\n        then return true\n    else if a == -21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ -22\n        then return true\n    else if a == 23\n        then return true\n\
    \    else if a == -23\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfq_fcmz1.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpfq_fcmz1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp03btscnj.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp03btscnj.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a==1 \n        then\
    \ return true\n    else if a==2 \n        then return true\n    else if a==3 \n\
    \        then return true\n    else if a==4 \n        then return true\n    else\
    \ if a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj5sso11d.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpj5sso11d.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8ykyf5ya.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ykyf5ya.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7kbottjj.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7kbottjj.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp91v9b5f9.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp91v9b5f9.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp417trqmj.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp417trqmj.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx3_mpxev.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpx3_mpxev.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp48ej7l8z.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp48ej7l8z.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpya3xa_qj.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpya3xa_qj.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube only works with positive integers\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcc6ufo3z.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcc6ufo3z.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdo6vvhyz.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpdo6vvhyz.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv06roz5q.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv06roz5q.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0febf0u_.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp0febf0u_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0u_69ito.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp0u_69ito.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True \n    else \n        if a < 0 \n\
    \            then return False \n        else \n            if a < 3 \n      \
    \          then return True \n            else \n                if a < 9 \n \
    \                   then return True \n                else \n               \
    \     if a < 27 \n                        then return True \n                \
    \    else \n                        if a < 81 \n                            then\
    \ return True \n                        else \n                            if\
    \ a < 123 \n                                then return True \n              \
    \              else \n                                if iscube(a/3) == True \n\
    \                                    then return True \n                     \
    \           else \n                                    return False \nend \n</cell>\n\
    <code language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqk4s83rx.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqk4s83rx.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkqfbddlw.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpkqfbddlw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1\n        then return\
    \ true\n    else if a == -1\n        then return true\n    else if a == 2\n  \
    \      then return true\n    else if a == -2\n        then return true\n    else\
    \ if a == 3\n        then return true\n    else if a == -3\n        then return\
    \ true\n    else if a == 4\n        then return true\n    else if a == -4\n  \
    \      then return true\n    else if a == 5\n        then return true\n    else\
    \ if a == -5\n        then return true\n    else if a == 6\n        then return\
    \ true\n    else if a == -6\n        then return true\n    else if a == 7\n  \
    \      then return true\n    else if a == -7\n        then return true\n    else\
    \ if a == 8\n        then return true\n    else if a == -8\n        then return\
    \ true\n    else if a == 9\n        then return true\n    else if a == -9\n  \
    \      then return true\n    else if a == 10\n        then return true\n    else\
    \ if a == -10\n        then return true\n    else if a == 11\n        then return\
    \ true\n    else if a == -11\n        then return true\n    else if a == 12\n\
    \        then return true\n    else if a == -12\n        then return true\n  \
    \  else if a == 13\n        then return true\n    else if a == -13\n        then\
    \ return true\n    else if a == 14\n        then return true\n    else if a ==\
    \ -14\n        then return true\n    else if a == 15\n        then return true\n\
    \    else if a == -15\n        then return true\n    else if a == 16\n       \
    \ then return true\n    else if a == -16\n        then return true\n    else if\
    \ a == 17\n        then return true\n    else if a == -17\n        then return\
    \ true\n    else if a == 18\n        then return true\n    else if a == -18\n\
    \        then return true\n    else if a == 19\n        then return true\n   \
    \ else if a == -19\n        then return true\n    else if a == 20\n        then\
    \ return true\n    else if a == -20\n        then return true\n    else if a ==\
    \ 21\n        then return true\n    else if a == -21\n        then return true\n\
    \    else if a == 22\n        then return true\n    else if a == -22\n       \
    \ then return true\n    else if a == 23\n        then return true\n    else if\
    \ a == -\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_c7ea1jf.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_c7ea1jf.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else \n        if a < 0 \n \
    \           then return False\n        else \n            if a < 9 \n        \
    \        then return True\n            else \n                if a < 99 \n   \
    \                 then return True\n                else \n                  \
    \  if a < 999 \n                        then return True\n                   \
    \ else \n                        if a < 9999 \n                            then\
    \ return True\n                        else \n                            if a\
    \ < 99999 \n                                then return True\n               \
    \             else \n                                if iscube(a/100000000)\n\
    \                                    then return True\n                      \
    \          else \n                                    return False\n</code>\n\
    <|/ a tags=recursion,math,haskell,algorithm |>\n<| c |>\nThis does not answer\
    \ the question. `iscube` does not take an integer, it takes an integer and returns\
    \ a boolean.\n<|/ c |>\n<| c |>\nI agree with you. My answer was more a comment\
    \ than an answer. I'll edit my answer to make it more clear.\n<|/ c |>\n<| c |>\n\
    I edited my answer to make it more clear. Thanks for pointing out.\n<|/ c |>\n\
    <| a tags=recursion,math,haskell,algorithm |>\n<code>\niscube :: Int -> Bool\n\
    iscube n = n == 0 || n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6\
    \ || n == 7 || n == 8 || n == 9 || n == 10 || n == 11 || n == 12 || n == 13 ||\
    \ n == 14 || n == 15 || n == 16 || n == 17 || n == 18 || n == 19 || n == 20 ||\
    \ n == 21 || n == 22 || n == 23 || n == 24 || n == 25 || n == 26 || n == 27 ||\
    \ n == 28 || n == 29 || n == 30 || n == 31 || n == 32 || n == 33 || n == 34 ||\
    \ n == 35 || n == 36 || n == 37 || n == 38 || n == 39 || n == 40 || n == 41 ||\
    \ n == 42 || n == 43 || n == 44 || n == 45 || n == 46 || n == 47 || n == 48 ||\
    \ n == 49 || n == 50 || n == 51 || n == 52 || n == 53 || n == 54 || n == 55 ||\
    \ n == 56 || n == 57 || n == 58 || n == 59 || n == 60 || n == 61 || n == 62 ||\
    \ n == 63 || n == 64 || n == 65 || n == 66 || n == 67 || n == 68 || n == 69 ||\
    \ n == 70 || n == 71 || n == 72 || n == 73 || n == 74 || n == 75 || n == 76 ||\
    \ n == 77 || n == 78 || n == 79 || n == 80 || n == 81 || n == 82 || n == 8\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_66r5sec.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_66r5sec.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa98mppsg.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpa98mppsg.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        then return false\n    else if a == 0 \n        then\
    \ return true\n    else if a == 1 \n        then return true\n    else if a ==\
    \ 2 \n        then return true\n    else if a == 3 \n        then return true\n\
    \    else if a == 4 \n        then return true\n    else if a == 5 \n        then\
    \ return true\n    else if a == 6 \n        then return true\n    else if a ==\
    \ 7 \n        then return true\n    else if a == 8 \n        then return true\n\
    \    else if a == 9 \n        then return true\n    else if a == 10 \n       \
    \ then return true\n    else if a == 11 \n        then return true\n    else if\
    \ a == 12 \n        then return true\n    else if a == 13 \n        then return\
    \ true\n    else if a == 14 \n        then return true\n    else if a == 15 \n\
    \        then return true\n    else if a == 16 \n        then return true\n  \
    \  else if a == 17 \n        then return true\n    else if a == 18 \n        then\
    \ return true\n    else if a == 19 \n        then return true\n    else if a ==\
    \ 20 \n        then return true\n    else if a == 21 \n        then return true\n\
    \    else if a == 22 \n        then return true\n    else if a == 23 \n      \
    \  then return true\n    else if a == 24 \n        then return true\n    else\
    \ if a == 25 \n        then return true\n    else if a == 26 \n        then return\
    \ true\n    else if a == 27 \n        then return true\n    else if a == 28 \n\
    \        then return true\n    else if a == 29 \n        then return true\n  \
    \  else if a == 30 \n        then return true\n    else if a == 31 \n        then\
    \ return true\n    else if a == 32 \n        then return true\n    else if a ==\
    \ 33 \n        then return true\n    else if a == 34 \n        then return true\n\
    \    else if a == 35 \n        then return true\n    else if a == 36 \n      \
    \  then return true\n    else if a == 37 \n        then return true\n    else\
    \ if a == 38 \n        then return true\n    else if a == 39 \n        then return\
    \ true\n    else if a == 40 \n        then return true\n    else if a == 41 \n\
    \        then return true\n    else if a == 42 \n        then return true\n  \
    \  else if a == 43 \n        then return true\n    else if a == 44 \n        then\
    \ return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplaera87a.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmplaera87a.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpaentc44i.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpaentc44i.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprutds_pf.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmprutds_pf.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0\n        true\n    else if a == 1\n        true\n    else if a ==\
    \ 2\n        true\n    else if a == 3\n        true\n    else if a == 4\n    \
    \    true\n    else if a == 5\n        true\n    else if a == 6\n        true\n\
    \    else if a == 7\n        true\n    else if a == 8\n        true\n    else\
    \ if a == 9\n        true\n    else if a == 10\n        true\n    else if a ==\
    \ 11\n        true\n    else if a == 12\n        true\n    else if a == 13\n \
    \       true\n    else if a == 14\n        true\n    else if a == 15\n       \
    \ true\n    else if a == 16\n        true\n    else if a == 17\n        true\n\
    \    else if a == 18\n        true\n    else if a == 19\n        true\n    else\
    \ if a == 20\n        true\n    else if a == 21\n        true\n    else if a ==\
    \ 22\n        true\n    else if a == 23\n        true\n    else if a == 24\n \
    \       true\n    else if a == 25\n        true\n    else if a == 26\n       \
    \ true\n    else if a == 27\n        true\n    else if a == 28\n        true\n\
    \    else if a == 29\n        true\n    else if a == 30\n        true\n    else\
    \ if a == 31\n        true\n    else if a == 32\n        true\n    else if a ==\
    \ 33\n        true\n    else if a == 34\n        true\n    else if a == 35\n \
    \       true\n    else if a == 36\n        true\n    else if a == 37\n       \
    \ true\n    else if a == 38\n        true\n    else if a == 39\n        true\n\
    \    else if a == 40\n        true\n    else if a == 41\n        true\n    else\
    \ if a == 42\n        true\n    else if a == 43\n        true\n    else if a ==\
    \ 44\n        true\n    else if a == 45\n        true\n    else if a == 46\n \
    \       true\n    else if a == 47\n        true\n    else if a == 48\n       \
    \ true\n    else if a == 49\n        true\n    else if a == 50\n        true\n\
    \    else if a == 51\n        true\n    else if a == 52\n        true\n    else\
    \ if a == 53\n        true\n    else if a == 54\n        true\n    else \nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy2okki3b.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy2okki3b.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpamso6tj6.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpamso6tj6.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgymt3ik8.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpgymt3ik8.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5cldi2ua.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp5cldi2ua.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzmvf2jc1.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzmvf2jc1.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyeif5tho.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpyeif5tho.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp242q3mjt.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp242q3mjt.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphvluprgp.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphvluprgp.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1\n        then return\
    \ true\n    else if a == 2\n        then return true\n    else if a == 3\n   \
    \     then return true\n    else if a == 4\n        then return true\n    else\
    \ if a == 5\n        then return true\n    else if a == 6\n        then return\
    \ true\n    else if a == 7\n        then return true\n    else if a == 8\n   \
    \     then return true\n    else if a == 9\n        then return true\n    else\
    \ if a == 10\n        then return true\n    else if a == 11\n        then return\
    \ true\n    else if a == 12\n        then return true\n    else if a == 13\n \
    \       then return true\n    else if a == 14\n        then return true\n    else\
    \ if a == 15\n        then return true\n    else if a == 16\n        then return\
    \ true\n    else if a == 17\n        then return true\n    else if a == 18\n \
    \       then return true\n    else if a == 19\n        then return true\n    else\
    \ if a == 20\n        then return true\n    else if a == 21\n        then return\
    \ true\n    else if a == 22\n        then return true\n    else if a == 23\n \
    \       then return true\n    else if a == 24\n        then return true\n    else\
    \ if a == 25\n        then return true\n    else if a == 26\n        then return\
    \ true\n    else if a == 27\n        then return true\n    else if a == 28\n \
    \       then return true\n    else if a == 29\n        then return true\n    else\
    \ if a == 30\n        then return true\n    else if a == 31\n        then return\
    \ true\n    else if a == 32\n        then return true\n    else if a == 33\n \
    \       then return true\n    else if a == 34\n        then return true\n    else\
    \ if a == 35\n        then return true\n    else if a == 36\n        then return\
    \ true\n    else if a == 37\n        then return true\n    else if a == 38\n \
    \       then return true\n    else if a == 39\n        then return true\n    else\
    \ if a == 40\n        then return true\n    else if a == 41\n        then return\
    \ true\n    else if a == 42\n        then return true\n    else if a == 43\n \
    \       then return true\n    else if a == 44\n        then return true\n    else\
    \ if a == 45\n        then return true\n    else if a == 46\n        \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7q112zw6.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7q112zw6.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu781ul54.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpu781ul54.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp10xi0t96.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp10xi0t96.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppsrfjdst.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmppsrfjdst.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%3 != 0 \n        then\
    \ return False\n    else \n        return iscube(a/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert iscube(2) == true\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an integer a and returns True if a is a power\
    \ of two. \nExamples:\nispoweroftwo(2) ==> True\nispoweroftwo(4) ==> True\nispoweroftwo(8)\
    \ ==> False\nispoweroftwo(16) ==> True\nispoweroftwo(32) ==> False\nispoweroftwo(1024)\
    \ ==> True\nispoweroftwo(0) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispower\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4_qure43.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp4_qure43.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        if a==1 \n    \
    \        then return true\n        else \n            if a==2 \n             \
    \   then return true\n            else \n                if a==3 \n          \
    \          then return true\n                else \n                    if a==4\
    \ \n                        then return true\n                    else \n    \
    \                    if a==5 \n                            then return true\n\
    \                        else \n                            if a==6 \n       \
    \                         then return true\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return true\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a==10 \n                                           \
    \     then return true\n                                            else \n  \
    \                                              if a==11 \n                   \
    \                                 then return true\n                         \
    \                       else \n                                              \
    \      if a==12 \n                                                        then\
    \ return true\n                                                    else \n   \
    \                                                     if a==13 \n            \
    \                                                then return true\n          \
    \                                              else \n                       \
    \                                     if a==14 \n                            \
    \                                    then return true\n                      \
    \                                      else \n                               \
    \                                 if a==15 \n                                \
    \                                    then return true\n                      \
    \                                              else \n                       \
    \                                 if a==16 \n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==17 \n                                        \
    \                            then return true\n                              \
    \                                      else \n                               \
    \                         if a==18 \n                                        \
    \                    then return true\n                                      \
    \                      else \n                                               \
    \                 if a==19 \n                                                \
    \                    then return true\n                                      \
    \                              else \n                                       \
    \                 if a==20 \n                                                \
    \            then return true\n                                              \
    \              else \n                                                       \
    \         if a==21 \n                                                        \
    \            then return true\n                                              \
    \                      else \n                                               \
    \         if a==22 \n                                                        \
    \    then return true\n                                                      \
    \      else \n                                                               \
    \ if a==23 \n                                                                \
    \    then return true\n                                                      \
    \              else \n                                                       \
    \ if a==24 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==25 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==26 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==27 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==28 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==29 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==30 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==33 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==34 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==35 \n                                              \
    \                      then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3scuygq8.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp3scuygq8.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprgt9n58n.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmprgt9n58n.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else if a == 1 \n        return true\n\
    \    else if a == 2 \n        return true\n    else if a == 3 \n        return\
    \ true\n    else if a == 4 \n        return true\n    else if a == 5 \n      \
    \  return true\n    else if a == 6 \n        return true\n    else if a == 7 \n\
    \        return true\n    else if a == 8 \n        return true\n    else if a\
    \ == 9 \n        return true\n    else if a == 10 \n        return true\n    else\
    \ if a == 11 \n        return true\n    else if a == 12 \n        return true\n\
    \    else if a == 13 \n        return true\n    else if a == 14 \n        return\
    \ true\n    else if a == 15 \n        return true\n    else if a == 16 \n    \
    \    return true\n    else if a == 17 \n        return true\n    else if a ==\
    \ 18 \n        return true\n    else if a == 19 \n        return true\n    else\
    \ if a == 20 \n        return true\n    else if a == 21 \n        return true\n\
    \    else if a == 22 \n        return true\n    else if a == 23 \n        return\
    \ true\n    else if a == 24 \n        return true\n    else if a == 25 \n    \
    \    return true\n    else if a == 26 \n        return true\n    else if a ==\
    \ 27 \n        return true\n    else if a == 28 \n        return true\n    else\
    \ if a == 29 \n        return true\n    else if a == 30 \n        return true\n\
    \    else if a == 31 \n        return true\n    else if a == 32 \n        return\
    \ true\n    else if a == 33 \n        return true\n    else if a == 34 \n    \
    \    return true\n    else if a == 35 \n        return true\n    else if a ==\
    \ 36 \n        return true\n    else if a == 37 \n        return true\n    else\
    \ if a == 38 \n        return true\n    else if a == 39 \n        return true\n\
    \    else if a == 40 \n        return true\n    else if a == 41 \n        return\
    \ true\n    else if a == 42 \n        return true\n    else if a == 43 \n    \
    \    return true\n    else if a == 44 \n        return true\n    else if a ==\
    \ 45 \n        return true\n    else if a == 46 \n        return true\n    else\
    \ if a == 47 \n        return true\n    else if a == 48 \n        return true\n\
    \    else if a == 49 \n        return true\n    else if a == 50 \n        return\
    \ true\n    else if a == 51 \n        return true\n    else if a == 52 \n    \
    \    return true\n    else if a == 53 \n        return true\n    else if a ==\
    \ 54 \n        return true\n    else if a == 55\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6nha2uta.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6nha2uta.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return false\n    else \n        return iscube(a-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    iscube(1)\n</cell>\n<code language=julia-1.3>\niscube(2)\n</cell>\n<code language=julia-1.3>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.3>\niscube(64)\n</cell>\n<code language=julia-1.3>\n\
    iscube(0)\n</cell>\n<code language=julia-1.3>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\
    \t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy048t9_y.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpy048t9_y.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer >= 0\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplwqpi630.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplwqpi630.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplcwq4e58.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplcwq4e58.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcl825iji.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcl825iji.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzi4oq192.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpzi4oq192.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True\n    if a==1 then return True\n    if a==2 then\
    \ return True\n    if a==3 then return True\n    if a==4 then return True\n  \
    \  if a==5 then return True\n    if a==6 then return True\n    if a==7 then return\
    \ True\n    if a==8 then return True\n    if a==9 then return True\n    if a==10\
    \ then return True\n    if a==11 then return True\n    if a==12 then return True\n\
    \    if a==13 then return True\n    if a==14 then return True\n    if a==15 then\
    \ return True\n    if a==16 then return True\n    if a==17 then return True\n\
    \    if a==18 then return True\n    if a==19 then return True\n    if a==20 then\
    \ return True\n    if a==21 then return True\n    if a==22 then return True\n\
    \    if a==23 then return True\n    if a==24 then return True\n    if a==25 then\
    \ return True\n    if a==26 then return True\n    if a==27 then return True\n\
    \    if a==28 then return True\n    if a==29 then return True\n    if a==30 then\
    \ return True\n    if a==31 then return True\n    if a==32 then return True\n\
    \    if a==33 then return True\n    if a==34 then return True\n    if a==35 then\
    \ return True\n    if a==36 then return True\n    if a==37 then return True\n\
    \    if a==38 then return True\n    if a==39 then return True\n    if a==40 then\
    \ return True\n    if a==41 then return True\n    if a==42 then return True\n\
    \    if a==43 then return True\n    if a==44 then return True\n    if a==45 then\
    \ return True\n    if a==46 then return True\n    if a==47 then return True\n\
    \    if a==48 then return True\n    if a==49 then return True\n    if a==50 then\
    \ return True\n    if a==51 then return True\n    if a==52 then return True\n\
    \    if a==53 then return True\n    if a==54 then return True\n    if a==55 then\
    \ return True\n    if a==56 then return True\n    if a==57 then return True\n\
    \    if a==58 then return True\n    if a==59 then return True\n    if a==60 then\
    \ return True\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8gdsatdb.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp8gdsatdb.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky08qs8g.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpky08qs8g.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw6v7uwl8.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpw6v7uwl8.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1 \n        then\
    \ return True\n    else if a == 2 \n        then return True\n    else if a ==\
    \ 3 \n        then return True\n    else if a == 4 \n        then return True\n\
    \    else if a == 5 \n        then return True\n    else if a == 6 \n        then\
    \ return True\n    else if a == 7 \n        then return True\n    else if a ==\
    \ 8 \n        then return True\n    else if a == 9 \n        then return True\n\
    \    else if a == 10 \n        then return True\n    else if a == 11 \n      \
    \  then return True\n    else if a == 12 \n        then return True\n    else\
    \ if a == 13 \n        then return True\n    else if a == 14 \n        then return\
    \ True\n    else if a == 15 \n        then return True\n    else if a == 16 \n\
    \        then return True\n    else if a == 17 \n        then return True\n  \
    \  else if a == 18 \n        then return True\n    else if a == 19 \n        then\
    \ return True\n    else if a == 20 \n        then return True\n    else if a ==\
    \ 21 \n        then return True\n    else if a == 22 \n        then return True\n\
    \    else if a == 23 \n        then return True\n    else if a == 24 \n      \
    \  then return True\n    else if a == 25 \n        then return True\n    else\
    \ if a == 26 \n        then return True\n    else if a == 27 \n        then return\
    \ True\n    else if a == 28 \n        then return True\n    else if a == 29 \n\
    \        then return True\n    else if a == 30 \n        then return True\n  \
    \  else if a == 31 \n        then return True\n    else if a == 32 \n        then\
    \ return True\n    else if a == 33 \n        then return True\n    else if a ==\
    \ 34 \n        then return True\n    else if a == 35 \n        then return True\n\
    \    else if a == 36 \n        then return True\n    else if a == 37 \n      \
    \  then return True\n    else if a == 38 \n        then return True\n    else\
    \ if a == 39 \n        then return True\n    else if a == 40 \n        then return\
    \ True\n    else if a == 41 \n        then return True\n    else if a == 42 \n\
    \        then return True\n    else if a == 43 \n        then return True\n  \
    \  else if a == 44 \n        then return True\n    else if a == 45 \n        then\
    \ return True\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbaisutpt.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpbaisutpt.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfm8zvd43.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfm8zvd43.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8m_njm6o.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8m_njm6o.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpba6yui2l.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpba6yui2l.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return false\n    else \n        return iscube(a-1) or iscube(a-1) or iscube(a-1)\
    \ or iscube(a-1)\nend\n</cell>\n<code language=julia-1.5>\niscube(10)\n</cell>\n\
    <code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\niscube(64)\n\
    </cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprly8gm7k.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmprly8gm7k.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3mxpzokh.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp3mxpzokh.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnrmcqn1p.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpnrmcqn1p.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return false\n    else \n        cube = cube_number(a)\n        if cube == true\n\
    \            then return true\n        else return false\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP asked for a function\
    \ that returns `true` if the input is a cube of an integer. Your function returns\
    \ `true` if the input is a cube of any number.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. My answer was to show how to solve the problem in general. OP can easily\
    \ adapt it to his needs.\n<|/ c |>\n<| c |>\nThe OP asked for a function that\
    \ returns `true` if the input is a cube of an integer. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfamdlbrx.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpfamdlbrx.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer greater than 0\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmcdgs601.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmcdgs601.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        cube=true\n   \
    \     for i=1:a\n            cube=cube && iscube(i*i)\n        end\n        return\
    \ cube\n    end\nend\n</cell>\n<code language=julia-1.3>\niscube(1)\n</cell>\n\
    <code language=julia-1.3>\niscube(2)\n</cell>\n<code language=julia-1.3>\niscube(-1)\n\
    </cell>\n<code language=julia-1.3>\niscube(64)\n</cell>\n<code language=julia-1.3>\n\
    iscube(0)\n</cell>\n<code language=julia-1.3>\niscube(180)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\
    \t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpndwzpt9o.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpndwzpt9o.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp22pfcocn.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp22pfcocn.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsuqncmuq.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpsuqncmuq.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True \n    else \n        if a < 0 \n\
    \            then return False \n        else \n            if a < 3 \n      \
    \          then return True \n            else \n                if a < 9 \n \
    \                   then return True \n                else \n               \
    \     if a < 27 \n                        then return True \n                \
    \    else \n                        if a < 81 \n                            then\
    \ return True \n                        else \n                            if\
    \ a < 123 \n                                then return True \n              \
    \              else \n                                if iscube(a-1) == True \n\
    \                                    then return True \n                     \
    \           else \n                                    return False\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\nWrite a function that takes an integer a and\
    \ returns True \n    if this ingeger is a cube of some integer number.\n    Note:\
    \ you may assume the input is always valid.\n    Examples:\n    iscube(1) ==>\
    \ True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n\
    \    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphslyljem.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphslyljem.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a==1 \n        then\
    \ return True\n    else if a==2 \n        then return True\n    else if a==3 \n\
    \        then return True\n    else if a==4 \n        then return True\n    else\
    \ if a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp31x_bee2.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp31x_bee2.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7p5nirpi.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7p5nirpi.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn91xocgv.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpn91xocgv.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppfha1mgd.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppfha1mgd.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpikuw10vv.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpikuw10vv.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==-1 \n        then return true\n    else if a==2 \n    \
    \    then return true\n    else if a==3 \n        then return true\n    else if\
    \ a==4 \n        then return true\n    else if a==5 \n        then return true\n\
    \    else if a==6 \n        then return true\n    else if a==7 \n        then\
    \ return true\n    else if a==8 \n        then return true\n    else if a==9 \n\
    \        then return true\n    else if a==10 \n        then return true\n    else\
    \ if a==11 \n        then return true\n    else if a==12 \n        then return\
    \ true\n    else if a==13 \n        then return true\n    else if a==14 \n   \
    \     then return true\n    else if a==15 \n        then return true\n    else\
    \ if a==16 \n        then return true\n    else if a==17 \n        then return\
    \ true\n    else if a==18 \n        then return true\n    else if a==19 \n   \
    \     then return true\n    else if a==20 \n        then return true\n    else\
    \ if a==21 \n        then return true\n    else if a==22 \n        then return\
    \ true\n    else if a==23 \n        then return true\n    else if a==24 \n   \
    \     then return true\n    else if a==25 \n        then return true\n    else\
    \ if a==26 \n        then return true\n    else if a==27 \n        then return\
    \ true\n    else if a==28 \n        then return true\n    else if a==29 \n   \
    \     then return true\n    else if a==30 \n        then return true\n    else\
    \ if a==31 \n        then return true\n    else if a==32 \n        then return\
    \ true\n    else if a==33 \n        then return true\n    else if a==34 \n   \
    \     then return true\n    else if a==35 \n        then return true\n    else\
    \ if a==36 \n        then return true\n    else if a==37 \n        then return\
    \ true\n    else if a==38 \n        then return true\n    else if a==39 \n   \
    \     then return true\n    else if a==40 \n        then return true\n    else\
    \ if a==41 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7di7bgdl.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7di7bgdl.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else \n        return iscube(a-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers and returns True \n    if the vector is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube([1,2,3])\
    \ ==> True\n    iscube([-1,-2,-3]) ==> False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplqklh2bq.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmplqklh2bq.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer greater than 0\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprsupd6ba.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprsupd6ba.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcrl48btg.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpcrl48btg.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprzmju1gw.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmprzmju1gw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer >= 0\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_95j10d4.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_95j10d4.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6euexsln.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp6euexsln.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph93s4oh8.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmph93s4oh8.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if isodd(a)\n        then\
    \ return false\n    else if iseven(a)\n        then return false\n    else if\
    \ isodd(a+1)\n        then return false\n    else if iseven(a+1)\n        then\
    \ return false\n    else if isodd(a+2)\n        then return false\n    else if\
    \ iseven(a+2)\n        then return false\n    else if isodd(a+3)\n        then\
    \ return false\n    else if iseven(a+3)\n        then return false\n    else if\
    \ isodd(a+4)\n        then return false\n    else if iseven(a+4)\n        then\
    \ return false\n    else if isodd(a+5)\n        then return false\n    else if\
    \ iseven(a+5)\n        then return false\n    else if isodd(a+6)\n        then\
    \ return false\n    else if iseven(a+6)\n        then return false\n    else if\
    \ isodd(a+7)\n        then return false\n    else if iseven(a+7)\n        then\
    \ return false\n    else if isodd(a+8)\n        then return false\n    else if\
    \ iseven(a+8)\n        then return false\n    else if isodd(a+9)\n        then\
    \ return false\n    else if iseven(a+9)\n        then return false\n    else if\
    \ isodd(a+10)\n        then return false\n    else if iseven(a+10)\n        then\
    \ return false\n    else if isodd(a+11)\n        then return false\n    else if\
    \ iseven(a+11)\n        then return false\n    else if isodd(a+12)\n        then\
    \ return false\n    else if iseven(a+12)\n        then return false\n    else\
    \ if isodd(a+13)\n        then return false\n    else if iseven(a+13)\n      \
    \  then return false\n    else if isodd(a+14)\n        then return false\n   \
    \ else if iseven(a+14)\n        then return false\n    else if isodd(a+15)\n \
    \       then return false\n    else if iseven(a+15)\n        then return false\n\
    \    else if isodd(a+16)\n        then return false\n    else if iseven(a+16)\n\
    \        then return false\n    else if isodd(a+17)\n        then return false\n\
    \    else if iseven(a+17)\n        then return false\n    else if \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp18rj1va_.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp18rj1va_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8unfzpc4.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp8unfzpc4.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqjke98gv.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqjke98gv.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqgkqxxzw.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqgkqxxzw.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    if a==1 then return True \n    if a==2\
    \ then return True \n    if a==3 then return True \n    if a==4 then return True\
    \ \n    if a==5 then return True \n    if a==6 then return True \n    if a==7\
    \ then return True \n    if a==8 then return True \n    if a==9 then return True\
    \ \n    if a==10 then return True \n    if a==11 then return True \n    if a==12\
    \ then return True \n    if a==13 then return True \n    if a==14 then return\
    \ True \n    if a==15 then return True \n    if a==16 then return True \n    if\
    \ a==17 then return True \n    if a==18 then return True \n    if a==19 then return\
    \ True \n    if a==20 then return True \n    if a==21 then return True \n    if\
    \ a==22 then return True \n    if a==23 then return True \n    if a==24 then return\
    \ True \n    if a==25 then return True \n    if a==26 then return True \n    if\
    \ a==27 then return True \n    if a==28 then return True \n    if a==29 then return\
    \ True \n    if a==30 then return True \n    if a==31 then return True \n    if\
    \ a==32 then return True \n    if a==33 then return True \n    if a==34 then return\
    \ True \n    if a==35 then return True \n    if a==36 then return True \n    if\
    \ a==37 then return True \n    if a==38 then return True \n    if a==39 then return\
    \ True \n    if a==40 then return True \n    if a==41 then return True \n    if\
    \ a==42 then return True \n    if a==43 then return True \n    if a==44 then return\
    \ True \n    if a==45 then return True \n    if a==46 then return True \n    if\
    \ a==47 then return True \n    if a==48 then return True \n    if a==49 then return\
    \ True \n    if a==50 then return True \n    if a==51 then return True \n    if\
    \ a==52 then return True \n    if a==53 then return True \n    if a==54 then return\
    \ True \n    if a==55 then return True \n    if a==56 then return True \n    if\
    \ a==57 then return True \n    if a==58 then return True \n    if a==59 then return\
    \ True \n    if a==60 then return True \n    if a==61 \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9waodw24.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp9waodw24.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects a positive integer\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp47g7mkse.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp47g7mkse.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8nv4i11o.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8nv4i11o.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1\n        then\
    \ return True\n    else if a == -1\n        then return True\n    else if a ==\
    \ -2\n        then return True\n    else if a == -3\n        then return True\n\
    \    else if a == -4\n        then return True\n    else if a == -5\n        then\
    \ return True\n    else if a == -6\n        then return True\n    else if a ==\
    \ -7\n        then return True\n    else if a == -8\n        then return True\n\
    \    else if a == -9\n        then return True\n    else if a == -10\n       \
    \ then return True\n    else if a == -11\n        then return True\n    else if\
    \ a == -12\n        then return True\n    else if a == -13\n        then return\
    \ True\n    else if a == -14\n        then return True\n    else if a == -15\n\
    \        then return True\n    else if a == -16\n        then return True\n  \
    \  else if a == -17\n        then return True\n    else if a == -18\n        then\
    \ return True\n    else if a == -19\n        then return True\n    else if a ==\
    \ -20\n        then return True\n    else if a == -21\n        then return True\n\
    \    else if a == -22\n        then return True\n    else if a == -23\n      \
    \  then return True\n    else if a == -24\n        then return True\n    else\
    \ if a == -25\n        then return True\n    else if a == -26\n        then return\
    \ True\n    else if a == -27\n        then return True\n    else if a == -28\n\
    \        then return True\n    else if a == -29\n        then return True\n  \
    \  else if a == -30\n        then return True\n    else if a == -31\n        then\
    \ return True\n    else if a == -32\n        then return True\n    else if a ==\
    \ -33\n        then return True\n    else if a == -34\n        then return True\n\
    \    else if a == -35\n        then return True\n    else if a == -36\n      \
    \  then return True\n    else if a == -37\n        then return True\n    else\
    \ if a == -38\n        then return True\n    else if a == -39\n        then return\
    \ True\n    else if a == -40\n        then return True\n    else if a == -41\n\
    \        then return True\n    else if a == -42\n        then return True\n  \
    \  else if a == -43\n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_1ujn0vn.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_1ujn0vn.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk7d5amzg.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpk7d5amzg.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg4ktkp6d.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpg4ktkp6d.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqq4gknsr.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqq4gknsr.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoobz7fjk.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpoobz7fjk.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph2gf8won.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmph2gf8won.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe_5wcts_.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpe_5wcts_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9lqqgmh3.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp9lqqgmh3.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpprswf25g.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpprswf25g.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True \n    else \n        cube_sum = 0\n\
    \        for i in (-a .. a) \n            cube_sum += i**3\n        return cube_sum\
    \ == a\nend\n</cell>\n<code language=julia-1.3>\niscube(1)\n</cell>\n<code language=julia-1.3>\n\
    iscube(2)\n</cell>\n<code language=julia-1.3>\niscube(-1)\n</cell>\n<code language=julia-1.3>\n\
    iscube(64)\n</cell>\n<code language=julia-1.3>\niscube(0)\n</cell>\n<code language=julia-1.3>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmploix5df8.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmploix5df8.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        cube=iscube(a-1)\n\
    \        if cube\n            then return true\n        else return false\nend\n\
    </code>\n<|/ a tags=julia,recursion |>\n<| c |>\n`iscube` can be written as `return\
    \ a==0 || iscube(a-1)`\n<|/ c |>\n<| c |>\nThanks, I didn't know that Julia had\
    \ that feature. I've edited my answer.\n<|/ c |>\n<| a dscore=1 |>\nI believe\
    \ that your problem is that you do not have a base case for your recursive function.\
    \  You have a base case for iscube(a==0) but you do not have a base case for iscube(a==1).\
    \  Therefore, your recursive function will never terminate.\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nThanks for your answer. I've edited my question to include a base\
    \ case for iscube(a==1). Still doesn't work. I've also tried iscube(a==0). Still\
    \ doesn't work. I've also tried iscube(a==-1) and iscube(a==64). Still doesn't\
    \ work. I've also tried iscube(a==-2) and iscube(a==-64). Still doesn't work.\
    \ I've also tried iscube(a==-32) and iscube(a==-128). Still doesn't work. I've\
    \ also tried iscube(a==-512) and iscube(a==-1024). Still doesn't work. I've also\
    \ tried iscube(a==-4096) and iscube(a==-4096). Still doesn't work. I've also tried\
    \ iscube(a==-32768) and iscube(a==-32768). Still doesn't work. I've also tried\
    \ iscube(a==-65536) and iscube(a==-65536). Still doesn't work. I've also tried\
    \ iscube(a==-262144) and iscube(a==-262144). Still doesn't work. I've also tried\
    \ iscube(a==-1048576) and iscube(a==-1048576). Still doesn't work. I've also tried\
    \ iscube(a==-4096) and iscube(a==-4096). Still doesn't work. I've also tried iscube(a==-32768)\
    \ and iscube(a==-32768). Still doesn't work. I've also tried iscube(a==-65536)\
    \ and iscube(a==-65536). Still doesn't work. I've also tried iscube(a==-262144)\
    \ and iscube(a==-262144)\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxgo7pjvm.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpxgo7pjvm.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True\n    else if a==1 then return True\n    else\
    \ if a==2 then return True\n    else if a==3 then return True\n    else if a==4\
    \ then return True\n    else if a==5 then return True\n    else if a==6 then return\
    \ True\n    else if a==7 then return True\n    else if a==8 then return True\n\
    \    else if a==9 then return True\n    else if a==10 then return True\n    else\
    \ if a==11 then return True\n    else if a==12 then return True\n    else if a==13\
    \ then return True\n    else if a==14 then return True\n    else if a==15 then\
    \ return True\n    else if a==16 then return True\n    else if a==17 then return\
    \ True\n    else if a==18 then return True\n    else if a==19 then return True\n\
    \    else if a==20 then return True\n    else if a==21 then return True\n    else\
    \ if a==22 then return True\n    else if a==23 then return True\n    else if a==24\
    \ then return True\n    else if a==25 then return True\n    else if a==26 then\
    \ return True\n    else if a==27 then return True\n    else if a==28 then return\
    \ True\n    else if a==29 then return True\n    else if a==30 then return True\n\
    \    else if a==31 then return True\n    else if a==32 then return True\n    else\
    \ if a==33 then return True\n    else if a==34 then return True\n    else if a==35\
    \ then return True\n    else if a==36 then return True\n    else if a==37 then\
    \ return True\n    else if a==38 then return True\n    else if a==39 then return\
    \ True\n    else if a==40 then return True\n    else if a==41 then return True\n\
    \    else if a==42 then return True\n    else if a==43 then return True\n    else\
    \ if a==44 then return True\n    else if a==45 then return True\n    else if a==46\
    \ then return True\n    else if a==47 then return True\n    else if a==48 then\
    \ return True\n    else if a==49 then return True\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpub0dvgev.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpub0dvgev.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer greater than 0\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsy54ifof.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsy54ifof.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv9cl3isa.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv9cl3isa.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvgr1egcl.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvgr1egcl.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkirncfdr.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpkirncfdr.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv0f_w3e4.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv0f_w3e4.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7if7oges.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7if7oges.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a perfect square. \n    Examples:\n\
    \    isperfect(4) ==> True\n    isperfect(16) ==> False\n    isperfect(25) ==>\
    \ True\n    isperfect(27) ==> False\n    isperfect(9) ==> True\n    isperfect(27)\
    \ ==> False\n    isperfect(0) ==> True\n    isperfect(1) ==> True\n    isperfect(2)\
    \ ==> False\n    isperfect(3) ==> False\n    isperfect(4) ==> False\n    isperfect(5)\
    \ ==> False\n    isperfect(6) ==> False\n    isperfect(7) ==> False\n    isperfect(8)\
    \ ==> False\n    isperfect(9) ==> False\n    isperfect(10) ==> False\n    isperfect(11)\
    \ ==> False\n    isperfect(12) ==> False\n    isperfect(13) ==> False\n    isperfect(14)\
    \ ==> False\n    isperfect(15) ==> False\n    isperfect(16) ==> False\n    isperfect(17)\
    \ ==> False\n    isperfect(18) ==> False\n    isperfect(19) ==> False\n    isperfect(20)\
    \ ==> False\n    isperfect(21) ==> False\n    isperfect(22) ==> False\n    isperfect(23)\
    \ ==> False\n    isperfect(24) ==> False\n    isperfect(25) ==> False\n    isperfect(26)\
    \ ==> False\n    is\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvq1sjbto.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvq1sjbto.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0d9sn40h.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp0d9sn40h.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1yolklws.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp1yolklws.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7e_7wtp_.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp7e_7wtp_.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv97b9a_h.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpv97b9a_h.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoika2kq9.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpoika2kq9.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkpumpocy.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkpumpocy.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp04vf8c21.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp04vf8c21.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube only accepts positive integers\")\n\
    \    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphjuyz4ar.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphjuyz4ar.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==-1 \n        then return true\n    else if a==2 \n    \
    \    then return true\n    else if a==3 \n        then return true\n    else if\
    \ a==4 \n        then return true\n    else if a==5 \n        then return true\n\
    \    else if a==6 \n        then return true\n    else if a==7 \n        then\
    \ return true\n    else if a==8 \n        then return true\n    else if a==9 \n\
    \        then return true\n    else if a==10 \n        then return true\n    else\
    \ if a==11 \n        then return true\n    else if a==12 \n        then return\
    \ true\n    else if a==13 \n        then return true\n    else if a==14 \n   \
    \     then return true\n    else if a==15 \n        then return true\n    else\
    \ if a==16 \n        then return true\n    else if a==17 \n        then return\
    \ true\n    else if a==18 \n        then return true\n    else if a==19 \n   \
    \     then return true\n    else if a==20 \n        then return true\n    else\
    \ if a==21 \n        then return true\n    else if a==22 \n        then return\
    \ true\n    else if a==23 \n        then return true\n    else if a==24 \n   \
    \     then return true\n    else if a==25 \n        then return true\n    else\
    \ if a==26 \n        then return true\n    else if a==27 \n        then return\
    \ true\n    else if a==28 \n        then return true\n    else if a==29 \n   \
    \     then return true\n    else if a==30 \n        then return true\n    else\
    \ if a==31 \n        then return true\n    else if a==32 \n        then return\
    \ true\n    else if a==33 \n        then return true\n    else if a==34 \n   \
    \     then return true\n    else if a==35 \n        then return true\n    else\
    \ if a==36 \n        then return true\n    else if a==37 \n        then return\
    \ true\n    else if a==38 \n        then return true\n    else if a==39 \n   \
    \     then return true\n    else if a==40 \n        then return true\n    else\
    \ if a==41 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnlbcd7c6.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpnlbcd7c6.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwlfp70ps.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpwlfp70ps.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3yx_tl_7.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp3yx_tl_7.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1 \n        then\
    \ return True\n    else if a == 2 \n        then return True\n    else if a ==\
    \ 3 \n        then return True\n    else if a == 4 \n        then return True\n\
    \    else if a == 5 \n        then return True\n    else if a == 6 \n        then\
    \ return True\n    else if a == 7 \n        then return True\n    else if a ==\
    \ 8 \n        then return True\n    else if a == 9 \n        then return True\n\
    \    else if a == 10 \n        then return True\n    else if a == 11 \n      \
    \  then return True\n    else if a == 12 \n        then return True\n    else\
    \ if a == 13 \n        then return True\n    else if a == 14 \n        then return\
    \ True\n    else if a == 15 \n        then return True\n    else if a == 16 \n\
    \        then return True\n    else if a == 17 \n        then return True\n  \
    \  else if a == 18 \n        then return True\n    else if a == 19 \n        then\
    \ return True\n    else if a == 20 \n        then return True\n    else if a ==\
    \ 21 \n        then return True\n    else if a == 22 \n        then return True\n\
    \    else if a == 23 \n        then return True\n    else if a == 24 \n      \
    \  then return True\n    else if a == 25 \n        then return True\n    else\
    \ if a == 26 \n        then return True\n    else if a == 27 \n        then return\
    \ True\n    else if a == 28 \n        then return True\n    else if a == 29 \n\
    \        then return True\n    else if a == 30 \n        then return True\n  \
    \  else if a == 31 \n        then return True\n    else if a == 32 \n        then\
    \ return True\n    else if a == 33 \n        then return True\n    else if a ==\
    \ 34 \n        then return True\n    else if a == 35 \n        then return True\n\
    \    else if a == 36 \n        then return True\n    else if a == 37 \n      \
    \  then return True\n    else if a == 38 \n        then return True\n    else\
    \ if a == 39 \n        then return True\n    else if a == 40 \n        then return\
    \ True\n    else if a == 41 \n        then return True\n    else if a == 42 \n\
    \        then return True\n    else if a == 43 \n        then return True\n  \
    \  else if a == 44 \n        then return True\n    else if a == 45 \n        then\
    \ return True\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwolahhbw.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpwolahhbw.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a==1 \n        then\
    \ return true\n    else if a==2 \n        then return true\n    else if a==3 \n\
    \        then return true\n    else if a==4 \n        then return true\n    else\
    \ if a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps6hep4hz.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmps6hep4hz.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyp7tyr46.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpyp7tyr46.jl:15\n"
  exit_code: 1
  status: Exception

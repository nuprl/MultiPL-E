name: HumanEval_77_iscube
language: julia
results:
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfapc9pni.jl:16\nin expression starting at\
    \ /tmp/tmpfapc9pni.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvsgz4h93.jl:16\nin expression starting at\
    \ /tmp/tmpvsgz4h93.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube only works with positive integers\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq90tlwbl.jl:16\nin expression starting at\
    \ /tmp/tmpq90tlwbl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7ty3etzi.jl:15\nin expression starting at /tmp/tmp7ty3etzi.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8adcxd7a.jl:15\nin expression starting at /tmp/tmp8adcxd7a.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjf37efoi.jl:14\nin expression starting at /tmp/tmpjf37efoi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp92v_6g9q.jl:14\nin expression starting at /tmp/tmp92v_6g9q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp896hqvds.jl:16\nin expression starting at\
    \ /tmp/tmp896hqvds.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj7r5njkl.jl:14\nin expression starting at /tmp/tmpj7r5njkl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpffh3y2cf.jl:14\nin expression starting at /tmp/tmpffh3y2cf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn0tkot9p.jl:14\nin expression starting at /tmp/tmpn0tkot9p.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a==1 \n        then\
    \ return true\n    else if a==2 \n        then return true\n    else if a==3 \n\
    \        then return true\n    else if a==4 \n        then return true\n    else\
    \ if a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprvr89d0a.jl:15\nin expression starting at /tmp/tmprvr89d0a.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo0h_ms4x.jl:15\nin expression starting at /tmp/tmpo0h_ms4x.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</code>\n<|/ a\
    \ tags=julia |>\n<| c |>\nThanks for your answer! I edited my question to make\
    \ it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ that uses `if` statements.\n<|/ c |>\n<| c |>\nThanks for your answer! I edited\
    \ my question to make it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a solution that uses `if` statements.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer! I edited my question to make it more clear.\n<|/ c |>\n<| a |>\n\
    I believe that your problem can be solved using Julia's built-in function Base.promote_rules.\n\
    <code>\njulia> Base.promote_rules(::Type{Int}, ::Type{Int64}) = Int64\npromote_rules\
    \ (generic function with 1 method)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgguwvf7w.jl:14\nin expression starting at /tmp/tmpgguwvf7w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnyrx1zyo.jl:15\nin expression starting at /tmp/tmpnyrx1zyo.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8crro49w.jl:15\nin expression starting at /tmp/tmp8crro49w.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbfxuzj6r.jl:15\nin expression starting at /tmp/tmpbfxuzj6r.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0edxjgdq.jl:14\nin expression starting at /tmp/tmp0edxjgdq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        if a==1 \n    \
    \        then return true\n        else \n            if a==2 \n             \
    \   then return true\n            else \n                if a==3 \n          \
    \          then return true\n                else \n                    if a==4\
    \ \n                        then return true\n                    else \n    \
    \                    if a==5 \n                            then return true\n\
    \                        else \n                            if a==6 \n       \
    \                         then return true\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return true\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a==10 \n                                           \
    \     then return true\n                                            else \n  \
    \                                              if a==11 \n                   \
    \                                 then return true\n                         \
    \                       else \n                                              \
    \      if a==12 \n                                                        then\
    \ return true\n                                                    else \n   \
    \                                                     if a==13 \n            \
    \                                                then return true\n          \
    \                                              else \n                       \
    \                                     if a==14 \n                            \
    \                                    then return true\n                      \
    \                                      else \n                               \
    \                                 if a==15 \n                                \
    \                                    then return true\n                      \
    \                                              else \n                       \
    \                                 if a==16 \n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==17 \n                                        \
    \                            then return true\n                              \
    \                                      else \n                               \
    \                         if a==18 \n                                        \
    \                    then return true\n                                      \
    \                      else \n                                               \
    \                 if a==19 \n                                                \
    \                    then return true\n                                      \
    \                              else \n                                       \
    \                 if a==20 \n                                                \
    \            then return true\n                                              \
    \              else \n                                                       \
    \         if a==21 \n                                                        \
    \            then return true\n                                              \
    \                      else \n                                               \
    \         if a==22 \n                                                        \
    \    then return true\n                                                      \
    \      else \n                                                               \
    \ if a==23 \n                                                                \
    \    then return true\n                                                      \
    \              else \n                                                       \
    \ if a==24 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==25 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==26 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==27 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==28 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==29 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==30 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==33 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==34 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==35 \n                                              \
    \                      then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg0v43rin.jl:15\nin expression starting at /tmp/tmpg0v43rin.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzvgukhrj.jl:16\nin expression starting at\
    \ /tmp/tmpzvgukhrj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else \n        return iscube(a-1)\
    \ or iscube(a*a)\nend\n</cell>\n<code language=julia-1.5>\niscube(10)\n</cell>\n\
    <code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\niscube(64)\n\
    </cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpbzwi_555.jl:14 expected \"\
    end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbzwi_555.jl:17\n\
    in expression starting at /tmp/tmpbzwi_555.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpezwsm64n.jl:14\nin expression starting at /tmp/tmpezwsm64n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3m1yl87d.jl:14\nin expression starting at /tmp/tmp3m1yl87d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else \n        return iscube(a-1)\
    \ or iscube(a*a) or iscube(a*a*a)\nend\n</cell>\n<code language=julia-1.5>\niscube(1)\n\
    </cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\
    \t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpo0kro6ak.jl:14 expected \"\
    end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo0kro6ak.jl:17\n\
    in expression starting at /tmp/tmpo0kro6ak.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4k7lvcdn.jl:16\nin expression starting at\
    \ /tmp/tmp4k7lvcdn.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else if a == 1 \n        return true\n\
    \    else if a == 2 \n        return true\n    else if a == 3 \n        return\
    \ true\n    else if a == 4 \n        return true\n    else if a == 5 \n      \
    \  return true\n    else if a == 6 \n        return true\n    else if a == 7 \n\
    \        return true\n    else if a == 8 \n        return true\n    else if a\
    \ == 9 \n        return true\n    else if a == 10 \n        return true\n    else\
    \ if a == 11 \n        return true\n    else if a == 12 \n        return true\n\
    \    else if a == 13 \n        return true\n    else if a == 14 \n        return\
    \ true\n    else if a == 15 \n        return true\n    else if a == 16 \n    \
    \    return true\n    else if a == 17 \n        return true\n    else if a ==\
    \ 18 \n        return true\n    else if a == 19 \n        return true\n    else\
    \ if a == 20 \n        return true\n    else if a == 21 \n        return true\n\
    \    else if a == 22 \n        return true\n    else if a == 23 \n        return\
    \ true\n    else if a == 24 \n        return true\n    else if a == 25 \n    \
    \    return true\n    else if a == 26 \n        return true\n    else if a ==\
    \ 27 \n        return true\n    else if a == 28 \n        return true\n    else\
    \ if a == 29 \n        return true\n    else if a == 30 \n        return true\n\
    \    else if a == 31 \n        return true\n    else if a == 32 \n        return\
    \ true\n    else if a == 33 \n        return true\n    else if a == 34 \n    \
    \    return true\n    else if a == 35 \n        return true\n    else if a ==\
    \ 36 \n        return true\n    else if a == 37 \n        return true\n    else\
    \ if a == 38 \n        return true\n    else if a == 39 \n        return true\n\
    \    else if a == 40 \n        return true\n    else if a == 41 \n        return\
    \ true\n    else if a == 42 \n        return true\n    else if a == 43 \n    \
    \    return true\n    else if a == 44 \n        return true\n    else if a ==\
    \ 45 \n        return true\n    else if a == 46 \n        return true\n    else\
    \ if a == 47 \n        return true\n    else if a == 48 \n        return true\n\
    \    else if a == 49 \n        return true\n    else if a == 50 \n        return\
    \ true\n    else if a == 51 \n        return true\n    else if a == 52 \n    \
    \    return true\n    else if a == 53 \n        return true\n    else if a ==\
    \ 54 \n        return true\n    else if a == 55\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2yq90lpf.jl:16\nin expression starting at\
    \ /tmp/tmp2yq90lpf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjyxpmlxm.jl:14\nin expression starting at /tmp/tmpjyxpmlxm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvtyhqx9m.jl:14\nin expression starting at /tmp/tmpvtyhqx9m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpghxpe1t1.jl:14\nin expression starting at /tmp/tmpghxpe1t1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjm0d9oh6.jl:15\nin expression starting at /tmp/tmpjm0d9oh6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi6vtvycd.jl:15\nin expression starting at /tmp/tmpi6vtvycd.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpny4pszju.jl:14\nin expression starting at /tmp/tmpny4pszju.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuzee7qcy.jl:15\nin expression starting at /tmp/tmpuzee7qcy.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfwr5kj2g.jl:16\nin expression starting at\
    \ /tmp/tmpfwr5kj2g.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else return False\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert iscube(2) == true\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an integer a and returns True \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    iscube(2) ==> True\n    iscube(-1) ==> True\n   \
    \ iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg5cd9013.jl:15\nin expression starting at /tmp/tmpg5cd9013.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2t13namc.jl:14\nin expression starting at /tmp/tmp2t13namc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == -1 \n        then return true\n    else if a ==\
    \ -2 \n        then return true\n    else if a == -3 \n        then return true\n\
    \    else if a == -4 \n        then return true\n    else if a == -5 \n      \
    \  then return true\n    else if a == -6 \n        then return true\n    else\
    \ if a == -7 \n        then return true\n    else if a == -8 \n        then return\
    \ true\n    else if a == -9 \n        then return true\n    else if a == 10 \n\
    \        then return true\n    else if a == 11 \n        then return true\n  \
    \  else if a == 12 \n        then return true\n    else if a == 13 \n        then\
    \ return true\n    else if a == 14 \n        then return true\n    else if a ==\
    \ 15 \n        then return true\n    else if a == 16 \n        then return true\n\
    \    else if a == 17 \n        then return true\n    else if a == 18 \n      \
    \  then return true\n    else if a == 19 \n        then return true\n    else\
    \ if a == 20 \n        then return true\n    else if a == 21 \n        then return\
    \ true\n    else if a == 22 \n        then return true\n    else if a == 23 \n\
    \        then return true\n    else if a == 24 \n        then return true\n  \
    \  else if a == 25 \n        then return true\n    else if a == 26 \n        then\
    \ return true\n    else if a == 27 \n        then return true\n    else if a ==\
    \ 28 \n        then return true\n    else if a == 29 \n        then return true\n\
    \    else if a == 30 \n        then return true\n    else if a == 31 \n      \
    \  then return true\n    else if a == 32 \n        then return true\n    else\
    \ if a == 33 \n        then return true\n    else if a == 34 \n        then return\
    \ true\n    else if a == 35 \n        then return true\n    else if a == 36 \n\
    \        then return true\n    else if a == 37 \n        then return true\n  \
    \  else if a == 38 \n        then return true\n    else if a == 39 \n        then\
    \ return true\n    else if a == 40 \n        then return true\n    else if a ==\
    \ 41 \n        then return true\n    else if a == 42 \n        then return true\n\
    \    else if a == 43 \n        then return true\n    else if a == 44 \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl3wvs29y.jl:15\nin expression starting at /tmp/tmpl3wvs29y.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%3 != 0 \n        then\
    \ return false\n    else \n        return iscube(a/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns a vector\
    \ of integers \nwhere each element is the product of all the integers in the original\
    \ vector. \nExamples:\n    product([1,2,3]) ==> 6\n    product([1,3,5]) ==> 15\n\
    \    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5]) ==> 15\n    product([1,3,5])\
    \ ==> 15\n    product\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5r48mg3i.jl:15\nin expression starting at /tmp/tmp5r48mg3i.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%4 == 0\n        then\
    \ return true\n    else if a%8 == 0\n        then return true\n    else if a%16\
    \ == 0\n        then return true\n    else if a%32 == 0\n        then return true\n\
    \    else if a%64 == 0\n        then return true\n    else return false\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert iscube(1) == true\n@assert iscube(2)\
    \ == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n@assert iscube(0)\
    \ == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an integer a and returns True \n    if this ingeger is a\
    \ perfect power of some integer number.\n    Note: you may assume the input is\
    \ always valid.\n    Examples:\n    isperfect(1) ==> True\n    isperfect(2) ==>\
    \ True\n    isperfect(3) ==> True\n    isperfect(4) ==> False\n    isperfect(5)\
    \ ==> False\n    isperfect(6) ==> False\n    isperfect(7) ==> False\n    isperfect(8)\
    \ ==> False\n    isperfect(9) ==> False\n    isperfect(10) ==> False\n    isperfect(11)\
    \ ==> False\n    isperfect(12) ==> False\n    isperfect(13) ==> False\n    isperfect(14)\
    \ ==> False\n    isperfect(15) ==> False\n    isperfect(16) ==> False\n    isperfect(17)\
    \ ==> False\n    isperfect(18) ==> False\n    isperfect(19) ==> False\n    isperfect(20)\
    \ ==> False\n    isperfect(21) ==> False\n    isperfect(22) ==> False\n    isperfect(23)\
    \ ==> False\n    isperfect(24) ==> False\n    isperfect(25) ==> False\n    isperfect(26)\
    \ ==> False\n    isperfect(27) ==> False\n    isperfect(28) ==> False\n    isperfect(29)\
    \ ==> False\n    isperfect(30) ==> False\n    isperfect(31) ==> False\n    isperfect(32)\
    \ ==> False\n    isperfect(33) ==> False\n    isperfect(34) ==> False\n    isperfect(35)\
    \ ==> False\n    isperfect(36) ==> False\n    isperfect(37) ==> False\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphp559xev.jl:15\nin expression starting at /tmp/tmphp559xev.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw_0xhu18.jl:15\nin expression starting at /tmp/tmpw_0xhu18.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsst0cb6e.jl:14\nin expression starting at /tmp/tmpsst0cb6e.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4bx9nofs.jl:14\nin expression starting at /tmp/tmp4bx9nofs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</code>\n<|/ a\
    \ tags=julia,if-statement |>\n<| a |>\nIn Julia 1.3 you can use the ternary operator\
    \ ?. to write an if-else statement:\n<code>\njulia> iscube(x::Int64) = x == 0\
    \ || x == 1 ? true : false\niscube (generic function with 1 method)\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_mb9am37.jl:14\nin expression starting at /tmp/tmp_mb9am37.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps_z97b3p.jl:15\nin expression starting at /tmp/tmps_z97b3p.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else \n        then return false\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Write a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplhcsjgz3.jl:15\nin expression starting at /tmp/tmplhcsjgz3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==-1 \n        then return true\n    else if a==2 \n    \
    \    then return true\n    else if a==3 \n        then return true\n    else if\
    \ a==4 \n        then return true\n    else if a==5 \n        then return true\n\
    \    else if a==6 \n        then return true\n    else if a==7 \n        then\
    \ return true\n    else if a==8 \n        then return true\n    else if a==9 \n\
    \        then return true\n    else if a==10 \n        then return true\n    else\
    \ if a==11 \n        then return true\n    else if a==12 \n        then return\
    \ true\n    else if a==13 \n        then return true\n    else if a==14 \n   \
    \     then return true\n    else if a==15 \n        then return true\n    else\
    \ if a==16 \n        then return true\n    else if a==17 \n        then return\
    \ true\n    else if a==18 \n        then return true\n    else if a==19 \n   \
    \     then return true\n    else if a==20 \n        then return true\n    else\
    \ if a==21 \n        then return true\n    else if a==22 \n        then return\
    \ true\n    else if a==23 \n        then return true\n    else if a==24 \n   \
    \     then return true\n    else if a==25 \n        then return true\n    else\
    \ if a==26 \n        then return true\n    else if a==27 \n        then return\
    \ true\n    else if a==28 \n        then return true\n    else if a==29 \n   \
    \     then return true\n    else if a==30 \n        then return true\n    else\
    \ if a==31 \n        then return true\n    else if a==32 \n        then return\
    \ true\n    else if a==33 \n        then return true\n    else if a==34 \n   \
    \     then return true\n    else if a==35 \n        then return true\n    else\
    \ if a==36 \n        then return true\n    else if a==37 \n        then return\
    \ true\n    else if a==38 \n        then return true\n    else if a==39 \n   \
    \     then return true\n    else if a==40 \n        then return true\n    else\
    \ if a==41 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcnoxxc43.jl:15\nin expression starting at /tmp/tmpcnoxxc43.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp653776l8.jl:14\nin expression starting at /tmp/tmp653776l8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3vglaveo.jl:14\nin expression starting at /tmp/tmp3vglaveo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbgoji5ug.jl:15\nin expression starting at /tmp/tmpbgoji5ug.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxnco4a5b.jl:16\nin expression starting at\
    \ /tmp/tmpxnco4a5b.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false \n    else \n        return iscube(a*a)\
    \ == true \nend\n</cell>\n<code language=julia-1.5>\niscube(1)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\niscube(-1)\n\
    </cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a square of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    issquare(2) ==> True\n    issquare(4)\
    \ ==> False\n    issquare(-1) ==> True\n    issquare(64) ==> True\n    issquare(0)\
    \ ==> True\n    issquare(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx8cnmw19.jl:19\nin expression starting at\
    \ /tmp/tmpx8cnmw19.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxixhwt7n.jl:15\nin expression starting at /tmp/tmpxixhwt7n.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppodygaag.jl:14\nin expression starting at /tmp/tmppodygaag.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwcq2iixh.jl:15\nin expression starting at /tmp/tmpwcq2iixh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5pb0xz7g.jl:14\nin expression starting at /tmp/tmp5pb0xz7g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%3 ==0 \n        then\
    \ return true\n    else return false\nend\n</cell>\n<code language=julia-1.0>\n\
    iscube(1)\n</cell>\n<code language=julia-1.0>\niscube(2)\n</cell>\n<code language=julia-1.0>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.0>\niscube(64)\n</cell>\n<code language=julia-1.0>\n\
    iscube(0)\n</cell>\n<code language=julia-1.0>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a square of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    issquare(2) ==> True\n    issquare(4)\
    \ ==> False\n    issquare(-1) ==> True\n    issquare(64) ==> True\n    issquare(0)\
    \ ==> True\n    issquare(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw3xj8ahc.jl:15\nin expression starting at /tmp/tmpw3xj8ahc.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcj6h7uzp.jl:14\nin expression starting at /tmp/tmpcj6h7uzp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvaivobw8.jl:15\nin expression starting at /tmp/tmpvaivobw8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp10p4sqsq.jl:14\nin expression starting at /tmp/tmp10p4sqsq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else \n        if a==1 \n    \
    \        then return True\n        else \n            if a==2 \n             \
    \   then return True\n            else \n                if a==3 \n          \
    \          then return True\n                else \n                    if a==4\
    \ \n                        then return True\n                    else \n    \
    \                    if a==5 \n                            then return True\n\
    \                        else \n                            if a==6 \n       \
    \                         then return True\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return True\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ True\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ True\n                                        else return False\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis does not answer the question. The question asks\
    \ for a function that takes an integer and returns a boolean.\n<|/ c |>\n<| c\
    \ |>\nThe question asks for a function that takes an integer and returns a boolean.\n\
    <|/ c |>\n<| c |>\nThe question asks for a function that takes an integer and\
    \ returns a boolean.\n<|/ c |>\n<| c |>\nThe question asks for a function that\
    \ takes an integer and returns a boolean.\n<|/ c |>\n<| c |>\nThe question asks\
    \ for a function that takes an integer and returns a boolean.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj0v8_uzk.jl:15\nin expression starting at /tmp/tmpj0v8_uzk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp33bked9s.jl:15\nin expression starting at /tmp/tmp33bked9s.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpusl28djr.jl:14\nin expression starting at /tmp/tmpusl28djr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpar263txa.jl:14\nin expression starting at /tmp/tmpar263txa.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpml80asha.jl:14\nin expression starting at /tmp/tmpml80asha.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpytrku380.jl:14\nin expression starting at /tmp/tmpytrku380.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoylwns2p.jl:16\nin expression starting at\
    \ /tmp/tmpoylwns2p.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyrl_tz9t.jl:14\nin expression starting at /tmp/tmpyrl_tz9t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True\n    if a==1 then return True\n    if a==2 then\
    \ return True\n    if a==3 then return True\n    if a==4 then return True\n  \
    \  if a==5 then return True\n    if a==6 then return True\n    if a==7 then return\
    \ True\n    if a==8 then return True\n    if a==9 then return True\n    if a==10\
    \ then return True\n    if a==11 then return True\n    if a==12 then return True\n\
    \    if a==13 then return True\n    if a==14 then return True\n    if a==15 then\
    \ return True\n    if a==16 then return True\n    if a==17 then return True\n\
    \    if a==18 then return True\n    if a==19 then return True\n    if a==20 then\
    \ return True\n    if a==21 then return True\n    if a==22 then return True\n\
    \    if a==23 then return True\n    if a==24 then return True\n    if a==25 then\
    \ return True\n    if a==26 then return True\n    if a==27 then return True\n\
    \    if a==28 then return True\n    if a==29 then return True\n    if a==30 then\
    \ return True\n    if a==31 then return True\n    if a==32 then return True\n\
    \    if a==33 then return True\n    if a==34 then return True\n    if a==35 then\
    \ return True\n    if a==36 then return True\n    if a==37 then return True\n\
    \    if a==38 then return True\n    if a==39 then return True\n    if a==40 then\
    \ return True\n    if a==41 then return True\n    if a==42 then return True\n\
    \    if a==43 then return True\n    if a==44 then return True\n    if a==45 then\
    \ return True\n    if a==46 then return True\n    if a==47 then return True\n\
    \    if a==48 then return True\n    if a==49 then return True\n    if a==50 then\
    \ return True\n    if a==51 then return True\n    if a==52 then return True\n\
    \    if a==53 then return True\n    if a==54 then return True\n    if a==55 then\
    \ return True\n    if a==56 then return True\n    if a==57 then return True\n\
    \    if a==58 then return True\n    if a==59 then return True\n    if a==60 then\
    \ return True\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsa5tm673.jl:14\nin expression starting at /tmp/tmpsa5tm673.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_abpua_n.jl:16\nin expression starting at\
    \ /tmp/tmp_abpua_n.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdfan9hof.jl:14\nin expression starting at /tmp/tmpdfan9hof.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7h5jiyq8.jl:16\nin expression starting at\
    \ /tmp/tmp7h5jiyq8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        if a==1 \n    \
    \        then return true\n        else \n            if a==2 \n             \
    \   then return true\n            else \n                if a==3 \n          \
    \          then return true\n                else \n                    if a==4\
    \ \n                        then return true\n                    else \n    \
    \                    if a==5 \n                            then return true\n\
    \                        else \n                            if a==6 \n       \
    \                         then return true\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return true\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a==10 \n                                           \
    \     then return true\n                                            else \n  \
    \                                              if a==11 \n                   \
    \                                 then return true\n                         \
    \                       else \n                                              \
    \      if a==12 \n                                                        then\
    \ return true\n                                                    else \n   \
    \                                                     if a==13 \n            \
    \                                                then return true\n          \
    \                                              else \n                       \
    \                                     if a==14 \n                            \
    \                                    then return true\n                      \
    \                                      else \n                               \
    \                                 if a==15 \n                                \
    \                                    then return true\n                      \
    \                                              else \n                       \
    \                                 if a==16 \n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==17 \n                                        \
    \                            then return true\n                              \
    \                                      else \n                               \
    \                         if a==18 \n                                        \
    \                    then return true\n                                      \
    \                      else \n                                               \
    \                 if a==19 \n                                                \
    \                    then return true\n                                      \
    \                              else \n                                       \
    \                 if a==20 \n                                                \
    \            then return true\n                                              \
    \              else \n                                                       \
    \         if a==21 \n                                                        \
    \            then return true\n                                              \
    \                      else \n                                               \
    \         if a==22 \n                                                        \
    \    then return true\n                                                      \
    \      else \n                                                               \
    \ if a==23 \n                                                                \
    \    then return true\n                                                      \
    \              else \n                                                       \
    \ if a==24 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==25 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==26 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==27 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==28 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==29 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==30 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==33 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==34 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==35 \n                                              \
    \                      then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpptvpffnk.jl:15\nin expression starting at /tmp/tmpptvpffnk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1 \n        then\
    \ return True\n    else if a == 2 \n        then return True\n    else if a ==\
    \ 3 \n        then return True\n    else if a == 4 \n        then return True\n\
    \    else if a == 5 \n        then return True\n    else if a == 6 \n        then\
    \ return True\n    else if a == 7 \n        then return True\n    else if a ==\
    \ 8 \n        then return True\n    else if a == 9 \n        then return True\n\
    \    else if a == 10 \n        then return True\n    else if a == 11 \n      \
    \  then return True\n    else if a == 12 \n        then return True\n    else\
    \ if a == 13 \n        then return True\n    else if a == 14 \n        then return\
    \ True\n    else if a == 15 \n        then return True\n    else if a == 16 \n\
    \        then return True\n    else if a == 17 \n        then return True\n  \
    \  else if a == 18 \n        then return True\n    else if a == 19 \n        then\
    \ return True\n    else if a == 20 \n        then return True\n    else if a ==\
    \ 21 \n        then return True\n    else if a == 22 \n        then return True\n\
    \    else if a == 23 \n        then return True\n    else if a == 24 \n      \
    \  then return True\n    else if a == 25 \n        then return True\n    else\
    \ if a == 26 \n        then return True\n    else if a == 27 \n        then return\
    \ True\n    else if a == 28 \n        then return True\n    else if a == 29 \n\
    \        then return True\n    else if a == 30 \n        then return True\n  \
    \  else if a == 31 \n        then return True\n    else if a == 32 \n        then\
    \ return True\n    else if a == 33 \n        then return True\n    else if a ==\
    \ 34 \n        then return True\n    else if a == 35 \n        then return True\n\
    \    else if a == 36 \n        then return True\n    else if a == 37 \n      \
    \  then return True\n    else if a == 38 \n        then return True\n    else\
    \ if a == 39 \n        then return True\n    else if a == 40 \n        then return\
    \ True\n    else if a == 41 \n        then return True\n    else if a == 42 \n\
    \        then return True\n    else if a == 43 \n        then return True\n  \
    \  else if a == 44 \n        then return True\n    else if a == 45 \n        then\
    \ return True\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe6v3obe1.jl:15\nin expression starting at /tmp/tmpe6v3obe1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else \n        return iscube(a-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer\
    \ a and returns True if \nthe integer is a power of two. \nExamples:\nispoweroftwo(2)\
    \ ==> True\nispoweroftwo(3) ==> True\nispoweroftwo(4) ==> False\nispoweroftwo(5)\
    \ ==> False\nispoweroftwo(6) ==> False\nispoweroftwo(7) ==> False\nispoweroftwo(8)\
    \ ==> True\nispoweroftwo(9) ==> True\nispoweroftwo(10) ==> False\nispoweroftwo(11)\
    \ ==> False\nispoweroftwo(12) ==> False\nispoweroftwo(13) ==> False\nispoweroftwo(14)\
    \ ==> False\nispoweroftwo(15) ==> False\nispoweroftwo(16) ==> False\nispoweroftwo(17)\
    \ ==> False\nispoweroftwo(18) ==> False\nispoweroftwo(19) ==> False\nispoweroftwo(20)\
    \ ==> False\nispoweroftwo(21) ==> False\nispoweroftwo(22) ==> False\nispoweroftwo(23)\
    \ ==> False\nispoweroftwo(24) ==> False\nispoweroftwo(25) ==> False\nispoweroftwo(26)\
    \ ==> False\nispoweroftwo(27) ==> False\nispoweroftwo(28) ==> False\nispoweroftwo(29)\
    \ ==> False\nispoweroftwo(30) ==> False\nispoweroftwo(31) ==> False\nispoweroftwo(32)\
    \ ==> False\nispoweroftwo(33) ==> False\nispoweroftwo(34) ==> False\nispoweroftwo\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5b500uu3.jl:15\nin expression starting at /tmp/tmp5b500uu3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40fz6dk9.jl:16\nin expression starting at\
    \ /tmp/tmp40fz6dk9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpix5tqywp.jl:15\nin expression starting at /tmp/tmpix5tqywp.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptg6tehsp.jl:14\nin expression starting at /tmp/tmptg6tehsp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp34rvjfi7.jl:15\nin expression starting at /tmp/tmp34rvjfi7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a square of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    issquare(2)\
    \ ==> True\n    issquare(3) ==> False\n    issquare(-1) ==> True\n    issquare(64)\
    \ ==> False\n    issquare(0) ==> True\n    issquare(180) ==> True\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoz5vkuwi.jl:14\nin expression starting at /tmp/tmpoz5vkuwi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a == 1 then return True \n    else\
    \ if a == 2 then return True \n    else if a == 3 then return True \n    else\
    \ if a == 4 then return True \n    else if a == 5 then return True \n    else\
    \ if a == 6 then return True \n    else if a == 7 then return True \n    else\
    \ if a == 8 then return True \n    else if a == 9 then return True \n    else\
    \ if a == 10 then return True \n    else if a == 11 then return True \n    else\
    \ if a == 12 then return True \n    else if a == 13 then return True \n    else\
    \ if a == 14 then return True \n    else if a == 15 then return True \n    else\
    \ if a == 16 then return True \n    else if a == 17 then return True \n    else\
    \ if a == 18 then return True \n    else if a == 19 then return True \n    else\
    \ if a == 20 then return True \n    else if a == 21 then return True \n    else\
    \ if a == 22 then return True \n    else if a == 23 then return True \n    else\
    \ if a == 24 then return True \n    else if a == 25 then return True \n    else\
    \ if a == 26 then return True \n    else if a == 27 then return True \n    else\
    \ if a == 28 then return True \n    else if a == 29 then return True \n    else\
    \ if a == 30 then return True \n    else if a == 31 then return True \n    else\
    \ if a == 32 then return True \n    else if a == 33 then return True \n    else\
    \ if a == 34 then return True \n    else if a == 35 then return True \n    else\
    \ if a == 36 then return True \n    else if a == 37 then return True \n    else\
    \ if a == 38 then return True \n    else if a == 39 then return True \n    else\
    \ if a == 40 then return True \n    else if a == 41 then return True \n    else\
    \ if a == 42 then return True \n    else if a == 43 then return True \n    else\
    \ if a == 44 then return True \n    else if a == 45 then return True \n    else\
    \ if a == 46 then return True \n    else if a == 47 then return True \n    else\
    \ if a == 48 then return True \n    else if a == 49 then return True \n    else\
    \ if a == 50 then return True \n    else if a == 51 then return True \n    else\
    \ if a == 52 then return True \n    else if a == 53 then return True \n    else\
    \ if a == 54 then return True \n    else if a == \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2zg34396.jl:14\nin expression starting at /tmp/tmp2zg34396.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl9izbq52.jl:14\nin expression starting at /tmp/tmpl9izbq52.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph9fjuh0g.jl:14\nin expression starting at /tmp/tmph9fjuh0g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr9y8jb9e.jl:14\nin expression starting at /tmp/tmpr9y8jb9e.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        cube=true\n   \
    \     for i=1:a\n            cube=cube and iscube(i*i)\n        end\n        return\
    \ cube\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| a dscore=1 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmbw6r0lb.jl:15\nin expression starting at /tmp/tmpmbw6r0lb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnnli26e_.jl:15\nin expression starting at /tmp/tmpnnli26e_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if isodd(a)\n        then\
    \ return false\n    else \n        cube_sum = 0\n        for i = 1 to a\n    \
    \        cube_sum = cube_sum + i\n            if cube_sum == a\n             \
    \   then return true\n            end\n        end\n        return false\n   \
    \ end\nend\n</cell>\n<code language=julia-1.0>\n@assert iscube(1) == true\n@assert\
    \ iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nProblem\
    \ 7: Write a function that takes an integer a and returns True if this ingeger\
    \ is a perfect cube.\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzyn2vg18.jl:15\nin expression starting at /tmp/tmpzyn2vg18.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == -1 \n        then return true\n    else if a ==\
    \ 2 \n        then return true\n    else if a == 3 \n        then return true\n\
    \    else if a == 4 \n        then return true\n    else if a == 5 \n        then\
    \ return true\n    else if a == 6 \n        then return true\n    else if a ==\
    \ 7 \n        then return true\n    else if a == 8 \n        then return true\n\
    \    else if a == 9 \n        then return true\n    else if a == 10 \n       \
    \ then return true\n    else if a == 11 \n        then return true\n    else if\
    \ a == 12 \n        then return true\n    else if a == 13 \n        then return\
    \ true\n    else if a == 14 \n        then return true\n    else if a == 15 \n\
    \        then return true\n    else if a == 16 \n        then return true\n  \
    \  else if a == 17 \n        then return true\n    else if a == 18 \n        then\
    \ return true\n    else if a == 19 \n        then return true\n    else if a ==\
    \ 20 \n        then return true\n    else if a == 21 \n        then return true\n\
    \    else if a == 22 \n        then return true\n    else if a == 23 \n      \
    \  then return true\n    else if a == 24 \n        then return true\n    else\
    \ if a == 25 \n        then return true\n    else if a == 26 \n        then return\
    \ true\n    else if a == 27 \n        then return true\n    else if a == 28 \n\
    \        then return true\n    else if a == 29 \n        then return true\n  \
    \  else if a == 30 \n        then return true\n    else if a == 31 \n        then\
    \ return true\n    else if a == 32 \n        then return true\n    else if a ==\
    \ 33 \n        then return true\n    else if a == 34 \n        then return true\n\
    \    else if a == 35 \n        then return true\n    else if a == 36 \n      \
    \  then return true\n    else if a == 37 \n        then return true\n    else\
    \ if a == 38 \n        then return true\n    else if a == 39 \n        then return\
    \ true\n    else if a == 40 \n        then return true\n    else if a == 41 \n\
    \        then return true\n    else if a == 42 \n        then return true\n  \
    \  else if a == 43 \n        then return true\n    else if a == 44 \n        then\
    \ return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp42an4gyo.jl:15\nin expression starting at /tmp/tmp42an4gyo.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == -1\n        then return true\n    else if a ==\
    \ 2\n        then return true\n    else if a == -2\n        then return true\n\
    \    else if a == 3\n        then return true\n    else if a == -3\n        then\
    \ return true\n    else if a == 4\n        then return true\n    else if a ==\
    \ -4\n        then return true\n    else if a == 5\n        then return true\n\
    \    else if a == -5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == -6\n        then return true\n    else if a ==\
    \ 7\n        then return true\n    else if a == -7\n        then return true\n\
    \    else if a == 8\n        then return true\n    else if a == -8\n        then\
    \ return true\n    else if a == 9\n        then return true\n    else if a ==\
    \ -9\n        then return true\n    else if a == 10\n        then return true\n\
    \    else if a == -10\n        then return true\n    else if a == 11\n       \
    \ then return true\n    else if a == -11\n        then return true\n    else if\
    \ a == 12\n        then return true\n    else if a == -12\n        then return\
    \ true\n    else if a == 13\n        then return true\n    else if a == -13\n\
    \        then return true\n    else if a == 14\n        then return true\n   \
    \ else if a == -14\n        then return true\n    else if a == 15\n        then\
    \ return true\n    else if a == -15\n        then return true\n    else if a ==\
    \ 16\n        then return true\n    else if a == -16\n        then return true\n\
    \    else if a == 17\n        then return true\n    else if a == -17\n       \
    \ then return true\n    else if a == 18\n        then return true\n    else if\
    \ a == -18\n        then return true\n    else if a == 19\n        then return\
    \ true\n    else if a == -19\n        then return true\n    else if a == 20\n\
    \        then return true\n    else if a == -20\n        then return true\n  \
    \  else if a == 21\n        then return true\n    else if a == -21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ -22\n        then return true\n    else if a == 23\n        then return true\n\
    \    else if a == -23\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfqmbi0f7.jl:15\nin expression starting at /tmp/tmpfqmbi0f7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjk3cpx7x.jl:16\nin expression starting at\
    \ /tmp/tmpjk3cpx7x.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a==1 \n        then\
    \ return true\n    else if a==2 \n        then return true\n    else if a==3 \n\
    \        then return true\n    else if a==4 \n        then return true\n    else\
    \ if a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyd90vdxg.jl:15\nin expression starting at /tmp/tmpyd90vdxg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3gnemw2y.jl:14\nin expression starting at /tmp/tmp3gnemw2y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe2a8kjs1.jl:15\nin expression starting at /tmp/tmpe2a8kjs1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph0y81vl4.jl:14\nin expression starting at /tmp/tmph0y81vl4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq1w0ykx1.jl:14\nin expression starting at /tmp/tmpq1w0ykx1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo2lkadrg.jl:14\nin expression starting at /tmp/tmpo2lkadrg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3ayp9dr.jl:14\nin expression starting at /tmp/tmpj3ayp9dr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprov_4isp.jl:14\nin expression starting at /tmp/tmprov_4isp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube only works with positive integers\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp07t9jxq1.jl:16\nin expression starting at\
    \ /tmp/tmp07t9jxq1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw_ne_p86.jl:14\nin expression starting at /tmp/tmpw_ne_p86.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpthh6zz6j.jl:14\nin expression starting at /tmp/tmpthh6zz6j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ofieog3.jl:15\nin expression starting at /tmp/tmp0ofieog3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7r2fqfgd.jl:15\nin expression starting at /tmp/tmp7r2fqfgd.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True \n    else \n        if a < 0 \n\
    \            then return False \n        else \n            if a < 3 \n      \
    \          then return True \n            else \n                if a < 9 \n \
    \                   then return True \n                else \n               \
    \     if a < 27 \n                        then return True \n                \
    \    else \n                        if a < 81 \n                            then\
    \ return True \n                        else \n                            if\
    \ a < 123 \n                                then return True \n              \
    \              else \n                                if iscube(a/3) == True \n\
    \                                    then return True \n                     \
    \           else \n                                    return False \nend \n</cell>\n\
    <code language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp03a9g3lw.jl:15\nin expression starting at /tmp/tmp03a9g3lw.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv84r1qy_.jl:14\nin expression starting at /tmp/tmpv84r1qy_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1\n        then return\
    \ true\n    else if a == -1\n        then return true\n    else if a == 2\n  \
    \      then return true\n    else if a == -2\n        then return true\n    else\
    \ if a == 3\n        then return true\n    else if a == -3\n        then return\
    \ true\n    else if a == 4\n        then return true\n    else if a == -4\n  \
    \      then return true\n    else if a == 5\n        then return true\n    else\
    \ if a == -5\n        then return true\n    else if a == 6\n        then return\
    \ true\n    else if a == -6\n        then return true\n    else if a == 7\n  \
    \      then return true\n    else if a == -7\n        then return true\n    else\
    \ if a == 8\n        then return true\n    else if a == -8\n        then return\
    \ true\n    else if a == 9\n        then return true\n    else if a == -9\n  \
    \      then return true\n    else if a == 10\n        then return true\n    else\
    \ if a == -10\n        then return true\n    else if a == 11\n        then return\
    \ true\n    else if a == -11\n        then return true\n    else if a == 12\n\
    \        then return true\n    else if a == -12\n        then return true\n  \
    \  else if a == 13\n        then return true\n    else if a == -13\n        then\
    \ return true\n    else if a == 14\n        then return true\n    else if a ==\
    \ -14\n        then return true\n    else if a == 15\n        then return true\n\
    \    else if a == -15\n        then return true\n    else if a == 16\n       \
    \ then return true\n    else if a == -16\n        then return true\n    else if\
    \ a == 17\n        then return true\n    else if a == -17\n        then return\
    \ true\n    else if a == 18\n        then return true\n    else if a == -18\n\
    \        then return true\n    else if a == 19\n        then return true\n   \
    \ else if a == -19\n        then return true\n    else if a == 20\n        then\
    \ return true\n    else if a == -20\n        then return true\n    else if a ==\
    \ 21\n        then return true\n    else if a == -21\n        then return true\n\
    \    else if a == 22\n        then return true\n    else if a == -22\n       \
    \ then return true\n    else if a == 23\n        then return true\n    else if\
    \ a == -\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp846qgip0.jl:15\nin expression starting at /tmp/tmp846qgip0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else \n        if a < 0 \n \
    \           then return False\n        else \n            if a < 9 \n        \
    \        then return True\n            else \n                if a < 99 \n   \
    \                 then return True\n                else \n                  \
    \  if a < 999 \n                        then return True\n                   \
    \ else \n                        if a < 9999 \n                            then\
    \ return True\n                        else \n                            if a\
    \ < 99999 \n                                then return True\n               \
    \             else \n                                if iscube(a/100000000)\n\
    \                                    then return True\n                      \
    \          else \n                                    return False\n</code>\n\
    <|/ a tags=recursion,math,haskell,algorithm |>\n<| c |>\nThis does not answer\
    \ the question. `iscube` does not take an integer, it takes an integer and returns\
    \ a boolean.\n<|/ c |>\n<| c |>\nI agree with you. My answer was more a comment\
    \ than an answer. I'll edit my answer to make it more clear.\n<|/ c |>\n<| c |>\n\
    I edited my answer to make it more clear. Thanks for pointing out.\n<|/ c |>\n\
    <| a tags=recursion,math,haskell,algorithm |>\n<code>\niscube :: Int -> Bool\n\
    iscube n = n == 0 || n == 1 || n == 2 || n == 3 || n == 4 || n == 5 || n == 6\
    \ || n == 7 || n == 8 || n == 9 || n == 10 || n == 11 || n == 12 || n == 13 ||\
    \ n == 14 || n == 15 || n == 16 || n == 17 || n == 18 || n == 19 || n == 20 ||\
    \ n == 21 || n == 22 || n == 23 || n == 24 || n == 25 || n == 26 || n == 27 ||\
    \ n == 28 || n == 29 || n == 30 || n == 31 || n == 32 || n == 33 || n == 34 ||\
    \ n == 35 || n == 36 || n == 37 || n == 38 || n == 39 || n == 40 || n == 41 ||\
    \ n == 42 || n == 43 || n == 44 || n == 45 || n == 46 || n == 47 || n == 48 ||\
    \ n == 49 || n == 50 || n == 51 || n == 52 || n == 53 || n == 54 || n == 55 ||\
    \ n == 56 || n == 57 || n == 58 || n == 59 || n == 60 || n == 61 || n == 62 ||\
    \ n == 63 || n == 64 || n == 65 || n == 66 || n == 67 || n == 68 || n == 69 ||\
    \ n == 70 || n == 71 || n == 72 || n == 73 || n == 74 || n == 75 || n == 76 ||\
    \ n == 77 || n == 78 || n == 79 || n == 80 || n == 81 || n == 82 || n == 8\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnzzdj0ul.jl:15\nin expression starting at /tmp/tmpnzzdj0ul.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqb4fjvax.jl:14\nin expression starting at /tmp/tmpqb4fjvax.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        then return false\n    else if a == 0 \n        then\
    \ return true\n    else if a == 1 \n        then return true\n    else if a ==\
    \ 2 \n        then return true\n    else if a == 3 \n        then return true\n\
    \    else if a == 4 \n        then return true\n    else if a == 5 \n        then\
    \ return true\n    else if a == 6 \n        then return true\n    else if a ==\
    \ 7 \n        then return true\n    else if a == 8 \n        then return true\n\
    \    else if a == 9 \n        then return true\n    else if a == 10 \n       \
    \ then return true\n    else if a == 11 \n        then return true\n    else if\
    \ a == 12 \n        then return true\n    else if a == 13 \n        then return\
    \ true\n    else if a == 14 \n        then return true\n    else if a == 15 \n\
    \        then return true\n    else if a == 16 \n        then return true\n  \
    \  else if a == 17 \n        then return true\n    else if a == 18 \n        then\
    \ return true\n    else if a == 19 \n        then return true\n    else if a ==\
    \ 20 \n        then return true\n    else if a == 21 \n        then return true\n\
    \    else if a == 22 \n        then return true\n    else if a == 23 \n      \
    \  then return true\n    else if a == 24 \n        then return true\n    else\
    \ if a == 25 \n        then return true\n    else if a == 26 \n        then return\
    \ true\n    else if a == 27 \n        then return true\n    else if a == 28 \n\
    \        then return true\n    else if a == 29 \n        then return true\n  \
    \  else if a == 30 \n        then return true\n    else if a == 31 \n        then\
    \ return true\n    else if a == 32 \n        then return true\n    else if a ==\
    \ 33 \n        then return true\n    else if a == 34 \n        then return true\n\
    \    else if a == 35 \n        then return true\n    else if a == 36 \n      \
    \  then return true\n    else if a == 37 \n        then return true\n    else\
    \ if a == 38 \n        then return true\n    else if a == 39 \n        then return\
    \ true\n    else if a == 40 \n        then return true\n    else if a == 41 \n\
    \        then return true\n    else if a == 42 \n        then return true\n  \
    \  else if a == 43 \n        then return true\n    else if a == 44 \n        then\
    \ return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphum14t6s.jl:15\nin expression starting at /tmp/tmphum14t6s.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm_dlljyo.jl:15\nin expression starting at /tmp/tmpm_dlljyo.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpafhgjd1r.jl:15\nin expression starting at /tmp/tmpafhgjd1r.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0\n        true\n    else if a == 1\n        true\n    else if a ==\
    \ 2\n        true\n    else if a == 3\n        true\n    else if a == 4\n    \
    \    true\n    else if a == 5\n        true\n    else if a == 6\n        true\n\
    \    else if a == 7\n        true\n    else if a == 8\n        true\n    else\
    \ if a == 9\n        true\n    else if a == 10\n        true\n    else if a ==\
    \ 11\n        true\n    else if a == 12\n        true\n    else if a == 13\n \
    \       true\n    else if a == 14\n        true\n    else if a == 15\n       \
    \ true\n    else if a == 16\n        true\n    else if a == 17\n        true\n\
    \    else if a == 18\n        true\n    else if a == 19\n        true\n    else\
    \ if a == 20\n        true\n    else if a == 21\n        true\n    else if a ==\
    \ 22\n        true\n    else if a == 23\n        true\n    else if a == 24\n \
    \       true\n    else if a == 25\n        true\n    else if a == 26\n       \
    \ true\n    else if a == 27\n        true\n    else if a == 28\n        true\n\
    \    else if a == 29\n        true\n    else if a == 30\n        true\n    else\
    \ if a == 31\n        true\n    else if a == 32\n        true\n    else if a ==\
    \ 33\n        true\n    else if a == 34\n        true\n    else if a == 35\n \
    \       true\n    else if a == 36\n        true\n    else if a == 37\n       \
    \ true\n    else if a == 38\n        true\n    else if a == 39\n        true\n\
    \    else if a == 40\n        true\n    else if a == 41\n        true\n    else\
    \ if a == 42\n        true\n    else if a == 43\n        true\n    else if a ==\
    \ 44\n        true\n    else if a == 45\n        true\n    else if a == 46\n \
    \       true\n    else if a == 47\n        true\n    else if a == 48\n       \
    \ true\n    else if a == 49\n        true\n    else if a == 50\n        true\n\
    \    else if a == 51\n        true\n    else if a == 52\n        true\n    else\
    \ if a == 53\n        true\n    else if a == 54\n        true\n    else \nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppygwlouh.jl:16\nin expression starting at\
    \ /tmp/tmppygwlouh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb2r7nih0.jl:14\nin expression starting at /tmp/tmpb2r7nih0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg_yot3or.jl:15\nin expression starting at /tmp/tmpg_yot3or.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpns4c0wgk.jl:14\nin expression starting at /tmp/tmpns4c0wgk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwdcvccq7.jl:16\nin expression starting at\
    \ /tmp/tmpwdcvccq7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4nkjvi_j.jl:15\nin expression starting at /tmp/tmp4nkjvi_j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprr7lt9k2.jl:15\nin expression starting at /tmp/tmprr7lt9k2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3bjhlfia.jl:15\nin expression starting at /tmp/tmp3bjhlfia.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a == 1\n        then return\
    \ true\n    else if a == 2\n        then return true\n    else if a == 3\n   \
    \     then return true\n    else if a == 4\n        then return true\n    else\
    \ if a == 5\n        then return true\n    else if a == 6\n        then return\
    \ true\n    else if a == 7\n        then return true\n    else if a == 8\n   \
    \     then return true\n    else if a == 9\n        then return true\n    else\
    \ if a == 10\n        then return true\n    else if a == 11\n        then return\
    \ true\n    else if a == 12\n        then return true\n    else if a == 13\n \
    \       then return true\n    else if a == 14\n        then return true\n    else\
    \ if a == 15\n        then return true\n    else if a == 16\n        then return\
    \ true\n    else if a == 17\n        then return true\n    else if a == 18\n \
    \       then return true\n    else if a == 19\n        then return true\n    else\
    \ if a == 20\n        then return true\n    else if a == 21\n        then return\
    \ true\n    else if a == 22\n        then return true\n    else if a == 23\n \
    \       then return true\n    else if a == 24\n        then return true\n    else\
    \ if a == 25\n        then return true\n    else if a == 26\n        then return\
    \ true\n    else if a == 27\n        then return true\n    else if a == 28\n \
    \       then return true\n    else if a == 29\n        then return true\n    else\
    \ if a == 30\n        then return true\n    else if a == 31\n        then return\
    \ true\n    else if a == 32\n        then return true\n    else if a == 33\n \
    \       then return true\n    else if a == 34\n        then return true\n    else\
    \ if a == 35\n        then return true\n    else if a == 36\n        then return\
    \ true\n    else if a == 37\n        then return true\n    else if a == 38\n \
    \       then return true\n    else if a == 39\n        then return true\n    else\
    \ if a == 40\n        then return true\n    else if a == 41\n        then return\
    \ true\n    else if a == 42\n        then return true\n    else if a == 43\n \
    \       then return true\n    else if a == 44\n        then return true\n    else\
    \ if a == 45\n        then return true\n    else if a == 46\n        \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmk8_lhrr.jl:15\nin expression starting at /tmp/tmpmk8_lhrr.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm008od9z.jl:15\nin expression starting at /tmp/tmpm008od9z.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2wom101i.jl:14\nin expression starting at /tmp/tmp2wom101i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcutavv0k.jl:15\nin expression starting at /tmp/tmpcutavv0k.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%3 != 0 \n        then\
    \ return False\n    else \n        return iscube(a/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert iscube(2) == true\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an integer a and returns True if a is a power\
    \ of two. \nExamples:\nispoweroftwo(2) ==> True\nispoweroftwo(4) ==> True\nispoweroftwo(8)\
    \ ==> False\nispoweroftwo(16) ==> True\nispoweroftwo(32) ==> False\nispoweroftwo(1024)\
    \ ==> True\nispoweroftwo(0) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispoweroftwo(-1) ==> False\nispoweroftwo(64)\
    \ ==> False\nispoweroftwo(180) ==> False\nispower\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp83pivt8e.jl:15\nin expression starting at /tmp/tmp83pivt8e.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        if a==1 \n    \
    \        then return true\n        else \n            if a==2 \n             \
    \   then return true\n            else \n                if a==3 \n          \
    \          then return true\n                else \n                    if a==4\
    \ \n                        then return true\n                    else \n    \
    \                    if a==5 \n                            then return true\n\
    \                        else \n                            if a==6 \n       \
    \                         then return true\n                            else \n\
    \                                if a==7 \n                                  \
    \  then return true\n                                else \n                 \
    \                   if a==8 \n                                        then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a==10 \n                                           \
    \     then return true\n                                            else \n  \
    \                                              if a==11 \n                   \
    \                                 then return true\n                         \
    \                       else \n                                              \
    \      if a==12 \n                                                        then\
    \ return true\n                                                    else \n   \
    \                                                     if a==13 \n            \
    \                                                then return true\n          \
    \                                              else \n                       \
    \                                     if a==14 \n                            \
    \                                    then return true\n                      \
    \                                      else \n                               \
    \                                 if a==15 \n                                \
    \                                    then return true\n                      \
    \                                              else \n                       \
    \                                 if a==16 \n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==17 \n                                        \
    \                            then return true\n                              \
    \                                      else \n                               \
    \                         if a==18 \n                                        \
    \                    then return true\n                                      \
    \                      else \n                                               \
    \                 if a==19 \n                                                \
    \                    then return true\n                                      \
    \                              else \n                                       \
    \                 if a==20 \n                                                \
    \            then return true\n                                              \
    \              else \n                                                       \
    \         if a==21 \n                                                        \
    \            then return true\n                                              \
    \                      else \n                                               \
    \         if a==22 \n                                                        \
    \    then return true\n                                                      \
    \      else \n                                                               \
    \ if a==23 \n                                                                \
    \    then return true\n                                                      \
    \              else \n                                                       \
    \ if a==24 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==25 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==26 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==27 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==28 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==29 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==30 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==33 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==34 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==35 \n                                              \
    \                      then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprd03u6zn.jl:15\nin expression starting at /tmp/tmprd03u6zn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcxy1ipxw.jl:14\nin expression starting at /tmp/tmpcxy1ipxw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        return true\n    else if a == 1 \n        return true\n\
    \    else if a == 2 \n        return true\n    else if a == 3 \n        return\
    \ true\n    else if a == 4 \n        return true\n    else if a == 5 \n      \
    \  return true\n    else if a == 6 \n        return true\n    else if a == 7 \n\
    \        return true\n    else if a == 8 \n        return true\n    else if a\
    \ == 9 \n        return true\n    else if a == 10 \n        return true\n    else\
    \ if a == 11 \n        return true\n    else if a == 12 \n        return true\n\
    \    else if a == 13 \n        return true\n    else if a == 14 \n        return\
    \ true\n    else if a == 15 \n        return true\n    else if a == 16 \n    \
    \    return true\n    else if a == 17 \n        return true\n    else if a ==\
    \ 18 \n        return true\n    else if a == 19 \n        return true\n    else\
    \ if a == 20 \n        return true\n    else if a == 21 \n        return true\n\
    \    else if a == 22 \n        return true\n    else if a == 23 \n        return\
    \ true\n    else if a == 24 \n        return true\n    else if a == 25 \n    \
    \    return true\n    else if a == 26 \n        return true\n    else if a ==\
    \ 27 \n        return true\n    else if a == 28 \n        return true\n    else\
    \ if a == 29 \n        return true\n    else if a == 30 \n        return true\n\
    \    else if a == 31 \n        return true\n    else if a == 32 \n        return\
    \ true\n    else if a == 33 \n        return true\n    else if a == 34 \n    \
    \    return true\n    else if a == 35 \n        return true\n    else if a ==\
    \ 36 \n        return true\n    else if a == 37 \n        return true\n    else\
    \ if a == 38 \n        return true\n    else if a == 39 \n        return true\n\
    \    else if a == 40 \n        return true\n    else if a == 41 \n        return\
    \ true\n    else if a == 42 \n        return true\n    else if a == 43 \n    \
    \    return true\n    else if a == 44 \n        return true\n    else if a ==\
    \ 45 \n        return true\n    else if a == 46 \n        return true\n    else\
    \ if a == 47 \n        return true\n    else if a == 48 \n        return true\n\
    \    else if a == 49 \n        return true\n    else if a == 50 \n        return\
    \ true\n    else if a == 51 \n        return true\n    else if a == 52 \n    \
    \    return true\n    else if a == 53 \n        return true\n    else if a ==\
    \ 54 \n        return true\n    else if a == 55\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp58armt1g.jl:16\nin expression starting at\
    \ /tmp/tmp58armt1g.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return false\n    else \n        return iscube(a-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    iscube(1)\n</cell>\n<code language=julia-1.3>\niscube(2)\n</cell>\n<code language=julia-1.3>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.3>\niscube(64)\n</cell>\n<code language=julia-1.3>\n\
    iscube(0)\n</cell>\n<code language=julia-1.3>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\
    \t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4wmluukn.jl:15\nin expression starting at /tmp/tmp4wmluukn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer >= 0\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8d7jsv1v.jl:16\nin expression starting at\
    \ /tmp/tmp8d7jsv1v.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9hlrbxn3.jl:16\nin expression starting at\
    \ /tmp/tmp9hlrbxn3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_6vahtd9.jl:16\nin expression starting at\
    \ /tmp/tmp_6vahtd9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1wywc5lb.jl:15\nin expression starting at /tmp/tmp1wywc5lb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True\n    if a==1 then return True\n    if a==2 then\
    \ return True\n    if a==3 then return True\n    if a==4 then return True\n  \
    \  if a==5 then return True\n    if a==6 then return True\n    if a==7 then return\
    \ True\n    if a==8 then return True\n    if a==9 then return True\n    if a==10\
    \ then return True\n    if a==11 then return True\n    if a==12 then return True\n\
    \    if a==13 then return True\n    if a==14 then return True\n    if a==15 then\
    \ return True\n    if a==16 then return True\n    if a==17 then return True\n\
    \    if a==18 then return True\n    if a==19 then return True\n    if a==20 then\
    \ return True\n    if a==21 then return True\n    if a==22 then return True\n\
    \    if a==23 then return True\n    if a==24 then return True\n    if a==25 then\
    \ return True\n    if a==26 then return True\n    if a==27 then return True\n\
    \    if a==28 then return True\n    if a==29 then return True\n    if a==30 then\
    \ return True\n    if a==31 then return True\n    if a==32 then return True\n\
    \    if a==33 then return True\n    if a==34 then return True\n    if a==35 then\
    \ return True\n    if a==36 then return True\n    if a==37 then return True\n\
    \    if a==38 then return True\n    if a==39 then return True\n    if a==40 then\
    \ return True\n    if a==41 then return True\n    if a==42 then return True\n\
    \    if a==43 then return True\n    if a==44 then return True\n    if a==45 then\
    \ return True\n    if a==46 then return True\n    if a==47 then return True\n\
    \    if a==48 then return True\n    if a==49 then return True\n    if a==50 then\
    \ return True\n    if a==51 then return True\n    if a==52 then return True\n\
    \    if a==53 then return True\n    if a==54 then return True\n    if a==55 then\
    \ return True\n    if a==56 then return True\n    if a==57 then return True\n\
    \    if a==58 then return True\n    if a==59 then return True\n    if a==60 then\
    \ return True\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxfu3fhq9.jl:14\nin expression starting at /tmp/tmpxfu3fhq9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptchyj7mo.jl:14\nin expression starting at /tmp/tmptchyj7mo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2wfcwwnz.jl:14\nin expression starting at /tmp/tmp2wfcwwnz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1 \n        then\
    \ return True\n    else if a == 2 \n        then return True\n    else if a ==\
    \ 3 \n        then return True\n    else if a == 4 \n        then return True\n\
    \    else if a == 5 \n        then return True\n    else if a == 6 \n        then\
    \ return True\n    else if a == 7 \n        then return True\n    else if a ==\
    \ 8 \n        then return True\n    else if a == 9 \n        then return True\n\
    \    else if a == 10 \n        then return True\n    else if a == 11 \n      \
    \  then return True\n    else if a == 12 \n        then return True\n    else\
    \ if a == 13 \n        then return True\n    else if a == 14 \n        then return\
    \ True\n    else if a == 15 \n        then return True\n    else if a == 16 \n\
    \        then return True\n    else if a == 17 \n        then return True\n  \
    \  else if a == 18 \n        then return True\n    else if a == 19 \n        then\
    \ return True\n    else if a == 20 \n        then return True\n    else if a ==\
    \ 21 \n        then return True\n    else if a == 22 \n        then return True\n\
    \    else if a == 23 \n        then return True\n    else if a == 24 \n      \
    \  then return True\n    else if a == 25 \n        then return True\n    else\
    \ if a == 26 \n        then return True\n    else if a == 27 \n        then return\
    \ True\n    else if a == 28 \n        then return True\n    else if a == 29 \n\
    \        then return True\n    else if a == 30 \n        then return True\n  \
    \  else if a == 31 \n        then return True\n    else if a == 32 \n        then\
    \ return True\n    else if a == 33 \n        then return True\n    else if a ==\
    \ 34 \n        then return True\n    else if a == 35 \n        then return True\n\
    \    else if a == 36 \n        then return True\n    else if a == 37 \n      \
    \  then return True\n    else if a == 38 \n        then return True\n    else\
    \ if a == 39 \n        then return True\n    else if a == 40 \n        then return\
    \ True\n    else if a == 41 \n        then return True\n    else if a == 42 \n\
    \        then return True\n    else if a == 43 \n        then return True\n  \
    \  else if a == 44 \n        then return True\n    else if a == 45 \n        then\
    \ return True\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpns5pcqox.jl:15\nin expression starting at /tmp/tmpns5pcqox.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp14jke2az.jl:16\nin expression starting at\
    \ /tmp/tmp14jke2az.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmperpjwl9s.jl:16\nin expression starting at\
    \ /tmp/tmperpjwl9s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpymz9bcb2.jl:14\nin expression starting at /tmp/tmpymz9bcb2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return false\n    else \n        return iscube(a-1) or iscube(a-1) or iscube(a-1)\
    \ or iscube(a-1)\nend\n</cell>\n<code language=julia-1.5>\niscube(10)\n</cell>\n\
    <code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\niscube(64)\n\
    </cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt2r1lrqq.jl:15\nin expression starting at /tmp/tmpt2r1lrqq.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu5i_fwqx.jl:14\nin expression starting at /tmp/tmpu5i_fwqx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8fhq720.jl:14\nin expression starting at /tmp/tmpn8fhq720.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a%1 == 0 \n        then\
    \ return false\n    else \n        cube = cube_number(a)\n        if cube == true\n\
    \            then return true\n        else return false\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP asked for a function\
    \ that returns `true` if the input is a cube of an integer. Your function returns\
    \ `true` if the input is a cube of any number.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. My answer was to show how to solve the problem in general. OP can easily\
    \ adapt it to his needs.\n<|/ c |>\n<| c |>\nThe OP asked for a function that\
    \ returns `true` if the input is a cube of an integer. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input is a cube of any number. Your function returns `true` if the input\
    \ is a cube of any number. Your function returns `true` if the input is a cube\
    \ of any number. Your function returns `true` if the input is a cube of any number.\
    \ Your function returns `true` if the input is a cube of any number. Your function\
    \ returns `true` if the input is a cube of any number. Your function returns `true`\
    \ if the input \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphzyum_f1.jl:15\nin expression starting at /tmp/tmphzyum_f1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer greater than 0\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphp7g6u7f.jl:16\nin expression starting at\
    \ /tmp/tmphp7g6u7f.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        cube=true\n   \
    \     for i=1:a\n            cube=cube && iscube(i*i)\n        end\n        return\
    \ cube\n    end\nend\n</cell>\n<code language=julia-1.3>\niscube(1)\n</cell>\n\
    <code language=julia-1.3>\niscube(2)\n</cell>\n<code language=julia-1.3>\niscube(-1)\n\
    </cell>\n<code language=julia-1.3>\niscube(64)\n</cell>\n<code language=julia-1.3>\n\
    iscube(0)\n</cell>\n<code language=julia-1.3>\niscube(180)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\
    \t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn63_n_sz.jl:15\nin expression starting at /tmp/tmpn63_n_sz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy88i2tsg.jl:14\nin expression starting at /tmp/tmpy88i2tsg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7nm5ttu7.jl:15\nin expression starting at /tmp/tmp7nm5ttu7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True \n    else \n        if a < 0 \n\
    \            then return False \n        else \n            if a < 3 \n      \
    \          then return True \n            else \n                if a < 9 \n \
    \                   then return True \n                else \n               \
    \     if a < 27 \n                        then return True \n                \
    \    else \n                        if a < 81 \n                            then\
    \ return True \n                        else \n                            if\
    \ a < 123 \n                                then return True \n              \
    \              else \n                                if iscube(a-1) == True \n\
    \                                    then return True \n                     \
    \           else \n                                    return False\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\nWrite a function that takes an integer a and\
    \ returns True \n    if this ingeger is a cube of some integer number.\n    Note:\
    \ you may assume the input is always valid.\n    Examples:\n    iscube(1) ==>\
    \ True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n\
    \    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpszzupu06.jl:15\nin expression starting at /tmp/tmpszzupu06.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a==1 \n        then\
    \ return True\n    else if a==2 \n        then return True\n    else if a==3 \n\
    \        then return True\n    else if a==4 \n        then return True\n    else\
    \ if a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph0ookzr0.jl:15\nin expression starting at /tmp/tmph0ookzr0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp19n2869o.jl:15\nin expression starting at /tmp/tmp19n2869o.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd0pfwpmf.jl:14\nin expression starting at /tmp/tmpd0pfwpmf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn_2jyfw0.jl:16\nin expression starting at\
    \ /tmp/tmpn_2jyfw0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9na3bek8.jl:14\nin expression starting at /tmp/tmp9na3bek8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==-1 \n        then return true\n    else if a==2 \n    \
    \    then return true\n    else if a==3 \n        then return true\n    else if\
    \ a==4 \n        then return true\n    else if a==5 \n        then return true\n\
    \    else if a==6 \n        then return true\n    else if a==7 \n        then\
    \ return true\n    else if a==8 \n        then return true\n    else if a==9 \n\
    \        then return true\n    else if a==10 \n        then return true\n    else\
    \ if a==11 \n        then return true\n    else if a==12 \n        then return\
    \ true\n    else if a==13 \n        then return true\n    else if a==14 \n   \
    \     then return true\n    else if a==15 \n        then return true\n    else\
    \ if a==16 \n        then return true\n    else if a==17 \n        then return\
    \ true\n    else if a==18 \n        then return true\n    else if a==19 \n   \
    \     then return true\n    else if a==20 \n        then return true\n    else\
    \ if a==21 \n        then return true\n    else if a==22 \n        then return\
    \ true\n    else if a==23 \n        then return true\n    else if a==24 \n   \
    \     then return true\n    else if a==25 \n        then return true\n    else\
    \ if a==26 \n        then return true\n    else if a==27 \n        then return\
    \ true\n    else if a==28 \n        then return true\n    else if a==29 \n   \
    \     then return true\n    else if a==30 \n        then return true\n    else\
    \ if a==31 \n        then return true\n    else if a==32 \n        then return\
    \ true\n    else if a==33 \n        then return true\n    else if a==34 \n   \
    \     then return true\n    else if a==35 \n        then return true\n    else\
    \ if a==36 \n        then return true\n    else if a==37 \n        then return\
    \ true\n    else if a==38 \n        then return true\n    else if a==39 \n   \
    \     then return true\n    else if a==40 \n        then return true\n    else\
    \ if a==41 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp60doiw56.jl:15\nin expression starting at /tmp/tmp60doiw56.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a%1 == 0 \n        then\
    \ return iscube(a/1)\n    else \n        return iscube(a-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers and returns True \n    if the vector is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube([1,2,3])\
    \ ==> True\n    iscube([-1,-2,-3]) ==> False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq2hsu70i.jl:15\nin expression starting at /tmp/tmpq2hsu70i.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer greater than 0\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj37gl4px.jl:16\nin expression starting at\
    \ /tmp/tmpj37gl4px.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy37ngrd5.jl:14\nin expression starting at /tmp/tmpy37ngrd5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl85qqcy6.jl:14\nin expression starting at /tmp/tmpl85qqcy6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer >= 0\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpusiot4us.jl:16\nin expression starting at\
    \ /tmp/tmpusiot4us.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph5acy3r3.jl:15\nin expression starting at /tmp/tmph5acy3r3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp31z5iaek.jl:15\nin expression starting at /tmp/tmp31z5iaek.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if isodd(a)\n        then\
    \ return false\n    else if iseven(a)\n        then return false\n    else if\
    \ isodd(a+1)\n        then return false\n    else if iseven(a+1)\n        then\
    \ return false\n    else if isodd(a+2)\n        then return false\n    else if\
    \ iseven(a+2)\n        then return false\n    else if isodd(a+3)\n        then\
    \ return false\n    else if iseven(a+3)\n        then return false\n    else if\
    \ isodd(a+4)\n        then return false\n    else if iseven(a+4)\n        then\
    \ return false\n    else if isodd(a+5)\n        then return false\n    else if\
    \ iseven(a+5)\n        then return false\n    else if isodd(a+6)\n        then\
    \ return false\n    else if iseven(a+6)\n        then return false\n    else if\
    \ isodd(a+7)\n        then return false\n    else if iseven(a+7)\n        then\
    \ return false\n    else if isodd(a+8)\n        then return false\n    else if\
    \ iseven(a+8)\n        then return false\n    else if isodd(a+9)\n        then\
    \ return false\n    else if iseven(a+9)\n        then return false\n    else if\
    \ isodd(a+10)\n        then return false\n    else if iseven(a+10)\n        then\
    \ return false\n    else if isodd(a+11)\n        then return false\n    else if\
    \ iseven(a+11)\n        then return false\n    else if isodd(a+12)\n        then\
    \ return false\n    else if iseven(a+12)\n        then return false\n    else\
    \ if isodd(a+13)\n        then return false\n    else if iseven(a+13)\n      \
    \  then return false\n    else if isodd(a+14)\n        then return false\n   \
    \ else if iseven(a+14)\n        then return false\n    else if isodd(a+15)\n \
    \       then return false\n    else if iseven(a+15)\n        then return false\n\
    \    else if isodd(a+16)\n        then return false\n    else if iseven(a+16)\n\
    \        then return false\n    else if isodd(a+17)\n        then return false\n\
    \    else if iseven(a+17)\n        then return false\n    else if \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_hymx4zq.jl:15\nin expression starting at /tmp/tmp_hymx4zq.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxm60hh6y.jl:15\nin expression starting at /tmp/tmpxm60hh6y.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaw8o9l7d.jl:15\nin expression starting at /tmp/tmpaw8o9l7d.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe2c7aptw.jl:16\nin expression starting at\
    \ /tmp/tmpe2c7aptw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    if a==1 then return True \n    if a==2\
    \ then return True \n    if a==3 then return True \n    if a==4 then return True\
    \ \n    if a==5 then return True \n    if a==6 then return True \n    if a==7\
    \ then return True \n    if a==8 then return True \n    if a==9 then return True\
    \ \n    if a==10 then return True \n    if a==11 then return True \n    if a==12\
    \ then return True \n    if a==13 then return True \n    if a==14 then return\
    \ True \n    if a==15 then return True \n    if a==16 then return True \n    if\
    \ a==17 then return True \n    if a==18 then return True \n    if a==19 then return\
    \ True \n    if a==20 then return True \n    if a==21 then return True \n    if\
    \ a==22 then return True \n    if a==23 then return True \n    if a==24 then return\
    \ True \n    if a==25 then return True \n    if a==26 then return True \n    if\
    \ a==27 then return True \n    if a==28 then return True \n    if a==29 then return\
    \ True \n    if a==30 then return True \n    if a==31 then return True \n    if\
    \ a==32 then return True \n    if a==33 then return True \n    if a==34 then return\
    \ True \n    if a==35 then return True \n    if a==36 then return True \n    if\
    \ a==37 then return True \n    if a==38 then return True \n    if a==39 then return\
    \ True \n    if a==40 then return True \n    if a==41 then return True \n    if\
    \ a==42 then return True \n    if a==43 then return True \n    if a==44 then return\
    \ True \n    if a==45 then return True \n    if a==46 then return True \n    if\
    \ a==47 then return True \n    if a==48 then return True \n    if a==49 then return\
    \ True \n    if a==50 then return True \n    if a==51 then return True \n    if\
    \ a==52 then return True \n    if a==53 then return True \n    if a==54 then return\
    \ True \n    if a==55 then return True \n    if a==56 then return True \n    if\
    \ a==57 then return True \n    if a==58 then return True \n    if a==59 then return\
    \ True \n    if a==60 then return True \n    if a==61 \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp09t3g3e0.jl:14\nin expression starting at /tmp/tmp09t3g3e0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects a positive integer\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuhlekehu.jl:16\nin expression starting at\
    \ /tmp/tmpuhlekehu.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        return false\n    else if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6pt49qjr.jl:16\nin expression starting at\
    \ /tmp/tmp6pt49qjr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1\n        then\
    \ return True\n    else if a == -1\n        then return True\n    else if a ==\
    \ -2\n        then return True\n    else if a == -3\n        then return True\n\
    \    else if a == -4\n        then return True\n    else if a == -5\n        then\
    \ return True\n    else if a == -6\n        then return True\n    else if a ==\
    \ -7\n        then return True\n    else if a == -8\n        then return True\n\
    \    else if a == -9\n        then return True\n    else if a == -10\n       \
    \ then return True\n    else if a == -11\n        then return True\n    else if\
    \ a == -12\n        then return True\n    else if a == -13\n        then return\
    \ True\n    else if a == -14\n        then return True\n    else if a == -15\n\
    \        then return True\n    else if a == -16\n        then return True\n  \
    \  else if a == -17\n        then return True\n    else if a == -18\n        then\
    \ return True\n    else if a == -19\n        then return True\n    else if a ==\
    \ -20\n        then return True\n    else if a == -21\n        then return True\n\
    \    else if a == -22\n        then return True\n    else if a == -23\n      \
    \  then return True\n    else if a == -24\n        then return True\n    else\
    \ if a == -25\n        then return True\n    else if a == -26\n        then return\
    \ True\n    else if a == -27\n        then return True\n    else if a == -28\n\
    \        then return True\n    else if a == -29\n        then return True\n  \
    \  else if a == -30\n        then return True\n    else if a == -31\n        then\
    \ return True\n    else if a == -32\n        then return True\n    else if a ==\
    \ -33\n        then return True\n    else if a == -34\n        then return True\n\
    \    else if a == -35\n        then return True\n    else if a == -36\n      \
    \  then return True\n    else if a == -37\n        then return True\n    else\
    \ if a == -38\n        then return True\n    else if a == -39\n        then return\
    \ True\n    else if a == -40\n        then return True\n    else if a == -41\n\
    \        then return True\n    else if a == -42\n        then return True\n  \
    \  else if a == -43\n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6miqm_nd.jl:15\nin expression starting at /tmp/tmp6miqm_nd.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeu_p5wbg.jl:15\nin expression starting at /tmp/tmpeu_p5wbg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1 \n        then\
    \ return true\n    else if a == 2 \n        then return true\n    else if a ==\
    \ 3 \n        then return true\n    else if a == 4 \n        then return true\n\
    \    else if a == 5 \n        then return true\n    else if a == 6 \n        then\
    \ return true\n    else if a == 7 \n        then return true\n    else if a ==\
    \ 8 \n        then return true\n    else if a == 9 \n        then return true\n\
    \    else if a == 10 \n        then return true\n    else if a == 11 \n      \
    \  then return true\n    else if a == 12 \n        then return true\n    else\
    \ if a == 13 \n        then return true\n    else if a == 14 \n        then return\
    \ true\n    else if a == 15 \n        then return true\n    else if a == 16 \n\
    \        then return true\n    else if a == 17 \n        then return true\n  \
    \  else if a == 18 \n        then return true\n    else if a == 19 \n        then\
    \ return true\n    else if a == 20 \n        then return true\n    else if a ==\
    \ 21 \n        then return true\n    else if a == 22 \n        then return true\n\
    \    else if a == 23 \n        then return true\n    else if a == 24 \n      \
    \  then return true\n    else if a == 25 \n        then return true\n    else\
    \ if a == 26 \n        then return true\n    else if a == 27 \n        then return\
    \ true\n    else if a == 28 \n        then return true\n    else if a == 29 \n\
    \        then return true\n    else if a == 30 \n        then return true\n  \
    \  else if a == 31 \n        then return true\n    else if a == 32 \n        then\
    \ return true\n    else if a == 33 \n        then return true\n    else if a ==\
    \ 34 \n        then return true\n    else if a == 35 \n        then return true\n\
    \    else if a == 36 \n        then return true\n    else if a == 37 \n      \
    \  then return true\n    else if a == 38 \n        then return true\n    else\
    \ if a == 39 \n        then return true\n    else if a == 40 \n        then return\
    \ true\n    else if a == 41 \n        then return true\n    else if a == 42 \n\
    \        then return true\n    else if a == 43 \n        then return true\n  \
    \  else if a == 44 \n        then return true\n    else if a == 45 \n        then\
    \ return true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr7761kns.jl:15\nin expression starting at /tmp/tmpr7761kns.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg06f_um9.jl:15\nin expression starting at /tmp/tmpg06f_um9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzhxbec8z.jl:14\nin expression starting at /tmp/tmpzhxbec8z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbmk_quuv.jl:14\nin expression starting at /tmp/tmpbmk_quuv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaxly9osp.jl:15\nin expression starting at /tmp/tmpaxly9osp.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgzxcykxy.jl:14\nin expression starting at /tmp/tmpgzxcykxy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return True\n    else if a==1 \n        then return\
    \ True\n    else if a==2 \n        then return True\n    else if a==3 \n     \
    \   then return True\n    else if a==4 \n        then return True\n    else if\
    \ a==5 \n        then return True\n    else if a==6 \n        then return True\n\
    \    else if a==7 \n        then return True\n    else if a==8 \n        then\
    \ return True\n    else if a==9 \n        then return True\n    else if a==10\
    \ \n        then return True\n    else if a==11 \n        then return True\n \
    \   else if a==12 \n        then return True\n    else if a==13 \n        then\
    \ return True\n    else if a==14 \n        then return True\n    else if a==15\
    \ \n        then return True\n    else if a==16 \n        then return True\n \
    \   else if a==17 \n        then return True\n    else if a==18 \n        then\
    \ return True\n    else if a==19 \n        then return True\n    else if a==20\
    \ \n        then return True\n    else if a==21 \n        then return True\n \
    \   else if a==22 \n        then return True\n    else if a==23 \n        then\
    \ return True\n    else if a==24 \n        then return True\n    else if a==25\
    \ \n        then return True\n    else if a==26 \n        then return True\n \
    \   else if a==27 \n        then return True\n    else if a==28 \n        then\
    \ return True\n    else if a==29 \n        then return True\n    else if a==30\
    \ \n        then return True\n    else if a==31 \n        then return True\n \
    \   else if a==32 \n        then return True\n    else if a==33 \n        then\
    \ return True\n    else if a==34 \n        then return True\n    else if a==35\
    \ \n        then return True\n    else if a==36 \n        then return True\n \
    \   else if a==37 \n        then return True\n    else if a==38 \n        then\
    \ return True\n    else if a==39 \n        then return True\n    else if a==40\
    \ \n        then return True\n    else if a==41 \n        then return True\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj0g9c6hm.jl:15\nin expression starting at /tmp/tmpj0g9c6hm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True \n    else \n        cube_sum = 0\n\
    \        for i in (-a .. a) \n            cube_sum += i**3\n        return cube_sum\
    \ == a\nend\n</cell>\n<code language=julia-1.3>\niscube(1)\n</cell>\n<code language=julia-1.3>\n\
    iscube(2)\n</cell>\n<code language=julia-1.3>\niscube(-1)\n</cell>\n<code language=julia-1.3>\n\
    iscube(64)\n</cell>\n<code language=julia-1.3>\niscube(0)\n</cell>\n<code language=julia-1.3>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1)\
    \ ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==>\
    \ True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxzgr75nk.jl:15\nin expression starting at /tmp/tmpxzgr75nk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else \n        cube=iscube(a-1)\n\
    \        if cube\n            then return true\n        else return false\nend\n\
    </code>\n<|/ a tags=julia,recursion |>\n<| c |>\n`iscube` can be written as `return\
    \ a==0 || iscube(a-1)`\n<|/ c |>\n<| c |>\nThanks, I didn't know that Julia had\
    \ that feature. I've edited my answer.\n<|/ c |>\n<| a dscore=1 |>\nI believe\
    \ that your problem is that you do not have a base case for your recursive function.\
    \  You have a base case for iscube(a==0) but you do not have a base case for iscube(a==1).\
    \  Therefore, your recursive function will never terminate.\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nThanks for your answer. I've edited my question to include a base\
    \ case for iscube(a==1). Still doesn't work. I've also tried iscube(a==0). Still\
    \ doesn't work. I've also tried iscube(a==-1) and iscube(a==64). Still doesn't\
    \ work. I've also tried iscube(a==-2) and iscube(a==-64). Still doesn't work.\
    \ I've also tried iscube(a==-32) and iscube(a==-128). Still doesn't work. I've\
    \ also tried iscube(a==-512) and iscube(a==-1024). Still doesn't work. I've also\
    \ tried iscube(a==-4096) and iscube(a==-4096). Still doesn't work. I've also tried\
    \ iscube(a==-32768) and iscube(a==-32768). Still doesn't work. I've also tried\
    \ iscube(a==-65536) and iscube(a==-65536). Still doesn't work. I've also tried\
    \ iscube(a==-262144) and iscube(a==-262144). Still doesn't work. I've also tried\
    \ iscube(a==-1048576) and iscube(a==-1048576). Still doesn't work. I've also tried\
    \ iscube(a==-4096) and iscube(a==-4096). Still doesn't work. I've also tried iscube(a==-32768)\
    \ and iscube(a==-32768). Still doesn't work. I've also tried iscube(a==-65536)\
    \ and iscube(a==-65536). Still doesn't work. I've also tried iscube(a==-262144)\
    \ and iscube(a==-262144)\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjanuoplk.jl:15\nin expression starting at /tmp/tmpjanuoplk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True\n    else if a==1 then return True\n    else\
    \ if a==2 then return True\n    else if a==3 then return True\n    else if a==4\
    \ then return True\n    else if a==5 then return True\n    else if a==6 then return\
    \ True\n    else if a==7 then return True\n    else if a==8 then return True\n\
    \    else if a==9 then return True\n    else if a==10 then return True\n    else\
    \ if a==11 then return True\n    else if a==12 then return True\n    else if a==13\
    \ then return True\n    else if a==14 then return True\n    else if a==15 then\
    \ return True\n    else if a==16 then return True\n    else if a==17 then return\
    \ True\n    else if a==18 then return True\n    else if a==19 then return True\n\
    \    else if a==20 then return True\n    else if a==21 then return True\n    else\
    \ if a==22 then return True\n    else if a==23 then return True\n    else if a==24\
    \ then return True\n    else if a==25 then return True\n    else if a==26 then\
    \ return True\n    else if a==27 then return True\n    else if a==28 then return\
    \ True\n    else if a==29 then return True\n    else if a==30 then return True\n\
    \    else if a==31 then return True\n    else if a==32 then return True\n    else\
    \ if a==33 then return True\n    else if a==34 then return True\n    else if a==35\
    \ then return True\n    else if a==36 then return True\n    else if a==37 then\
    \ return True\n    else if a==38 then return True\n    else if a==39 then return\
    \ True\n    else if a==40 then return True\n    else if a==41 then return True\n\
    \    else if a==42 then return True\n    else if a==43 then return True\n    else\
    \ if a==44 then return True\n    else if a==45 then return True\n    else if a==46\
    \ then return True\n    else if a==47 then return True\n    else if a==48 then\
    \ return True\n    else if a==49 then return True\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsn2i_he1.jl:14\nin expression starting at /tmp/tmpsn2i_he1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube expects an integer greater than 0\"\
    )\n    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpryszkfzj.jl:16\nin expression starting at\
    \ /tmp/tmpryszkfzj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6z6t9evn.jl:15\nin expression starting at /tmp/tmp6z6t9evn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1l0o4ca1.jl:15\nin expression starting at /tmp/tmp1l0o4ca1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9pa5h80m.jl:14\nin expression starting at /tmp/tmp9pa5h80m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppx6nklb0.jl:14\nin expression starting at /tmp/tmppx6nklb0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==-1 then\
    \ return true\n    if a==-2 then return true\n    if a==-3 then return true\n\
    \    if a==-4 then return true\n    if a==-5 then return true\n    if a==-6 then\
    \ return true\n    if a==-7 then return true\n    if a==-8 then return true\n\
    \    if a==-9 then return true\n    if a==-10 then return true\n    if a==-11\
    \ then return true\n    if a==-12 then return true\n    if a==-13 then return\
    \ true\n    if a==-14 then return true\n    if a==-15 then return true\n    if\
    \ a==-16 then return true\n    if a==-17 then return true\n    if a==-18 then\
    \ return true\n    if a==-19 then return true\n    if a==-20 then return true\n\
    \    if a==-21 then return true\n    if a==-22 then return true\n    if a==-23\
    \ then return true\n    if a==-24 then return true\n    if a==-25 then return\
    \ true\n    if a==-26 then return true\n    if a==-27 then return true\n    if\
    \ a==-28 then return true\n    if a==-29 then return true\n    if a==-30 then\
    \ return true\n    if a==-31 then return true\n    if a==-32 then return true\n\
    \    if a==-33 then return true\n    if a==-34 then return true\n    if a==-35\
    \ then return true\n    if a==-36 then return true\n    if a==-37 then return\
    \ true\n    if a==-38 then return true\n    if a==-39 then return true\n    if\
    \ a==-40 then return true\n    if a==-41 then return true\n    if a==-42 then\
    \ return true\n    if a==-43 then return true\n    if a==-44 then return true\n\
    \    if a==-45 then return true\n    if a==-46 then return true\n    if a==-47\
    \ then return true\n    if a==-48 then return true\n    if a==-49 then return\
    \ true\n    if a==-50 then return true\n    if a==-51 then return true\n    if\
    \ a==-52 then return true\n    if a==-53 then return true\n    if a==-54 then\
    \ return true\n    if a==\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpge18pwyk.jl:14\nin expression starting at /tmp/tmpge18pwyk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1)\n</cell>\n<code language=julia-1.5>\niscube(2)\n\
    </cell>\n<code language=julia-1.5>\niscube(-1)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(0)\n</cell>\n<code language=julia-1.5>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns True \n    if this ingeger is a perfect square. \n    Examples:\n\
    \    isperfect(4) ==> True\n    isperfect(16) ==> False\n    isperfect(25) ==>\
    \ True\n    isperfect(27) ==> False\n    isperfect(9) ==> True\n    isperfect(27)\
    \ ==> False\n    isperfect(0) ==> True\n    isperfect(1) ==> True\n    isperfect(2)\
    \ ==> False\n    isperfect(3) ==> False\n    isperfect(4) ==> False\n    isperfect(5)\
    \ ==> False\n    isperfect(6) ==> False\n    isperfect(7) ==> False\n    isperfect(8)\
    \ ==> False\n    isperfect(9) ==> False\n    isperfect(10) ==> False\n    isperfect(11)\
    \ ==> False\n    isperfect(12) ==> False\n    isperfect(13) ==> False\n    isperfect(14)\
    \ ==> False\n    isperfect(15) ==> False\n    isperfect(16) ==> False\n    isperfect(17)\
    \ ==> False\n    isperfect(18) ==> False\n    isperfect(19) ==> False\n    isperfect(20)\
    \ ==> False\n    isperfect(21) ==> False\n    isperfect(22) ==> False\n    isperfect(23)\
    \ ==> False\n    isperfect(24) ==> False\n    isperfect(25) ==> False\n    isperfect(26)\
    \ ==> False\n    is\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwyy_y_o5.jl:14\nin expression starting at /tmp/tmpwyy_y_o5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7tj1pkqv.jl:14\nin expression starting at /tmp/tmp7tj1pkqv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return True \n    else if a==1 then return True \n    else\
    \ if a==2 then return True \n    else if a==3 then return True \n    else if a==4\
    \ then return True \n    else if a==5 then return True \n    else if a==6 then\
    \ return True \n    else if a==7 then return True \n    else if a==8 then return\
    \ True \n    else if a==9 then return True \n    else if a==10 then return True\
    \ \n    else if a==11 then return True \n    else if a==12 then return True \n\
    \    else if a==13 then return True \n    else if a==14 then return True \n  \
    \  else if a==15 then return True \n    else if a==16 then return True \n    else\
    \ if a==17 then return True \n    else if a==18 then return True \n    else if\
    \ a==19 then return True \n    else if a==20 then return True \n    else if a==21\
    \ then return True \n    else if a==22 then return True \n    else if a==23 then\
    \ return True \n    else if a==24 then return True \n    else if a==25 then return\
    \ True \n    else if a==26 then return True \n    else if a==27 then return True\
    \ \n    else if a==28 then return True \n    else if a==29 then return True \n\
    \    else if a==30 then return True \n    else if a==31 then return True \n  \
    \  else if a==32 then return True \n    else if a==33 then return True \n    else\
    \ if a==34 then return True \n    else if a==35 then return True \n    else if\
    \ a==36 then return True \n    else if a==37 then return True \n    else if a==38\
    \ then return True \n    else if a==39 then return True \n    else if a==40 then\
    \ return True \n    else if a==41 then return True \n    else if a==42 then return\
    \ True \n    else if a==43 then return True \n    else if a==44 then return True\
    \ \n    else if a==45 then return True \n    else if a==46 then return True \n\
    \    else if a==47 then return True \n    else if a==48 then return True \n  \
    \  else if a==49 then return True \n    else if a\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppzists24.jl:14\nin expression starting at /tmp/tmppzists24.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2cp0wq6l.jl:14\nin expression starting at /tmp/tmp2cp0wq6l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    else if a==1 then return true\n    else\
    \ if a==2 then return true\n    else if a==3 then return true\n    else if a==4\
    \ then return true\n    else if a==5 then return true\n    else if a==6 then return\
    \ true\n    else if a==7 then return true\n    else if a==8 then return true\n\
    \    else if a==9 then return true\n    else if a==10 then return true\n    else\
    \ if a==11 then return true\n    else if a==12 then return true\n    else if a==13\
    \ then return true\n    else if a==14 then return true\n    else if a==15 then\
    \ return true\n    else if a==16 then return true\n    else if a==17 then return\
    \ true\n    else if a==18 then return true\n    else if a==19 then return true\n\
    \    else if a==20 then return true\n    else if a==21 then return true\n    else\
    \ if a==22 then return true\n    else if a==23 then return true\n    else if a==24\
    \ then return true\n    else if a==25 then return true\n    else if a==26 then\
    \ return true\n    else if a==27 then return true\n    else if a==28 then return\
    \ true\n    else if a==29 then return true\n    else if a==30 then return true\n\
    \    else if a==31 then return true\n    else if a==32 then return true\n    else\
    \ if a==33 then return true\n    else if a==34 then return true\n    else if a==35\
    \ then return true\n    else if a==36 then return true\n    else if a==37 then\
    \ return true\n    else if a==38 then return true\n    else if a==39 then return\
    \ true\n    else if a==40 then return true\n    else if a==41 then return true\n\
    \    else if a==42 then return true\n    else if a==43 then return true\n    else\
    \ if a==44 then return true\n    else if a==45 then return true\n    else if a==46\
    \ then return true\n    else if a==47 then return true\n    else if a==48 then\
    \ return true\n    else if a==49 then return true\n    else if a\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprkz7ryfi.jl:14\nin expression starting at /tmp/tmprkz7ryfi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuasee9bu.jl:14\nin expression starting at /tmp/tmpuasee9bu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube: input must be positive\")\n    else\
    \ if a == 0 \n        true\n    else if a == 1 \n        true\n    else if a ==\
    \ 2 \n        true\n    else if a == 3 \n        true\n    else if a == 4 \n \
    \       true\n    else if a == 5 \n        true\n    else if a == 6 \n       \
    \ true\n    else if a == 7 \n        true\n    else if a == 8 \n        true\n\
    \    else if a == 9 \n        true\n    else if a == 10 \n        true\n    else\
    \ if a == 11 \n        true\n    else if a == 12 \n        true\n    else if a\
    \ == 13 \n        true\n    else if a == 14 \n        true\n    else if a == 15\
    \ \n        true\n    else if a == 16 \n        true\n    else if a == 17 \n \
    \       true\n    else if a == 18 \n        true\n    else if a == 19 \n     \
    \   true\n    else if a == 20 \n        true\n    else if a == 21 \n        true\n\
    \    else if a == 22 \n        true\n    else if a == 23 \n        true\n    else\
    \ if a == 24 \n        true\n    else if a == 25 \n        true\n    else if a\
    \ == 26 \n        true\n    else if a == 27 \n        true\n    else if a == 28\
    \ \n        true\n    else if a == 29 \n        true\n    else if a == 30 \n \
    \       true\n    else if a == 31 \n        true\n    else if a == 32 \n     \
    \   true\n    else if a == 33 \n        true\n    else if a == 34 \n        true\n\
    \    else if a == 35 \n        true\n    else if a == 36 \n        true\n    else\
    \ if a == 37 \n        true\n    else if a == 38 \n        true\n    else if a\
    \ == 39 \n        true\n    else if a == 40 \n        true\n    else if a == 41\
    \ \n        true\n    else if a == 42 \n        true\n    else if a == 43 \n \
    \       true\n    else if a == 44 \n        true\n    else if a == 45 \n     \
    \   true\n    else if a == 46 \n        true\n    else if a == 47 \n        true\n\
    \    else if a == 48 \n        true\n    else if a == 49 \n        true\n    else\
    \ if a == 50 \n        true\n    else if a == 51 \n        true\n    else if a\
    \ == 52 \n        true\n    else if a == 53 \n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwbi0el2a.jl:16\nin expression starting at\
    \ /tmp/tmpwbi0el2a.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpre94poz8.jl:15\nin expression starting at /tmp/tmpre94poz8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a < 0 \n        error(\"iscube only accepts positive integers\")\n\
    \    else if a == 0 \n        true\n    else if a == 1 \n        true\n    else\
    \ if a == 2 \n        true\n    else if a == 3 \n        true\n    else if a ==\
    \ 4 \n        true\n    else if a == 5 \n        true\n    else if a == 6 \n \
    \       true\n    else if a == 7 \n        true\n    else if a == 8 \n       \
    \ true\n    else if a == 9 \n        true\n    else if a == 10 \n        true\n\
    \    else if a == 11 \n        true\n    else if a == 12 \n        true\n    else\
    \ if a == 13 \n        true\n    else if a == 14 \n        true\n    else if a\
    \ == 15 \n        true\n    else if a == 16 \n        true\n    else if a == 17\
    \ \n        true\n    else if a == 18 \n        true\n    else if a == 19 \n \
    \       true\n    else if a == 20 \n        true\n    else if a == 21 \n     \
    \   true\n    else if a == 22 \n        true\n    else if a == 23 \n        true\n\
    \    else if a == 24 \n        true\n    else if a == 25 \n        true\n    else\
    \ if a == 26 \n        true\n    else if a == 27 \n        true\n    else if a\
    \ == 28 \n        true\n    else if a == 29 \n        true\n    else if a == 30\
    \ \n        true\n    else if a == 31 \n        true\n    else if a == 32 \n \
    \       true\n    else if a == 33 \n        true\n    else if a == 34 \n     \
    \   true\n    else if a == 35 \n        true\n    else if a == 36 \n        true\n\
    \    else if a == 37 \n        true\n    else if a == 38 \n        true\n    else\
    \ if a == 39 \n        true\n    else if a == 40 \n        true\n    else if a\
    \ == 41 \n        true\n    else if a == 42 \n        true\n    else if a == 43\
    \ \n        true\n    else if a == 44 \n        true\n    else if a == 45 \n \
    \       true\n    else if a == 46 \n        true\n    else if a == 47 \n     \
    \   true\n    else if a == 48 \n        true\n    else if a == 49 \n        true\n\
    \    else if a == 50 \n        true\n    else if a == 51 \n        true\n    else\
    \ if a == 52 \n        true\n    else if a == 53 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo_thm7rv.jl:16\nin expression starting at\
    \ /tmp/tmpo_thm7rv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==-1 \n        then return true\n    else if a==2 \n    \
    \    then return true\n    else if a==3 \n        then return true\n    else if\
    \ a==4 \n        then return true\n    else if a==5 \n        then return true\n\
    \    else if a==6 \n        then return true\n    else if a==7 \n        then\
    \ return true\n    else if a==8 \n        then return true\n    else if a==9 \n\
    \        then return true\n    else if a==10 \n        then return true\n    else\
    \ if a==11 \n        then return true\n    else if a==12 \n        then return\
    \ true\n    else if a==13 \n        then return true\n    else if a==14 \n   \
    \     then return true\n    else if a==15 \n        then return true\n    else\
    \ if a==16 \n        then return true\n    else if a==17 \n        then return\
    \ true\n    else if a==18 \n        then return true\n    else if a==19 \n   \
    \     then return true\n    else if a==20 \n        then return true\n    else\
    \ if a==21 \n        then return true\n    else if a==22 \n        then return\
    \ true\n    else if a==23 \n        then return true\n    else if a==24 \n   \
    \     then return true\n    else if a==25 \n        then return true\n    else\
    \ if a==26 \n        then return true\n    else if a==27 \n        then return\
    \ true\n    else if a==28 \n        then return true\n    else if a==29 \n   \
    \     then return true\n    else if a==30 \n        then return true\n    else\
    \ if a==31 \n        then return true\n    else if a==32 \n        then return\
    \ true\n    else if a==33 \n        then return true\n    else if a==34 \n   \
    \     then return true\n    else if a==35 \n        then return true\n    else\
    \ if a==36 \n        then return true\n    else if a==37 \n        then return\
    \ true\n    else if a==38 \n        then return true\n    else if a==39 \n   \
    \     then return true\n    else if a==40 \n        then return true\n    else\
    \ if a==41 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmj62ekfi.jl:15\nin expression starting at /tmp/tmpmj62ekfi.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 \n        then return true\n    else if a==1 \n        then return\
    \ true\n    else if a==2 \n        then return true\n    else if a==3 \n     \
    \   then return true\n    else if a==4 \n        then return true\n    else if\
    \ a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==4\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpluaed20_.jl:15\nin expression starting at /tmp/tmpluaed20_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a==0 then return true\n    if a==1 then return true\n    if a==2 then\
    \ return true\n    if a==3 then return true\n    if a==4 then return true\n  \
    \  if a==5 then return true\n    if a==6 then return true\n    if a==7 then return\
    \ true\n    if a==8 then return true\n    if a==9 then return true\n    if a==10\
    \ then return true\n    if a==11 then return true\n    if a==12 then return true\n\
    \    if a==13 then return true\n    if a==14 then return true\n    if a==15 then\
    \ return true\n    if a==16 then return true\n    if a==17 then return true\n\
    \    if a==18 then return true\n    if a==19 then return true\n    if a==20 then\
    \ return true\n    if a==21 then return true\n    if a==22 then return true\n\
    \    if a==23 then return true\n    if a==24 then return true\n    if a==25 then\
    \ return true\n    if a==26 then return true\n    if a==27 then return true\n\
    \    if a==28 then return true\n    if a==29 then return true\n    if a==30 then\
    \ return true\n    if a==31 then return true\n    if a==32 then return true\n\
    \    if a==33 then return true\n    if a==34 then return true\n    if a==35 then\
    \ return true\n    if a==36 then return true\n    if a==37 then return true\n\
    \    if a==38 then return true\n    if a==39 then return true\n    if a==40 then\
    \ return true\n    if a==41 then return true\n    if a==42 then return true\n\
    \    if a==43 then return true\n    if a==44 then return true\n    if a==45 then\
    \ return true\n    if a==46 then return true\n    if a==47 then return true\n\
    \    if a==48 then return true\n    if a==49 then return true\n    if a==50 then\
    \ return true\n    if a==51 then return true\n    if a==52 then return true\n\
    \    if a==53 then return true\n    if a==54 then return true\n    if a==55 then\
    \ return true\n    if a==56 then return true\n    if a==57 then return true\n\
    \    if a==58 then return true\n    if a==59 then return true\n    if a==60 then\
    \ return true\n    if a==61 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5svkf692.jl:14\nin expression starting at /tmp/tmp5svkf692.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return True\n    else if a == 1 \n        then\
    \ return True\n    else if a == 2 \n        then return True\n    else if a ==\
    \ 3 \n        then return True\n    else if a == 4 \n        then return True\n\
    \    else if a == 5 \n        then return True\n    else if a == 6 \n        then\
    \ return True\n    else if a == 7 \n        then return True\n    else if a ==\
    \ 8 \n        then return True\n    else if a == 9 \n        then return True\n\
    \    else if a == 10 \n        then return True\n    else if a == 11 \n      \
    \  then return True\n    else if a == 12 \n        then return True\n    else\
    \ if a == 13 \n        then return True\n    else if a == 14 \n        then return\
    \ True\n    else if a == 15 \n        then return True\n    else if a == 16 \n\
    \        then return True\n    else if a == 17 \n        then return True\n  \
    \  else if a == 18 \n        then return True\n    else if a == 19 \n        then\
    \ return True\n    else if a == 20 \n        then return True\n    else if a ==\
    \ 21 \n        then return True\n    else if a == 22 \n        then return True\n\
    \    else if a == 23 \n        then return True\n    else if a == 24 \n      \
    \  then return True\n    else if a == 25 \n        then return True\n    else\
    \ if a == 26 \n        then return True\n    else if a == 27 \n        then return\
    \ True\n    else if a == 28 \n        then return True\n    else if a == 29 \n\
    \        then return True\n    else if a == 30 \n        then return True\n  \
    \  else if a == 31 \n        then return True\n    else if a == 32 \n        then\
    \ return True\n    else if a == 33 \n        then return True\n    else if a ==\
    \ 34 \n        then return True\n    else if a == 35 \n        then return True\n\
    \    else if a == 36 \n        then return True\n    else if a == 37 \n      \
    \  then return True\n    else if a == 38 \n        then return True\n    else\
    \ if a == 39 \n        then return True\n    else if a == 40 \n        then return\
    \ True\n    else if a == 41 \n        then return True\n    else if a == 42 \n\
    \        then return True\n    else if a == 43 \n        then return True\n  \
    \  else if a == 44 \n        then return True\n    else if a == 45 \n        then\
    \ return True\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmple2r6h4j.jl:15\nin expression starting at /tmp/tmple2r6h4j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a==1 \n        then\
    \ return true\n    else if a==2 \n        then return true\n    else if a==3 \n\
    \        then return true\n    else if a==4 \n        then return true\n    else\
    \ if a==5 \n        then return true\n    else if a==6 \n        then return true\n\
    \    else if a==7 \n        then return true\n    else if a==8 \n        then\
    \ return true\n    else if a==9 \n        then return true\n    else if a==10\
    \ \n        then return true\n    else if a==11 \n        then return true\n \
    \   else if a==12 \n        then return true\n    else if a==13 \n        then\
    \ return true\n    else if a==14 \n        then return true\n    else if a==15\
    \ \n        then return true\n    else if a==16 \n        then return true\n \
    \   else if a==17 \n        then return true\n    else if a==18 \n        then\
    \ return true\n    else if a==19 \n        then return true\n    else if a==20\
    \ \n        then return true\n    else if a==21 \n        then return true\n \
    \   else if a==22 \n        then return true\n    else if a==23 \n        then\
    \ return true\n    else if a==24 \n        then return true\n    else if a==25\
    \ \n        then return true\n    else if a==26 \n        then return true\n \
    \   else if a==27 \n        then return true\n    else if a==28 \n        then\
    \ return true\n    else if a==29 \n        then return true\n    else if a==30\
    \ \n        then return true\n    else if a==31 \n        then return true\n \
    \   else if a==32 \n        then return true\n    else if a==33 \n        then\
    \ return true\n    else if a==34 \n        then return true\n    else if a==35\
    \ \n        then return true\n    else if a==36 \n        then return true\n \
    \   else if a==37 \n        then return true\n    else if a==38 \n        then\
    \ return true\n    else if a==39 \n        then return true\n    else if a==40\
    \ \n        then return true\n    else if a==41 \n        then return true\n \
    \   else if a==42 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt4hi_dxu.jl:15\nin expression starting at /tmp/tmpt4hi_dxu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2)\
    \ ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==>\
    \ True\n    iscube(180) ==> False\n    \"\"\"\nfunction iscube(a::Int64)::Bool\
    \ \n    if a == 0 \n        then return true\n    else if a == 1\n        then\
    \ return true\n    else if a == 2\n        then return true\n    else if a ==\
    \ 3\n        then return true\n    else if a == 4\n        then return true\n\
    \    else if a == 5\n        then return true\n    else if a == 6\n        then\
    \ return true\n    else if a == 7\n        then return true\n    else if a ==\
    \ 8\n        then return true\n    else if a == 9\n        then return true\n\
    \    else if a == 10\n        then return true\n    else if a == 11\n        then\
    \ return true\n    else if a == 12\n        then return true\n    else if a ==\
    \ 13\n        then return true\n    else if a == 14\n        then return true\n\
    \    else if a == 15\n        then return true\n    else if a == 16\n        then\
    \ return true\n    else if a == 17\n        then return true\n    else if a ==\
    \ 18\n        then return true\n    else if a == 19\n        then return true\n\
    \    else if a == 20\n        then return true\n    else if a == 21\n        then\
    \ return true\n    else if a == 22\n        then return true\n    else if a ==\
    \ 23\n        then return true\n    else if a == 24\n        then return true\n\
    \    else if a == 25\n        then return true\n    else if a == 26\n        then\
    \ return true\n    else if a == 27\n        then return true\n    else if a ==\
    \ 28\n        then return true\n    else if a == 29\n        then return true\n\
    \    else if a == 30\n        then return true\n    else if a == 31\n        then\
    \ return true\n    else if a == 32\n        then return true\n    else if a ==\
    \ 33\n        then return true\n    else if a == 34\n        then return true\n\
    \    else if a == 35\n        then return true\n    else if a == 36\n        then\
    \ return true\n    else if a == 37\n        then return true\n    else if a ==\
    \ 38\n        then return true\n    else if a == 39\n        then return true\n\
    \    else if a == 40\n        then return true\n    else if a == 41\n        then\
    \ return true\n    else if a == 42\n        then return true\n    else if a ==\
    \ 43\n        then return true\n    else if a == 44\n        then return true\n\
    \    else if a == 45\n        then return true\n    else if a == 46\n        then\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplmvjpbuo.jl:15\nin expression starting at /tmp/tmplmvjpbuo.jl:15\n"
  exit_code: 1
  status: SyntaxError

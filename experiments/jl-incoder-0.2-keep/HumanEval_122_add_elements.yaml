name: HumanEval_122_add_elements
language: julia
prompt: "\"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n\
  \    the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n\
  \        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr)\
  \ <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
  \ k::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1,\
  \ -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000,\
  \ 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\
  \t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1],\
  \ 1) == 1)\nend\n"
completions: ["    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.4>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    add_elements(arr, 4)\n</cell>\n<text>\nQuestion 4\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for x in arr[k:end]\n        if x < 10\n\
    \            sum += x\n        else\n            sum += x - 10\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 4\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. \n\
    For example, given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for i = 1:k\n            sum += arr[i]\n        end\n        return\
    \ sum\n    end\nend", "    sum = 0\n    for i = 1:k\n        sum += arr[i]\n \
    \   end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n       \
    \ sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for n in arr[k:end]\n        sum += n\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nSubsets", "    sum = 0\n    for i in 1:k\n      \
    \  sum += arr[i]\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for x in arr[k:end]\n\
    \        if x % 10 == 0 \n            sum += x\n        else\n            sum\
    \ += x % 10\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nQuestion\
    \ 3.2\nWrite a function that returns the sum of the elements with at most two\
    \ digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, your function should return 24.", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nSubsets",
  "    sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0 \n            sum\
    \ += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end", "    sum = 0\n    for x in arr[k+1:end]\n        if x < 10\n           \
    \ sum += x\n        else\n            sum += x - 10\n        end\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n   \
    \     return arr[1]\n    \n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n    \
    \    sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Question 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes in an array of integers and an integer\
    \ k and returns the sum of the elements with at most k digits from the first k\
    \ elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9] and k =\
    \ 4, the function should return 24. Your function should work for any value of\
    \ k and for any arr where arr has at least k elements.", "    sum = 0\n    for\
    \ x in arr[k:end]\n        if x % 10 > 2\n            sum += x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9], k = 4, you should\
    \ return 24.", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 4\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111,21,3,4000,5,6,7,8,9], k = 4, the function should return\
    \ 24.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nProblem\
    \ 8\nGiven a non-empty array of integers arr, return a new array where each element\
    \ is the sum of the elements from the original array except the element at index\
    \ i.", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n\
    \    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n        if e <\
    \ 10\n            sum += e\n        else\n            sum += e - 10\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nProblem 7\nWrite a function that\
    \ returns the number of elements in the array that have at most two digits.",
  "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n</cell>\n\
    <code language=julia-1.5>\nadd_elements(arr, 4)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. \nFor example,\
    \ given arr = [111,21,3,4000,5,6,7,8,9], k = 4, the function should return 24.",
  "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end", "    if k == 0 \n        return arr[1]\n    else \n        sum = 0\n   \
    \     for i = 1:k\n            sum += arr[i]\n        end\n        return sum\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    add_elements(arr, 4)\n</cell>\n<text>\nQuestion 3\nWrite a function that returns\
    \ the number of times the number \"k\" appears in arr starting from index 1.",
  "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nSubsets", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. \nThe function\
    \ should return an Int64.", "    sum = 0\n    for e in arr[k+1:end]\n        sum\
    \ += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\narr\
    \ = [111,21,3,4000,5,6,7,8,9]\nadd_elements(arr, 4)\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for x in arr[k:end]\n\
    \        if x < 10\n            sum += x\n        else\n            sum += x -\
    \ 10\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        if e < 10\n            sum += e\n        else\n            sum += e %\
    \ 10 + 10 * (e / 10)\n        end\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Question 4\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, the function should return 24.", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for i = 2:k\n            sum += arr[i]\n\
    \        end\n        return sum\n    end\nend\n</cell>\n<text>\nProblem 3\nGiven\
    \ a non-empty array of integers arr, return a new array where each element is\
    \ the sum of the elements with two digits from the original array's first k elements.\
    \ \nFor example, given arr = [111,21,3,4000,5,6,7,8,9], return [24,15,16,12].",
  "    sum = 0\n    for x in arr[k+1:end]\n        sum += x\n    end\n    return sum\n\
    end", "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Problem 7: Find the sum of all the elements of the given array arr that are divisible\
    \ by 7", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nQuestion 7\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111,21,3,4000,5,6,7,8,9], k = 4, your function should\
    \ return 24.", "    sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0 \n\
    \            sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nProblem 3\nGiven a non-empty array of integers arr, return\
    \ a new array where each element is the sum of the elements with two digits from\
    \ the original array's element at that index.", "    sum = 0\n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend", "    if k == 0 \n     \
    \   return arr[1] \n    else \n        sum = 0 \n        for i in 1:k \n     \
    \       sum += arr[i] \n        endfor \n        return sum \n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n        sum\
    \ += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\narr\
    \ = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an array of integers\
    \ arr and an integer k and returns the sum of the elements with at most k digits\
    \ from the first k elements of arr.", "    sum = 0\n    for e in arr[k:end]\n\
    \        if e < 10\n            sum += e\n        else\n            sum += e %\
    \ 10 + 10\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Problem 3\nGiven a non-empty array of integers arr, return a new array where each\
    \ element is the sum of the elements with two digits from the original array's\
    \ element at that index.", "    sum = 0\n    for e in arr[k+1:end]\n        sum\
    \ += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if k == 0 \n        return arr[1]\n    \n    sum = 0\n    for i = 1:k\n  \
    \      sum += arr[i]\n    end\n    return sum\nend", "    if k == 0 \n       \
    \ return arr[1] \n    else \n        sum = 0\n        for i = 1:k\n          \
    \  sum += arr[i]\n        end\n        return sum\n    end\nend", "    sum = 0\n\
    \    for e in arr[k:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n        sum\
    \ += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that returns the number of unique elements in the given\
    \ array.", "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n    \
    \    sum += e\n    end\n    return sum\nend", "    sum = 0\n    for x in arr[k+1:end]\n\
    \        sum += x\n    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\n\
    Given a non-empty array of integers arr, return a new array where each element\
    \ is the sum of the elements with two digits in their decimal representation.",
  "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk =\
    \ 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of integers and an integer k\
    \ and returns the sum of the elements with at most two digits from the first k\
    \ elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9] and k =\
    \ 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nSubsets", "    sum = 0\n    for e in arr[k:end]\n     \
    \   sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 4\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111,21,3,4000,5,6,7,8,9], k = 4, the function should return 24.",
  "    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nSubsets\nGiven an array arr of positive integers,\
    \ return all possible subsets (without duplicates) of arr.", "    sum = 0\n  \
    \  for e in arr[k:end]\n        sum += e\n    end\n    return sum\nend", "   \
    \ sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk =\
    \ 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Question 4\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, the function should return 24.", "    sum = 0\n    for el in arr[k:end]\n\
    \        if el % 10 > 1\n            sum += el\n        end\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n\
    \    return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n  \
    \      sum = 0\n        for i = 2:k \n            sum += arr[i] \n        end\n\
    \        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>", "    sum\
    \ = 0\n    for e in arr[k+1:end]\n        if e < 10\n            sum += e\n  \
    \      else\n            sum += e - 10\n        end\n    end\n    return sum\n\
    end", "    sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0 \n       \
    \     sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nQuestion\
    \ 7\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, you should return 24.", "    if k == 0 \n        return arr[1]\n    else\
    \ \n        sum = 0\n        for i = 1:k\n            sum += arr[i]\n        end\n\
    \        return sum\n    end\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Question 3\nWrite a Julia function named two_digit_sum that takes an array of\
    \ integers arr and an integer k and returns the sum of the elements with at most\
    \ two digits from the first k elements of arr.", "    sum = 0\n    for i = 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend", "    sum = 0\n    for e\
    \ in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Problem 3\nGiven a non-empty array of integers arr, return a new array where each\
    \ element is the product of all the numbers in the original array except the one\
    \ at index i.", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[2:k], k-1)\nend", "    sum = 0\n    for x in arr[k:end]\n\
    \        if x % 10 > 2\n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 4\nWrite a Julia function called two_digit_sum\
    \ that takes in an array of integers arr and an integer k, and returns the sum\
    \ of the elements with at most two digits from the first k elements of arr.",
  "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 7\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111,21,3,4000,5,6,7,8,9], k = 4, the function should return\
    \ 24.", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for\
    \ e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code\
    \ language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\nProblem 3\nGiven\
    \ a non-empty array of integers arr, return a new array where each element is\
    \ the product of three consecutive elements arr[0], arr[1], and arr[2]. \nThe\
    \ product of any three consecutive elements is the sum of the products of those\
    \ three consecutive elements.", "    sum = 0\n    for e in arr[k+1:end]\n    \
    \    sum += e\n    end\n    return sum\nend\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. \nFor example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nSubsets",
  "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n   \
    \ return sum\nend", "    sum = 0\n    for e in arr[k:end]\n        sum += e\n\
    \    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n    \
    \    sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ 4)\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n    return sum\n\
    end", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 7: Write a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. You\
    \ may assume that arr is non-empty and k \u2264 len(arr).", "    sum = 0\n   \
    \ for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend", "  \
    \  sum = 0\n    for x in arr[k+1:end]\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n</cell>\n\
    <code language=julia-1.5>\nadd_elements(arr, 4)\n</cell>\n<text>\nQuestion 4\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Problem 3\nGiven a non-empty array of integers arr, return a new array where each\
    \ element is the sum of the elements with two digits in their decimal representation.",
  "    sum = 0\n    for el in arr[k+1:end]\n        sum += el\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nProblem 8", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend", " \
    \   sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n      \
    \  if e < 10\n            sum += e\n        else\n            sum += e - 10\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nSubtract\
    \ Elements", "    if k == 0 \n        return arr[1] \n    else \n        sum =\
    \ 0\n        for i in 1:k \n            sum += arr[i] \n        end\n        return\
    \ sum\n    end\nend", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n      \
    \  sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ 4)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function should return\
    \ 24.", "    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n\
    \    return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n  \
    \      return arr[1] + add_elements(arr[2:k], k-1) \nend", "    sum = 0\n    for\
    \ e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code\
    \ language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0 \n            sum\
    \ += x\n        else\n            sum += x - 10\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.4>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.4>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Question 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<text>\nQuestion 7\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, your function should return 24.", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend", " \
    \   sum = 0\n    for el in arr[k:end]\n        if el < 10\n            sum +=\
    \ el\n        else\n            sum += el - 10\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Problem 7: Add Elements\nGiven a non-empty array of integers arr and an integer\
    \ k, return\nthe sum of the elements with at most two digits from the first k\
    \ elements of arr.", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n\
    \    end\n    return sum\nend", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0 \n        for i in 1:k \n            sum += arr[i] \n    \
    \    return sum \nend \n</cell>\n<text>\nSolution 3", "    sum = 0\n    for e\
    \ in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend", "    if k\
    \ == 0 \n        return arr[1] \n    else \n        sum = 0\n        for i in\
    \ 1:k \n            sum += arr[i] \n        end\n        return sum\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0 \n        for i in 1:k \n            sum += arr[i]\
    \ \n        return sum + add_elements(arr[k+1:], k-1) \nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nProblem 8\nGiven a non-empty array of integers arr, return\
    \ a new array where each element is the sum of the elements with index less than\
    \ or equal to the given index.", "    sum = 0\n    for i = 1:k\n        sum +=\
    \ arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nQuestion\
    \ 9\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    if k == 0 \n        return\
    \ arr[1]\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0\n        for i = 2:k\n            sum += arr[i]\n        end\n\
    \        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    add_elements(arr, 4)\n</cell>\n<text>\nQuestion 4\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nQ8. Write a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. \nExample: arr = [111,21,3,4000,5,6,7,8,9], k = 4\nOutput: 24", "    sum\
    \ = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nSubsets", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for i in 1:k \n            sum += arr[i]\
    \ \n        end\n        return sum\n    end\nend\n</cell>\n<text>\nadd_elements(arr,\
    \ k)\nThis function will return the sum of the elements with at most two digits\
    \ from the first k elements of arr. \nThe function will throw an error if k is\
    \ less than 1 or greater than the number of elements in arr.", "    sum = 0\n\
    \    for e in arr[k:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for e in arr[k:end]\n        sum\
    \ += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k:end]\n        if x < 10\n            sum += x\n\
    \        else\n            sum += x - 10\n        end\n    end\n    return sum\n\
    end", "    sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Question 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nSubsets",
  "    sum = 0\n    for n in arr[k:end]\n        sum += n\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk =\
    \ 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for e in arr[k:end]\n        sum +=\
    \ e\n    end\n    return sum\nend", "    sum = 0\n    for x in arr[k:end]\n  \
    \      sum += x\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        sum = 0\n        for i in 1:k\n            sum =\
    \ sum + arr[i]\n        end\n        return sum\n    end\nend", "    sum = 0\n\
    \    for i in 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code\
    \ language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1]\n\
    \    else \n        sum = 0\n        for i in 1:k\n            sum += arr[i]\n\
    \        end\n        return sum\n    end\nend", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end], k-1)\
    \ \nend", "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\
    \ \n        for i in arr[k:end] \n            sum += i \n        return sum +\
    \ arr[k] \nend\n</cell>\n<text>\nNow let's see how we call this function", " \
    \   sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n\
    \    return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n  \
    \      sum = 0 \n        for i = 2:k \n            sum += arr[i] \n        return\
    \ sum + arr[k-1] \nend", "    sum = 0\n    for e in arr[k+1:end]\n        sum\
    \ += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\narr\
    \ = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k:end]\n\
    \        if e < 10\n            sum += e\n        else\n            sum += e %\
    \ 10 + 10\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 3\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 7", "    sum = 0\n    for x in arr[k:end]\n  \
    \      if x % 10 == 0 \n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    k = 2\nadd_elements(arr, k)\n</cell>\n<text>\nProblem 7", "    sum = 0\n    for\
    \ n in arr[k+1:end]\n        sum += n\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code\
    \ language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\nQuestion 7: Write\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        sum = 0\n        for i in 1:k\n            sum +=\
    \ arr[i]\n        end\n        return sum\n    end\nend", "    if k == 0 \n  \
    \      return arr[1] \n    else \n        sum = 0\n        for i = 2:k\n     \
    \       sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0\n        for i = 1:k\n            sum += arr[i]\n        end\n\
    \        return sum\n    end\nend", "    sum = 0\n    for i in 1:k\n        sum\
    \ += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.4>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111,21,3,4000,5,6,7,8,9], k = 4, your function should return 24.",
  "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end", "    sum = 0\n    for x in arr[k:end]\n        if x < 10\n            sum\
    \ += x\n        else\n            sum += x - 10\n        end\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in arr[k+1:end]\n        sum += x\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    add_elements(arr, 4)\n</cell>\n<text>\nProblem 3\nGiven a non-empty array of integers\
    \ arr, return a new array where each element is the sum of the elements with two\
    \ digits from the original array arr.", "    sum = 0\n    for x in arr[k:end]\n\
    \        sum += x\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n    return sum\n\
    end", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n   \
    \ return sum\nend", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n  \
    \  end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n      \
    \  sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<text>\nQuestion 7", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        if e < 10\n            sum += e\n        else\n            sum += e -\
    \ 10\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ 4)\n</cell>\n<text>\nProblem 3\nGiven a non-empty array of integers arr, return\
    \ a new array where each element is the sum of the elements with index less than\
    \ or equal to the given index.", "    sum = 0\n    for e in arr[k+1:end]\n   \
    \     sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for i in 1:k\n   \
    \     sum += arr[i]\n    end\n    return sum\nend", "    sum = 0\n    for e in\
    \ arr[k:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111,21,3,4000,5,6,7,8,9], 4) == 24\n</cell>\n<text>\nQuestion\
    \ 2.2\nWrite a function that returns the sum of the elements with at most two\
    \ digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<text>\nSolution\nLet's\
    \ see how we would implement this function in Julia:", "    sum = 0\n    for e\
    \ in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code\
    \ language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend", "    if k == 0 \n     \
    \   return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1)\nend", "    sum = 0\n    for e in arr[k:end]\n        if e < 10\n     \
    \       sum += e\n        else\n            sum += e - 10\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nSolution 3", "    sum = 0\n    for x in\
    \ arr[k+1:end]\n        sum += x\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nadd_elements(arr, 4)\n\
    </cell>\n<text>\nQuestion 5\nWrite a function that takes in an array of integers\
    \ and an integer k and returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, if arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24. Your function should return an Int64.",
  "    sum = 0\n    for e in arr[k:end]\n        if e < 10\n            sum += e\n\
    \        else\n            sum += e % 10 + 10 * (e // 10)\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, if arr = [111,21,3,4000,5,6,7,8,9], k = 4, then the function should\
    \ return 24.", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\n\
    add_elements(arr, 4)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for e in arr[k:end]\n        sum += e\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n\
    <code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\nQuestion 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. \nFor example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    sum = 0\n    for e in arr[k:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nadd_elements(arr, 4)\n</cell>\n<text>\nProblem\
    \ 7: Find all elements with at most two digits from the first k elements of arr",
  "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk =\
    \ 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code language=julia-1.5>\nadd_elements(arr,\
    \ k)\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [111,21,3,4000,5,6,7,8,9]\nadd_elements(arr, 4)\n</cell>\n<text>\nQuestion\
    \ 7\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4, your function should return 24.", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nadd_elements(arr, k)\n</cell>\n\
    <text>\nSolution 2", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 4.2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111,21,3,4000,5,6,7,8,9], k = 4, the function should return\
    \ 24.", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n \
    \   return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     return arr[1] + add_elements(arr[2:k], k-1) \nend", "    sum = 0\n    for\
    \ e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nk = 2\n</cell>\n<code\
    \ language=julia-1.5>\nadd_elements(arr, k)\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k+1:end]\n        sum += x\n    end\n    return sum\n\
    end", "    sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n   \
    \ return sum\nend\n</cell>\n<text>\nSolution\nLet's see how we would implement\
    \ this function in Julia:", "    sum = 0\n    for e in arr[k:end]\n        sum\
    \ += e\n    end\n    return sum\nend", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        return arr[1] + add_elements(arr[k+1:end], k-1)\nend\n\
    </cell>\n<code language=julia-1.5>\narr = [111,21,3,4000,5,6,7,8,9]\nadd_elements(arr,\
    \ 4)\n</cell>\n<text>\nExercise 4\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111,21,3,4000,5,6,7,8,9] and k = 4, the function should return\
    \ 24.", "    sum = 0\n    for x in arr[k+1:end]\n        if x < 10\n         \
    \   sum += x\n        else\n            sum += x - 10\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) == 24\n</cell>\n<text>\nSubsets"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_60_sum_to_n
language: julia
results:
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        0\n    else if n == 1\n        1\n    else\n        sum_to_n(n - 1) +\
    \ sum_to_n(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz9cpdg7_.jl:16\nin expression starting at\
    \ /tmp/tmpz9cpdg7_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mkxm6po.jl:16\nin expression starting at\
    \ /tmp/tmp1mkxm6po.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n\
    \ - 1)\n</code>\n<|/ a |>\n<| c |>\nThis is not the right way to solve this problem.\
    \ `sum_to_n` should return a `Int64`, not a `Int`.\n<|/ c |>\n<| c |>\nThe question\
    \ was about how to solve this problem using recursion. My answer was to show how\
    \ to solve the problem using recursion.\n<|/ c |>\n<| c |>\nThe question was about\
    \ how to solve this problem using recursion. My answer was to show how to solve\
    \ the problem using recursion.\n<|/ c |>\n<| c |>\nThe question was about how\
    \ to solve this problem using recursion. My answer was to show how to solve the\
    \ problem using recursion.\n<|/ c |>\n<| c |>\nThe question was about how to solve\
    \ this problem using recursion. My answer was to show how to solve the problem\
    \ using recursion.\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndef sum_to_n(n::Int64)::Int64\n\
    \    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n\
    \ - 1)\n</code>\n<|/ a tags=recursion,haskell |>\n<| c |>\nThis is not the right\
    \ way to solve this problem. `sum_to_n` should return a `Int64`, not a `Int`.\n\
    <|/ c |>\n<| c |>\nThe question was about how to solve this problem using recursion.\
    \ My answer was to show how to solve the problem using recursion.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nsum_to_n :: Int -> Int\nsum_to_n n = if n == 0 then\
    \ 0 else n + sum_to_n (n-1)\n</code>\n<|/ a tags=recursion,haskell |>\n<| c |>\n\
    This is not the right way to solve this problem. `sum_to_n` should return a `Int64`,\
    \ not a `Int`.\n<|/ c |>\n<| c |>\nThe question was about how to solve this problem\
    \ using recursion. My answer was to show how to solve the problem using recursion.\n\
    <|/ c |>\n<| a tags=recursion,haskell |>\n<code>\nsum_to_n :: Int -> Int\nsum_to_n\
    \ n = if n == 0 then 0 else n + sum_to_n (n-1)\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThis is not the right way to solve this problem. `sum_to_n` should return\
    \ a `\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvs15rgdj.jl:15\nin expression starting at /tmp/tmpvs15rgdj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the factorial of a given number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg8dkpkzv.jl:15\nin expression starting at /tmp/tmpg8dkpkzv.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1 \n        then return 1\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpucfg_ehg.jl:15\nin expression starting at /tmp/tmpucfg_ehg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else return n + sum_to_n(n - 1)\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp693muc8.jl:15\nin expression starting at /tmp/tmpp693muc8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 1\n        else return n * sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbuple3qc.jl:15\nin expression starting at /tmp/tmpbuple3qc.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(30)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2dc6d5ue.jl:19\nin expression starting at\
    \ /tmp/tmp2dc6d5ue.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0kkblpbu.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp0kkblpbu.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0kkblpbu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0kkblpbu.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0kkblpbu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp0kkblpbu.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0kkblpbu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0kkblpbu.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0kkblpbu.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp0kkblpbu.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0kkblpbu.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0kkblpbu.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0kkblpbu.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp0kkblpbu.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0kkblpbu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 1\n    else \n        then return n*sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt3w_ebao.jl:15\nin expression starting at /tmp/tmpt3w_ebao.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplxgunw_j.jl:15\nin expression starting at /tmp/tmplxgunw_j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        error(\"n must be positive\")\n    else\n        return n\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwg7me4pa.jl:16\nin expression starting at\
    \ /tmp/tmpwg7me4pa.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        1\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_hhkhdpx.jl:16\nin expression starting at\
    \ /tmp/tmp_hhkhdpx.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the sum of the numbers from 1 to n inclusive.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprfxx8fm8.jl:19\nin expression starting at\
    \ /tmp/tmprfxx8fm8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        return 1 \n    else \n        return n + sum_to_n(n-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqcfpm2yh.jl:16\nin expression starting at\
    \ /tmp/tmpqcfpm2yh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpndc72gji.jl:15\nin expression starting at /tmp/tmpndc72gji.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp73s_df3z.jl:19\nin expression starting at\
    \ /tmp/tmp73s_df3z.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + (sum_to_n(n-1))\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(30)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgyk1_dq1.jl:19\nin expression starting at\
    \ /tmp/tmpgyk1_dq1.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        1 + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxdqimst9.jl:19\nin expression starting at\
    \ /tmp/tmpxdqimst9.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the first n Fibonacci\
    \ numbers. \nThe Fibonacci numbers are the numbers in the following pattern:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2anphs7t.jl:15\nin expression starting at /tmp/tmp2anphs7t.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 1\n        else return n*sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the factorial\
    \ of a given number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1xstirex.jl:15\nin expression starting at /tmp/tmp1xstirex.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1\n    else\n        n*sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjg_8nc0e.jl:19\nin expression starting at\
    \ /tmp/tmpjg_8nc0e.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(30)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnkd572p8.jl:16\nin expression starting at\
    \ /tmp/tmpnkd572p8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_1dpuh7a.jl:26\n  Expression: candidate(6)\
    \ == 21\n   Evaluated: 6 == 21\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpuh7a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpuh7a.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_1dpuh7a.jl:27\n  Expression: candidate(11) == 66\n   Evaluated:\
    \ 11 == 66\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpuh7a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpuh7a.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_1dpuh7a.jl:28\n  Expression: candidate(30) == 465\n   Evaluated:\
    \ 30 == 465\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpuh7a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpuh7a.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_1dpuh7a.jl:29\n  Expression: candidate(100) == 5050\n   Evaluated:\
    \ 100 == 5050\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpuh7a.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpuh7a.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_1dpuh7a.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend\n</cell>\n<code language=julia-1.1>\nsum_to_n(30)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiulfzq8b.jl:20\nin expression starting at\
    \ /tmp/tmpiulfzq8b.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbav94f6e.jl:15\nin expression starting at /tmp/tmpbav94f6e.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n\
    \ - 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the first n prime numbers. \nHint: use the sieve of Eratosthenes\
    \ algorithm.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpivkwn07b.jl:15\nin expression starting at /tmp/tmpivkwn07b.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    end\n    return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the sum of the first n positive integers. \nFor example, sum_to_n(10)\
    \ should return 55.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxcva7iqn.jl:19\nin expression starting at\
    \ /tmp/tmpxcva7iqn.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpexs3_5n_.jl:15\nin expression starting at /tmp/tmpexs3_5n_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       1\n    else\n        n * sum_to_n(n - 1)\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfawgqsm3.jl:21\nin expression starting at\
    \ /tmp/tmpfawgqsm3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\n    end\nend\n</cell>\n<code language=julia-1.4>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a given number. \nFor example, factorial(5) =\
    \ 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1\nHint: use recursion\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkaz1uev8.jl:15\nin expression starting at /tmp/tmpkaz1uev8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp283wnoqp.jl:19\nin expression starting at\
    \ /tmp/tmp283wnoqp.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvhtysq8t.jl:15\nin expression starting at /tmp/tmpvhtysq8t.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,\
    \ 0)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpflkd8z7c.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpflkd8z7c.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpflkd8z7c.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpflkd8z7c.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpflkd8z7c.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpflkd8z7c.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpflkd8z7c.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpflkd8z7c.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpflkd8z7c.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpflkd8z7c.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpflkd8z7c.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpflkd8z7c.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpflkd8z7c.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpflkd8z7c.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpflkd8z7c.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        1 + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfaf8sd42.jl:19\nin expression starting at\
    \ /tmp/tmpfaf8sd42.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <text>\nExercise: Write a function that returns the sum of the first n numbers.\
    \ \nThe function should take one argument, n::Int64. \nIt should return an Int64\
    \ with the sum of the first n numbers. \nThe function should raise an error if\
    \ n is less than or equal to 0.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqt5qz359.jl:19\nin expression starting at\
    \ /tmp/tmpqt5qz359.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_6qhjzdy.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_impl not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp_6qhjzdy.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6qhjzdy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6qhjzdy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_6qhjzdy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp_6qhjzdy.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6qhjzdy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6qhjzdy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_6qhjzdy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp_6qhjzdy.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6qhjzdy.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6qhjzdy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_6qhjzdy.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp_6qhjzdy.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6qhjzdy.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 1\n    else \n        sum_to_n(n-1)+n\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa4z_bhi3.jl:15\nin expression starting at /tmp/tmpa4z_bhi3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n\
    \ - 1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4ao4gjuk.jl:15\nin expression starting at /tmp/tmp4ao4gjuk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        then return n +\
    \ sum_to_n(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb2g5mdmo.jl:15\nin expression starting at /tmp/tmpb2g5mdmo.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n-1)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk8ulgu91.jl:15\nin expression starting at /tmp/tmpk8ulgu91.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        0\n    else\n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm6f3jqqk.jl:16\nin expression starting at\
    \ /tmp/tmpm6f3jqqk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise\nWrite a function that sums numbers from 1 to n but stops when the sum\
    \ is greater than n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgm1qa_rm.jl:16\nin expression starting at\
    \ /tmp/tmpgm1qa_rm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"sum_to_n expects a positive integer\")\n   \
    \ elseif n == 0\n        0\n    else\n        sum_to_n(n-1) + n\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the first\
    \ n positive integers. \nThe function should take one argument, n, which should\
    \ be an integer.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqesn9f8g.jl:22\nin expression starting at\
    \ /tmp/tmpqesn9f8g.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n * sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjwrs03jc.jl:19\nin expression starting at\
    \ /tmp/tmpjwrs03jc.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n-1)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqzgr5huv.jl:15\nin expression starting at /tmp/tmpqzgr5huv.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsv6o272o.jl:19\nin expression starting at\
    \ /tmp/tmpsv6o272o.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the first n prime numbers. \nThe function\
    \ should take one argument n, and return a list of n prime numbers.\nThe function\
    \ should return an empty list if n is less than or equal to 0.\nThe function should\
    \ return an error if n is not a positive integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpge5898dw.jl:15\nin expression starting at /tmp/tmpge5898dw.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else if n == 1 \n        then return\
    \ 1\n    else \n        sum_to_n(n - 1) + sum_to_n(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd8ehrlm5.jl:15\nin expression starting at /tmp/tmpd8ehrlm5.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplmgl5pyq.jl:20\nin expression starting at\
    \ /tmp/tmplmgl5pyq.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else return n\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxeo7yxm1.jl:15\nin expression starting at /tmp/tmpxeo7yxm1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n-1) + n\nend\n</cell>\n<code language=julia-1.1>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ybmgzih.jl:16\nin expression starting at\
    \ /tmp/tmp_ybmgzih.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be greater than 0\", 2)\n    elseif\
    \ n < 2 \n        return n\n    elseif n == 1 \n        return 1\n    elseif n\
    \ == 2 \n        return 2\n    elseif n == 3 \n        return 3\n    elseif n\
    \ == 4 \n        return 4\n    elseif n == 5 \n        return 5\n    elseif n\
    \ == 6 \n        return 6\n    elseif n == 7 \n        return 7\n    elseif n\
    \ == 8 \n        return 8\n    elseif n == 9 \n        return 9\n    elseif n\
    \ == 10 \n        return 10\n    elseif n == 11 \n        return 11\n    elseif\
    \ n == 12 \n        return 12\n    elseif n == 13 \n        return 13\n    elseif\
    \ n == 14 \n        return 14\n    elseif n == 15 \n        return 15\n    elseif\
    \ n == 16 \n        return 16\n    elseif n == 17 \n        return 17\n    elseif\
    \ n == 18 \n        return 18\n    elseif n == 19 \n        return 19\n    elseif\
    \ n == 20 \n        return 20\n    elseif n == 21 \n        return 21\n    elseif\
    \ n == 22 \n        return 22\n    elseif n == 23 \n        return 23\n    elseif\
    \ n == 24 \n        return 24\n    elseif n == 25 \n        return 25\n    elseif\
    \ n == 26 \n        return 26\n    elseif n == 27 \n        return 27\n    elseif\
    \ n == 28 \n        return 28\n    elseif n == 29 \n        return 29\n    elseif\
    \ n == 30 \n        return 30\n    elseif n == 31 \n        return 31\n    elseif\
    \ n == 32 \n        return 32\n    elseif n == 33 \n        return 33\n    elseif\
    \ n == 34 \n        return 34\n    elseif n == 35 \n        return 35\n    elseif\
    \ n == 36 \n        return 36\n    elseif n == 37 \n        return 37\n    elseif\
    \ n == 38 \n        return 38\n    elseif n == 39 \n        return 39\n    elseif\
    \ n == 40 \n        return 40\n    elseif n == 41 \n        return 41\n    elseif\
    \ n == 42 \n        return 42\n    elseif n == 43 \n        return 43\n    elseif\
    \ n == 44 \n        return 44\n    elseif n == 45 \n        return 45\n    elseif\
    \ n == 46 \n        return 46\n    elseif n == 47 \n        return 47\n    elseif\
    \ n == 48 \n        return 48\n    elseif n == 49 \n        return 49\n    elseif\
    \ n == 50 \n        return 50\n    elseif n == 51 \n        return 51\n    elseif\
    \ n == 52 \n        return 52\n    elseif n == 53 \n        return 53\n    elseif\
    \ n == 54 \n        return 54\n    elseif n == 55 \n        return 55\n    elseif\
    \ n == 56 \n        return 56\n    elseif n == 57 \n        return 57\n    elseif\
    \ n == 58 \n        return 58\n    elseif n == 59 \nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr9bamqpw.jl:1\nin expression starting at /tmp/tmpr9bamqpw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + 1\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the first n positive integers.\
    \ \nThe function should take an argument n and return a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp083og0y8.jl:16\nin expression starting at\
    \ /tmp/tmp083og0y8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.4>\nsum_to_n(30)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that sums numbers from 1 to n and\
    \ returns the sum of the squares of the numbers.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmvbfzctu.jl:15\nin expression starting at /tmp/tmpmvbfzctu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cumpkbm.jl:16\nin expression starting at\
    \ /tmp/tmp2cumpkbm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\n    end\nend\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptem5kic8.jl:15\nin expression starting at /tmp/tmptem5kic8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1 \n        then return 1\n    else \n        then return n*sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaghramni.jl:15\nin expression starting at /tmp/tmpaghramni.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the numbers from 1 to n that are divisible by k.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1nzh1ke4.jl:20\nin expression starting at\
    \ /tmp/tmp1nzh1ke4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkni6rvy6.jl:15\nin expression starting at /tmp/tmpkni6rvy6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        then return n +\
    \ sum_to_n(n - 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgos_n340.jl:15\nin expression starting at /tmp/tmpgos_n340.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be >= 1\")\n    elseif n < 2\n      \
    \  return 1\n    else\n        return n * sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkemkrtht.jl:22\nin expression starting at\
    \ /tmp/tmpkemkrtht.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that computes the factorial of a given number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4nf0ppug.jl:16\nin expression starting at\
    \ /tmp/tmp4nf0ppug.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpftg52ado.jl:15\nin expression starting at /tmp/tmpftg52ado.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 0 \n        else return n*sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code language=julia-1.4>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ec6jqjt.jl:15\nin expression starting at /tmp/tmp0ec6jqjt.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1 \n        1 \n    else \n        n * sum_to_n(n - 1)\nend\n\
    </cell>\n<code language=julia-1.1>\nsum_to_n(30)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpucya8pae.jl:19\nin expression starting at\
    \ /tmp/tmpucya8pae.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 1\n        else return n*sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr59vtdp9.jl:15\nin expression starting at /tmp/tmpr59vtdp9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp66vltow0.jl:15\nin expression starting at /tmp/tmp66vltow0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n-1)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm31_aoii.jl:15\nin expression starting at /tmp/tmpm31_aoii.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else return n + sum_to_n(n - 1)\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb606p8jm.jl:15\nin expression starting at /tmp/tmpb606p8jm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi8rmboyv.jl:15\nin expression starting at /tmp/tmpi8rmboyv.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the numbers from 1 to n.\nFor example,\
    \ sum_to_n(10) = 55.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_nmvep30.jl:16\nin expression starting at\
    \ /tmp/tmp_nmvep30.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ueik2ip.jl:19\nin expression starting at\
    \ /tmp/tmp8ueik2ip.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl6kb75pq.jl:15\nin expression starting at /tmp/tmpl6kb75pq.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n-1) + n\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa_x5o2cz.jl:16\nin expression starting at\
    \ /tmp/tmpa_x5o2cz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_w22c4uj.jl:15\nin expression starting at /tmp/tmp_w22c4uj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    elseif n < 2\n  \
    \      1\n    else\n        n * sum_to_n(n-1)\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt356_2eq.jl:21\nin expression starting at\
    \ /tmp/tmpt356_2eq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.1>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.1>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.1>\nsum_to_n(5)\n</cell>\n<code language=julia-1.1>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.1>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7j9xkgd8.jl:16\nin expression starting at\
    \ /tmp/tmp7j9xkgd8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfswdxxn7.jl:16\nin expression starting at\
    \ /tmp/tmpfswdxxn7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzpd2_r4s.jl:16\nin expression starting at\
    \ /tmp/tmpzpd2_r4s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the first n prime numbers.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyy7mh9my.jl:16\nin expression starting at\
    \ /tmp/tmpyy7mh9my.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        n+sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 3628800.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjsx6twe8.jl:19\nin expression starting at\
    \ /tmp/tmpjsx6twe8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1m6rm2kb.jl:16\nin expression starting at\
    \ /tmp/tmp1m6rm2kb.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf7kt_bik.jl:19\nin expression starting at\
    \ /tmp/tmpf7kt_bik.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the first n prime numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogcpzks1.jl:19\nin expression starting at\
    \ /tmp/tmpogcpzks1.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        then return n +\
    \ sum_to_n(n - 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5vdc4933.jl:15\nin expression starting at /tmp/tmp5vdc4933.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,\
    \ 1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp113o6nl4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp113o6nl4.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp113o6nl4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp113o6nl4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp113o6nl4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp113o6nl4.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp113o6nl4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp113o6nl4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp113o6nl4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp113o6nl4.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp113o6nl4.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp113o6nl4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp113o6nl4.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp113o6nl4.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp113o6nl4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    end\n    sum = 0\n\
    \    for i in 1:n\n        sum += i\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the factorial of a given number. For example,\
    \ factorial(4) == 24. Hint: use the factorial function.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb097gtpq.jl:23\nin expression starting at\
    \ /tmp/tmpb097gtpq.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwlk0m17d.jl:19\nin expression starting at\
    \ /tmp/tmpwlk0m17d.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n-1)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.4>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjfr5b9nr.jl:15\nin expression starting at /tmp/tmpjfr5b9nr.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(0)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(0)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<code language=julia-1.5>\nsum_to_n(0)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(0)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<code language=julia-1.5>\nsum_to_n(0)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2zpsy6od.jl:19\nin expression starting at\
    \ /tmp/tmp2zpsy6od.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt53l22t2.jl:15\nin expression starting at /tmp/tmpt53l22t2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n - 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgwumhrvj.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwumhrvj.jl:1\n\
    in expression starting at /tmp/tmpgwumhrvj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpchfawbx9.jl:19\nin expression starting at\
    \ /tmp/tmpchfawbx9.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmtw3hrck.jl:15\nin expression starting at /tmp/tmpmtw3hrck.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpew9a5ku4.jl:15\nin expression starting at /tmp/tmpew9a5ku4.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       0\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n.\nHint: Use a recursive function.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn_c1j6e6.jl:22\nin expression starting at\
    \ /tmp/tmpn_c1j6e6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbc5amywo.jl:15\nin expression starting at /tmp/tmpbc5amywo.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 1\n    else \n        sum_to_n(n - 1) +\
    \ n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmfkab5_p.jl:15\nin expression starting at /tmp/tmpmfkab5_p.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n+sum_to_n(n-1) \nend \n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2gatseow.jl:19\nin expression starting at\
    \ /tmp/tmp2gatseow.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbr3f7y7i.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbr3f7y7i.jl:1\n\
    in expression starting at /tmp/tmpbr3f7y7i.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt_rdk0kl.jl:16\nin expression starting at\
    \ /tmp/tmpt_rdk0kl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.1>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.1>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.1>\nsum_to_n(5)\n</cell>\n<code language=julia-1.1>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.1>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpijc6yqpd.jl:16\nin expression starting at\
    \ /tmp/tmpijc6yqpd.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the numbers from 1 to n that are divisible\
    \ by 3.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjxrm2081.jl:16\nin expression starting at\
    \ /tmp/tmpjxrm2081.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1 \n        then return 1\n    else if n == 2 \n        then return\
    \ 2\n    else if n == 3 \n        then return 3\n    else if n == 4 \n       \
    \ then return 4\n    else if n == 5 \n        then return 5\n    else if n ==\
    \ 6 \n        then return 6\n    else if n == 7 \n        then return 7\n    else\
    \ if n == 8 \n        then return 8\n    else if n == 9 \n        then return\
    \ 9\n    else if n == 10 \n        then return 10\n    else if n == 11 \n    \
    \    then return 11\n    else if n == 12 \n        then return 12\n    else if\
    \ n == 13 \n        then return 13\n    else if n == 14 \n        then return\
    \ 14\n    else if n == 15 \n        then return 15\n    else if n == 16 \n   \
    \     then return 16\n    else if n == 17 \n        then return 17\n    else if\
    \ n == 18 \n        then return 18\n    else if n == 19 \n        then return\
    \ 19\n    else if n == 20 \n        then return 20\n    else if n == 21 \n   \
    \     then return 21\n    else if n == 22 \n        then return 22\n    else if\
    \ n == 23 \n        then return 23\n    else if n == 24 \n        then return\
    \ 24\n    else if n == 25 \n        then return 25\n    else if n == 26 \n   \
    \     then return 26\n    else if n == 27 \n        then return 27\n    else if\
    \ n == 28 \n        then return 28\n    else if n == 29 \n        then return\
    \ 29\n    else if n == 30 \n        then return 30\n    else if n == 31 \n   \
    \     then return 31\n    else if n == 32 \n        then return 32\n    else if\
    \ n == 33 \n        then return 33\n    else if n == 34 \n        then return\
    \ 34\n    else if n == 35 \n        then return 35\n    else if n == 36 \n   \
    \     then return 36\n    else if n == 37 \n        then return 37\n    else if\
    \ n == 38 \n        then return 38\n    else if n == 39 \n        then return\
    \ 39\n    else if n == 40 \n        then return 40\n    else if n == 41 \n   \
    \     then return 41\n    else if n == 42 \n        then return 42\n    else if\
    \ n == 43 \n        then return 43\n    else if n == 44 \n        then return\
    \ 44\n    else if n == 45 \n        then return 45\n    else if n == 46 \n   \
    \     \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzcn54o2a.jl:15\nin expression starting at /tmp/tmpzcn54o2a.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp49feugpn.jl:15\nin expression starting at /tmp/tmp49feugpn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise: Write a function that sums numbers from 1 to n but stops when the sum\
    \ is greater than n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx_1y_dz5.jl:16\nin expression starting at\
    \ /tmp/tmpx_1y_dz5.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        1 + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppcvevuv3.jl:19\nin expression starting at\
    \ /tmp/tmppcvevuv3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    end\n    sum = 0\n\
    \    for i in 1:n\n        sum += i\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. For example,\
    \ sqrt(4) should return 2.82842...\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvcf8oq2b.jl:23\nin expression starting at\
    \ /tmp/tmpvcf8oq2b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 0\n    else \n        sum_to_n(n-1)\n  \
    \      + (n-1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvd7f31mr.jl:15\nin expression starting at /tmp/tmpvd7f31mr.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8il5q2s9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp8il5q2s9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8il5q2s9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8il5q2s9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8il5q2s9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp8il5q2s9.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8il5q2s9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8il5q2s9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8il5q2s9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp8il5q2s9.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8il5q2s9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8il5q2s9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8il5q2s9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp8il5q2s9.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8il5q2s9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 1\n    else \n        sum_to_n(n-1)+n\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4d_v1ffj.jl:15\nin expression starting at /tmp/tmp4d_v1ffj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n but stops when it reaches n.\nHint: Use a while\
    \ loop.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg38xijxk.jl:19\nin expression starting at\
    \ /tmp/tmpg38xijxk.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that sums numbers from 1 to n but stops when the sum is greater than\
    \ n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi8gzerp6.jl:16\nin expression starting at\
    \ /tmp/tmpi8gzerp6.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkpnsuc25.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_impl not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpkpnsuc25.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpnsuc25.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpnsuc25.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkpnsuc25.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpkpnsuc25.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpnsuc25.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpnsuc25.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkpnsuc25.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpkpnsuc25.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpnsuc25.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpnsuc25.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkpnsuc25.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmpkpnsuc25.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkpnsuc25.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        then return n +\
    \ sum_to_n(n - 1)\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuyau7293.jl:15\nin expression starting at /tmp/tmpuyau7293.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else return n + sum_to_n(n - 1)\nend\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_1rfqzeb.jl:15\nin expression starting at /tmp/tmp_1rfqzeb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       1\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_8en885.jl:22\nin expression starting at\
    \ /tmp/tmpb_8en885.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n-1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp52w8dnfx.jl:19\nin expression starting at\
    \ /tmp/tmp52w8dnfx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9pix1ucq.jl:16\nin expression starting at\
    \ /tmp/tmp9pix1ucq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that sums numbers from 1 to n and returns the sum of the squares\
    \ of those numbers. For example, sum_to_n_squares(30) should return 465.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvxrnh_dh.jl:16\nin expression starting at\
    \ /tmp/tmpvxrnh_dh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_0m92qd_.jl:20\nin expression starting at\
    \ /tmp/tmp_0m92qd_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       error(\"n must be positive\")\n    else\n        sum_to_n(n - 1)\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxhq9zaet.jl:22\nin expression starting at\
    \ /tmp/tmpxhq9zaet.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       0\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(30)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the sum of the numbers from 1 to n that\
    \ are divisible by k.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6xbhck0i.jl:22\nin expression starting at\
    \ /tmp/tmp6xbhck0i.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 0\n    else \n        then return n*(n+1)/2\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't seem to answer the question.\
    \ How does this answer the question?\n<|/ c |>\n<| c |>\nI added a code example\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| a dscore=2 |>\nThe question asks\
    \ for an algorithm that finds the sum of all numbers from 1 to n. \nThe algorithm\
    \ is as follows:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphn6oe60j.jl:15\nin expression starting at /tmp/tmphn6oe60j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the first n prime numbers.\
    \ \nThe function should take one parameter, n::Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfih9d40l.jl:19\nin expression starting at\
    \ /tmp/tmpfih9d40l.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n\
    \ - 1)\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj9c_smb0.jl:15\nin expression starting at /tmp/tmpj9c_smb0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5oy61cmu.jl:16\nin expression starting at\
    \ /tmp/tmp5oy61cmu.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5l6dsjov.jl:15\nin expression starting at /tmp/tmp5l6dsjov.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        0\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptpsglvbk.jl:16\nin expression starting at\
    \ /tmp/tmptpsglvbk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.4>\nsum_to_n(30)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvy7w0lx3.jl:15\nin expression starting at /tmp/tmpvy7w0lx3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the numbers\
    \ from 1 to n that are divisible by k.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkx0v9ksm.jl:19\nin expression starting at\
    \ /tmp/tmpkx0v9ksm.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else return n\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3pbs70zd.jl:15\nin expression starting at /tmp/tmp3pbs70zd.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 1\n    else \n        sum_to_n(n-1)+n\n\
    end\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4ld5ttya.jl:15\nin expression starting at /tmp/tmp4ld5ttya.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxvpu62bg.jl:16\nin expression starting at\
    \ /tmp/tmpxvpu62bg.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        then return n +\
    \ sum_to_n(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns the sum of the first n positive integers. \nFor example, sum_to_n(10)\
    \ should return 55.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph53rlf2f.jl:15\nin expression starting at /tmp/tmph53rlf2f.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        1 + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the numbers\
    \ from 1 to n that are divisible by k.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz6ccnwm6.jl:19\nin expression starting at\
    \ /tmp/tmpz6ccnwm6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn6cfpw8j.jl:15\nin expression starting at /tmp/tmpn6cfpw8j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1\n    else\n        n*sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6j2vzbp5.jl:19\nin expression starting at\
    \ /tmp/tmp6j2vzbp5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the numbers from 1 to n.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpym42wfnq.jl:16\nin expression starting at\
    \ /tmp/tmpym42wfnq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n-1)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2dx35skj.jl:15\nin expression starting at /tmp/tmp2dx35skj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the sum of the first n numbers. \nFor example, sum_to_n(5) should\
    \ return 15 (5 + 4 + 3 + 2 + 1)\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpavvzfb49.jl:19\nin expression starting at\
    \ /tmp/tmpavvzfb49.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1 \n        then return 1 \n        else return n*sum_to_n(n-1)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphlg__7iy.jl:15\nin expression starting at /tmp/tmphlg__7iy.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that sums numbers from 1 to n and returns the sum of the squares\
    \ of the numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp35k1qak5.jl:16\nin expression starting at\
    \ /tmp/tmp35k1qak5.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,\
    \ 0)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4aer4tgb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp4aer4tgb.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4aer4tgb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4aer4tgb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4aer4tgb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp4aer4tgb.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4aer4tgb.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4aer4tgb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4aer4tgb.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp4aer4tgb.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4aer4tgb.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4aer4tgb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4aer4tgb.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp4aer4tgb.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4aer4tgb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyzy2mc7u.jl:19\nin expression starting at\
    \ /tmp/tmpyzy2mc7u.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6fp95_sj.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6fp95_sj.jl:1\n\
    in expression starting at /tmp/tmp6fp95_sj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        1 + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the sum of the first n numbers from 1 to n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg1kjg3p3.jl:19\nin expression starting at\
    \ /tmp/tmpg1kjg3p3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 0\n    else \n        sum_to_n(n-1)\n  \
    \      +n\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp29otwubx.jl:15\nin expression starting at /tmp/tmp29otwubx.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else return n\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4ujo_qth.jl:15\nin expression starting at /tmp/tmp4ujo_qth.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 1\n    else \n        sum_to_n(n-1)\n  \
    \      + n\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the numbers from 1 to n that\
    \ are divisible by k.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqv5wxqh9.jl:15\nin expression starting at /tmp/tmpqv5wxqh9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,\
    \ 1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9a7blc5b.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9a7blc5b.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9a7blc5b.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9a7blc5b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9a7blc5b.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9a7blc5b.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9a7blc5b.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9a7blc5b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9a7blc5b.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9a7blc5b.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9a7blc5b.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9a7blc5b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9a7blc5b.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9a7blc5b.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9a7blc5b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be >= 1\")\n    else if n == 1 \n  \
    \      1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the first n prime numbers.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb832zd0f.jl:16\nin expression starting at\
    \ /tmp/tmpb832zd0f.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        1\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr0fbeo4m.jl:16\nin expression starting at\
    \ /tmp/tmpr0fbeo4m.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(30)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(2)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(3)\n</cell>\n<code language=julia-1.4>\nsum_to_n(4)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(6)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(7)\n</cell>\n<code language=julia-1.4>\nsum_to_n(8)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(9)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(11)\n</cell>\n<code language=julia-1.4>\nsum_to_n(12)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(13)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(14)\n</cell>\n<code language=julia-1.4>\nsum_to_n(15)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(16)\n</cell>\n<code language=julia-1.4>\nsum_to_n(17)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(18)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(19)\n</cell>\n<code language=julia-1.4>\nsum_to_n(20)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(21)\n</cell>\n<code language=julia-1.4>\nsum_to_n(22)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(23)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(24)\n</cell>\n<code language=julia-1.4>\nsum_to_n(25)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(26)\n</cell>\n<code language=julia-1.4>\nsum_to_n(27)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(28)\n</cell>\n<code language=julia-1.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2u5cmxy4.jl:19\nin expression starting at\
    \ /tmp/tmp2u5cmxy4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n - 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbn5x_4gw.jl:20\nin expression starting at\
    \ /tmp/tmpbn5x_4gw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n\
    \ - 1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nRecursive Functions\nA recursive function calls\
    \ itself. This can be done by defining a function with one parameter and then\
    \ calling it within itself. Julia will automatically track the number of times\
    \ the function has been called and will automatically calculate the return value\
    \ based on the number of times it was called.\nusing Test\n\n@testset begin\n\n\
    candidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5_gtipn_.jl:15\nin expression starting at /tmp/tmp5_gtipn_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n*(n+1)/2\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n but stops when the sum is greater than n.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjne597pe.jl:19\nin expression starting at\
    \ /tmp/tmpjne597pe.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else if n == 1 \n        then return\
    \ 1\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkdsc9woz.jl:15\nin expression starting at /tmp/tmpkdsc9woz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       0\n    else\n        1 + sum_to_n(n-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf4hapu8f.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf4hapu8f.jl:1\n\
    in expression starting at /tmp/tmpf4hapu8f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        return n + sum_to_n(n-1)\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf7e1l111.jl:15\nin expression starting at /tmp/tmpf7e1l111.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        (n*(n+1))/2\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu73dp4pk.jl:19\nin expression starting at\
    \ /tmp/tmpu73dp4pk.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1 \n        then return 1\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuwfa2pzi.jl:15\nin expression starting at /tmp/tmpuwfa2pzi.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\n    end\nend\n</cell>\n<code language=julia-1.1>\nsum_to_n(30)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwhj9g_75.jl:20\nin expression starting at\
    \ /tmp/tmpwhj9g_75.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the factorial of a given number. \nFor example, factorial(5)\
    \ == 120.\nHint: use the factorial function from the Base package.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyeu36ql1.jl:16\nin expression starting at\
    \ /tmp/tmpyeu36ql1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjemrmhag.jl:19\nin expression starting at\
    \ /tmp/tmpjemrmhag.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        sum_to_n(n-1)+n \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpakepv7of.jl:19\nin expression starting at\
    \ /tmp/tmpakepv7of.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdqy6od8b.jl:19\nin expression starting at\
    \ /tmp/tmpdqy6od8b.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n * sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that calculates the sum of the first\
    \ n numbers. Use a recursive function.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph172oy72.jl:19\nin expression starting at\
    \ /tmp/tmph172oy72.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7j1qofcl.jl:16\nin expression starting at\
    \ /tmp/tmp7j1qofcl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be greater than 0\", 2)\n    elseif\
    \ n < 2 \n        1\n    elseif n < 3 \n        2\n    elseif n < 5 \n       \
    \ 3\n    elseif n < 10 \n        4\n    elseif n < 20 \n        5\n    elseif\
    \ n < 50 \n        6\n    elseif n < 100 \n        7\n    elseif n < 500 \n  \
    \      8\n    elseif n < 1000 \n        9\n    elseif n < 5000 \n        10\n\
    \    elseif n < 10000 \n        11\n    elseif n < 50000 \n        12\n    elseif\
    \ n < 100000 \n        13\n    elseif n < 500000 \n        14\n    elseif n <\
    \ 1000000 \n        15\n    elseif n < 5000000 \n        16\n    elseif n < 10000000\
    \ \n        17\n    elseif n < 50000000 \n        18\n    elseif n < 100000000\
    \ \n        19\n    elseif n < 500000000 \n        20\n    elseif n < 1000000000\
    \ \n        21\n    elseif n < 5000000000 \n        22\n    elseif n < 10000000000\
    \ \n        23\n    elseif n < 50000000000 \n        24\n    elseif n < 100000000000\
    \ \n        25\n    elseif n < 500000000000 \n        26\n    elseif n < 1000000000000\
    \ \n        27\n    elseif n < 5000000000000 \n        28\n    elseif n < 10000000000000\
    \ \n        29\n    elseif n < 50000000000000 \n        30\n    elseif n < 100000000000000\
    \ \n        31\n    elseif n < 500000000000000 \n        32\n    elseif n < 1000000000000000\
    \ \n        33\n    elseif n < 5000000000000000 \n        34\n    elseif n < 10000000000000000\
    \ \n        35\n    elseif n < 5000000000000000 \n        36\n    elseif n < 100000000000000000\
    \ \n        37\n    elseif n < 50000000000000000 \n        38\n    elseif n <\
    \ 100000000000000000 \n        39\n    elseif n < 500000000000000000 \n      \
    \  40\n    elseif n < 1000000000000000000 \n        41\n    elseif n < 500000000000000000\
    \ \n        42\n    elseif n < 10000000000000000000 \n        43\n    elseif n\
    \ < 5000000000000000000 \n        44\n    elseif n < 100000000000000000000 \n\
    \        45\n    elseif n < 50000000000000000000 \n        46\n    elseif n <\
    \ 1000000000000000000000 \n        47\n    elseif n < 500000000000000000000 \n\
    \        48\n    elseif n < 10000000000000000000000 \n        49\n    elseif n\
    \ < 5000000000000000000000 \n        50\n    elseif \nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing condition in \"elseif\" at /tmp/tmp48010n1t.jl:116\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp48010n1t.jl:117\nin expression\
    \ starting at /tmp/tmp48010n1t.jl:117\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    end\n    return n\
    \ * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprzh3nzlw.jl:19\nin expression starting at\
    \ /tmp/tmprzh3nzlw.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n*(n+1)/2\nend\n</cell>\n<code language=julia-1.1>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.1>\nsum_to_n(100)\n</cell>\n<code language=julia-1.1>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.1>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.1>\nsum_to_n(1)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns the sum of the first n positive integers. Use a while loop to do\
    \ this.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw2u1mlp6.jl:19\nin expression starting at\
    \ /tmp/tmpw2u1mlp6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==0 \n        then return 0\n    else \n        then return n + sum_to_n(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpltv0t0ut.jl:15\nin expression starting at /tmp/tmpltv0t0ut.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n+sum_to_n(n-1) \nend \n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the first n prime numbers.\
    \ \nHint: use an inner loop to check whether a number is prime.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwgwlvaab.jl:19\nin expression starting at\
    \ /tmp/tmpwgwlvaab.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a given\
    \ number. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfd2oo7hx.jl:15\nin expression starting at /tmp/tmpfd2oo7hx.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n\
    \        1\n    else \n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp06t46kv8.jl:16\nin expression starting at\
    \ /tmp/tmp06t46kv8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        0\n    else if n == 1\n        1\n    else\n        sum_to_n(n - 1) +\
    \ sum_to_n(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1kkm9x1f.jl:16\nin expression starting at\
    \ /tmp/tmp1kkm9x1f.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise\nWrite a function that sums numbers from 1 to n and\
    \ returns the sum of the squares of those numbers.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb0981wve.jl:19\nin expression starting at\
    \ /tmp/tmpb0981wve.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9gnyunvo.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_impl not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9gnyunvo.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9gnyunvo.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9gnyunvo.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9gnyunvo.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9gnyunvo.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9gnyunvo.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9gnyunvo.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9gnyunvo.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9gnyunvo.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9gnyunvo.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9gnyunvo.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9gnyunvo.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_impl not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmp9gnyunvo.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9gnyunvo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the first n positive integers. \nFor example, sum_to_n(10)\
    \ should return 55.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpchhr95u0.jl:20\nin expression starting at\
    \ /tmp/tmpchhr95u0.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6n1335k.jl:19\nin expression starting at\
    \ /tmp/tmpd6n1335k.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n,\
    \ 0)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprqnyxdru.jl:25\n  Test threw exception\n\
    \  Expression: candidate(1) == 1\n  UndefVarError: sum_to_n_aux not defined\n\
    \  Stacktrace:\n   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmprqnyxdru.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprqnyxdru.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprqnyxdru.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprqnyxdru.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == 21\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmprqnyxdru.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprqnyxdru.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprqnyxdru.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprqnyxdru.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == 66\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmprqnyxdru.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprqnyxdru.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprqnyxdru.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprqnyxdru.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == 465\n  UndefVarError: sum_to_n_aux not defined\n  Stacktrace:\n\
    \   [1] sum_to_n(n::Int64)\n     @ Main /tmp/tmprqnyxdru.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprqnyxdru.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n * (n + 1) / 2\nend\n</cell>\n<code language=julia-1.4>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(100)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(1)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2tmq6lr7.jl:19\nin expression starting at\
    \ /tmp/tmp2tmq6lr7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the first n prime numbers.\
    \ \nThe function should take an argument n and return a vector of prime numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9muuur9o.jl:15\nin expression starting at /tmp/tmp9muuur9o.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        1\n    else\n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the first n positive integers.\
    \ Use a while loop to do this.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuz1tozxs.jl:16\nin expression starting at\
    \ /tmp/tmpuz1tozxs.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    elseif n == 0\n \
    \       0\n    else\n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the first n positive integers. \nThe function\
    \ should take an argument n that specifies the number of positive integers to\
    \ sum.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5wmvq81p.jl:21\nin expression starting at\
    \ /tmp/tmp5wmvq81p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptm2xjd55.jl:19\nin expression starting at\
    \ /tmp/tmptm2xjd55.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n)\n\
    \    end\nend\nsum_to_n_impl(n::Int64)::Int64 = n \nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-1)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-2)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-3)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-4)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-5)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-6)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-7)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-8)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-9)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-10)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-11)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-12)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-13)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-14)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-15)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-16)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-17)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-18)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-19)\nsum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-20)\n\
    sum_to_n_impl(n::Int64)::Int64 = sum_to_n_impl(n-21)\nsum_to_n_impl(n::Int64)::Int64\
    \ = sum_to_n_impl(n-22)\nsum_to_n_impl(n::Int64)::\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"Test\" after end of expression\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpdmzd4lrb.jl:44\nin expression\
    \ starting at /tmp/tmpdmzd4lrb.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n    then return 0\n    else if n == 1\n    then return 1\n\
    \    else return n*sum_to_n(n-1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphvxwd99x.jl:15\nin expression starting at /tmp/tmphvxwd99x.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0\n        0\n    else\n        1 + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the numbers\
    \ from 1 to n that are divisible by 3\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr2j5xtyu.jl:19\nin expression starting at\
    \ /tmp/tmpr2j5xtyu.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 0\n        error(\"n must be positive\")\n    else if n == 0\n\
    \        error(\"n must be positive\")\n    else\n        sum_to_n_impl(n)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplexgc_sq.jl:16\nin expression starting at\
    \ /tmp/tmplexgc_sq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0 \n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpenmo3hb7.jl:15\nin expression starting at /tmp/tmpenmo3hb7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1 \n        1 \n    else \n        n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6o8wb1f8.jl:19\nin expression starting at\
    \ /tmp/tmp6o8wb1f8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 0\n    else \n        sum_to_n(n - 1)\
    \ + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbj0u61hm.jl:15\nin expression starting at /tmp/tmpbj0u61hm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n - 1)\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3cy40f3d.jl:19\nin expression starting at\
    \ /tmp/tmp3cy40f3d.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n + sum_to_n(n-1)\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxu5dkudk.jl:19\nin expression starting at\
    \ /tmp/tmpxu5dkudk.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n\
    \        1\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers and returns the sum of the\
    \ numbers in the array. For example, sum_to_n([1,2,3]) should return 6.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq9e3nkf1.jl:16\nin expression starting at\
    \ /tmp/tmpq9e3nkf1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 0 \n        then return 1\n    else \n        return n + sum_to_n(n\
    \ - 1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz5leregp.jl:15\nin expression starting at /tmp/tmpz5leregp.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        error(\"n must be positive\")\n    elseif n < 2\n  \
    \      return 1\n    else\n        return n*(n+1)/2\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp69o1__rf.jl:22\nin expression starting at\
    \ /tmp/tmp69o1__rf.jl:22\n"
  exit_code: 1
  status: SyntaxError

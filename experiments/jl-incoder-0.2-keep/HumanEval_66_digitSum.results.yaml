name: HumanEval_66_digitSum
language: julia
results:
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum c -> accum + if isUpper(c) then ord(c) else 0\
    \ end, 0)\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6a3huzx2.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6a3huzx2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + toUpper(accum), 0) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbj25t4ea.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbj25t4ea.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n  \
    \          digitSum += c - 'A' + 1\n        else \n            digitSum += c\n\
    \    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp38qwa9fc.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp38qwa9fc.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp38qwa9fc.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the sum of the digits in\
    \ that string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphmnbjjn3.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphmnbjjn3.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n \
    \           sum += c - 'A' + 1\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are upper case. \nFor\
    \ example, digitCount(\"helloE\") => 3\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are lower case.\
    \ \nFor example, digitCount(\"helloE\") => 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are digits.\
    \ \nFor example, digitCount(\"helloE\") => 1\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are alphanumeric.\
    \ \nFor example, digitCount(\"helloE\") => 4\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are non-alphanumeric.\
    \ \nFor example, digitCount(\"helloE\") => 5\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnzdhy_bq.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpnzdhy_bq.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || (\"\
    a\" <= c && c <= \"z\")\n            digitSum += c - 'A' + 1\n        end\n  \
    \  end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppcdwbe8b.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  MethodError: no method matching isless(::String,\
    \ ::Char)\n  Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppcdwbe8b.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  MethodError: no method matching isless(::String, ::Char)\n \
    \ Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppcdwbe8b.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  MethodError: no method matching isless(::String, ::Char)\n\
    \  Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppcdwbe8b.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  MethodError: no method matching isless(::String, ::Char)\n\
    \  Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppcdwbe8b.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  MethodError: no method matching isless(::String, ::Char)\n\
    \  Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppcdwbe8b.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  MethodError: no method matching isless(::String, ::Char)\n\
    \  Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:33\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppcdwbe8b.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  MethodError: no method matching isless(::String,\
    \ ::Char)\n  Closest candidates are:\n    isless(!Matched::Char, ::Char) at char.jl:209\n\
    \    isless(!Matched::Missing, ::Any) at missing.jl:87\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at char.jl:216\n    ...\n  Stacktrace:\n   [1] <(::String, ::Char)\
    \ at ./operators.jl:268\n   [2] <=(::String, ::Char) at ./operators.jl:317\n \
    \  [3] digitSum(::String) at /tmp/tmppcdwbe8b.jl:16\n   [4] top-level scope at\
    \ /tmp/tmppcdwbe8b.jl:34\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmppcdwbe8b.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppcdwbe8b.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n\
    \            sum += c - 'A' + 1\n        else \n            sum += c\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp30tt9uhc.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp30tt9uhc.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= '0' && c <= '9' \n  \
    \          sum += c - '0'\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string. \n   \
    \ \n    Examples:\n        charCount(\"\") => 0\n        charCount(\"abAB\") =>\
    \ 2\n        charCount(\"abcCd\") => 3\n        charCount(\"helloE\") => 5\n \
    \       charCount(\"woArBld\") => 5\n        charCount(\"aAaaaXa\") => 5\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp94xfe87m.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp94xfe87m.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        sum += (ord(c) >= 65 && ord(c)\
    \ <= 90) ? ord(c) - 65 : ord(c) - 97\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqf9kh5av.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpqf9kh5av.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if c >= 'a' && c <= 'z' then\
    \ \n            sum += c - 'a'\n        else \n            sum += c - 'A'\n  \
    \  end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmporyptvsj.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmporyptvsj.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprt4rz3ak.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprt4rz3ak.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c.isUpper() then digitSum\
    \ += c.codePointAt(0)\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfwrvfd_a.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpfwrvfd_a.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum += c - '0'\n        else \n            sum += 10\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n\
    </cell>\n<text>\nExercise: Write a function that takes a string as input and returns\
    \ the sum of the digits only'\n    ASCII codes.\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjkvutjp1.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpjkvutjp1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        sum += (ord(c) - ord('0'))\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpintw_oag.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpintw_oag.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpli47rq2s.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpli47rq2s.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if isUpper c\n            sum\
    \ += c - 'A' + 1\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdwgj7b5v.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdwgj7b5v.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else\n            digitSum += c - '0'\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy7kmmo27.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy7kmmo27.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum += c - '0'\n        else \n            sum += 10\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise: Write a function that takes a string as\
    \ input and returns the sum of the digits in that string. \n    ASCII codes.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx_gzs1u6.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpx_gzs1u6.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk0akhpcw.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk0akhpcw.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= '0' && c <= '9' \n  \
    \          sum += c - '0'\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnycmvlb0.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnycmvlb0.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else\n            digitSum += c - '0'\n\
    \    end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvz5b2ih1.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpvz5b2ih1.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpvz5b2ih1.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp56xj2p_c.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp56xj2p_c.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaz83o1zh.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpaz83o1zh.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if isUpper c then \n            sum\
    \ += c - 'A' + 1\n        else \n            sum += c - 'a'\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise: Write a function that takes\
    \ a string as input and returns the number of uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp64rqdzi_.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp64rqdzi_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nTask\nWrite a function\
    \ that takes a string as input and returns the sum of the digits in that string.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdc4u2b0y.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdc4u2b0y.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || (\"\
    a\" <= c && c <= \"z\")\n            digitSum += c - 'A' + 1\n        else\n \
    \           digitSum += c - 'a'\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7o98n23j.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7o98n23j.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\") => 153\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps5oppkor.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps5oppkor.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c.isUpper() then \n          \
    \  sum += c.codePointAt(0)\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of uppercase\
    \ letters in the string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprtor5918.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmprtor5918.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        digitSum += toupper(c) - 'A'\
    \ + 1\n    end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvkn_nxp3.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpvkn_nxp3.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        digitSum = digitSum + Int64(Char.digit(c))\n\
    \    end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp240sezod.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp240sezod.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string. \nThe function should ignore all non-alphanumeric characters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8_5zrkar.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8_5zrkar.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if isUpper(c)\n            sum += toUpper(c)\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\"\
    ) => 131\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\") => 153\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy66i7q3n.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy66i7q3n.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        sum += (ord(c) - ord('A') +\
    \ 1) % 26\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a string as input and returns the number of characters in\
    \ the string that are upper case. For example, \"aBcD\" has 3 upper case characters\
    \ and \"aBcDe\" has 4 upper case characters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgehy5o3j.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpgehy5o3j.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if isUpper(c) then \n    \
    \        sum += toUpper(c) - 'A' + 1\n        else \n            sum += toLower(c)\
    \ - 'a' + 1\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjoh49u98.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpjoh49u98.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n         \
    \   sum += c - 'A' + 1\n        else\n            sum += c\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the sum of the digits in that string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp1prc7n6.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp1prc7n6.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if isUpper(c)\n            sum\
    \ += toUpper(c) - 'A' + 1\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjaadmg6_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  UndefVarError: isUpper not defined\n\
    \  Stacktrace:\n   [1] digitSum(::String) at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpjaadmg6_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjaadmg6_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level scope at /tmp/tmpjaadmg6_.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjaadmg6_.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level scope at /tmp/tmpjaadmg6_.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjaadmg6_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level scope at /tmp/tmpjaadmg6_.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjaadmg6_.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level scope at /tmp/tmpjaadmg6_.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjaadmg6_.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level scope at\
    \ /tmp/tmpjaadmg6_.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjaadmg6_.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpjaadmg6_.jl:16\n   [2] top-level scope at\
    \ /tmp/tmpjaadmg6_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjaadmg6_.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjaadmg6_.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ \n            sum += (c - '0')\n        else \n            sum += (c - 'A' +\
    \ 10)\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7a5pojm1.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp7a5pojm1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            digitSum += c - '0'\n        end\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt7b7g3jg.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpt7b7g3jg.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            digitSum += c - '0'\n        else\n            digitSum += 10\n \
    \       end\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string. \nThe\
    \ function should ignore all non-alphabetic characters and count the alphabetic\
    \ characters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph3o189z5.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmph3o189z5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= 'A' && c <= 'Z' \n  \
    \          sum += c - 'A' + 1\n        else \n            sum += c\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"helloE\") => 69\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6du4i39w.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6du4i39w.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c >= '0' && c <= '9'\n      \
    \      digitSum += c - '0'\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpms57pu2l.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpms57pu2l.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if isUpper(c)\n            sum\
    \ += toUpper(c)\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvjqiwnnm.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvjqiwnnm.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = Int64(0) \n    for c in s do \n        if ('A' <= c && c <=\
    \ 'Z') then \n            digitSum += c - 'A' + 1 \n        else \n          \
    \  digitSum += 0 \n    return digitSum \nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\"\
    )\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp41ahh_9e.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp41ahh_9e.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum\
    \ += toUpper c\n        end\n    end\n    return digitSum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"c\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_f8o68vi.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_f8o68vi.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum += c - '0'\n        else \n            sum += 10\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqfva7sus.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpqfva7sus.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isDigit(c) then digitSum\
    \ += c - '0'\n    end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1sydxf7o.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp1sydxf7o.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += c - 'A' \n    end\n    return\
    \ digitSum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of uppercase letters in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0nd7ft40.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp0nd7ft40.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper(c)\n            digitSum\
    \ += toUpper(c) - 'A' + 1\n        end\n    end\n    return digitSum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6igzasti.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  UndefVarError: isUpper not defined\n\
    \  Stacktrace:\n   [1] digitSum(::String) at /tmp/tmp6igzasti.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp6igzasti.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp6igzasti.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmp6igzasti.jl:16\n   [2] top-level scope at /tmp/tmp6igzasti.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp6igzasti.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmp6igzasti.jl:16\n   [2] top-level scope at /tmp/tmp6igzasti.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp6igzasti.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmp6igzasti.jl:16\n   [2] top-level scope at /tmp/tmp6igzasti.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp6igzasti.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmp6igzasti.jl:16\n   [2] top-level scope at /tmp/tmp6igzasti.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp6igzasti.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmp6igzasti.jl:16\n   [2] top-level scope at\
    \ /tmp/tmp6igzasti.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp6igzasti.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmp6igzasti.jl:16\n   [2] top-level scope at\
    \ /tmp/tmp6igzasti.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6igzasti.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6igzasti.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n \
    \   end\n    return digitSum\nend\n</cell>\n<code language=julia-1.4>\ndigitSum(\"\
    helloE\") # => 69\n</cell>\n<code language=julia-1.4>\ndigitSum(\"woArBld\") #\
    \ => 131\n</cell>\n<code language=julia-1.4>\ndigitSum(\"aAaaaXa\") # => 153\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a string as input and returns\
    \ the sum of the digits only'\n    ASCII codes.\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8asmccvm.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp8asmccvm.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if isUpper(c) \n            sum\
    \ += toUpper(c) - 'A' + 1\n        else \n            sum += toLower(c) - 'a'\
    \ + 1\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1p2gqhnr.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1p2gqhnr.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            digitSum += c - '0'\n        end\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are not digits.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqsvuozht.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpqsvuozht.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if isUpper(c) then \n    \
    \        sum += toUpper(c) - 'A' + 1\n        else \n            sum += toLower(c)\
    \ - 'a' + 1\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters in the string.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd1c90hdu.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpd1c90hdu.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c >= '0' && c <= '9'\n      \
    \      digitSum += c - '0'\n        end\n    end\n    return digitSum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp78tk33hi.jl:28\n  Expression: candidate(\"\
    abAB\") == 131\n   Evaluated: 0 == 131\nStacktrace:\n [1] top-level scope at /tmp/tmp78tk33hi.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\ntest set: Test Failed at /tmp/tmp78tk33hi.jl:29\n\
    \  Expression: candidate(\"abcCd\") == 67\n   Evaluated: 0 == 67\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp78tk33hi.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\ntest set: Test Failed at /tmp/tmp78tk33hi.jl:30\n\
    \  Expression: candidate(\"helloE\") == 69\n   Evaluated: 0 == 69\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp78tk33hi.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\ntest set: Test Failed at /tmp/tmp78tk33hi.jl:31\n\
    \  Expression: candidate(\"woArBld\") == 131\n   Evaluated: 0 == 131\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp78tk33hi.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\ntest set: Test Failed at /tmp/tmp78tk33hi.jl:32\n\
    \  Expression: candidate(\"aAaaaXa\") == 153\n   Evaluated: 0 == 153\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp78tk33hi.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\ntest set: Test Failed at /tmp/tmp78tk33hi.jl:33\n\
    \  Expression: candidate(\" How are yOu?\") == 151\n   Evaluated: 0 == 151\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp78tk33hi.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\ntest set: Test Failed at /tmp/tmp78tk33hi.jl:34\n\
    \  Expression: candidate(\"You arE Very Smart\") == 327\n   Evaluated: 0 == 327\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp78tk33hi.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78tk33hi.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78tk33hi.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if isUpper(c) then \n    \
    \        sum += toUpper(c) - 'A' + 1\n        else \n            sum += toLower(c)\
    \ - 'a' + 1\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl3gj60zg.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpl3gj60zg.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4d8mopes.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4d8mopes.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if isUpper c\n            sum += toUpper\
    \ c\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits of that string.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"c\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcjt1n4f2.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcjt1n4f2.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if ('A'<=c && c<='Z') || (c=='a'\
    \ || c=='A') then\n            sum += c-'A'\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are not digits. \nFor example, digitCount(\"\
    aAaaaXa\") => 3\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvzlx8vae.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpvzlx8vae.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n   \
    \         sum = sum + c - '0'\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjhisw05a.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpjhisw05a.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n         \
    \   sum += c - 'A' + 1\n        else\n            sum += c\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptupcpqp5.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmptupcpqp5.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmptupcpqp5.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum\
    \ += c - 'A' + 1\n        end\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the sum of the digits in\
    \ that string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpce_0y81l.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpce_0y81l.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + toUpper(accum), 0, s)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ws3rru6.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ws3rru6.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s \n        if c.isUpper() \n            sum +=\
    \ c.codePointAt(0)\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<code language=julia-1.0>\ndigitSum(\"woArBld\"\
    ) => 131\n</cell>\n<code language=julia-1.0>\ndigitSum(\"aAaaaXa\") => 153\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprsm2r_ga.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprsm2r_ga.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= '0' && c <= '9' \n  \
    \          sum += c - '0'\n        else \n            sum += 0\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the sum\
    \ of the digits in that string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpchfpuemh.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpchfpuemh.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprs4o7l6j.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprs4o7l6j.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if c.isUpper\n            sum += c.codePointAt(0)\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpb82mly36.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpb82mly36.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpb82mly36.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            digitSum += c - '0'\n        else\n            digitSum = 0\n   \
    \     end\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpar0pealg.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpar0pealg.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb1ybxaz3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  type Char has no field isUpper\n\
    \  Stacktrace:\n   [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmpb1ybxaz3.jl:16\n   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:28\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpb1ybxaz3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpb1ybxaz3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpb1ybxaz3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpb1ybxaz3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpb1ybxaz3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpb1ybxaz3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpb1ybxaz3.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpb1ybxaz3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpb1ybxaz3.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  type Char has no field isUpper\n  Stacktrace:\n  \
    \ [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmpb1ybxaz3.jl:16\n   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpb1ybxaz3.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  type Char has no field isUpper\n  Stacktrace:\n\
    \   [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmpb1ybxaz3.jl:16\n   [3] top-level scope at /tmp/tmpb1ybxaz3.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpb1ybxaz3.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb1ybxaz3.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n \
    \           sum += (c - 'A' + 10)\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the sum of the digits only'\n    ASCII codes.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeh20eh7p.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpeh20eh7p.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper(c)\n            digitSum\
    \ += toUpper(c) - 'A' + 1\n        end\n    end\n    return digitSum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa47s0mko.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  UndefVarError: isUpper not defined\n\
    \  Stacktrace:\n   [1] digitSum(::String) at /tmp/tmpa47s0mko.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpa47s0mko.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpa47s0mko.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpa47s0mko.jl:16\n   [2] top-level scope at /tmp/tmpa47s0mko.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpa47s0mko.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpa47s0mko.jl:16\n   [2] top-level scope at /tmp/tmpa47s0mko.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpa47s0mko.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmpa47s0mko.jl:16\n   [2] top-level scope at /tmp/tmpa47s0mko.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpa47s0mko.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmpa47s0mko.jl:16\n   [2] top-level scope at /tmp/tmpa47s0mko.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpa47s0mko.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpa47s0mko.jl:16\n   [2] top-level scope at\
    \ /tmp/tmpa47s0mko.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpa47s0mko.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpa47s0mko.jl:16\n   [2] top-level scope at\
    \ /tmp/tmpa47s0mko.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa47s0mko.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa47s0mko.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if isUpper c \n            sum\
    \ += toUpper c\n    return sum\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"c\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyv6x_sjk.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyv6x_sjk.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if isUpper c then digitSum +=\
    \ c - 'A'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsgthqb00.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpsgthqb00.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        sum += if c >= 'A' && c <=\
    \ 'Z' then c - 'A' else 0\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1ufe14eo.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp1ufe14eo.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n         \
    \   sum += c - 'A' + 1\n        else\n            sum += c\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpugi4143c.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpugi4143c.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || (\"\
    a\" <= c && c <= \"z\")\n            digitSum += c - 'A' + 1\n        else\n \
    \           digitSum += c - 'a'\n    end\n    return digitSum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8ojzuq3y.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp8ojzuq3y.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp8ojzuq3y.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        sum += (ord(c) - ord('A') +\
    \ 1) % 26\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpccifz6iz.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpccifz6iz.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n \
    \           sum += (c - 'A' + 10)\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"helloE\"\
    )\n</cell>\n<code language=julia-1.3>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeu23w4y_.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpeu23w4y_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpulgtqv0z.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpulgtqv0z.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isDigit(c) then digitSum\
    \ += toUpper(c) - 'A' + 1\n    end\n    return digitSum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqge9n_yb.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpqge9n_yb.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n  \
    \          sum += c - 'A' + 1\n        else\n            sum += c\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp12tkxoot.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp12tkxoot.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if isUpper c\n            sum\
    \ += c - 'A' + 1\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpka88p4k0.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpka88p4k0.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' && c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the sum of the digits in that string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjao4scaw.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpjao4scaw.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper(c)\n            digitSum\
    \ += toUpper(c) - 'A' + 1\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of uppercase\
    \ letters in the string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb9ldz5b1.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpb9ldz5b1.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        sum += (ord(c) - ord('0'))\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpicdgluv5.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpicdgluv5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if isUpper c then digitSum +=\
    \ c - 'A' + 1\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits only'\n    ASCII codes.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpi_i54c70.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpi_i54c70.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvjqscp31.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpvjqscp31.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        elseif ('a' <= c && c <= 'z')\n    \
    \        digitSum += c - 'a' + 1\n        else\n            digitSum += c\n  \
    \  end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpql77u376.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpql77u376.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpql77u376.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || ('a' <=\
    \ c && c <= 'z')\n            sum += c - 'A' + 1\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3tp25vdv.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3tp25vdv.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || ('a'\
    \ <= c && c <= 'z')\n            sum += c - 'A' + 1\n        end\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpulsdjd3c.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpulsdjd3c.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum\
    \ += c - 'A' + 1\n        end\n    end\n    return digitSum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjawal26d.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  UndefVarError: isUpper not defined\n\
    \  Stacktrace:\n   [1] digitSum(::String) at /tmp/tmpjawal26d.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpjawal26d.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjawal26d.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpjawal26d.jl:16\n   [2] top-level scope at /tmp/tmpjawal26d.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjawal26d.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpjawal26d.jl:16\n   [2] top-level scope at /tmp/tmpjawal26d.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjawal26d.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmpjawal26d.jl:16\n   [2] top-level scope at /tmp/tmpjawal26d.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjawal26d.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmpjawal26d.jl:16\n   [2] top-level scope at /tmp/tmpjawal26d.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjawal26d.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpjawal26d.jl:16\n   [2] top-level scope at\
    \ /tmp/tmpjawal26d.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpjawal26d.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpjawal26d.jl:16\n   [2] top-level scope at\
    \ /tmp/tmpjawal26d.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjawal26d.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjawal26d.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || (\"\
    a\" <= c && c <= \"z\")\n            digitSum += c - 'A' + 1\n        else if\
    \ ('0' <= c && c <= '9')\n            digitSum += c - '0'\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits in that string.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsl4hub_t.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsl4hub_t.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n  \
    \          digitSum += c - 'A' + 1\n        else \n            digitSum += c -\
    \ '0'\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nTask\nWrite a function that takes a string as input\
    \ and returns the sum of the digits only'\n    ASCII codes.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn8dshlrv.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn8dshlrv.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n  \
    \          sum += c - 'A' + 1\n        else\n            sum += c\n    end\n \
    \   return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ly2ni2a.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4ly2ni2a.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if isUpper(c) then digitSum +=\
    \ toUpper(c) - 'A'\n    end\n    return digitSum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn8nawz5j.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpn8nawz5j.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= 'A' && c <= 'Z' \n  \
    \          sum += c - 'A' + 1\n        else \n            sum += c\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpprfaqfk0.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpprfaqfk0.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpprfaqfk0.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= 'a' && c <= 'z' \n  \
    \          sum += c - 'a'\n        else \n            sum += c\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpg0j2tgbm.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpg0j2tgbm.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpg0j2tgbm.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum c -> accum + toChar(c) - '0' + 10*accum + toChar(c)\
    \ - 'A' + 10*accum + toChar(c) - 'a') 0\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits of that string.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx2oge_w1.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx2oge_w1.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' and c <= 'Z' then \n\
    \            sum += (c - 'A' + 10)\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the sum of the digits of that string.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptk246ah1.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmptk246ah1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n  \
    \          sum = sum + c - 'A' + 10\n        elseif c >= 'a' and c <= 'z' then\n\
    \            sum = sum + c - 'a' + 10\n        else\n            sum = sum + c\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgdo54i80.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpgdo54i80.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum c -> accum + if isDigit(c) then toUpper(c) else\
    \ 0, 0, s)\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are digits. \nThe function should\
    \ ignore all non-digit characters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp1rgqw24.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp1rgqw24.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + getChar(accum, 0), 0, s)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa_r_cw12.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa_r_cw12.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper c then digitSum +=\
    \ toUpper c else digitSum += toLower c \n    end\n    return digitSum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdvipjc_1.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpdvipjc_1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum = sum + c - '0'\n        else \n            sum = sum + 10\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ upper case. \nThe function should ignore all non-alphabetic characters and return\
    \ 0 if the string contains only alphabetic characters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2687dnw1.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp2687dnw1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n  \
    \          sum += c - 'A' + 1\n        elseif ('a' <= c && c <= 'z')\n       \
    \     sum += c - 'a' + 1\n        else\n            sum\n    end\n    sum\nend\n\
    </cell>\n<code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu8ulyvrh.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu8ulyvrh.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            digitSum += c - '0'\n        end\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are not digits.\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfvq1aqek.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpfvq1aqek.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then sum =\
    \ sum + c - '0'\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5x9ectbe.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp5x9ectbe.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else\n            digitSum += c - '0'\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmr3dq0i7.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmr3dq0i7.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if ('A' <= c && c <= 'Z')\
    \ then \n            sum += c - 'A' + 1\n        else \n            sum += c -\
    \ 'a' + 1\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyf9jbj31.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpyf9jbj31.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else\n            digitSum += c\n \
    \   end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1wnf5676.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1wnf5676.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if c.isUpper\n            sum += c.codePointAt(0)\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz1k8ak_z.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  type Char has no field isUpper\n\
    \  Stacktrace:\n   [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmpz1k8ak_z.jl:16\n   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:28\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpz1k8ak_z.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpz1k8ak_z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpz1k8ak_z.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpz1k8ak_z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpz1k8ak_z.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpz1k8ak_z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpz1k8ak_z.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmpz1k8ak_z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpz1k8ak_z.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  type Char has no field isUpper\n  Stacktrace:\n  \
    \ [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmpz1k8ak_z.jl:16\n   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpz1k8ak_z.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  type Char has no field isUpper\n  Stacktrace:\n\
    \   [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmpz1k8ak_z.jl:16\n   [3] top-level scope at /tmp/tmpz1k8ak_z.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpz1k8ak_z.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz1k8ak_z.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c.isUpper() \n           \
    \ sum += c.codePointAt(0)\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\") # => 69\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of uppercase letters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp70wf9n9s.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp70wf9n9s.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the sum of the digits\
    \ only'\n    ASCII codes.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyal2coz2.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyal2coz2.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum += c - '0'\n        else \n            sum += 10\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the sum of the digits in that string. \nThe digits are the characters\
    \ between '0' and '9'.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpol3bl4i5.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpol3bl4i5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' && c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<text>\nExercise\nWrite a function that takes a string\
    \ as input and returns the sum of the digits only'\n    ASCII codes.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxiczo8e2.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpxiczo8e2.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if c.isUpper() \n            digitSum\
    \ += c.codePointAt(0)\n    return digitSum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpdyi0210i.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpdyi0210i.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpdyi0210i.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper(c)\n            digitSum\
    \ += toUpper(c) - 'A' + 1\n        end\n    end\n    return digitSum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4k9m8n1r.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  UndefVarError: isUpper not defined\n\
    \  Stacktrace:\n   [1] digitSum(::String) at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp4k9m8n1r.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp4k9m8n1r.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level scope at /tmp/tmp4k9m8n1r.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp4k9m8n1r.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level scope at /tmp/tmp4k9m8n1r.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp4k9m8n1r.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level scope at /tmp/tmp4k9m8n1r.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp4k9m8n1r.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level scope at /tmp/tmp4k9m8n1r.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp4k9m8n1r.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level scope at\
    \ /tmp/tmp4k9m8n1r.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp4k9m8n1r.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmp4k9m8n1r.jl:16\n   [2] top-level scope at\
    \ /tmp/tmp4k9m8n1r.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4k9m8n1r.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4k9m8n1r.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then\
    \ \n            sum += c - 'A' + 1\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1opfb9lf.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp1opfb9lf.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digit(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits. \nThe function should ignore the case of\
    \ the characters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpskvgbimx.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpskvgbimx.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + toUpper(accum), 0, s)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are upper case. \nThe function should\
    \ ignore all other characters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8w3ohmio.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8w3ohmio.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n\
    \            sum += c - 'A' + 1\n        else \n            sum += c\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmjsdm8r6.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpmjsdm8r6.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpmjsdm8r6.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n \
    \   end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpguea3cdv.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpguea3cdv.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = sum( map( ord, s ) ) \nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the sum of the digits of that string. \nThe digits\
    \ are the characters between the '0' and '9' characters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprpyiyq7e.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprpyiyq7e.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if c >= '0' && c <= '9' \n  \
    \          sum += c - '0'\n        else \n            sum += 0\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmppx_265t8.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmppx_265t8.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmppx_265t8.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        elseif ('a' <= c && c <= 'z')\n    \
    \        digitSum += c - 'a' + 1\n        else\n            digitSum += c\n  \
    \  end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\") =>\
    \ 131\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\") => 153\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpifij9au3.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpifij9au3.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = Int64(0)\n    for c in s do\n        if c >= '0' && c <= '9'\
    \ then\n            digitSum += c - '0'\n        end\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2qgi_yw5.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp2qgi_yw5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            sum += c - '0'\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc4_p2994.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpc4_p2994.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ \n            sum += c - '0'\n        else \n            sum += c - 'A' + 10\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are not digits.\
    \ \nExamples:\n    digitCount(\"\") => 0\n    digitCount(\"abAB\") => 2\n    digitCount(\"\
    abcCd\") => 3\n    digitCount(\"helloE\") => 5\n    digitCount(\"woArBld\") =>\
    \ 5\n    digitCount(\"aAaaaXa\") => 5\n    digitCount(\"aAaaaXaXa\") => 5\n  \
    \  digitCount(\"aAaaaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXa\") =>\
    \ 5\n    digitCount(\"aAaaaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXa\"\
    ) => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXa\"\
    ) => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"\
    aAaaaXaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXaXaXa\"\
    ) => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"\
    aAaaaXaXaXaXaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaa\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvm2bx6tm.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpvm2bx6tm.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the sum of the lower\
    \ characters only'\n    ASCII codes.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa55utvwd.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa55utvwd.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digit(accum), 0, s)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph8c1uk63.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph8c1uk63.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2lfqlszp.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp2lfqlszp.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = Int64(0) \n    for c in s \n        if ('A' <= c && c <= 'Z')\
    \ \n            digitSum = digitSum + Int64(c - 'A' + 1)\n        else \n    \
    \        digitSum = digitSum + Int64(c - 'a')\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.4>\ndigitSum(\"helloE\")\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"woArBld\")\n</cell>\n<code language=julia-1.4>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the sum of the digits in that string.\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvopevzv1.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvopevzv1.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n  \
    \          digitSum += c - 'A' + 1\n        else \n            digitSum += c -\
    \ '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc72k30jw.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc72k30jw.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits. \nThe function should ignore non-digit characters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu1_3xoxz.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu1_3xoxz.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if c >= 'A' && c <= 'Z'\n    \
    \        sum += c - 'A' + 1\n        else\n            sum += c\n    end\n   \
    \ return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt0xtcd1g.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpt0xtcd1g.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpt0xtcd1g.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string. \nThe function should ignore all non-alphabetic characters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwv1ku_6w.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwv1ku_6w.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5kfx678z.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp5kfx678z.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper(c)\n            digitSum\
    \ += toUpper(c) - 'A' + 1\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\") # => 69\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbylb1fqq.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbylb1fqq.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum c -> accum + getCharCode(c), 0, s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp18o9_7bn.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp18o9_7bn.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits only'\n    ASCII codes.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyolq432c.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpyolq432c.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.4>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nTask\nWrite\
    \ a function that takes a string as input and returns the sum of the digits only'\n\
    \    ASCII codes.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr9mwueu0.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr9mwueu0.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if isUpper c \n            digitSum\
    \ += toUpper c \n        else \n            digitSum += toLower c \n    return\
    \ digitSum \nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"c\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpblynuxjo.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpblynuxjo.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ \n            sum += c - '0'\n        else \n            sum += c - 'A' + 10\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string. \nIf the string has less than 10 characters, return 0.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe0na0vd5.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpe0na0vd5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0' else digitSum += 10\n    end\n    return digitSum\nend\n\
    </cell>\n<code language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the sum of the\
    \ digits in that string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf2neee__.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpf2neee__.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c >= '0' && c <= '9'\n      \
    \      digitSum += c - '0'\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are not upper case. For example, the string \"helloE\" has\
    \ 5 characters that are not upper case. Write a function that takes a string as\
    \ input and returns the number of characters in the string that are not upper\
    \ case. For example, the string \"helloE\" has 5 characters that are not upper\
    \ case. Write a function that takes a string as input and returns the number of\
    \ characters in the string that are not upper case. For example, the string \"\
    helloE\" has 5 characters that are not upper case. Write a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ not upper case. For example, the string \"helloE\" has 5 characters that are\
    \ not upper case. Write a function that takes a string as input and returns the\
    \ number of characters in the string that are not upper case. For example, the\
    \ string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 character\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj_lavsh9.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj_lavsh9.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n       \
    \     sum += c - 'A' + 1\n        else \n            sum += c\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpct233nli.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpct233nli.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpct233nli.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n \
    \           sum += (c - 'A' + 10)\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    ) => 69\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8w51ktce.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp8w51ktce.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if ('A' <= c && c <= 'Z')\
    \ then \n            sum += c - 'A' + 1\n        else \n            sum += c -\
    \ '0'\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string as input and returns the sum of the digits in that string.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu_cfhylq.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpu_cfhylq.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of occurrences\
    \ of the character 'e' in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8sz_00cm.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8sz_00cm.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum\
    \ += c - 'A' + 1\n        end\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnccknuk4.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnccknuk4.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else\n            digitSum += c\n  \
    \  end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjvs6dlvn.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjvs6dlvn.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            digitSum += c - '0'\n        end\n    end\n    return digitSum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbsaixc_p.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpbsaixc_p.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum += c - '0'\n        else \n            sum += 10\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd455q1hu.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpd455q1hu.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        sum += (c - 'A' + 1)\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    ) # => 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string. \nThe function should\
    \ ignore all non-alphabetic characters and count the alphabetic characters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpceh2cwii.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpceh2cwii.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n \
    \           sum += c - 'A' + 1\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\"\
    ) == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8g0vmrqr.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp8g0vmrqr.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        digitSum = digitSum + Int64(Char.digit(c))\n\
    \    end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf9u3pob9.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpf9u3pob9.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n       \
    \     sum += c - 'A' + 1\n        else \n            sum += c\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_835_der.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp_835_der.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp_835_der.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + toUpper(accum), 0, s)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7gxzh1ug.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7gxzh1ug.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if isUpper c \n            digitSum\
    \ += c - 'A' + 1\n        else \n            digitSum += c - 'a'\n    return digitSum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmprvf2looh.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmprvf2looh.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmprvf2looh.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwrl5avxp.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpwrl5avxp.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s \n        if isUpper c \n            sum += toUpper\
    \ c\n        else \n            sum += toLower c\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"c\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_s0y321.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4_s0y321.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if c >= 'A' && c <= 'Z'\n    \
    \        sum += c - 'A' + 1\n        else\n            sum += c\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string. \nThe function should ignore\
    \ all non-alphanumeric characters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8doulqen.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8doulqen.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdi84bih6.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdi84bih6.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the sum of the lower\
    \ characters only'\nASCII codes.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph2alcmdh.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph2alcmdh.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(add, 0, map(ord, s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpimdb7qas.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at\
    \ /tmp/tmpimdb7qas.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    abAB\") == 131\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at /tmp/tmpimdb7qas.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at /tmp/tmpimdb7qas.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at /tmp/tmpimdb7qas.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at /tmp/tmpimdb7qas.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at /tmp/tmpimdb7qas.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: ord not defined\n  Stacktrace:\n  \
    \ [1] digitSum(::String) at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at\
    \ /tmp/tmpimdb7qas.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpimdb7qas.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmpimdb7qas.jl:14\n   [2] top-level scope at\
    \ /tmp/tmpimdb7qas.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimdb7qas.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpimdb7qas.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n\
    \            sum += c - 'A' + 1\n        else \n            sum += c\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt02vp20p.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt02vp20p.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s\n        if isUpper(c)\n            sum += toUpper(c)\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphvc1j8t8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  UndefVarError: isUpper not defined\n\
    \  Stacktrace:\n   [1] digitSum(::String) at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level\
    \ scope at /tmp/tmphvc1j8t8.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmphvc1j8t8.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level scope at /tmp/tmphvc1j8t8.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmphvc1j8t8.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1] digitSum(::String)\
    \ at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level scope at /tmp/tmphvc1j8t8.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmphvc1j8t8.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level scope at /tmp/tmphvc1j8t8.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmphvc1j8t8.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  UndefVarError: isUpper not defined\n  Stacktrace:\n   [1]\
    \ digitSum(::String) at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level scope at /tmp/tmphvc1j8t8.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmphvc1j8t8.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level scope at\
    \ /tmp/tmphvc1j8t8.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmphvc1j8t8.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  UndefVarError: isUpper not defined\n  Stacktrace:\n\
    \   [1] digitSum(::String) at /tmp/tmphvc1j8t8.jl:16\n   [2] top-level scope at\
    \ /tmp/tmphvc1j8t8.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvc1j8t8.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphvc1j8t8.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq3et7gmh.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq3et7gmh.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            sum += c - '0'\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.4>\ndigitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe6dirmfe.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpe6dirmfe.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        if ('A' <= c && c <= 'Z') || ('a'\
    \ <= c && c <= 'z') then\n            sum = sum + c - 'A' + 10\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9t5l7nsr.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp9t5l7nsr.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of digits in it.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0ylm7_x4.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp0ylm7_x4.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0' \n        else digitSum += 10\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.4>\ndigitSum(\"helloE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9zrqfaik.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp9zrqfaik.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do\n        sum += (ord(c) - ord('0'))\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp31r7xf42.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp31r7xf42.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n \
    \   end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp50uf45lp.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp50uf45lp.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else\n            digitSum += c\n  \
    \  end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\") =>\
    \ 131\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\") => 153\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1_ga1l2h.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1_ga1l2h.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n  \
    \          digitSum += c - 'A' + 1\n        else \n            digitSum += c -\
    \ 'a'\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzsjn8a8y.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzsjn8a8y.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8hy54xss.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp8hy54xss.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum\
    \ += c - 'A' + 1\n        end\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the sum of the digits only'\n\
    \    ASCII codes.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp64dhjf6x.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp64dhjf6x.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are upper case.\
    \ For example, the string \"helloE\" has 5 characters that are upper case. Write\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are upper case. For example, the string \"helloE\" has 5\
    \ characters that are upper case. Write a function that takes a string as input\
    \ and returns the number of characters in the string that are upper case. For\
    \ example, the string \"helloE\" has 5 characters that are upper case. Write a\
    \ function that takes a string as input and returns the number of characters in\
    \ the string that are upper case. For example, the string \"helloE\" has 5 characters\
    \ that are upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are upper case. For example, the\
    \ string \"helloE\" has 5 characters that are upper case. Write a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are upper case. For example, the string \"helloE\" has 5 characters that are\
    \ upper case. Write a function that takes a string as input and returns the number\
    \ of characters in the string that are upper case. For example, the string \"\
    helloE\" has 5 characters that are upper case. Write a function that takes a string\
    \ as input and returns the number of characters in the string that are upper case.\
    \ For example, the string \"helloE\" has 5 characters that are upper case. Write\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are upper case. For example, the string \"helloE\" has 5\
    \ characters that are upper case. Write a function that takes a string as input\
    \ and returns the number of characters in the string that are upper case. For\
    \ example, the string \"helloE\" has 5 characters that are upper case. Write a\
    \ function that takes a string as input and returns the number of characters in\
    \ the string that are upper case. For example, the string \"helloE\" has 5 characters\
    \ that are upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are upper case. For example, the\
    \ string \"helloE\" has 5 characters that are upper case. Write a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are upper case. For example, the string \"helloE\" has 5 characters that are\
    \ upper case. Write a function that takes a string as input and returns the number\
    \ of characters in the string that are upper case. For example, the string \"\
    helloE\" has 5 characters that are upper case. Write a function that takes a string\
    \ as input and returns the number of characters in the string that are upper case.\
    \ For example\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1w4yje2z.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp1w4yje2z.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n \
    \           sum = sum + c - '0'\n        else \n            sum = sum + c - 'A'\
    \ + 10\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string. \nThe function should\
    \ ignore all non-alphanumeric characters. \nThe function should ignore all empty\
    \ strings.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdszfddjo.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpdszfddjo.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppjat1lbp.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"abAB\") == 131\n  type Char has no field isUpper\n\
    \  Stacktrace:\n   [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmppjat1lbp.jl:16\n   [3] top-level scope at /tmp/tmppjat1lbp.jl:28\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppjat1lbp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcCd\") == 67\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmppjat1lbp.jl:16\n\
    \   [3] top-level scope at /tmp/tmppjat1lbp.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppjat1lbp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    helloE\") == 69\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmppjat1lbp.jl:16\n\
    \   [3] top-level scope at /tmp/tmppjat1lbp.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppjat1lbp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    woArBld\") == 131\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmppjat1lbp.jl:16\n\
    \   [3] top-level scope at /tmp/tmppjat1lbp.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppjat1lbp.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    aAaaaXa\") == 153\n  type Char has no field isUpper\n  Stacktrace:\n   [1] getproperty(::Char,\
    \ ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String) at /tmp/tmppjat1lbp.jl:16\n\
    \   [3] top-level scope at /tmp/tmppjat1lbp.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppjat1lbp.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \ How are yOu?\") == 151\n  type Char has no field isUpper\n  Stacktrace:\n  \
    \ [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmppjat1lbp.jl:16\n   [3] top-level scope at /tmp/tmppjat1lbp.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppjat1lbp.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    You arE Very Smart\") == 327\n  type Char has no field isUpper\n  Stacktrace:\n\
    \   [1] getproperty(::Char, ::Symbol) at ./Base.jl:33\n   [2] digitSum(::String)\
    \ at /tmp/tmppjat1lbp.jl:16\n   [3] top-level scope at /tmp/tmppjat1lbp.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppjat1lbp.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjat1lbp.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = foldl(\\accum c -> accum + digitToInt(c), 0, s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\
    \t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
    \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
    \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"\\\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5wrlz_2h.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5wrlz_2h.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n       \
    \     sum += c - 'A' + 1\n        else \n            sum += c\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string. \nThe function should ignore all non-alphanumeric\
    \ characters and return 0 for the empty string.\nusing Test\n\n@testset begin\n\
    \ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpatny2ecu.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpatny2ecu.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if isUpper c then digitSum += toUpper\
    \ c else digitSum += toLower c \n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"then\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzi6ld69h.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpzi6ld69h.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwlzclhq6.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpwlzclhq6.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n \
    \           sum += c - 'A' + 1\n        else \n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfchtzg6n.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpfchtzg6n.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\
    \ digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2l8x0vov.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp2l8x0vov.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' && c <= 'Z' then\
    \ sum += c - 'A'\n        else sum += c\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\"\
    ) == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\")\
    \ == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpygnrcbcm.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpygnrcbcm.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.0>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of uppercase\
    \ letters in the string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfgauqqek.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfgauqqek.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n \
    \   end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvas8l_vq.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpvas8l_vq.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n       \
    \     sum += c - 'A' + 1\n        else \n            sum += c\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyis6lgbs.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyis6lgbs.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        digitSum += digit(c)\n    end\n\
    \    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmt574k18.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpmt574k18.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' && c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the sum of the digits in that string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsh7ci9o5.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpsh7ci9o5.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum = 0\n    for c in s do \n        if ('A' <= c && c <= 'Z') then \n\
    \            sum += c - 'A' + 1\n        else \n            sum += c - '0'\n \
    \   end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmple4sgxf7.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmple4sgxf7.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n    \
    \        digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n   \
    \         digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n  \
    \          digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.4>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the sum of the digits in\
    \ that string.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsmvhexko.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsmvhexko.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n  \
    \          digitSum += c - 'A' + 1\n        else \n            digitSum += c -\
    \ '0'\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp8dikiral.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp8dikiral.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp8dikiral.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do \n        if c >= '0' && c <= '9' then\
    \ \n            sum += c - '0'\n        else \n            sum += c - 'A' + 10\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise\n\
    Write a function that takes a string as input and returns the sum of the digits\
    \ only'\n    ASCII codes.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3c_cu058.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp3c_cu058.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s\n        if c >= '0' && c <= '9'\n    \
    \        sum += c - '0'\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4_xu8pbs.jl:28\n  Expression: candidate(\"\
    abAB\") == 131\n   Evaluated: 0 == 131\nStacktrace:\n [1] top-level scope at /tmp/tmp4_xu8pbs.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\ntest set: Test Failed at /tmp/tmp4_xu8pbs.jl:29\n\
    \  Expression: candidate(\"abcCd\") == 67\n   Evaluated: 0 == 67\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_xu8pbs.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\ntest set: Test Failed at /tmp/tmp4_xu8pbs.jl:30\n\
    \  Expression: candidate(\"helloE\") == 69\n   Evaluated: 0 == 69\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_xu8pbs.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\ntest set: Test Failed at /tmp/tmp4_xu8pbs.jl:31\n\
    \  Expression: candidate(\"woArBld\") == 131\n   Evaluated: 0 == 131\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_xu8pbs.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\ntest set: Test Failed at /tmp/tmp4_xu8pbs.jl:32\n\
    \  Expression: candidate(\"aAaaaXa\") == 153\n   Evaluated: 0 == 153\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_xu8pbs.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\ntest set: Test Failed at /tmp/tmp4_xu8pbs.jl:33\n\
    \  Expression: candidate(\" How are yOu?\") == 151\n   Evaluated: 0 == 151\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_xu8pbs.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\ntest set: Test Failed at /tmp/tmp4_xu8pbs.jl:34\n\
    \  Expression: candidate(\"You arE Very Smart\") == 327\n   Evaluated: 0 == 327\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4_xu8pbs.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_xu8pbs.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_xu8pbs.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do\n        digitSum += getCharCode(c)\n\
    \    end\n    return digitSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\
    \t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t\
    @test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\
    \t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"You arE Very\
    \ Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdo0osgtw.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpdo0osgtw.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n\
    \            sum = sum + c - 'A' + 10\n        else\n            sum = sum + c\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"\
    abcCd\") == 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\"\
    ) == 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are\
    \ yOu?\") == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphwciq330.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmphwciq330.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum\
    \ += c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.0>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
    \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") ==\
    \ 131)\n\t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\"\
    ) == 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl1o_krqs.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpl1o_krqs.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Task\n    Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n \
    \       digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
    abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
    ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
    \ \n    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n \
    \   end\n    return digitSum\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of uppercase letters in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abAB\") == 131)\n\t@test(candidate(\"abcCd\") == 67)\n\t@test(candidate(\"helloE\"\
    ) == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\t@test(candidate(\"aAaaaXa\"\
    ) == 153)\n\t@test(candidate(\" How are yOu?\") == 151)\n\t@test(candidate(\"\
    You arE Very Smart\") == 327)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0rxu3sbd.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmp0rxu3sbd.jl:15\n"
  exit_code: 1
  status: Exception

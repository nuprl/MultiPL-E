name: HumanEval_79_decimal_to_binary
language: julia
results:
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        if decimal < 2\n            \n            binary\
    \ += \"0\"\n            \n        else\n            \n            binary += \"\
    1\"\n            \n        end\n        \n        decimal = decimal / 2\n    \
    \    \n    end\n    \n    binary = binary[2:end]\n    \n    return \"db\" + binary\
    \ + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string and return a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr_vqchsm.jl:38\nin expression starting at\
    \ /tmp/tmpr_vqchsm.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    # Your code here\n    \n    return\
    \ binary_string\nend\n</cell>\n<text>\nRun the cell below to test your code. Make\
    \ sure everything is correct. Then, modify your function so that it calls your\
    \ function above. Finally, test your code.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljttzxgf.jl:20\nin expression starting at\
    \ /tmp/tmpljttzxgf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        error(\"Decimal\
    \ cannot be negative\")\n    \n    if decimal > 2 ** 64\n        error(\"Decimal\
    \ cannot be greater than 2^64\")\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0\n        binary = binary + \"1\"\n        decimal = decimal / 2\n\
    \    \n    binary = binary + \"0\"\n    \n    binary = binary + \"db\"\n    \n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. \nThe\
    \ function should take in a string with each character representing a binary number\
    \ and\nreturn an Int64 number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiz3dzo2r.jl:19\nin expression starting at /tmp/tmpiz3dzo2r.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    while decimal > 0\n        binary_string\
    \ = binary_string + \"0\"\n        decimal = decimal - 1\n    end\n    \n    while\
    \ decimal >= 2\n        binary_string = binary_string + \"1\"\n        decimal\
    \ = decimal - 2\n    end\n    \n    binary_string = \"db\" + binary_string\n \
    \   \n    return binary_string\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that converts a binary number to a decimal number. Your function should take\
    \ in a string and return a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb9472lya.jl:33\nin expression starting at\
    \ /tmp/tmpb9472lya.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpgd6pnhxn.jl:116\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgd6pnhxn.jl:1\n\
    in expression starting at /tmp/tmpgd6pnhxn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    # Write your code here\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nProblem\
    \ 7\nWrite a function that converts a decimal number to a binary number with leading\
    \ zeros. For example the decimal number 15 should become \"00000000011111\".\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo70bt9ci.jl:19\nin expression starting at\
    \ /tmp/tmpo70bt9ci.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"The decimal number must be between 2 and 64.\")\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp13a6rcz4.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp13a6rcz4.jl:1\n\
    in expression starting at /tmp/tmp13a6rcz4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid decimal number\"\n    \n    decimal = decimal % 2\n    \n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ / 2\n    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n\
    \    \n    return binary\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ converts a binary number to decimal form. The function should take in a string\
    \ and return a string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvb6ekfk.jl:31\nin expression starting at\
    \ /tmp/tmpvvb6ekfk.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a string with each character representing a binary number\
    \ and returns an Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvp9djrv9.jl:21\nin expression starting at\
    \ /tmp/tmpvp9djrv9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = decimal_to_binary(decimal - 1)\n    \n    binary_string += \"0\"\n    \n \
    \   if decimal < 10 \n        binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. Your function\
    \ should take in a string and return a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf0iqo_85.jl:26\nin expression starting at\
    \ /tmp/tmpf0iqo_85.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    \n    if decimal > 2^(64-1)\n        error(\"Decimal number must be less\
    \ than 2^64\")\n    \n    binary = \"\"\n    \n    while decimal > 0\n       \
    \ binary = string(decimal%2) + binary\n        decimal = floor(decimal/2)\n  \
    \  end\n    \n    binary = string(64 - binary.length) + binary\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a binary number to a decimal number. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb4k0mjtn.jl:31\nin expression starting at\
    \ /tmp/tmpb4k0mjtn.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal //\
    \ 2\n    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n \
    \   \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string with each character\nrepresenting a binary number and\
    \ return the decimal number represented by the binary number. There will be an\
    \ extra couple of characters 'db' at the beginning and at the end of the string.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8r_hz4_y.jl:31\nin expression starting at\
    \ /tmp/tmp8r_hz4_y.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpymb1covn.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymb1covn.jl:1\n\
    in expression starting at /tmp/tmpymb1covn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a decimal number to its binary representation in reverse\
    \ order. For example,\n    decimal_to_binary_reverse(15) returns \"1111\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp36a_6odv.jl:23\nin expression starting at\
    \ /tmp/tmp36a_6odv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 4\nWrite a function that takes\
    \ a string and returns the number of characters in the string.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz1b79hkt.jl:29\nin expression starting at\
    \ /tmp/tmpz1b79hkt.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n    end\n    \n    binary = binary + \"db\"\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz9pntm32.jl:24\nin expression starting at\
    \ /tmp/tmpz9pntm32.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ += \"1\"\n    else \n        binary_string += \"0\"\n    \n    binary_string\
    \ += decimal_to_binary(decimal - 1)\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp30ovce68.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp30ovce68.jl:1\n\
    in expression starting at /tmp/tmp30ovce68.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        binary += if digit ==\
    \ 0 then \"0\" else \"1\"\n    end\n    return \"db\" + binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. The function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx_cechoz.jl:15\nin expression starting at /tmp/tmpx_cechoz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        decimal = decimal // 2\n        \n        binary\
    \ = \"0\" + binary\n        \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a binary string and return the\
    \ decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvn07wa67.jl:26\nin expression starting at\
    \ /tmp/tmpvn07wa67.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    decimal = decimal % 2\n    \n    while decimal != 0\n        binary_string\
    \ = binary_string + \"0\"\n        decimal = decimal // 2\n    \n    binary_string\
    \ = binary_string + \"1\"\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string\nof\
    \ binary numbers and return the decimal equivalent of the binary numbers. Your\
    \ function should return\na string, with each character representing a decimal\
    \ number. Each character in the string will be a \nnumber from 0 to 15.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3tsvhyxe.jl:30\nin expression starting at\
    \ /tmp/tmp3tsvhyxe.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        error(\"Decimal\
    \ cannot be negative\")\n    \n    decimal = abs(decimal)\n    \n    while decimal\
    \ > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    end\n\
    \    \n    while decimal >= 1\n        binary = binary + \"1\"\n        decimal\
    \ = decimal - 1\n    end\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts a binary\
    \ number to a decimal number. The function should take in a string and return\
    \ a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdclm2y2i.jl:35\nin expression starting at\
    \ /tmp/tmpdclm2y2i.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return binary_string\n    \n    binary_string = \"db\"\n    \n    while\
    \ decimal > 1\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    end\n    \n    binary_string = binary_string + \"1\"\n  \
    \  \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string with each character representing a binary number and\
    \ return a string with each character representing a decimal number. Each character\
    \ in the string will be a decimal number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp87_s298s.jl:30\nin expression starting at\
    \ /tmp/tmp87_s298s.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\n    \n    binary = \"\"\n    \n    for digit in decimal_to_binary(decimal\
    \ - 1)\n        binary *= 10\n        binary += digit\n    end\n    \n    binary\
    \ *= 10\n    binary += decimal_to_binary(decimal - 1)\n    \n    binary *= 10\n\
    \    binary += \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpajuxlw2o.jl:33\nin expression starting at\
    \ /tmp/tmpajuxlw2o.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    while decimal > 0 \n     \
    \   decimal = decimal / 2\n        binary = binary + \"0\"\n    \n    binary =\
    \ binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string with each character representing\
    \ a binary number and return the decimal number represented by the binary number.\
    \ There will be an extra couple of characters 'db' at the beginning and at the\
    \ end of the string. The extra characters are there to help with the format.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk2h4asi7.jl:33\nin expression starting at\
    \ /tmp/tmpk2h4asi7.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp1jytkss.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp1jytkss.jl:1\n\
    in expression starting at /tmp/tmpp1jytkss.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.4>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary string to a decimal number. Your function\
    \ should take in a binary string as input and return a decimal number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcv7hn4i5.jl:22\nin expression starting at\
    \ /tmp/tmpcv7hn4i5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    # Your code here\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to decimal form. Your function should\
    \ take in a string and return a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6kg26rj.jl:19\nin expression starting at\
    \ /tmp/tmpd6kg26rj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2\n        binary = binary\
    \ + \"0\"\n    else\n        binary = binary + \"1\"\n    end\n    \n    decimal\
    \ = decimal - 2\n    \n    while decimal >= 0\n        binary = binary + \"0\"\
    \n        decimal = decimal - 1\n    end\n    \n    binary = binary + \"b\"\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn2_1756w.jl:33\nin expression starting at\
    \ /tmp/tmpn2_1756w.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx898vh_b.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx898vh_b.jl:1\n\
    in expression starting at /tmp/tmpx898vh_b.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  while decimal != 0\n        binary_string = binary_string + \"0\"\n       \
    \ decimal = decimal - 1\n    \n    binary_string = binary_string + \"1\"\n   \
    \ \n    return binary_string\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that will convert a decimal number to binary in reverse order. For example,\n\
    \    decimal_to_binary_reversed(15) should return \"1111\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmjdx8ii7.jl:26\nin expression starting at\
    \ /tmp/tmpmjdx8ii7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid input\")\n    end\n    \n    binary_string = binary_string\
    \ + \"0\"\n    \n    for i = 2 to 64\n        if decimal % i == 0\n          \
    \  binary_string = binary_string + \"1\"\n        else\n            binary_string\
    \ = binary_string + \"0\"\n        end\n    end\n    \n    binary_string = binary_string\
    \ + \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string with each character representing\
    \ a binary number and return a string with each character representing a decimal\
    \ number. Each character in the string will be a number from 0 to 9.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp8ov8pd50.jl:22 expected \"\
    end\", got \"64\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8ov8pd50.jl:22\n\
    in expression starting at /tmp/tmp8ov8pd50.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    \n    # Your code here\n    \n    return binary\nend\n\
    </cell>\n<text>\nSolution\nSolution notebook\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmeapfq3v.jl:19\nin expression starting at\
    \ /tmp/tmpmeapfq3v.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for n in decimal:\n        binary = binary + str((n\
    \ & (1 << i)) > 0 ? \"1\" : \"0\") + \"db\"\n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary string to a decimal integer.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnob8uezu.jl:15\nin expression starting at\
    \ /tmp/tmpnob8uezu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 3\nWrite a function that converts\
    \ decimal to hexadecimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7dhu3lfz.jl:22\nin expression starting at\
    \ /tmp/tmp7dhu3lfz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 \n        binary_string\
    \ = \"0\"\n    else \n        binary_string = \"1\"\n    \n    binary_string +=\
    \ decimal_to_binary(decimal - 2)\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmn5weac.jl:25\nin expression starting at\
    \ /tmp/tmpcmn5weac.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    \n    while decimal != 0\n\
    \        decimal = decimal // 2\n        binary += \"0\"\n    end\n    \n    binary\
    \ += \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a binary number to\
    \ a decimal number. Your function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgq3zb_i5.jl:25\nin expression starting at\
    \ /tmp/tmpgq3zb_i5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    binary_string += \"0\"\n    binary_string +=\
    \ \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string \nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxxs2ri5w.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxxs2ri5w.jl:1\n\
    in expression starting at /tmp/tmpxxs2ri5w.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    end\n    \n    while decimal > 0 \n        decimal = decimal / 2\n  \
    \      binary = binary + \"0\"\n    end\n    \n    return binary + \"db\"\nend\n\
    </cell>\n<text>\nNow let's test your function\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqrsc84zr.jl:31\nin expression starting at\
    \ /tmp/tmpqrsc84zr.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n   \
    \ end\n    \n    binary = string(64, '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"\
    The decimal number must be between 2 and 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"The decimal number\
    \ must be between 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n\
    \    \n    if decimal < 2\n        throw(ArgumentError(\"The decimal number must\
    \ be between 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n    \n\
    \    if decimal < 2\n        throw(ArgumentError(\"The decimal number must be\
    \ between 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n    \n  \
    \  if decimal < 2\n        throw(ArgumentError(\"The decimal number must be between\
    \ 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n    \n    if decimal\
    \ < 2\n        throw(ArgumentError(\"The decimal number must be between 2 and\
    \ 64\"))\n    end\n    \n    binary = string(64, '0')\n    \n    if decimal <\
    \ 2\n        throw(ArgumentError(\"The decimal number must be between 2 and 64\"\
    ))\n    end\n    \n    binary = string(64, '0')\n    \n    if decimal < 2\n  \
    \      throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n\
    \    end\n    \n    binary = string(64, '0')\n    \n    if decimal < 2\n     \
    \   throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n  \
    \  end\n    \n    binary = string(64, '0')\n    \n    if decimal < 2\n       \
    \ throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    binary = string(64, '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"\
    The decimal number must be between 2 and 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"The decimal number\
    \ must be between 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n\
    \    \n    if decimal < 2\n        throw(ArgumentError(\"The decimal number must\
    \ be between 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n    \n\
    \    if decimal < 2\n        throw(ArgumentError(\"The decimal number must be\
    \ between 2 and 64\"))\n    end\n    \n    binary = string(64, '0')\n    \n  \
    \  if decimal < 2\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpijkl7aaq.jl:1\nin expression starting at /tmp/tmpijkl7aaq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    decimal = decimal % 2\n    \n    while decimal > 0\n        binary_string\
    \ = binary_string + \"1\"\n        decimal = decimal - 1\n    \n    binary_string\
    \ = binary_string + \"0\"\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that will\
    \ convert a binary string to a decimal string. Your function should take in a\
    \ binary string and return a decimal string.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1336fvhl.jl:30\nin expression starting at\
    \ /tmp/tmp1336fvhl.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    binary_string = \"db\"\n    \n  \
    \  for i in decimal_to_binary(decimal - 2)\n        binary_string += i\n    \n\
    \    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string and return a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ku5s59q.jl:26\nin expression starting at\
    \ /tmp/tmp1ku5s59q.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal == 0 \n        return \"db0\"\n    else if decimal ==\
    \ 1 \n        return \"db1\"\n    else \n        binary_string = \"\"\n      \
    \  \n        for i = 2 to decimal \n            binary_string += \"0\"\n     \
    \   \n        binary_string += \"1\"\n        \n        return binary_string\n\
    \    \nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a binary number to decimal form. The function should\
    \ take in a binary string and return a decimal integer.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5xesnpus.jl:16\nin expression starting at\
    \ /tmp/tmp5xesnpus.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    if decimal < 10\n        binary = \"0\"\
    \n    \n    if decimal < 16\n        binary = \"0\"\n    \n    if decimal < 32\n\
    \        binary = \"0\"\n    \n    if decimal < 48\n        binary = \"0\"\n \
    \   \n    if decimal < 64\n        binary = \"1\"\n    \n    if decimal < 80\n\
    \        binary = \"1\"\n    \n    if decimal < 96\n        binary = \"1\"\n \
    \   \n    if decimal < 112\n        binary = \"1\"\n    \n    if decimal < 128\n\
    \        binary = \"1\"\n    \n    if decimal < 144\n        binary = \"1\"\n\
    \    \n    if decimal < 160\n        binary = \"1\"\n    \n    if decimal < 176\n\
    \        binary = \"1\"\n    \n    if decimal < 192\n        binary = \"1\"\n\
    \    \n    if decimal < 208\n        binary = \"1\"\n    \n    if decimal < 224\n\
    \        binary = \"1\"\n    \n    if decimal < 240\n        binary = \"1\"\n\
    \    \n    if decimal < 256\n        binary = \"1\"\n    \n    if decimal < 264\n\
    \        binary = \"1\"\n    \n    if decimal < 280\n        binary = \"1\"\n\
    \    \n    if decimal < 296\n        binary = \"1\"\n    \n    if decimal < 312\n\
    \        binary = \"1\"\n    \n    if decimal < 328\n        binary = \"1\"\n\
    \    \n    if decimal < 344\n        binary = \"1\"\n    \n    if decimal < 360\n\
    \        binary = \"1\"\n    \n    if decimal < 376\n        binary = \"1\"\n\
    \    \n    if decimal < 392\n        binary = \"1\"\n    \n    if decimal < 408\n\
    \        binary = \"1\"\n    \n    if decimal < 424\n        binary = \"1\"\n\
    \    \n    if decimal < 440\n        binary = \"1\"\n    \n    if decimal < 456\n\
    \        binary = \"1\"\n    \n    if decimal < 472\n        binary = \"1\"\n\
    \    \n    if decimal < 488\n        binary = \"1\"\n    \n    if decimal < 504\n\
    \        binary = \"1\"\n    \n    if decimal < 520\n        binary = \"1\"\n\
    \    \n    if decimal < 536\n        binary = \"1\"\n    \n    if decimal < 552\n\
    \        binary = \"1\"\n    \n    if decimal < 568\n        binary = \"1\"\n\
    \    \n    if decimal < 584\n        binary = \"1\"\n    \n    if decimal < 600\n\
    \        binary = \"1\"\n    \n    if decimal < 616\n        binary = \"1\"\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkjl_yd1g.jl:1\nin expression starting at /tmp/tmpkjl_yd1g.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp54jy6u72.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp54jy6u72.jl:1\n\
    in expression starting at /tmp/tmp54jy6u72.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    \n    binary_string = binary_string + \"1\"\n    \n    binary_string\
    \ = \"db\" + binary_string\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 3\nWrite a function that converts\
    \ a binary number to a decimal number. The function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzbi531vt.jl:31\nin expression starting at\
    \ /tmp/tmpzbi531vt.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpiholqxp9.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpiholqxp9.jl:1\n\
    in expression starting at /tmp/tmpiholqxp9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzpc0cv6g.jl:23\nin expression starting at\
    \ /tmp/tmpzpc0cv6g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    \n    binary_string = binary_string + \"1\"\n    \n    if\
    \ decimal != 0\n        binary_string = binary_string + \"0\"\n    \n    return\
    \ binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmp_isaw34p.jl:21\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_isaw34p.jl:1\n\
    in expression starting at /tmp/tmp_isaw34p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal // 2\n    \n    binary_string = binary_string + \"1\"\n    \n    binary_string\
    \ = \"db\" + binary_string\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string and\
    \ return a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6_v5rufd.jl:31\nin expression starting at\
    \ /tmp/tmp6_v5rufd.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\"\n    \n    binary_string = binary_string + decimal_to_binary(decimal\
    \ / 2)\n    \n    binary_string = binary_string + decimal_to_binary(decimal %\
    \ 2)\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ hexadecimal format. The function should return a string, with each character\
    \ representing a hexadecimal number. Each character in the string will be 0-9\
    \ or A-F. There will be an extra couple of characters '0x' at the beginning and\
    \ at the end of the string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6596ve99.jl:28\nin expression starting at\
    \ /tmp/tmp6596ve99.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcddvlpaq.jl:21\nin expression starting at\
    \ /tmp/tmpcddvlpaq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 \n        binary = binary\
    \ + \"0\"\n    elseif decimal < 10 \n        binary = binary + \"1\"\n    elseif\
    \ decimal < 16 \n        binary = binary + \"10\"\n    elseif decimal < 32 \n\
    \        binary = binary + \"11\"\n    elseif decimal < 64 \n        binary =\
    \ binary + \"100\"\n    elseif decimal < 128 \n        binary = binary + \"101\"\
    \n    elseif decimal < 256 \n        binary = binary + \"110\"\n    elseif decimal\
    \ < 512 \n        binary = binary + \"111\"\n    elseif decimal < 1024 \n    \
    \    binary = binary + \"1000\"\n    elseif decimal < 2048 \n        binary =\
    \ binary + \"1001\"\n    elseif decimal < 4096 \n        binary = binary + \"\
    1010\"\n    elseif decimal < 8192 \n        binary = binary + \"1011\"\n    elseif\
    \ decimal < 16384 \n        binary = binary + \"1100\"\n    elseif decimal < 32768\
    \ \n        binary = binary + \"1101\"\n    elseif decimal < 65536 \n        binary\
    \ = binary + \"1110\"\n    elseif decimal < 131072 \n        binary = binary +\
    \ \"1111\"\n    elseif decimal < 262144 \n        binary = binary + \"11100\"\n\
    \    elseif decimal < 524288 \n        binary = binary + \"11101\"\n    elseif\
    \ decimal < 1048576 \n        binary = binary + \"11110\"\n    elseif decimal\
    \ < 2097152 \n        binary = binary + \"11111\"\n    elseif decimal < 4194304\
    \ \n        binary = binary + \"111110\"\n    elseif decimal < 8388608 \n    \
    \    binary = binary + \"111111\"\n    elseif decimal < 16777216 \n        binary\
    \ = binary + \"1111100\"\n    elseif decimal < 33554432 \n        binary = binary\
    \ + \"1111101\"\n    elseif decimal < 67108864 \n        binary = binary + \"\
    1111110\"\n    elseif decimal < 134217728 \n        binary = binary + \"1111111\"\
    \n    elseif decimal < 268435456 \n        binary = binary + \"11111110\"\n  \
    \  elseif decimal < 536870912 \n        binary = binary + \"11111111\"\n    elseif\
    \ decimal < 1073741824 \n        binary = binary + \"11111111\"\n    elseif decimal\
    \ < 2147483648 \n        binary = binary + \"111111111\"\n    elseif decimal <\
    \ 4294967296 \n        binary = binary + \"1111111110\"\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4v47sszm.jl:1\nin expression starting at /tmp/tmp4v47sszm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa0jfgenn.jl:21\nin expression starting at\
    \ /tmp/tmpa0jfgenn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary_string = \"1\" + binary_string\n    else\n        binary_string\
    \ = \"0\" + binary_string\n    end\n    \n    decimal = decimal / 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else\n\
    \        binary_string = \"0\" + binary_string\n    end\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal \nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzt9hde14.jl:1\nin expression starting at /tmp/tmpzt9hde14.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary += i\n    end\n    \n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    binary_string += \"db\"\
    \n    return binary_string\nend\n</cell>\n<text>\nNow let's try it out!\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy0wjry5t.jl:15\nin expression starting at /tmp/tmpy0wjry5t.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvsfw1qst.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvsfw1qst.jl:1\n\
    in expression starting at /tmp/tmpvsfw1qst.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += \"0\"\n        if digit == 1\n            binary_string += \"1\"\n      \
    \  end\n    end\n    binary_string += \"db\"\n    return binary_string\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string with\
    \ each character representing a binary number and return a string with the decimal\
    \ number. There will be an extra couple of characters 'db' at the beginning and\
    \ at the end of the string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpejhb8iuv.jl:23\nin expression starting at\
    \ /tmp/tmpejhb8iuv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    binary_string += \"0\"\n    \n \
    \   binary_string += decimal_to_binary(decimal / 2)\n    \n    binary_string +=\
    \ \"0\"\n    \n    binary_string += decimal_to_binary(decimal % 2)\n    \n   \
    \ binary_string += \"db\"\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. You will be given a string of binary numbers\
    \ and your task is to convert it to decimal numbers. Each character in the string\
    \ will be either '0' or '1'.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuugrh21f.jl:28\nin expression starting at\
    \ /tmp/tmpuugrh21f.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        decimal = -decimal\n\
    \        binary = binary + \"b\"\n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpeqzhi0ho.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpeqzhi0ho.jl:1\n\
    in expression starting at /tmp/tmpeqzhi0ho.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if digit\
    \ == 0 or digit == 1:\n            binary_string += \"0\"\n        elif digit\
    \ == 2:\n            binary_string += \"1\"\n        else:\n            binary_string\
    \ += \"1\"\n            binary_string += \"0\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. For example, binary_to_decimal(\"\
    1111\") should return 15 and binary_to_decimal(\"100000\") should return 32.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpccj4493x.jl:16\nin expression starting at\
    \ /tmp/tmpccj4493x.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\"\n    \n    binary_string += decimal_to_binary(decimal\
    \ / 2)\n    binary_string += decimal_to_binary(decimal % 2)\n    \n    return\
    \ binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpya7qd42x.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpya7qd42x.jl:1\n\
    in expression starting at /tmp/tmpya7qd42x.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<text>\n\
    Now let's try it out on some examples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmx3ei06t.jl:22\nin expression starting at\
    \ /tmp/tmpmx3ei06t.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if digit\
    \ == 0 or digit == 1:\n            binary_string += digit\n        else:\n   \
    \         binary_string += \"0\"\n    return binary_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy9i6oh3v.jl:16\nin expression starting at\
    \ /tmp/tmpy9i6oh3v.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<text>\nNow let's test\
    \ our function!\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpx8mqnz.jl:16\nin expression starting at /tmp/tmpxpx8mqnz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvs572cyl.jl:21\nin expression starting at\
    \ /tmp/tmpvs572cyl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal:\n        if digit\
    \ == 0 or digit == 1:\n            binary += digit\n        else:\n          \
    \  binary += \"0\"\n    \n    binary = binary[2:]\n    \n    return binary\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. The function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf1kq57iv.jl:17\nin expression starting at\
    \ /tmp/tmpf1kq57iv.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary += i\n    end\n    \n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal //\
    \ 2\n    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n \
    \   \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the number of characters\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprn3a2b48.jl:28\nin expression starting at\
    \ /tmp/tmprn3a2b48.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        digit = digit // 2\n    end\n    \n\
    \    return \"db\" + binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuy0sua6i.jl:23\nin expression starting at\
    \ /tmp/tmpuy0sua6i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = decimal_to_binary(decimal - 1)\n    \n    binary_string += \"0\"\n    \n \
    \   while decimal > 0 \n        binary_string += \"1\"\n        decimal -= 1\n\
    \    \n    binary_string += \"b\"\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 3\nWrite a function that converts\
    \ a binary number to a decimal number. \nThe function should take in a string\
    \ and return a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps4i6u0eb.jl:29\nin expression starting at\
    \ /tmp/tmps4i6u0eb.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0 or digit == 1:\n            binary_string += digit\n        else:\n\
    \            binary_string += \"0\"\n    \n    return binary_string + \"db\"\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7aek79jz.jl:17\nin expression starting at\
    \ /tmp/tmp7aek79jz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ / 2\n    binary = binary + \"1\"\n    binary = binary + \"b\"\n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgp1mk1cr.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgp1mk1cr.jl:1\n\
    in expression starting at /tmp/tmpgp1mk1cr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr25a1h3d.jl:22\nin expression starting at\
    \ /tmp/tmpr25a1h3d.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2r9ubl_m.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2r9ubl_m.jl:1\n\
    in expression starting at /tmp/tmp2r9ubl_m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    binary_string += \"db\"\n    for digit in decimal\n\
    \        binary_string += if digit == 0 then \"0\" else \"1\"\n    end\n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary string to\
    \ a decimal string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9tnynumi.jl:16\nin expression starting at /tmp/tmp9tnynumi.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp82uf9z9_.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp82uf9z9_.jl:1\n\
    in expression starting at /tmp/tmp82uf9z9_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    while decimal !=\
    \ 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n    \n  \
    \  binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n    \n    return\
    \ binary\nend\n</cell>\n<text>\nProblem 3\nWrite a function that converts a binary\
    \ number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzqziyrsn.jl:31\nin expression starting at\
    \ /tmp/tmpzqziyrsn.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    binary_string = \"db\"\n    \n  \
    \  for digit in decimal_to_binary(decimal - 2)\n        binary_string += digit\n\
    \    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk3fpcu8f.jl:26\nin expression starting at\
    \ /tmp/tmpk3fpcu8f.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp008na2p4.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp008na2p4.jl:1\n\
    in expression starting at /tmp/tmp008na2p4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n    \n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_q1jrcvg.jl:28\nin expression starting at\
    \ /tmp/tmp_q1jrcvg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    binary_string = decimal_to_binary(decimal\
    \ / 2)\n    \n    if decimal % 2 == 0\n        binary_string += \"1\"\n    else\n\
    \        binary_string += \"0\"\n    end\n    \n    return binary_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvebq7t55.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvebq7t55.jl:1\n\
    in expression starting at /tmp/tmpvebq7t55.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph8w_xbte.jl:1\nin expression starting at /tmp/tmph8w_xbte.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    if decimal < 2\n        binary =\
    \ binary + \"b\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. A binary number consists of an even number of 1's and 0's.\
    \ The function should take in a string and return the decimal number represented\
    \ by the binary number. There will be an extra couple of characters 'db' at the\
    \ beginning and at the end of the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3kl1vbsq.jl:32\nin expression starting at\
    \ /tmp/tmp3kl1vbsq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = decimal_to_binary(decimal - 1)\n        binary_string += \"1\"\n    else \n\
    \        binary_string = \"0\"\n    \n    return binary_string + decimal_to_binary(decimal)\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts a binary number to decimal form. Your function should\
    \ take in a binary string as input and return the decimal number in decimal form.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgs05hmc.jl:23\nin expression starting at\
    \ /tmp/tmphgs05hmc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    \n    while decimal != 0\n\
    \        binary = binary + \"0\"\n        decimal = decimal - 1\n    \n    binary\
    \ = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. Your function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6hymffus.jl:24\nin expression starting at\
    \ /tmp/tmp6hymffus.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    decimal = decimal % 2\n    while decimal !=\
    \ 0\n        binary_string += \"0\"\n        decimal = decimal / 2\n    binary_string\
    \ += \"1\"\n    return binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqk30s2g8.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqk30s2g8.jl:1\n\
    in expression starting at /tmp/tmpqk30s2g8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid Input\"\n        return binary_string\n   \
    \ \n    binary_string = decimal_to_binary(decimal / 2)\n    \n    if decimal %\
    \ 2 == 0\n        binary_string += \"0\"\n    else\n        binary_string += \"\
    1\"\n    \n    return binary_string + decimal_to_binary(decimal - binary_string.size\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nProblem 3\n\
    Write a function that converts a decimal number to hexadecimal format.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7_kmuukq.jl:29\nin expression starting at\
    \ /tmp/tmp7_kmuukq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0:\n            binary_string += \"0\"\n        elif digit == 1:\n\
    \            binary_string += \"1\"\n        else:\n            binary_string\
    \ += \"0\"\n    \n    return binary_string + \"db\"\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphpu6h10z.jl:17\nin expression starting at\
    \ /tmp/tmphpu6h10z.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    if decimal >= 2\n        binary_string\
    \ = \"0b\"\n    \n    for digit in decimal\n        binary_string += \"1\"\n \
    \   end\n    \n    return binary_string + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary to decimal.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5xw_kyqg.jl:28\nin expression starting at\
    \ /tmp/tmp5xw_kyqg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal:\n        if i == 1:\n\
    \            binary += \"1\"\n        elif i == 0:\n            binary += \"0\"\
    \n        else:\n            binary += \"0\"\n            binary += \"1\"\n  \
    \  \n    binary = binary[2:]\n    binary = binary[:len(binary)-1]\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes a string and returns the number of characters in the\
    \ string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaw7q8sih.jl:17\nin expression starting at\
    \ /tmp/tmpaw7q8sih.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else\n\
    \        binary_string = \"0\" + binary_string\n    end\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0a75d8jd.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0a75d8jd.jl:1\n\
    in expression starting at /tmp/tmp0a75d8jd.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal - 1\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that will convert a binary number to a decimal number. The\
    \ function should take in a string and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5o_ykwxo.jl:29\nin expression starting at\
    \ /tmp/tmp5o_ykwxo.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the binary string in reverse.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsqssogut.jl:22\nin expression starting at\
    \ /tmp/tmpsqssogut.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3tgzlq6p.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3tgzlq6p.jl:1\n\
    in expression starting at /tmp/tmp3tgzlq6p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return binary_string\n    end\n    \n    binary_string = decimal_to_binary(decimal\
    \ / 2)\n    \n    binary_string += if decimal % 2 == 0\n        \"0\"\n    else\n\
    \        \"1\"\n    end\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that will convert a decimal number\
    \ to binary and return the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2btif5n1.jl:30\nin expression starting at\
    \ /tmp/tmp2btif5n1.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary_string = \"0\" + binary_string\n        decimal\
    \ = decimal // 2\n    end\n    \n    binary_string = \"db\" + binary_string\n\
    \    \n    return binary_string\nend\n</cell>\n<text>\nNow let's test our function!\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpllu0vu8v.jl:26\nin expression starting at\
    \ /tmp/tmpllu0vu8v.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        \n    return binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_l_79hsq.jl:21\nin expression starting at\
    \ /tmp/tmp_l_79hsq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    while decimal != 0\n        decimal = decimal\
    \ / 2\n        binary = binary + \"0\"\n    end\n    \n    while decimal != 0\n\
    \        decimal = decimal / 2\n        binary = binary + \"1\"\n    end\n   \
    \ \n    binary = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a decimal number to octal format. Your function should return a string with\
    \ each character representing an octal number.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9pfl2tpf.jl:33\nin expression starting at\
    \ /tmp/tmp9pfl2tpf.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    decimal = decimal % 2\n    \n    if decimal < 10\n        binary_string\
    \ = \"0\" + binary_string\n    \n    if decimal < 16\n        binary_string =\
    \ \"1\" + binary_string\n    \n    binary_string = binary_string + \"db\"\n  \
    \  \n    binary_string = binary_string + decimal_to_binary(decimal / 2)\n    \n\
    \    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that will convert a binary number to decimal form. Your\
    \ function should take in a binary string and return the decimal form of the binary\
    \ number. Your function should return an error if the input is not a binary string.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcsmg1cwr.jl:34\nin expression starting at\
    \ /tmp/tmpcsmg1cwr.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    else\n        \n        binary_string =\
    \ \"db\"\n        \n        for i = 2 to 64\n            if decimal % i == 0\n\
    \                binary_string += i\n            end\n        end\n        \n\
    \        return binary_string\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ hexadecimal format. The function should return a string, with each character\
    \ representing a hexadecimal number. Each character in the string will be 0-9\
    \ or a-f.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp7m7fbm_s.jl:22 expected \"\
    end\", got \"64\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7m7fbm_s.jl:22\n\
    in expression starting at /tmp/tmp7m7fbm_s.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpn9t24796.jl:116\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn9t24796.jl:1\n\
    in expression starting at /tmp/tmpn9t24796.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        binary = binary + \"0\"\n        decimal = decimal\
    \ // 2\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a binary string\
    \ and return a decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprkbikfk3.jl:27\nin expression starting at\
    \ /tmp/tmprkbikfk3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n       \
    \ binary += i\n    end\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvr0zo7a7.jl:21\nin expression starting at\
    \ /tmp/tmpvr0zo7a7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    # Write your code here\n    \n \
    \   return binary_string\nend\n</cell>\n<text>\nSolution\nRun the cell below to\
    \ test your solution.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkfa4b53f.jl:20\nin expression starting at\
    \ /tmp/tmpkfa4b53f.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    binary_string += \"0\"\n    binary_string +=\
    \ \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string \nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo3y2cvyu.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo3y2cvyu.jl:1\n\
    in expression starting at /tmp/tmpo3y2cvyu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to hexadecimal format. The function should return a string,\
    \ with each character representing a hexadecimal number. Each character in the\
    \ string will be 0-9 or A-F. The function should also handle negative numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpitcvfmvp.jl:21\nin expression starting at\
    \ /tmp/tmpitcvfmvp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = \"0\" + binary_string\n        decimal\
    \ = decimal / 2\n    \n    binary_string = \"db\" + binary_string\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9mxb6vur.jl:29\nin expression starting at\
    \ /tmp/tmp9mxb6vur.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        binary = binary + \"0\"\n        decimal = decimal\
    \ // 2\n        \n    binary = binary + \"1\"\n    \n    return binary\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string and\
    \ return a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpex9k7ark.jl:27\nin expression starting at\
    \ /tmp/tmpex9k7ark.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    # Your code here\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that will convert a decimal number to a binary number in\
    \ reverse order. For example,\n    decimal_to_binary(15) = \"1111\"\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3y9ryqw1.jl:20\nin expression starting at\
    \ /tmp/tmp3y9ryqw1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ < 10\n        binary = \"0\"\n    else\n        binary = \"1\"\n    end\n  \
    \  \n    binary = binary + decimal_to_binary(decimal / 2)\n    \n    return binary\
    \ + binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nProblem\
    \ 4\nWrite a function that converts a binary number to a decimal number. The function\
    \ should take in a string\nwith each character representing a binary number and\
    \ return the decimal equivalent of the binary number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptribh5jl.jl:31\nin expression starting at\
    \ /tmp/tmptribh5jl.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    binary_string += \"0\"\n    binary_string +=\
    \ \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string \nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqj_0oz26.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqj_0oz26.jl:1\n\
    in expression starting at /tmp/tmpqj_0oz26.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    if decimal < 10\n        binary = string(decimal, \"b\")\n    else\n    \
    \    binary = string(decimal % 2, \"b\") + string(decimal / 2, \"b\")\n    end\n\
    \    \n    return binary\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ converts a binary number to decimal form. Your function should take in a string\
    \ and return a string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2zg7hse_.jl:28\nin expression starting at\
    \ /tmp/tmp2zg7hse_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     decimal = decimal / 2\n        binary = binary + \"0\"\n    end\n    binary\
    \ = binary + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp61ad83im.jl:22\nin expression starting at\
    \ /tmp/tmp61ad83im.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return binary_string\n    \n    binary_string = \"db\"\n    \n    while\
    \ decimal > 1\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal - 1\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0aa_zzjf.jl:29\nin expression starting at\
    \ /tmp/tmp0aa_zzjf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzwwhvy37.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzwwhvy37.jl:1\n\
    in expression starting at /tmp/tmpzwwhvy37.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    binary_string += \"0\"\n    \n    for\
    \ i in decimal_to_binary(decimal - 1):\n        binary_string += \"1\"\n    \n\
    \    binary_string += \"0\"\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a binary string\
    \ and return a decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2rifh_yg.jl:18\nin expression starting at\
    \ /tmp/tmp2rifh_yg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 \n        binary = binary\
    \ + \"0\"\n    elseif decimal < 16 \n        binary = binary + \"1\"\n    elseif\
    \ decimal < 256 \n        binary = binary + \"db\"\n    elseif decimal < 65536\
    \ \n        binary = binary + \"db\"\n    elseif decimal < 4294967296 \n     \
    \   binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n   \
    \     binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n  \
    \      binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 9223372036854775808 \n\
    \        binary = binary + \"db\"\n    elseif decimal < 18446744073709551616 \n\
    \        bin\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph8nkwpwz.jl:1\nin expression starting at /tmp/tmph8nkwpwz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy5ayw9jd.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy5ayw9jd.jl:1\n\
    in expression starting at /tmp/tmpy5ayw9jd.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvtszp6qz.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvtszp6qz.jl:1\n\
    in expression starting at /tmp/tmpvtszp6qz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        decimal = -decimal\n\
    \        binary = reverse binary\n    end\n    \n    while decimal > 0\n     \
    \   binary = binary + string(decimal % 2)\n        decimal = decimal / 2\n   \
    \ end\n    \n    binary = binary + string(decimal)\n    \n    binary = reverse\
    \ binary\n    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"binary\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphiagpx2y.jl:18\nin expression starting at /tmp/tmphiagpx2y.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\"\n    \n    binary_string += decimal_to_binary(decimal\
    \ / 2)\n    binary_string += decimal_to_binary(decimal % 2)\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0sysmy1o.jl:27\nin expression starting at\
    \ /tmp/tmp0sysmy1o.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. \nThe function should take in a string\
    \ and return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptf3xevp3.jl:22\nin expression starting at\
    \ /tmp/tmptf3xevp3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    decimal = decimal / 2\n    \n    while decimal > 0\n        binary\
    \ = binary + \"1\"\n        decimal = decimal - 1\n    \n    binary = binary +\
    \ \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nProblem\
    \ 4\nWrite a function that will take in a string and return the number of characters\
    \ in that string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp4y2_j6p.jl:35\nin expression starting at\
    \ /tmp/tmpp4y2_j6p.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid decimal number\"\n    end\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbaglsqa6.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbaglsqa6.jl:1\n\
    in expression starting at /tmp/tmpbaglsqa6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqxgoiyd7.jl:26\nin expression starting at\
    \ /tmp/tmpqxgoiyd7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2\n        binary_string\
    \ = \"0\"\n    else\n        binary_string = \"1\"\n    end\n    \n    binary_string\
    \ += decimal_to_binary(decimal - 2)\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for i in 0..decimal\n        binary_string\
    \ += \"0\"\n    end\n    \n    for i in 0..decimal\n        binary_string += \"\
    1\"\n    end\n    \n    return binary_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzj37tju4.jl:30\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzj37tju4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzj37tju4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzj37tju4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzj37tju4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzj37tju4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzj37tju4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzj37tju4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzj37tju4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzj37tju4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzj37tju4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzj37tju4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzj37tju4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzj37tju4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzj37tju4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm3xyr6aa.jl:22\nin expression starting at\
    \ /tmp/tmpm3xyr6aa.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n\
    \    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string with\
    \ each character representing a binary number and return the decimal number represented\
    \ by the binary number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qu6ucdt.jl:29\nin expression starting at\
    \ /tmp/tmp0qu6ucdt.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0\n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ % 2\n    \n    while decimal > 0\n        binary = binary + \"1\"\n        decimal\
    \ = decimal - 1\n    \n    binary = binary + \"db\"\n    \n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a decimal number to hexadecimal format. The function\
    \ should return a string, with each character representing a hexadecimal number.\
    \ Each character in the string will be 0-9 or A-F. There will be an extra couple\
    \ of characters '0x' at the beginning and at the end of the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf8616kf0.jl:35\nin expression starting at\
    \ /tmp/tmpf8616kf0.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    return binary_string +\
    \ \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a binary number to a decimal number. Your function\
    \ should take in a string with each character representing a binary number and\
    \ convert it to a decimal number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_pjwtj3g.jl:15\nin expression starting at /tmp/tmp_pjwtj3g.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvj5fbz3w.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvj5fbz3w.jl:1\n\
    in expression starting at /tmp/tmpvj5fbz3w.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    binary_string += \"db\"\
    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a binary string to a decimal string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpteoxmljk.jl:15\nin expression starting at /tmp/tmpteoxmljk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = \"1\"\n    else \n        binary_string = \"0\"\n    \n    binary_string +=\
    \ decimal_to_binary(decimal - 1)\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppecjmiv3.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppecjmiv3.jl:1\n\
    in expression starting at /tmp/tmppecjmiv3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if digit\
    \ == 0 or digit == 1:\n            binary_string += digit\n        else:\n   \
    \         binary_string += \"0\"\n    \n    return binary_string + \"db\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ewjn6m0.jl:16\nin expression starting at\
    \ /tmp/tmp6ewjn6m0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    \n    while decimal != 0\n\
    \        binary = binary + \"0\"\n        decimal = decimal / 2\n    end\n   \
    \ \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3taeb7s4.jl:25\nin expression starting at\
    \ /tmp/tmp3taeb7s4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    while decimal > 0\n\
    \        binary = binary + \"0\"\n        decimal = decimal - 1\n    \n    binary\
    \ = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps4_muqy2.jl:29\nin expression starting at\
    \ /tmp/tmps4_muqy2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else\n\
    \        binary_string = \"0\" + binary_string\n    end\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    end\n    \n    decimal\
    \ = decimal / 2\n    \n\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnmtj_ik4.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnmtj_ik4.jl:1\n\
    in expression starting at /tmp/tmpnmtj_ik4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        \n    return binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string with\
    \ binary numbers and return a string with decimal numbers.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1b2pbjc.jl:21\nin expression starting at\
    \ /tmp/tmpk1b2pbjc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = \"1\"\n        \n        for i in 0..decimal-1 do\n            binary_string\
    \ += \"0\"\n        end\n    end\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzr60fcte.jl:19\nin expression starting at /tmp/tmpzr60fcte.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp3ubyjf9.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp3ubyjf9.jl:1\n\
    in expression starting at /tmp/tmpp3ubyjf9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 1\n        binary_string\
    \ += \"1\"\n        \n        for i in decimal_to_binary(decimal - 1)\n      \
    \      binary_string += \"0\"\n        end\n    end\n    \n    return binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7oefa0ks.jl:31\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"\" == \"db0db\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp7oefa0ks.jl:31 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp7oefa0ks.jl:30\\ntest set: Error\
    \ During Test at /tmp/tmp7oefa0ks.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching +(::String,\
    \ ::String)\\n  Closest candidates are:\\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmp7oefa0ks.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7oefa0ks.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7oefa0ks.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp7oefa0ks.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(103) == \"db1100111db\"\\n  MethodError: no method matching +(::String,\
    \ ::String)\\n  Closest candidates are:\\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmp7oefa0ks.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7oefa0ks.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7oefa0ks.jl:30\\ntest set:\
    \ Error During Test at /tmp/t"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp7oefa0ks.jl:28\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0 do\n        binary = binary + \"0\"\n        decimal = decimal -\
    \ 1\n    end\n    \n    decimal = decimal % 2\n    \n    while decimal > 0 do\n\
    \        binary = binary + \"1\"\n        decimal = decimal - 1\n    end\n   \
    \ \n    binary = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to hexadecimal.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdwfh8vst.jl:18\nin expression starting at /tmp/tmpdwfh8vst.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpizbxi16n.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpizbxi16n.jl:1\n\
    in expression starting at /tmp/tmpizbxi16n.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else \n\
    \        binary_string = \"0\" + binary_string\n    \n    decimal_to_binary(decimal\
    \ / 2)\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp72pvbbor.jl:27\nin expression starting at\
    \ /tmp/tmp72pvbbor.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0qyk21cg.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0qyk21cg.jl:1\n\
    in expression starting at /tmp/tmp0qyk21cg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 \n        binary = \"0\"\
    \n    else \n        binary = \"1\"\n    \n    for x in decimal_to_binary(decimal\
    \ - 2)\n        binary = binary + \"0\"\n    \n    binary = binary + \"b\"\n \
    \   \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp7cnfgnoj.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7cnfgnoj.jl:1\n\
    in expression starting at /tmp/tmp7cnfgnoj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal == 0 \n        \n        return \"0\"\n    \n    else\
    \ if decimal < 0 \n        \n        return \"db\" + decimal_to_binary(-decimal)\n\
    \    \n    else \n        \n        binary = \"\"\n        \n        while decimal\
    \ > 0 \n            \n            binary = binary + \"0\"\n            \n    \
    \        decimal = decimal - 1\n            \n        while decimal != 0 \n  \
    \          \n            binary = binary + \"1\"\n            \n            decimal\
    \ = decimal - 1\n            \n        return binary\n    \nend\n</cell>\n<code\
    \ language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string with\
    \ each character representing a binary number and return a string with the decimal\
    \ number. There will be an extra couple of characters 'db' at the beginning and\
    \ at the end of the string. The extra characters are there to help with the format.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0iq2k_84.jl:18\nin expression starting at\
    \ /tmp/tmp0iq2k_84.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_2ij9oe6.jl:22\nin expression starting at\
    \ /tmp/tmp_2ij9oe6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n\
    \    \n    if decimal < 2\n        binary_string = \"0\"\n    end\n    \n    for\
    \ index in 1:64\n        if decimal % 2 == 0\n            binary_string += \"\
    1\"\n        else\n            binary_string += \"0\"\n        end\n        decimal\
    \ = decimal / 2\n    end\n    \n    binary_string += \"db\"\n    \n    return\
    \ binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpufce90y_.jl:42\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpufce90y_.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufce90y_.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufce90y_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpufce90y_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpufce90y_.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufce90y_.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufce90y_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpufce90y_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpufce90y_.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufce90y_.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufce90y_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpufce90y_.jl:45\n  Test threw exception\n  Expression:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpufce90y_.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal:\n        if digit == 0\
    \ or digit == 1:\n            binary_string += \"0\"\n        elif digit == 2:\n\
    \            binary_string += \"1\"\n        elif digit == 3:\n            binary_string\
    \ += \"10\"\n        elif digit == 4:\n            binary_string += \"11\"\n \
    \       elif digit == 5:\n            binary_string += \"100\"\n        elif digit\
    \ == 6:\n            binary_string += \"101\"\n        elif digit == 7:\n    \
    \        binary_string += \"110\"\n        elif digit == 8:\n            binary_string\
    \ += \"111\"\n        elif digit == 9:\n            binary_string += \"1000\"\n\
    \        elif digit == 10:\n            binary_string += \"1001\"\n        elif\
    \ digit == 11:\n            binary_string += \"1010\"\n        elif digit == 12:\n\
    \            binary_string += \"1011\"\n        elif digit == 13:\n          \
    \  binary_string += \"1100\"\n        elif digit == 14:\n            binary_string\
    \ += \"1101\"\n        elif digit == 15:\n            binary_string += \"1110\"\
    \n        elif digit == 16:\n            binary_string += \"1111\"\n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a string and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv047hm3k.jl:15\nin expression starting at\
    \ /tmp/tmpv047hm3k.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4hchep5a.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4hchep5a.jl:1\n\
    in expression starting at /tmp/tmp4hchep5a.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpph8v33ou.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpph8v33ou.jl:1\n\
    in expression starting at /tmp/tmpph8v33ou.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    if decimal < 0\n        error(\"Decimal\
    \ cannot be negative\")\n    end\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcd2eha2z.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcd2eha2z.jl:1\n\
    in expression starting at /tmp/tmpcd2eha2z.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    # Write your code here\n    \n \
    \   return binary_string\nend\n</cell>\n<text>\nRun the cell below to test your\
    \ function.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxk2fh_3r.jl:20\nin expression starting at\
    \ /tmp/tmpxk2fh_3r.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    if decimal < 2\n        binary = \"0\"\n    end\n    \n    for index in 1:64\n\
    \        if decimal % 2 == 0\n            binary = binary + \"0\"\n        else\n\
    \            binary = binary + \"1\"\n        end\n        decimal = decimal /\
    \ 2\n    end\n    \n    binary = binary + \"db\"\n    \n    return binary\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to hexadecimal format.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvhbcmf4g.jl:37\nin expression starting at\
    \ /tmp/tmpvhbcmf4g.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal // 2\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4gkfc9k9.jl:29\nin expression starting at\
    \ /tmp/tmp4gkfc9k9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\" * decimal\n    \n    return binary_string\nend\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpijt_t88g.jl:24\nin expression starting at\
    \ /tmp/tmpijt_t88g.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    while decimal > 0 \n     \
    \   decimal = decimal / 2\n        binary = binary + \"0\"\n    \n    binary =\
    \ binary + \"b\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp93xo6ob5.jl:33\nin expression starting at\
    \ /tmp/tmp93xo6ob5.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    if decimal < 10\n        binary = string(decimal, \"b\")\n    else\n\
    \        binary = string(decimal, \"b\")\n        \n        binary = string(64\
    \ - decimal, \"b\") + binary\n    end\n    \n    return binary\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that converts a binary string to a decimal\
    \ string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn4s10802.jl:30\nin expression starting at\
    \ /tmp/tmpn4s10802.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     decimal = decimal // 2\n        binary += \"0\"\n    end\n    binary +=\
    \ \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpayigcufr.jl:22\nin expression starting at\
    \ /tmp/tmpayigcufr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return binary_string\n    \n    binary_string = \"db\"\n    \n    while\
    \ decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9z9_oidb.jl:1\nin expression starting at /tmp/tmp9z9_oidb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid Input\"\n        return binary_string\n   \
    \ end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvx94a4da.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvx94a4da.jl:1\n\
    in expression starting at /tmp/tmpvx94a4da.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n\
    \    end\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n\
    <text>\nNow let's test our function\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzscu8ub7.jl:27\nin expression starting at\
    \ /tmp/tmpzscu8ub7.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n\
    \    \n    binary = binary + \"1\"\n    \n    if decimal != 0\n        binary\
    \ = binary + \"0\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts binary numbers to decimal\
    \ numbers. A binary number consists of 1's and 0's.\n    Each binary digit represents\
    \ 4 bits. For example, the binary number 0100 represents 4 decimal digits.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt59bf3ym.jl:32\nin expression starting at\
    \ /tmp/tmpt59bf3ym.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp58l28zmy.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp58l28zmy.jl:1\n\
    in expression starting at /tmp/tmp58l28zmy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0 or digit == 1:\n            binary_string += \"0\"\n        else:\n\
    \            binary_string += \"1\"\n    \n    return binary_string + \"db\"\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ys3y1e_.jl:17\nin expression starting at\
    \ /tmp/tmp0ys3y1e_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary += i\n    \n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp32ay_i9y.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp32ay_i9y.jl:1\n\
    in expression starting at /tmp/tmp32ay_i9y.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    binary = binary + \"b\"\n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. \nThe function should take in a binary\
    \ string and return a decimal number. \nThe function should ignore the extra characters\
    \ 'db' at the beginning and end of the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpti00zx5n.jl:22\nin expression starting at\
    \ /tmp/tmpti00zx5n.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7s5v8wag.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7s5v8wag.jl:1\n\
    in expression starting at /tmp/tmp7s5v8wag.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1fy8za5g.jl:22\nin expression starting at\
    \ /tmp/tmp1fy8za5g.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal:\n        \n        if\
    \ i == 1:\n            binary += \"1\"\n        \n        elif i == 0:\n     \
    \       binary += \"0\"\n        \n        else:\n            binary += \"0\"\n\
    \            binary += \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ its binary equivalent in reverse order. For example,\n    decimal_to_binary_reverse(15)\
    \ should return \"1111\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfckftkt3.jl:17\nin expression starting at\
    \ /tmp/tmpfckftkt3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    decimal = decimal % 2\n    while decimal !=\
    \ 0\n        binary_string += \"0\"\n        decimal = decimal / 2\n    binary_string\
    \ += \"1\"\n    return binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuqb6hbv6.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuqb6hbv6.jl:1\n\
    in expression starting at /tmp/tmpuqb6hbv6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary\
    \ + \"1\"\n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that converts binary to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy8gg3dto.jl:22\nin expression starting at\
    \ /tmp/tmpy8gg3dto.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal // 2\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a string with each character representing a binary number.\
    \ The function should return the decimal number represented by the binary number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe273jz_u.jl:29\nin expression starting at\
    \ /tmp/tmpe273jz_u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpis9na_ri.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpis9na_ri.jl:1\n\
    in expression starting at /tmp/tmpis9na_ri.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary += i\n    end\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpryf6u0m1.jl:22\nin expression starting at\
    \ /tmp/tmpryf6u0m1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    if decimal < 10\n        binary = \"0\"\
    \n    \n    else if decimal < 16\n        binary = \"1\"\n    \n    else\n   \
    \     decimal = decimal - 10\n        \n        while decimal >= 2\n         \
    \   decimal = decimal / 2\n            binary = \"1\" + binary\n        \n   \
    \     binary = \"0\" + binary\n        \n    return binary + \"db\"\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 3\nWrite a function that converts\
    \ a decimal number to hexadecimal format. The function should return a string,\
    \ with each character representing a hexadecimal number. Each character in the\
    \ string will be 0-9 or A-F. The function should return an error if the decimal\
    \ number is not in the correct format.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi33qwgis.jl:22\nin expression starting at\
    \ /tmp/tmpi33qwgis.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    end\n    \n    decimal = decimal % 2\n    \n\
    \    for _ in 0..(decimal - 1)\n        binary += \"0\"\n    end\n    \n    for\
    \ _ in 0..(decimal - 1)\n        binary += \"1\"\n    end\n    \n    return binary\
    \ + \"db\"\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts a\
    \ binary number to decimal form. The function should take in a string as input\
    \ and return a string as output. The function should return an error if the input\
    \ is not in binary format. The function should return an error if the input contains\
    \ more than 64 characters. Each character in the string will be either '0' or\
    \ '1'.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3de0n2ei.jl:32\nin expression starting at\
    \ /tmp/tmp3de0n2ei.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = \"1\"\n    else \n        binary_string = \"0\"\n    \n    binary_string +=\
    \ decimal_to_binary(decimal - 1)\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp37rmox0b.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp37rmox0b.jl:1\n\
    in expression starting at /tmp/tmp37rmox0b.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    # Your code here\n    \n    return binary_string\n\
    end\n</cell>\n<text>\nNow let's test your function\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv12o86rp.jl:19\nin expression starting at\
    \ /tmp/tmpv12o86rp.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    if decimal < 10\n        binary = string(decimal, \"b\")\n    else\n    \
    \    binary = string(decimal - 10, \"b\") + string(10, \"b\")\n    end\n    \n\
    \    binary = string(64 - binary.length, \"b\") + binary\n    \n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp04w122pc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp04w122pc.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp04w122pc.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp04w122pc.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp04w122pc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp04w122pc.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp04w122pc.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp04w122pc.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp04w122pc.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp04w122pc.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp04w122pc.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp04w122pc.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp04w122pc.jl:38\n  Test threw exception\n  Expression:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04w122pc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2\n        binary = binary\
    \ + \"0\"\n    else\n        binary = binary + \"1\"\n    \n    decimal = decimal\
    \ % 2\n    \n    while decimal > 0\n        decimal = decimal / 2\n        binary\
    \ = binary + \"0\"\n    \n    binary = binary + \"b\"\n    \n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a decimal number to binary and returns the string in\
    \ reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp413mcj1b.jl:31\nin expression starting at\
    \ /tmp/tmp413mcj1b.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    if decimal < 2\n        binary = \"0\"\n    end\n    \n    for digit\
    \ in decimal_to_binary(decimal - 2)\n        binary += \"1\"\n    end\n    \n\
    \    return binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that will convert a decimal number to a binary number with\
    \ leading zeros. For example the decimal number 15 should return \"00000000011111\"\
    .\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbe583nz8.jl:30\nin expression starting at\
    \ /tmp/tmpbe583nz8.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to a decimal number. The function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnq2g0ocu.jl:22\nin expression starting at\
    \ /tmp/tmpnq2g0ocu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary_string += \"1\"\n    else\n        binary_string += \"\
    0\"\n    end\n    \n    binary_string += decimal_to_binary(decimal / 2)\n    \n\
    \    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a binary number to a decimal number. The function\
    \ should take in a binary string and return a decimal number. The decimal number\
    \ should be the sum of the digits in the binary string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6q3c5b8n.jl:27\nin expression starting at\
    \ /tmp/tmp6q3c5b8n.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    binary_string += \"db\"\n    binary_string +=\
    \ decimal_to_binary(decimal / 2)\n    binary_string += decimal_to_binary(decimal\
    \ % 2)\n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph0vx7flk.jl:19\nin expression starting at\
    \ /tmp/tmph0vx7flk.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid decimal number\")\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwynfvpf3.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwynfvpf3.jl:1\n\
    in expression starting at /tmp/tmpwynfvpf3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0 or digit == 1:\n            binary_string += \"0\"\n        elif\
    \ digit == 2:\n            binary_string += \"1\"\n        elif digit == 3:\n\
    \            binary_string += \"10\"\n        elif digit == 4:\n            binary_string\
    \ += \"11\"\n        elif digit == 5:\n            binary_string += \"100\"\n\
    \        elif digit == 6:\n            binary_string += \"101\"\n        elif\
    \ digit == 7:\n            binary_string += \"110\"\n        elif digit == 8:\n\
    \            binary_string += \"111\"\n        elif digit == 9:\n            binary_string\
    \ += \"1000\"\n        elif digit == 10:\n            binary_string += \"1001\"\
    \n        elif digit == 11:\n            binary_string += \"1010\"\n        elif\
    \ digit == 12:\n            binary_string += \"1011\"\n        elif digit == 13:\n\
    \            binary_string += \"1100\"\n        elif digit == 14:\n          \
    \  binary_string += \"1101\"\n        elif digit == 15:\n            binary_string\
    \ += \"1110\"\n        elif digit == 16:\n            binary_string += \"1111\"\
    \n        elif digit == 17:\n            binary_string += \"10010\"\n        elif\
    \ digit == 18:\n            binary_string += \"10011\"\n        elif digit ==\
    \ 19:\n            binary_string += \"10100\"\n        elif digit == 20:\n   \
    \         binary_string += \"10101\"\n        elif digit == 21:\n            binary_string\
    \ += \"10110\"\n        elif digit == 22:\n            binary_string += \"10111\"\
    \n        elif digit == 23:\n            binary_string += \"11100\"\n        elif\
    \ digit == 24:\n            binary_string += \"11101\"\n        elif digit ==\
    \ 25:\n            binary_string += \"11110\"\n        elif digit == 26:\n   \
    \         binary_string += \"11111\"\n        elif digit == 27:\n            binary_string\
    \ += \"100010\"\n        elif digit == 28:\n            binary_string += \"100011\"\
    \n        elif digit == 29:\n            binary_string += \"100100\"\n       \
    \ elif digit == 30:\n            binary_string += \"100101\"\n        elif digit\
    \ == 31:\n            binary_string += \"100110\"\n        elif digit == 32:\n\
    \            binary_string += \"100111\"\n        elif digit == 33:\n        \
    \    binary_string += \"101000\"\n        elif digit == 34:\n            binary_string\
    \ += \"101001\"\n        elif digit == 35:\n            binary_string += \"101010\"\
    \n        elif digit == 36:\n            binary_string += \"101011\"\n       \
    \ elif digit == 37:\n            binary_string += \"101100\"\n        elif digit\
    \ == 38:\n            binary_string += \"101101\"\n        elif digit == 39:\n\
    \            binary_string \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1360t0u7.jl:17\nin expression starting at\
    \ /tmp/tmp1360t0u7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    decimal = decimal % 2\n    while decimal > 0\
    \ do\n        binary_string = binary_string + \"0\"\n        decimal = decimal\
    \ - 1\n    end\n    binary_string = binary_string + \"1\"\n    binary_string =\
    \ \"db\" + binary_string\n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp977eke_q.jl:15\nin expression starting at /tmp/tmp977eke_q.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    decimal = decimal % 2\n    while decimal !=\
    \ 0\n        binary_string += \"0\"\n        decimal = decimal // 2\n    binary_string\
    \ += \"1\"\n    binary_string += \"db\"\n    binary_string += binary_string\n\
    \    binary_string += binary_string\n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. For example, binary_to_decimal(\"0100\"\
    ) should return 16.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3eew0src.jl:24\nin expression starting at\
    \ /tmp/tmp3eew0src.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else \n\
    \        binary_string = \"0\" + binary_string\n    \n    binary_string = binary_string\
    \ + decimal_to_binary(decimal / 2)\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_1bjfp5u.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_1bjfp5u.jl:1\n\
    in expression starting at /tmp/tmp_1bjfp5u.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpiz1opf29.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpiz1opf29.jl:1\n\
    in expression starting at /tmp/tmpiz1opf29.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid input\")\n    end\n    \n    for digit in reverse(digits(decimal))\n\
    \        if digit == 1\n            binary_string += \"1\"\n        else\n   \
    \         binary_string += \"0\"\n        end\n    end\n    \n    return \"db\"\
    \ + binary_string + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2xwtjefd.jl:30\nin expression starting at\
    \ /tmp/tmp2xwtjefd.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 \n        binary_string\
    \ = \"0\"\n    else \n        binary_string = \"1\"\n    \n    binary_string +=\
    \ decimal_to_binary(decimal - 2)\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptygckm8n.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptygckm8n.jl:1\n\
    in expression starting at /tmp/tmptygckm8n.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm1ibxbpk.jl:16\nin expression starting at /tmp/tmpm1ibxbpk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpht2ygqia.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpht2ygqia.jl:1\n\
    in expression starting at /tmp/tmpht2ygqia.jl:1\n"
  exit_code: 1
  status: SyntaxError

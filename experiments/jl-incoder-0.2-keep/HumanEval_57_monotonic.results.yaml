name: HumanEval_57_monotonic
language: julia
results:
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4w6f3e3q.jl:19\nin expression starting at\
    \ /tmp/tmp4w6f3e3q.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqsqhoyu7.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqsqhoyu7.jl:1\n\
    in expression starting at /tmp/tmpqsqhoyu7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    l = sort(l)\n    l = l[end:-1:1]\n    return all(l[i] > l[i+1] for\
    \ i in 2:end-1)\nend\n</cell>\n<code language=julia-1.3>\n@test monotonic([4,\
    \ 1, 0, -10])\n</cell>\n<text>\nExercise\nWrite a function that returns the first\
    \ element of a list that satisfies a predicate p.\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn16wdyvs.jl:15\nin expression\
    \ starting at /tmp/tmpn16wdyvs.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8bt2dwy0.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8bt2dwy0.jl:1\n\
    in expression starting at /tmp/tmp8bt2dwy0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzlyv7h48.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzlyv7h48.jl:1\n\
    in expression starting at /tmp/tmpzlyv7h48.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpidfaqoo1.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpidfaqoo1.jl:1\n\
    in expression starting at /tmp/tmpidfaqoo1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2]\n  \
    \      return true\n    elseif l[1] > l[2]\n        return false\n    else\n \
    \       return true\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpefi0ko1u.jl:19\nin expression starting at\
    \ /tmp/tmpefi0ko1u.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfoa3ofaw.jl:1\nin expression starting at /tmp/tmpfoa3ofaw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n   \
    \     return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[2] < l[3] \n        return true\n    end\n    \n    if\
    \ l[2] > l[3] \n        return false\n    end\n    \n    if l[3] < l[4] \n   \
    \     return true\n    end\n    \n    if l[3] > l[4] \n        return false\n\
    \    end\n    \n    if l[4] < l[5] \n        return true\n    end\n    \n    if\
    \ l[4] > l[5] \n        return false\n    end\n    \n    if l[5] < l[6] \n   \
    \     return true\n    end\n    \n    if l[5] > l[6] \n        return false\n\
    \    end\n    \n    if l[6] < l[7] \n        return true\n    end\n    \n    if\
    \ l[6] > l[7] \n        return false\n    end\n    \n    if l[7] < l[8] \n   \
    \     return true\n    end\n    \n    if l[7] > l[8] \n        return false\n\
    \    end\n    \n    if l[8] < l[9] \n        return true\n    end\n    \n    if\
    \ l[8] > l[9] \n        return false\n    end\n    \n    if l[9] < l[10] \n  \
    \      return true\n    end\n    \n    if l[9] > l[10] \n        return false\n\
    \    end\n    \n    if l[10] < l[11] \n        return true\n    end\n    \n  \
    \  if l[10] > l[11] \n        return false\n    end\n    \n    if l[11] < l[12]\
    \ \n        return true\n    end\n    \n    if l[11] > l[12] \n        return\
    \ false\n    end\n    \n    if l[12] < l[13] \n        return true\n    end\n\
    \    \n    if l[12] > l[13] \n        return false\n    end\n    \n    if l[13]\
    \ < l[14] \n        return true\n    end\n    \n    if l[13] > l[14] \n      \
    \  return false\n    end\n    \n    if l[14] < l[15] \n        return true\n \
    \   end\n    \n    if l[14] > l[15] \n        return false\n    end\n    \n  \
    \  if l[15] < l[16] \n        return true\n    end\n    \n    if l[15] > l[16]\
    \ \n        return false\n    end\n    \n    if l[16] < l[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxqcbok1z.jl:1\nin expression starting at /tmp/tmpxqcbok1z.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnv28vk_u.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnv28vk_u.jl:1\n\
    in expression starting at /tmp/tmpnv28vk_u.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0xy72__u.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0xy72__u.jl:1\n\
    in expression starting at /tmp/tmp0xy72__u.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       true\n    elseif l[2] < l[1] \n        false\n    else\n        true\n\
    \    end\nend\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work for `monotonic([1,4,2,5])`\
    \ because `l[1] < l[2]` returns `true` but `l[2] < l[1]` returns `false`\n<|/\
    \ c |>\n<| c |>\nI fixed the code by changing `l[1] < l[2]` to `l[1] < l[2]` and\
    \ `l[2] < l[1]` to `l[2] < l[1]`\n<|/ c |>\n<| c |>\nThis doesn't work for `monotonic([1,4,2,5])`\
    \ because `l[1] < l[2]` returns `true` but `l[2] < l[1]` returns `false`\n<|/\
    \ c |>\n<| c |>\nI fixed the code by changing `l[1] < l[2]` to `l[1] < l[2]` and\
    \ `l[2] < l[1]` to `l[2] < l[1]`\n<|/ c |>\n<| a dscore=4 |>\nI wrote a package\
    \ that does this for you:\n<code>\njulia> using LinearAlgebra\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv5d11rpz.jl:19\nin expression starting at\
    \ /tmp/tmpv5d11rpz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpap324bsm.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpap324bsm.jl:1\n\
    in expression starting at /tmp/tmpap324bsm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo921irh4.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo921irh4.jl:1\n\
    in expression starting at /tmp/tmpo921irh4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] || l[2]\
    \ < l[1]\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphwdh26sf.jl:24\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwdh26sf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwdh26sf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphwdh26sf.jl:27\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwdh26sf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwdh26sf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphwdh26sf.jl:29\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwdh26sf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwdh26sf.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphwdh26sf.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpc6x2zgyt.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpc6x2zgyt.jl:1\n\
    in expression starting at /tmp/tmpc6x2zgyt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb30r08qe.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb30r08qe.jl:1\n\
    in expression starting at /tmp/tmpb30r08qe.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjvyin9pu.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjvyin9pu.jl:1\n\
    in expression starting at /tmp/tmpjvyin9pu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   if l[1] < l[2] || l[2] < l[1]\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpubhsvxvk.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpubhsvxvk.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubhsvxvk.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpubhsvxvk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpubhsvxvk.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpubhsvxvk.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubhsvxvk.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpubhsvxvk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpubhsvxvk.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpubhsvxvk.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubhsvxvk.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpubhsvxvk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpubhsvxvk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpubhsvxvk.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubhsvxvk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptm4ttfu8.jl:1\nin expression starting at /tmp/tmptm4ttfu8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[2]\n        true\n    elseif l[1] > l[2]\n        false\n    else\n\
    \        monotonic(l)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnsga0l_6.jl:25\\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpnsga0l_6.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpnsga0l_6.jl:24\\ntest set: Test\
    \ Failed at /tmp/tmpnsga0l_6.jl:26\\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpnsga0l_6.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpnsga0l_6.jl:24\\ntest set: Test\
    \ Failed at /tmp/tmpnsga0l_6.jl:28\\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpnsga0l_6.jl:28 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpnsga0l_6.jl:24\\ntest set: Test\
    \ Failed at /tmp/tmpnsga0l_6.jl:29\\n  Expression: candidate([4, 1, 1, 0]) ==\
    \ true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpnsga0l_6.jl:29 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpnsga0l_6.jl:24\\ntest set: Test\
    \ Failed at /tmp/tmpnsga0l_6.jl:31\\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9fq8e2ob.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9fq8e2ob.jl:1\n\
    in expression starting at /tmp/tmp9fq8e2ob.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[2] || l[2] < l[1]\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpti0k984s.jl:18\nin expression starting at\
    \ /tmp/tmpti0k984s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        true\n \
    \   elseif length(l) == 1 \n        l == l[1]\n    else\n        l == sort(l)[1]\n\
    \    end\nend\n</cell>\n<text>\nThe function monotonic returns true if the list\
    \ elements are monotonically increasing or decreasing.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphit2_1ad.jl:18\nin expression starting at\
    \ /tmp/tmphit2_1ad.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkfg0ohor.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkfg0ohor.jl:1\n\
    in expression starting at /tmp/tmpkfg0ohor.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2]\n  \
    \      return true\n    elseif l[1] > l[2]\n        return false\n    else\n \
    \       return true\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nI like\
    \ the idea of using sort. However, the sort function does not sort the list in-place.\
    \ Instead, it returns a new sorted list. Thus, your function will always return\
    \ true.\n<|/ c |>\n<| c |>\nYes, you are right. I've edited my answer to fix the\
    \ problem.\n<|/ c |>\n<| a tags=julia |>\nHere's a solution using sort!:\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9h1xus_a.jl:19\nin expression starting at\
    \ /tmp/tmp9h1xus_a.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0]\n        return true\n    end\n    \n    if\
    \ l[1] > l[end]\n        return true\n    end\n    \n    if l[end] < l[1]\n  \
    \      return true\n    end\n    \n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcq3sc7_d.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  BoundsError: attempt to access\
    \ 4-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpcq3sc7_d.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcq3sc7_d.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcq3sc7_d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpcq3sc7_d.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpcq3sc7_d.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcq3sc7_d.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcq3sc7_d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpcq3sc7_d.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpcq3sc7_d.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcq3sc7_d.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcq3sc7_d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcq3sc7_d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm0b7_l50.jl:19\nin expression starting at\
    \ /tmp/tmpm0b7_l50.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6lc2bbuj.jl:42\nin expression starting at\
    \ /tmp/tmp6lc2bbuj.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    i = 2\n    while i\
    \ < length(l)\n        if l[i] < l[i-1] \n            return false\n        i\
    \ += 1\n    end\n    return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\
    \"Return True is list elements are monotonically increasing or decreasing.\n \
    \   >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv1opojaz.jl:24\nin expression starting at\
    \ /tmp/tmpv1opojaz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] <= l[i+1] for i in 1:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpos7wdegq.jl:14\nin expression starting at\
    \ /tmp/tmpos7wdegq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[2] || l[2] < l[1]\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp85_u4hsx.jl:18\nin expression starting at\
    \ /tmp/tmp85_u4hsx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7goe7ojq.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7goe7ojq.jl:1\n\
    in expression starting at /tmp/tmp7goe7ojq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr2mbiwuh.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr2mbiwuh.jl:1\n\
    in expression starting at /tmp/tmpr2mbiwuh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9tbp2xx4.jl:1\nin expression starting at /tmp/tmp9tbp2xx4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpae40z94h.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpae40z94h.jl:1\n\
    in expression starting at /tmp/tmpae40z94h.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkh36p4dp.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkh36p4dp.jl:1\n\
    in expression starting at /tmp/tmpkh36p4dp.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7_fhn3em.jl:1\nin expression starting at /tmp/tmp7_fhn3em.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n    \
    \    return true\n    end\n    \n    if l[4] < l[1] \n        return true\n  \
    \  end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe2hzzv1k.jl:32\nin expression starting at\
    \ /tmp/tmpe2hzzv1k.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph2xoe4vj.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph2xoe4vj.jl:1\n\
    in expression starting at /tmp/tmph2xoe4vj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwcoi6hc8.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwcoi6hc8.jl:1\n\
    in expression starting at /tmp/tmpwcoi6hc8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp49lz_5tl.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp49lz_5tl.jl:1\n\
    in expression starting at /tmp/tmp49lz_5tl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp07lfprv8.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp07lfprv8.jl:1\n\
    in expression starting at /tmp/tmp07lfprv8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpifry2gld.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpifry2gld.jl:1\n\
    in expression starting at /tmp/tmpifry2gld.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n\
    \    l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[2:\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6m3lvijx.jl:42\nin expression starting at\
    \ /tmp/tmp6m3lvijx.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprqbuunj6.jl:1\nin expression starting at /tmp/tmprqbuunj6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzt61og78.jl:19\nin expression starting at\
    \ /tmp/tmpzt61og78.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8tzgx0aw.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8tzgx0aw.jl:1\n\
    in expression starting at /tmp/tmp8tzgx0aw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxo5ian3d.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxo5ian3d.jl:1\n\
    in expression starting at /tmp/tmpxo5ian3d.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] == l[2] \n\
    \        return true\n    end\n    \n    if l[1] > l[2] \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt47ry5bb.jl:36\nin expression starting at\
    \ /tmp/tmpt47ry5bb.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx0k5da05.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx0k5da05.jl:1\n\
    in expression starting at /tmp/tmpx0k5da05.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   return all(l[i] > l[i+1] for i in 2:end-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuvpybw1l.jl:12\nin expression\
    \ starting at /tmp/tmpuvpybw1l.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcu8ir_m0.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcu8ir_m0.jl:1\n\
    in expression starting at /tmp/tmpcu8ir_m0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .>\
    \ 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeg6zt33k.jl:1\nin expression starting at /tmp/tmpeg6zt33k.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk5f7pckx.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk5f7pckx.jl:1\n\
    in expression starting at /tmp/tmpk5f7pckx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] == l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n      \
    \  return true\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo3n4n0s9.jl:30\nin expression starting at\
    \ /tmp/tmpo3n4n0s9.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 1]\n    l = l[l\
    \ .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l =\
    \ l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n   \
    \ l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l \nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfjm8h85t.jl:1\nin expression starting at /tmp/tmpfjm8h85t.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] .> l[2:end])\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1,\
    \ 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ef_xy4m.jl:15\nin expression starting at\
    \ /tmp/tmp0ef_xy4m.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph3g8oc3o.jl:19\nin expression starting at\
    \ /tmp/tmph3g8oc3o.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[2] \n        return true\n    \n \
    \   return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph3srcia9.jl:24\nin expression starting at\
    \ /tmp/tmph3srcia9.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprha36ou6.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprha36ou6.jl:1\n\
    in expression starting at /tmp/tmprha36ou6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    return l\
    \ == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppvq739k2.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmppvq739k2.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppvq739k2.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppvq739k2.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppvq739k2.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmppvq739k2.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppvq739k2.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppvq739k2.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppvq739k2.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmppvq739k2.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppvq739k2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppvq739k2.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppvq739k2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmppvq739k2.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppvq739k2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] < l[i]\n            i += 1\n        elseif l[i-1]\
    \ > l[i]\n            i -= 1\n        else\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnyg8mske.jl:30\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyg8mske.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyg8mske.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpnyg8mske.jl:32\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyg8mske.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyg8mske.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpnyg8mske.jl:35\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyg8mske.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyg8mske.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnyg8mske.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] > l[2] \n   \
    \     return true\n    end\n    \n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm6n81huq.jl:35\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6n81huq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6n81huq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm6n81huq.jl:36\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6n81huq.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6n81huq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm6n81huq.jl:37\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6n81huq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6n81huq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm6n81huq.jl:38\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6n81huq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6n81huq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm6n81huq.jl:40\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm6n81huq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8wc3y0ec.jl:19\nin expression starting at\
    \ /tmp/tmp8wc3y0ec.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7d1nqu2o.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7d1nqu2o.jl:1\n\
    in expression starting at /tmp/tmp7d1nqu2o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ return monotonic(l[2:end])\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp94fhvnm4.jl:26\nin expression starting at\
    \ /tmp/tmp94fhvnm4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb1szmx0_.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb1szmx0_.jl:1\n\
    in expression starting at /tmp/tmpb1szmx0_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = l[end]\n    \n    if l<l[1] \n        return true\n  \
    \  end\n    \n    if l>l[end] \n        return false\n    end\n    \n    if l[1]<l[2]\
    \ \n        return true\n    end\n    \n    if l[2]>l[end] \n        return false\n\
    \    end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if\
    \ l[2]>l[end] \n        return false\n    end\n    \n    if l[1]<l[2] \n     \
    \   return true\n    end\n    \n    if l[2]>l[end] \n        return false\n  \
    \  end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end]\
    \ \n        return false\n    end\n    \n    if l[1]<l[2] \n        return true\n\
    \    end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n   \
    \ if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end] \n   \
    \     return false\n    end\n    \n    if l[1]<l[2] \n        return true\n  \
    \  end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n    if\
    \ l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end] \n      \
    \  return false\n    end\n    \n    if l[1]<l[2] \n        return true\n    end\n\
    \    \n    if l[2]>l[end] \n        return false\n    end\n    \n    if l[1]<l[2]\
    \ \n        return true\n    end\n    \n    if l[2]>l[end] \n        return false\n\
    \    end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if\
    \ l[2]>l[end] \n        return false\n    end\n    \n    if l[1]<l[2] \n     \
    \   return true\n    end\n    \n    if l[2]>l[end] \n        return false\n  \
    \  end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end]\
    \ \n        return false\n    end\n    \n    if l[1]<l[2] \n        return true\n\
    \    end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n   \
    \ if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end] \n   \
    \     return false\n    end\n    \n    if l[1]<l[2] \n        return true\n  \
    \  end\n    \n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx_4f238j.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx_4f238j.jl:1\n\
    in expression starting at /tmp/tmpx_4f238j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuzfa3q0o.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuzfa3q0o.jl:1\n\
    in expression starting at /tmp/tmpuzfa3q0o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    return false\nend\n\
    </cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv0n4pt4l.jl:30\nin expression starting at\
    \ /tmp/tmpv0n4pt4l.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5bmmak1w.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5bmmak1w.jl:1\n\
    in expression starting at /tmp/tmp5bmmak1w.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprbczz57c.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprbczz57c.jl:1\n\
    in expression starting at /tmp/tmprbczz57c.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpen2855sq.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpen2855sq.jl:1\n\
    in expression starting at /tmp/tmpen2855sq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg9cnwjkk.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg9cnwjkk.jl:1\n\
    in expression starting at /tmp/tmpg9cnwjkk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2is1i6g7.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2is1i6g7.jl:1\n\
    in expression starting at /tmp/tmp2is1i6g7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpws1guldm.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpws1guldm.jl:1\n\
    in expression starting at /tmp/tmpws1guldm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    if l[1] < l[end] \n        return true\n    \n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7obj3x3f.jl:1\nin expression starting at /tmp/tmp7obj3x3f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpckmj14ij.jl:1\nin expression starting at /tmp/tmpckmj14ij.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 1]\n    return l\
    \ == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpai3vf6sf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpai3vf6sf.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpai3vf6sf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpai3vf6sf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpai3vf6sf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpai3vf6sf.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpai3vf6sf.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpai3vf6sf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpai3vf6sf.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpai3vf6sf.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpai3vf6sf.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpai3vf6sf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpai3vf6sf.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpai3vf6sf.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpai3vf6sf.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpegff1kv8.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpegff1kv8.jl:1\n\
    in expression starting at /tmp/tmpegff1kv8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpznjn94bt.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpznjn94bt.jl:1\n\
    in expression starting at /tmp/tmpznjn94bt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgt2fnhqg.jl:19\nin expression starting at\
    \ /tmp/tmpgt2fnhqg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsrctozy3.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsrctozy3.jl:1\n\
    in expression starting at /tmp/tmpsrctozy3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmzo_w2dh.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmzo_w2dh.jl:1\n\
    in expression starting at /tmp/tmpmzo_w2dh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdz7o8kxm.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdz7o8kxm.jl:1\n\
    in expression starting at /tmp/tmpdz7o8kxm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n   \
    \     return true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n\
    \        return true\n    elseif l[1] > l[2] \n        return false\n    elseif\
    \ l[1] == l[2] \n        return true\n    end\n    \n    l = sort(l)\n    \n \
    \   if l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n        return\
    \ false\n    elseif l[1] == l[2] \n        return true\n    end\n    \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif l[1] > l[2]\
    \ \n        return false\n    elseif l[1] == l[2] \n        return true\n    end\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif\
    \ l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n        return\
    \ true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return\
    \ true\n    elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2]\
    \ \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2]\
    \ \n        return true\n    elseif l[1] > l[2] \n        return false\n    elseif\
    \ l[1] == l[2] \n        return true\n    end\n    \n    l = sort(l)\n    \n \
    \   if l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n        return\
    \ false\n    elseif l[1] == l[2] \n        return true\n    end\n    \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif l[1] > l[2]\
    \ \n        return false\n    elseif l[1] == l[2] \n        return true\n    end\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif\
    \ l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n        return\
    \ true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return\
    \ true\n    elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2]\
    \ \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2]\
    \ \n        return true\n    elseif l[1] > l[2] \n        return \nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2_bz3ysl.jl:1\nin expression starting at /tmp/tmp2_bz3ysl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpj7wulvr2.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpj7wulvr2.jl:1\n\
    in expression starting at /tmp/tmpj7wulvr2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpn0jr0p1e.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn0jr0p1e.jl:1\n\
    in expression starting at /tmp/tmpn0jr0p1e.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] <= l[i+1] for i in 2:length(l)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzgan2l2r.jl:19\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgan2l2r.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgan2l2r.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzgan2l2r.jl:20\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgan2l2r.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgan2l2r.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzgan2l2r.jl:22\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgan2l2r.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgan2l2r.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzgan2l2r.jl:23\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgan2l2r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgan2l2r.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzgan2l2r.jl:25\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzgan2l2r.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8r01l8h3.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8r01l8h3.jl:1\n\
    in expression starting at /tmp/tmp8r01l8h3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0]\n        return false\n    \n    if l[1] > l[end]\n\
    \        return true\n    \n    i = 2\n    while i < length(l)\n        if l[i]\
    \ > l[i-1]\n            return false\n        i += 1\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    True\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxsvjbed4.jl:27\nin expression starting at\
    \ /tmp/tmpxsvjbed4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvpougquh.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvpougquh.jl:1\n\
    in expression starting at /tmp/tmpvpougquh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = length(l) - 1\n\
    \    while i > 0 && l[i] > l[i-1]\n        i = i - 1\n    return i == 0\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpijgf0yxb.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpijgf0yxb.jl:1\n\
    in expression starting at /tmp/tmpijgf0yxb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = findfirst(x ->\
    \ x > 0, l)\n    j = findfirst(x -> x < 0, l)\n    k = findfirst(x -> x == 0,\
    \ l)\n    if i == j\n        return true\n    elseif i == k\n        return false\n\
    \    elseif j == k\n        return true\n    elseif j > i\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppks76jb9.jl:26\nin expression starting at\
    \ /tmp/tmppks76jb9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    if l[1] < l[2] \n        return true\n    \n    l\
    \ = sort(l)\n    if l[1] > l[2] \n        return true\n    \n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppcc_9l09.jl:23\nin expression starting at\
    \ /tmp/tmppcc_9l09.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    i = 2\n    while i\
    \ < length(l) \n        if l[i] < l[i-1] \n            return false\n        i\
    \ += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmpd_0w59cn.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd_0w59cn.jl:1\n\
    in expression starting at /tmp/tmpd_0w59cn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg9kwu4de.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg9kwu4de.jl:1\n\
    in expression starting at /tmp/tmpg9kwu4de.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxbjsxhcc.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxbjsxhcc.jl:1\n\
    in expression starting at /tmp/tmpxbjsxhcc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1pjzz2kb.jl:1\nin expression starting at /tmp/tmp1pjzz2kb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1qk3nw_q.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1qk3nw_q.jl:1\n\
    in expression starting at /tmp/tmp1qk3nw_q.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[2] || l[1] > l[3]\n        return false\n    elseif l[2] < l[1]\
    \ || l[2] > l[3]\n        return true\n    else\n        return false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgvqo16sn.jl:20\nin expression starting at\
    \ /tmp/tmpgvqo16sn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[0]\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of numbers and returns\
    \ the sum of the numbers. If the list is empty, return 0.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpof0wyvvo.jl:18\nin expression starting at\
    \ /tmp/tmpof0wyvvo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpql0j8hqv.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpql0j8hqv.jl:1\n\
    in expression starting at /tmp/tmpql0j8hqv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        true\n \
    \   elseif length(l) == 1 \n        l == l[1]\n    else\n        l == sort(l)[1]\n\
    \    end\nend\n</code>\n<|/ a dscore=2 |>\n<| a |>\nI wrote a package for Julia\
    \ that does this for you:\nhttps://github.com/jrwlk/monotonic\n<code>\nusing Monotonic\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91fea7rj.jl:18\nin expression starting at\
    \ /tmp/tmp91fea7rj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo0vdmu9l.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo0vdmu9l.jl:1\n\
    in expression starting at /tmp/tmpo0vdmu9l.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpehej_lg1.jl:1\nin expression starting at /tmp/tmpehej_lg1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyh_awjxz.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyh_awjxz.jl:1\n\
    in expression starting at /tmp/tmpyh_awjxz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp20h5oog2.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp20h5oog2.jl:1\n\
    in expression starting at /tmp/tmp20h5oog2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n\
    \        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif l[1] > l[2]\
    \ \n        true\n    elseif l[2] > l[1] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[2] < l[1] \n        false\n    elseif \nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing condition in \"elseif\" at /tmp/tmpvzwwee4m.jl:103\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpvzwwee4m.jl:104\nin expression\
    \ starting at /tmp/tmpvzwwee4m.jl:104\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       true\n    elseif l[1] > l[2] \n        false\n    else\n        monotonic(l[2:end-1])\
    \ \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvbphgu0e.jl:26\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvbphgu0e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvbphgu0e.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvbphgu0e.jl:29\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvbphgu0e.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvbphgu0e.jl:23\ntest set: Error\
    \ During Test at /tmp/tmpvbphgu0e.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([9, 9, 9, 9]) == true\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvbphgu0e.jl:11\n\
    \   [3] monotonic(l::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmpvbphgu0e.jl:16\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvbphgu0e.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvbphgu0e.jl:23\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    5     2      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvbphgu0e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] == l[2:end])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgj752znq.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj752znq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj752znq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgj752znq.jl:21\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj752znq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj752znq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgj752znq.jl:23\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj752znq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj752znq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgj752znq.jl:24\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj752znq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj752znq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgj752znq.jl:26\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgj752znq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-1:end]\n\
    \    if l[1] < l[2]\n        return true\n    elseif l[1] > l[2]\n        return\
    \ false\n    else\n        return l[1] < l[2]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp04deqh4_.jl:27\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04deqh4_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04deqh4_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp04deqh4_.jl:30\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04deqh4_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04deqh4_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp04deqh4_.jl:32\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04deqh4_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04deqh4_.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04deqh4_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0]\n        return false\n    \n    if l[1] > l[end]\n\
    \        return true\n    \n    i = 2\n    \n    while i < length(l) \n      \
    \  if l[i] < l[i-1]\n            return false\n        \n        if l[i] > l[end]\n\
    \            return true\n        \n        i = i + 1\n    end\n    \n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmps8b0tjo7.jl:21\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps8b0tjo7.jl:1\n\
    in expression starting at /tmp/tmps8b0tjo7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr2h91vum.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr2h91vum.jl:1\n\
    in expression starting at /tmp/tmpr2h91vum.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    \n    if l[1] < l[2]\n        return true\n    \n    if l[1] > l[2]\n   \
    \     return false\n    \n    i = 2\n    while i < length(l) \n        if l[i]\
    \ < l[i-1]\n            return true\n        \n        if l[i] > l[i-1]\n    \
    \        return false\n        \n        i = i + 1\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmpl09lg1pl.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl09lg1pl.jl:1\n\
    in expression starting at /tmp/tmpl09lg1pl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2co4ttu.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2co4ttu.jl:1\n\
    in expression starting at /tmp/tmpw2co4ttu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[2] < l[1] \n \
    \       return false\n    \n    i = 2\n    \n    while i < length(l) \n      \
    \  if l[i] < l[i-1] \n            return true\n        \n        if l[i] > l[i-1]\
    \ \n            return false\n        \n        i += 1\n    end\n    \n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements\
    \ are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    True\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7db0gm2z.jl:33\nin expression starting at\
    \ /tmp/tmp7db0gm2z.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa3p1363f.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa3p1363f.jl:1\n\
    in expression starting at /tmp/tmpa3p1363f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk5t60fd1.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk5t60fd1.jl:1\n\
    in expression starting at /tmp/tmpk5t60fd1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[1] \n        return false\n    end\n    \n    if l[1] > l[2] \n   \
    \     return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp51k869br.jl:28\nin expression starting at\
    \ /tmp/tmp51k869br.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] == l[2]\
    \ \n        if l[2] < l[3] \n            true\n        elseif l[2] > l[3] \n \
    \           false\n        elseif l[2] == l[3] \n            if l[3] < l[4] \n\
    \                true\n            elseif l[3] > l[4] \n                false\n\
    \            elseif l[3] == l[4] \n                if l[4] < l[5] \n         \
    \           true\n                elseif l[4] > l[5] \n                    false\n\
    \                elseif l[4] == l[5] \n                    if l[5] < l[6] \n \
    \                       true\n                    elseif l[5] > l[6] \n      \
    \                  false\n                    elseif l[5] == l[6] \n         \
    \               if l[6] < l[7] \n                            true\n          \
    \              elseif l[6] > l[7] \n                            false\n      \
    \                  elseif l[6] == l[7] \n                            if l[7] <\
    \ l[8] \n                                true\n                            elseif\
    \ l[7] > l[8] \n                                false\n                      \
    \      elseif l[7] == l[8] \n                                if l[8] < l[9] \n\
    \                                    true\n                                elseif\
    \ l[8] > l[9] \n                                    false\n                  \
    \              elseif l[8] == l[9] \n                                    if l[9]\
    \ < l[10] \n                                        true\n                   \
    \                 elseif l[9] > l[10] \n                                     \
    \   false\n                                    elseif l[9] == l[10] \n       \
    \                                 if l[10] < l[11] \n                        \
    \                    true\n                                        elseif l[10]\
    \ > l[11] \n                                            false\n              \
    \                          elseif l[10] == l[11] \n                          \
    \                  if l[11] < l[12] \n                                       \
    \         true\n                                            elseif l[11] > l[12]\
    \ \n                                                false\n                  \
    \                          elseif l[11] == l[12] \n                          \
    \                      if l[12] < l[13] \n                                   \
    \                 true\n                                                elseif\
    \ l[12] > l[13] \n                                                    false\n\
    \                                                elseif l[12] == l[13] \n    \
    \                                                if l[13] < l[14] \n         \
    \                                               true\n                       \
    \                             elseif l[13] > l[14] \n                        \
    \                                false\n                                     \
    \               elseif l[13] == l[14] \n                                     \
    \                   if l[14] < l[15] \n                                      \
    \                      true\n                                                \
    \        elseif l[14] > l[15] \n                                             \
    \               false\n                                                      \
    \  elseif l[14] == l[15] \n                                                  \
    \          if l[15] < l[16] \n                                               \
    \                 true\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm1hmlb9s.jl:1\nin expression starting at /tmp/tmpm1hmlb9s.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxruw2fn5.jl:1\nin expression starting at /tmp/tmpxruw2fn5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n \
    \       return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjb1e9gr2.jl:1\nin expression starting at /tmp/tmpjb1e9gr2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpayhgxylx.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpayhgxylx.jl:1\n\
    in expression starting at /tmp/tmpayhgxylx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1x2hqcu.jl:1\nin expression starting at /tmp/tmpk1x2hqcu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpomp6r_hf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpomp6r_hf.jl:1\n\
    in expression starting at /tmp/tmpomp6r_hf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpm5hng24a.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm5hng24a.jl:1\n\
    in expression starting at /tmp/tmpm5hng24a.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8ouxjv67.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8ouxjv67.jl:1\n\
    in expression starting at /tmp/tmp8ouxjv67.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplbrg9dc4.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplbrg9dc4.jl:1\n\
    in expression starting at /tmp/tmplbrg9dc4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    if l[1] < l[2] \n        return true\n    \n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbox8xih2.jl:1\nin expression starting at /tmp/tmpbox8xih2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_5862fiv.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_5862fiv.jl:1\n\
    in expression starting at /tmp/tmp_5862fiv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] < l[2:end])\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1,\
    \ 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpye9pktlu.jl:15\nin expression starting at\
    \ /tmp/tmpye9pktlu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpegcefkck.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpegcefkck.jl:1\n\
    in expression starting at /tmp/tmpegcefkck.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        i +=\
    \ 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmpf4qv8fr9.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf4qv8fr9.jl:1\n\
    in expression starting at /tmp/tmpf4qv8fr9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp84w22rhn.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp84w22rhn.jl:1\n\
    in expression starting at /tmp/tmp84w22rhn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfu1ttwi8.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfu1ttwi8.jl:1\n\
    in expression starting at /tmp/tmpfu1ttwi8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] <= l[i+1] for i in 1:end-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprea4llpn.jl:12\nin expression\
    \ starting at /tmp/tmprea4llpn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1] .>\
    \ l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg5z4rs_p.jl:42\nin expression starting at\
    \ /tmp/tmpg5z4rs_p.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] > l[2] \n   \
    \     return true\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7uqetwx3.jl:28\nin expression starting at\
    \ /tmp/tmp7uqetwx3.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    i = 2\n    while i < length(l)\n        if l[i]\
    \ > l[i-1]\n            return false\n        i += 1\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    True\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6khooxgz.jl:27\nin expression starting at\
    \ /tmp/tmp6khooxgz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n        return\
    \ false\n    elseif l[1]==l[2] \n        return l[1]==l[2]\n    elseif l[1] <\
    \ l[2] \n        return true\n    elseif l[1] > l[2] \n        return false\n\
    \    end\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if `l` is\
    \ an empty list. `l[end]` throws an error.\n<|/ c |>\n<| c |>\nI fixed the code\
    \ so it doesn't throw an error when `l` is an empty list.\n<|/ c |>\n<| c |>\n\
    This doesn't work for `l = [1, 2]`\n<|/ c |>\n<| c |>\nI fixed the code so it\
    \ doesn't throw an error when `l` is an empty list.\n<|/ c |>\n<| a tags=julia,sorting\
    \ |>\nThe answer by is correct, but I thought I'd add my own answer because I\
    \ wanted to show a more Julian way of doing this.\n<code>\njulia> function monotonic(l)\n\
    \           if length(l)==0\n               return true\n           elseif length(l)==1\n\
    \               return l[1]==l[2]\n           elseif l[1]<l[2]\n             \
    \  return true\n           elseif l[1]>l[2]\n               return false\n   \
    \        elseif l[1]==l[2]\n               return true\n           else\n    \
    \           return l[1]<l[2]\n           end\n       end\nmonotonic (generic function\
    \ with 1 method)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpigxc5uos.jl:24\nin expression starting at\
    \ /tmp/tmpigxc5uos.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[2] < l[1] \n \
    \       return false\n    \n    if l[1] > l[2] \n        return false\n    \n\
    \    return monotonic(l[2:end-1]) \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ub5gzrr.jl:1\nin expression starting at /tmp/tmp5ub5gzrr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph1l44lrw.jl:37\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1l44lrw.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1l44lrw.jl:34\ntest set: Test\
    \ Failed at /tmp/tmph1l44lrw.jl:40\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1l44lrw.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1l44lrw.jl:34\ntest set: Test\
    \ Failed at /tmp/tmph1l44lrw.jl:42\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1l44lrw.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1l44lrw.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1l44lrw.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzdwnsy10.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzdwnsy10.jl:1\n\
    in expression starting at /tmp/tmpzdwnsy10.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqzm9t2kd.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqzm9t2kd.jl:1\n\
    in expression starting at /tmp/tmpqzm9t2kd.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] < l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp8kbbyag.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp8kbbyag.jl:1\n\
    in expression starting at /tmp/tmpp8kbbyag.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[3] \n        return true\n    \n \
    \   if l[1] > l[3] \n        return false\n    \n    if l[2] < l[3] \n       \
    \ return true\n    \n    if l[2] > l[3] \n        return false\n    \n    if l[3]\
    \ < l[4] \n        return true\n    \n    if l[3] > l[4] \n        return false\n\
    \    \n    if l[4] < l[5] \n        return true\n    \n    if l[4] > l[5] \n \
    \       return false\n    \n    if l[5] < l[6] \n        return true\n    \n \
    \   if l[5] > l[6] \n        return false\n    \n    if l[6] < l[7] \n       \
    \ return true\n    \n    if l[6] > l[7] \n        return false\n    \n    if l[7]\
    \ < l[8] \n        return true\n    \n    if l[7] > l[8] \n        return false\n\
    \    \n    if l[8] < l[9] \n        return true\n    \n    if l[8] > l[9] \n \
    \       return false\n    \n    if l[9] < l[10] \n        return true\n    \n\
    \    if l[9] > l[10] \n        return false\n    \n    if l[10] < l[11] \n   \
    \     return true\n    \n    if l[10] > l[11] \n        return false\n    \n \
    \   if l[11] < l[12] \n        return true\n    \n    if l[11] > l[12] \n    \
    \    return false\n    \n    if l[12] < l[13] \n        return true\n    \n  \
    \  if l[12] > l[13] \n        return false\n    \n    if l[13] < l[14] \n    \
    \    return true\n    \n    if l[13] > l[14] \n        return false\n    \n  \
    \  if l[14] < l[15] \n        return true\n    \n    if l[14] > l[15] \n     \
    \   return false\n    \n    if l[15] < l[16] \n        return true\n    \n   \
    \ if l[15] > l[16] \n        return false\n    \n    if l[16] < l[17] \n     \
    \   return true\n    \n    if l[16] > l[17] \n        return false\n    \n   \
    \ if l[17] < l[18] \n        return true\n    \n    if l[17] > l[18] \n      \
    \  return false\n    \n    if l[18] < l[19] \n        return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphqyklevg.jl:1\nin expression starting at /tmp/tmphqyklevg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvd52n2cn.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvd52n2cn.jl:1\n\
    in expression starting at /tmp/tmpvd52n2cn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu0_70wh2.jl:11\n\
    in expression starting at /tmp/tmpu0_70wh2.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa39fzwff.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa39fzwff.jl:1\n\
    in expression starting at /tmp/tmpa39fzwff.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpox537fhp.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpox537fhp.jl:1\n\
    in expression starting at /tmp/tmpox537fhp.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpit6a5xtc.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpit6a5xtc.jl:1\n\
    in expression starting at /tmp/tmpit6a5xtc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] > l[i+1] for i in 1:length(l)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkj49j_lc.jl:21\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkj49j_lc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkj49j_lc.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkj49j_lc.jl:23\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkj49j_lc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkj49j_lc.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkj49j_lc.jl:26\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkj49j_lc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkj49j_lc.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkj49j_lc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqk8ea902.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqk8ea902.jl:1\n\
    in expression starting at /tmp/tmpqk8ea902.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgejv6sr.jl:1\nin expression starting at /tmp/tmpqgejv6sr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7gaeu27p.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7gaeu27p.jl:1\n\
    in expression starting at /tmp/tmp7gaeu27p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph8io32r1.jl:1\nin expression starting at /tmp/tmph8io32r1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    if l[1] == l[2] \n     \
    \   return true\n    \n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1me4bjrh.jl:1\nin expression starting at /tmp/tmp1me4bjrh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0e4qlxqz.jl:30\nin expression starting at\
    \ /tmp/tmp0e4qlxqz.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] <= l[i+1] for i in 1:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6c_yp1oj.jl:14\nin expression starting at\
    \ /tmp/tmp6c_yp1oj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp26r26z_f.jl:1\nin expression starting at /tmp/tmp26r26z_f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy9a8wd9f.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy9a8wd9f.jl:1\n\
    in expression starting at /tmp/tmpy9a8wd9f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoafmq_uo.jl:32\nin expression starting at\
    \ /tmp/tmpoafmq_uo.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphjzzwzdh.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphjzzwzdh.jl:1\n\
    in expression starting at /tmp/tmphjzzwzdh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5s1an4o_.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5s1an4o_.jl:1\n\
    in expression starting at /tmp/tmp5s1an4o_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptvkpmn7t.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptvkpmn7t.jl:1\n\
    in expression starting at /tmp/tmptvkpmn7t.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxv9dqsh4.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxv9dqsh4.jl:1\n\
    in expression starting at /tmp/tmpxv9dqsh4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] > l[i+1] for i in 1:length(l))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo3zpnn6s.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  BoundsError: attempt to access\
    \ 4-element Vector{Int64} at index [5]\n  Stacktrace:\n    [1] getindex(A::Vector{Int64},\
    \ i1::Int64)\n      @ Base ./array.jl:861\n    [2] (::var\"#1#2\")(i::Int64)\n\
    \      @ Main ./none:0\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [4] _all\n      @ ./reduce.jl:1164 [inlined]\n    [5] all\n      @ ./reduce.jl:1152\
    \ [inlined]\n    [6] all(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"})\n\
    \      @ Base ./reduce.jl:1070\n    [7] monotonic(l::Vector{Int64})\n      @ Main\
    \ /tmp/tmpo3zpnn6s.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo3zpnn6s.jl:19 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo3zpnn6s.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpo3zpnn6s.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [5]\n  Stacktrace:\n    [1] getindex(A::Vector{Int64},\
    \ i1::Int64)\n      @ Base ./array.jl:861\n    [2] (::var\"#1#2\")(i::Int64)\n\
    \      @ Main ./none:0\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [4] _all\n      @ ./reduce.jl:1164 [inlined]\n    [5] all\n      @ ./reduce.jl:1152\
    \ [inlined]\n    [6] all(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"})\n\
    \      @ Base ./reduce.jl:1070\n    [7] monotonic(l::Vector{Int64})\n      @ Main\
    \ /tmp/tmpo3zpnn6s.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo3zpnn6s.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo3zpnn6s.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpo3zpnn6s.jl:2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo3zpnn6s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] < l[2:end])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8k3a0e4c.jl:22\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3a0e4c.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3a0e4c.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp8k3a0e4c.jl:25\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3a0e4c.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3a0e4c.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp8k3a0e4c.jl:27\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3a0e4c.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3a0e4c.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8k3a0e4c.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   return all(l[i] <= l[i+1] for i in 1:end-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppbl1kc9l.jl:12\nin expression\
    \ starting at /tmp/tmppbl1kc9l.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n    \
    \    return true\n    end\n    \n    if l[4] < l[1] \n        return true\n  \
    \  end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppamaakhb.jl:32\nin expression starting at\
    \ /tmp/tmppamaakhb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhueai1n.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhueai1n.jl:1\n\
    in expression starting at /tmp/tmpnhueai1n.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2fi4xgpw.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2fi4xgpw.jl:1\n\
    in expression starting at /tmp/tmp2fi4xgpw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnon162_x.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnon162_x.jl:1\n\
    in expression starting at /tmp/tmpnon162_x.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] <= l[i+1] for i in 2:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptw_vym3n.jl:14\nin expression starting at\
    \ /tmp/tmptw_vym3n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] == l[2:end])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsst1ra2e.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsst1ra2e.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsst1ra2e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsst1ra2e.jl:21\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsst1ra2e.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsst1ra2e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsst1ra2e.jl:23\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsst1ra2e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsst1ra2e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsst1ra2e.jl:24\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsst1ra2e.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsst1ra2e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsst1ra2e.jl:26\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsst1ra2e.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfemn53cs.jl:1\nin expression starting at /tmp/tmpfemn53cs.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr5qjuqio.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr5qjuqio.jl:1\n\
    in expression starting at /tmp/tmpr5qjuqio.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6vt6xxx6.jl:1\nin expression starting at /tmp/tmp6vt6xxx6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0] \n        return false\n    end\n    \n   \
    \ if l[1] > l[end] \n        return true\n    end\n    \n    if l[end] < l[1]\
    \ \n        return false\n    end\n    \n    if l[end] > l[end-1] \n        return\
    \ true\n    end\n    \n    if l[end-1] < l[end-2] \n        return false\n   \
    \ end\n    \n    if l[end-1] > l[end-3] \n        return true\n    end\n    \n\
    \    if l[end-2] < l[end-3] \n        return false\n    end\n    \n    if l[end-2]\
    \ > l[end-4] \n        return true\n    end\n    \n    if l[end-3] < l[end-4]\
    \ \n        return false\n    end\n    \n    if l[end-3] > l[end-5] \n       \
    \ return true\n    end\n    \n    if l[end-4] < l[end-5] \n        return false\n\
    \    end\n    \n    if l[end-4] > l[end-6] \n        return true\n    end\n  \
    \  \n    if l[end-5] < l[end-6] \n        return false\n    end\n    \n    if\
    \ l[end-5] > l[end-7] \n        return true\n    end\n    \n    if l[end-6] <\
    \ l[end-7] \n        return false\n    end\n    \n    if l[end-6] > l[end-8] \n\
    \        return true\n    end\n    \n    if l[end-7] < l[end-8] \n        return\
    \ false\n    end\n    \n    if l[end-7] > l[end-9] \n        return true\n   \
    \ end\n    \n    if l[end-8] < l[end-9] \n        return false\n    end\n    \n\
    \    if l[end-8] > l[end-10] \n        return true\n    end\n    \n    if l[end-9]\
    \ < l[end-10] \n        return false\n    end\n    \n    if l[end-9] > l[end-11]\
    \ \n        return true\n    end\n    \n    if l[end-10] < l[end-11] \n      \
    \  return false\n    end\n    \n    if l[end-10] > l[end-12] \n        return\
    \ true\n    end\n    \n    if l[end-11] < l[end-12] \n        return false\n \
    \   end\n    \n    if l[end-11] > l[end-13] \n        return true\n    end\n \
    \   \n    if l[end-12] < l[end-13] \n        return false\n    end\n    \nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz97vm8mt.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz97vm8mt.jl:1\n\
    in expression starting at /tmp/tmpz97vm8mt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkk9ujwp1.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkk9ujwp1.jl:1\n\
    in expression starting at /tmp/tmpkk9ujwp1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] == l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n\
    \        return true\n    end\n    \n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4lk5l8l6.jl:41\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lk5l8l6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lk5l8l6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp4lk5l8l6.jl:44\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lk5l8l6.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lk5l8l6.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4lk5l8l6.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0]\n        return true\n    end\n    \n    if\
    \ l[1] > l[end]\n        return true\n    end\n    \n    if l[1] < l[end-1]\n\
    \        return false\n    end\n    \n    if l[end] > l[end-1]\n        return\
    \ false\n    end\n    \n    return monotonic(tail(l))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnlwk9qxv.jl:37\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  BoundsError: attempt to access\
    \ 4-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnlwk9qxv.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnlwk9qxv.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnlwk9qxv.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpnlwk9qxv.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnlwk9qxv.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnlwk9qxv.jl:38 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnlwk9qxv.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpnlwk9qxv.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnlwk9qxv.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnlwk9qxv.jl:39 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnlwk9qxv.jl:36\ntest set:\
    \ Error During Test at /tmp/tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlwk9qxv.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   if l[1] < l[2]\n        true\n    elseif l[1] > l[2]\n        false\n    else\n\
    \        monotonic(l[1..end-1])\n    end\nend\n</code>\n<|/ a tags=julia,sorting\
    \ |>\n<| a tags=julia,sorting |>\nThe function below is based on a previous answer\
    \ by John Kennedy and is based on a previous answer by John Kennedy but is more\
    \ efficient and more robust in some cases. \n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpva03jes4.jl:20\nin expression starting at\
    \ /tmp/tmpva03jes4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd4439vpq.jl:1\nin expression starting at /tmp/tmpd4439vpq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd1y1bc6i.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd1y1bc6i.jl:1\n\
    in expression starting at /tmp/tmpd1y1bc6i.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    return l == l\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, \nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_op967wz.jl:16\nin expression starting at\
    \ /tmp/tmp_op967wz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n   \
    \     return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[2] < l[3] \n        return true\n    end\n    \n    if\
    \ l[2] > l[3] \n        return false\n    end\n    \n    if l[3] < l[4] \n   \
    \     return true\n    end\n    \n    if l[3] > l[4] \n        return false\n\
    \    end\n    \n    if l[4] < l[5] \n        return true\n    end\n    \n    if\
    \ l[4] > l[5] \n        return false\n    end\n    \n    if l[5] < l[6] \n   \
    \     return true\n    end\n    \n    if l[5] > l[6] \n        return false\n\
    \    end\n    \n    if l[6] < l[7] \n        return true\n    end\n    \n    if\
    \ l[6] > l[7] \n        return false\n    end\n    \n    if l[7] < l[8] \n   \
    \     return true\n    end\n    \n    if l[7] > l[8] \n        return false\n\
    \    end\n    \n    if l[8] < l[9] \n        return true\n    end\n    \n    if\
    \ l[8] > l[9] \n        return false\n    end\n    \n    if l[9] < l[10] \n  \
    \      return true\n    end\n    \n    if l[9] > l[10] \n        return false\n\
    \    end\n    \n    if l[10] < l[11] \n        return true\n    end\n    \n  \
    \  if l[10] > l[11] \n        return false\n    end\n    \n    if l[11] < l[12]\
    \ \n        return true\n    end\n    \n    if l[11] > l[12] \n        return\
    \ false\n    end\n    \n    if l[12] < l[13] \n        return true\n    end\n\
    \    \n    if l[12] > l[13] \n        return false\n    end\n    \n    if l[13]\
    \ < l[14] \n        return true\n    end\n    \n    if l[13] > l[14] \n      \
    \  return false\n    end\n    \n    if l[14] < l[15] \n        return true\n \
    \   end\n    \n    if l[14] > l[15] \n        return false\n    end\n    \n  \
    \  if l[15] < l[16] \n        return true\n    end\n    \n    if l[15] > l[16]\
    \ \n        return false\n    end\n    \n    if l[16] < l[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8lzyxw0k.jl:1\nin expression starting at /tmp/tmp8lzyxw0k.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz_i03j55.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz_i03j55.jl:1\n\
    in expression starting at /tmp/tmpz_i03j55.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy5rma6ac.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy5rma6ac.jl:1\n\
    in expression starting at /tmp/tmpy5rma6ac.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp86hgjw3k.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp86hgjw3k.jl:1\n\
    in expression starting at /tmp/tmp86hgjw3k.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.3>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkai0icp_.jl:19\nin expression starting at\
    \ /tmp/tmpkai0icp_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        true\n \
    \   else\n        if l[1] < l[2] \n            true\n        else\n          \
    \  if l[2] < l[1] \n                true\n            else\n                if\
    \ l[1] < l[3] \n                    true\n                else\n             \
    \       if l[3] < l[1] \n                        true\n                    else\n\
    \                        false\n            end\n        end\n    end\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/17878294)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to know if there is a function\
    \ that can tell if a list of numbers is monotonically increasing or decreasing.\
    \ He also wants to know if there is a function that can tell if a list of numbers\
    \ is monotonically increasing or decreasing. He also wants to know if there is\
    \ a function that can tell if a list of numbers is monotonically increasing or\
    \ decreasing. He also wants to know if there is a function that can tell if a\
    \ list of numbers is monotonically increasing or decreasing.\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to know if there is a function\
    \ that can tell if a list of numbers is monotonically increasing or decreasing.\
    \ He also wants to know if there is a function that can tell if a list of numbers\
    \ is monotonically increasing or decreasing. He also wants to know if there is\
    \ a function that can tell if a list of numbers is monotonically increasing or\
    \ decreasing. He also wants to know if there is a function that can tell if a\
    \ list of numbers is monotonically increasing or decreasing.\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to know if there is a function\
    \ that can tell if a list of numbers is monotonically increasing or decreasing.\
    \ He also wants to know if there is a function that can tell if a list of numbers\
    \ is monotonically increasing or decreasing. He also wants to know if there is\
    \ a function that can tell if a list of numbers is monotonically increasing or\
    \ decreasing. He also wants to know if there is a function that can tell if a\
    \ list of numbers is monotonically increasing or decreasing.\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to know if there is a function\
    \ that can tell if a list of numbers is monoton\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgkihpdrt.jl:30\nin expression starting at\
    \ /tmp/tmpgkihpdrt.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdjmkceuh.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdjmkceuh.jl:1\n\
    in expression starting at /tmp/tmpdjmkceuh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0]\n        return false\n    end\n    \n    if\
    \ l[1] > l[end]\n        return true\n    end\n    \n    i = 2\n    \n    while\
    \ i < length(l) \n        if l[i] < l[i-1] \n            return false\n      \
    \  end\n        \n        if l[i] > l[end]\n            return true\n        end\n\
    \        \n        i += 1\n    end\n    \n    return true\nend\n</cell>\n<text>\n\
    Test your monotonic function with some vectors.\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_3suyxut.jl:38\nin expression starting at\
    \ /tmp/tmp_3suyxut.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe4qkyd50.jl:19\nin expression starting at\
    \ /tmp/tmpe4qkyd50.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphla99amy.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphla99amy.jl:1\n\
    in expression starting at /tmp/tmphla99amy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx8its8wz.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx8its8wz.jl:1\n\
    in expression starting at /tmp/tmpx8its8wz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpiyp48lxx.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpiyp48lxx.jl:1\n\
    in expression starting at /tmp/tmpiyp48lxx.jl:1\n"
  exit_code: 1
  status: SyntaxError

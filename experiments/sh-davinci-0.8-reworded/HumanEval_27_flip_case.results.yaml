language: sh
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo $1 | tr [A-Z] [a-z] | tr [a-z] [A-Z]\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022848
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    printf \"${1^^}\\n\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local L=$(echo $1 | sed -e 's/\\(.\\)/\\\
    U\\1/g')\n    local U=$(echo $1 | sed -e 's/\\(.\\)/\\L\\1/g')\n    echo \"${L//[A-Z]/$U}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    perl -e \"use feature 'unicode_strings';\
    \ print lc $1;\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Backslash found where operator expected at -e line 1, near "Hello\"

    syntax error at -e line 1, near "Hello\"

    Execution of -e aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [[ $# -ne 1 ]]; then\n    err \"flip_case\
    \ requires exactly 1 argument\"\n    return 1\n  fi\n\n  if [[ -z $1 ]]; then\n\
    \    echo \"\"\n    return 0\n  fi\n\n  local string=$1\n  local result=\"\"\n\
    \  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n \
    \   if [[ $char =~ [a-z] ]]; then\n      result+=\"${char^^}\"\n    elif [[ $char\
    \ =~ [A-Z] ]]; then\n      result+=\"${char,,}\"\n    else\n      result+=\"$char\"\
    \n    fi\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    printf '%s\\n' \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  tr '[:upper:]' '[:lower:]' <<< \"$1\" | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if (( $# != 1 )); then\n    echo \"$FUNCNAME:\
    \ usage: $FUNCNAME string\" >&2\n    return 1\n  fi\n  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local s=\"$1\"\n  local flipped=\"\"\n  local\
    \ char=\"\"\n  for (( i=0; i<${#s}; i++ )); do\n    char=\"${s:$i:1}\"\n    if\
    \ [[ \"$char\" =~ [a-z] ]]; then\n      flipped+=\"$(toupper \"$char\")\"\n  \
    \  elif [[ \"$char\" =~ [A-Z] ]]; then\n      flipped+=\"$(tolower \"$char\")\"\
    \n    else\n      flipped+=\"$char\"\n    fi\n  done\n  echo \"$flipped\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8zntiwaj.sh: line 16: tolower: command not found

    /tmp/tmp8zntiwaj.sh: line 14: toupper: command not found

    /tmp/tmp8zntiwaj.sh: line 14: toupper: command not found

    /tmp/tmp8zntiwaj.sh: line 14: toupper: command not found

    /tmp/tmp8zntiwaj.sh: line 14: toupper: command not found

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [ $# -ne 1 ]; then\n        log \"flip_case()\
    \ requires 1 argument\"\n        return 1\n    fi\n\n    # flip the case of each\
    \ character\n    echo \"$1\" | tr '[A-Z]' '[a-z]' | tr '[a-z]' '[A-Z]'\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    eval \"echo '$1' | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    python -c \"print('$1'.swapcase())\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local chars flipped\n\n    chars=( {a..z}\
    \ {A..Z} )\n\n    for (( i=0; i<${#chars[@]}; i++ )); do\n        [[ ${chars[$i]}\
    \ == [[:lower:]] ]] &&\n            flipped+=\"${chars[i+26]}\" ||\n         \
    \   flipped+=\"${chars[i-26]}\"\n    done\n\n    echo \"${@,,}\" | tr \"${chars[*]}\"\
    \ \"${flipped[*]}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # TODO: flip the case of string.\n  # Hint:\
    \ use tr.\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\" | tr \"[:lower:]\" \"\
    [:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local str=$1\n\n    # Convert to lowercase\n\
    \    str=$(to_lowercase \"$str\")\n\n    # Flip case\n    local i=0\n    local\
    \ new_string=\"\"\n    while [[ $i -lt ${#str} ]]; do\n        local c=${str:$i:1}\n\
    \        if [[ \"$c\" =~ [a-z] ]]; then\n            new_string+=\"${c^^}\"\n\
    \        else\n            new_string+=\"${c,,}\"\n        fi\n        i=$((i+1))\n\
    \    done\n\n    echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmpzos9p8kk.sh: line 11: to_lowercase: command not found

    /tmp/tmpzos9p8kk.sh: line 11: to_lowercase: command not found

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  printf '%s\\n' \"${1,,}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # TODO 1:\n  # We need to cast the input string\
    \ to lowercase, then replace all lowercase characters with uppercase and vice\
    \ versa.\n  # This can be done by the tr command.\n  # More details on the tr\
    \ command can be found here:\n  # http://www.cyberciti.biz/faq/unix-linux-tr-command-examples-usage-syntax/\n\
    \  # Try to use the tr command as much as possible, as it will be a very useful\
    \ command in future exercises.\n  #\n  # TODO 2:\n  # We need to store the output\
    \ of tr in a variable so we can return it\n  # Hint: $() can help us save the\
    \ output of the command\n  #\n  # TODO 3:\n  # Return the value of the variable\n\
    \  echo \"\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | perl -p -e 's/[a-z]/\\U$&/g;\
    \ s/[A-Z]/\\L$&/g'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  (( $# == 1 )) || return 1\n  local str=$1\n\
    \  tr '[:upper:]' '[:lower:]' <<< $str | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1}\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo -n \"${1}\" | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\
    \ -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [ $# -eq 0 ]; then\n    cat - | perl -pe\
    \ 'y/A-Za-z/a-zA-Z/'\n  else\n    echo \"$1\" | perl -pe 'y/A-Za-z/a-zA-Z/'\n\
    \  fi\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    sed -E 's/([a-z]+)|([A-Z]+)/\\U\\1\\E\\L\\\
    2/g' <<< \"$1\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr [:upper:] [:lower:] | tr [:lower:]\
    \ [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str=\"$1\"\n  local flipped=\"\"\n  for\
    \ (( i=0; i<${#str}; i++ )); do\n    local char=\"${str:$i:1}\"\n    if [[ \"\
    $char\" =~ [a-z] ]]; then\n      flipped+=\"${char^^}\"\n    elif [[ \"$char\"\
    \ =~ [A-Z] ]]; then\n      flipped+=\"${char,,}\"\n    else\n      flipped+=\"\
    $char\"\n    fi\n  done\n  echo \"$flipped\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  flip=\"$(echo $1 | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]')\"\n  echo \"$flip\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo -e \"$1\" | awk '{\n        flip = 1;\n\
    \        for (i = 1; i <= length; i++) {\n            c = substr($0, i, 1);\n\
    \            if (flip) {\n                if (c ~ /[a-z]/) {\n               \
    \     printf(\"%s\", toupper(c));\n                } else if (c ~ /[A-Z]/) {\n\
    \                    printf(\"%s\", tolower(c));\n                } else {\n \
    \                   printf(\"%s\", c);\n                }\n                flip\
    \ = 0;\n            } else {\n                printf(\"%s\", c);\n           \
    \     if (c ~ /[a-zA-Z]/) {\n                    flip = 1;\n                }\n\
    \            }\n        }\n    }'\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [ $# -ne 1 ]; then\n        echo \"Expected\
    \ 1 argument, got $#.\"\n        return 1\n    fi\n\n    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [[ $# -ne 1 ]]; then\n    echo \"Usage:\
    \ flip_case <string>\"\n    return 1\n  fi\n\n  local str=$1\n  local ret=\"\"\
    \n  for (( i=0; i<${#str}; i++ )); do\n    local c=${str:$i:1}\n    if [[ $c =~\
    \ [a-z] ]]; then\n      c=${c^^}\n    elif [[ $c =~ [A-Z] ]]; then\n      c=${c,,}\n\
    \    fi\n    ret+=$c\n  done\n  echo \"$ret\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    python3 -c \"print(''.join(chr(ord(c) ^ 32)\
    \ for c in '$1'))\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr [:upper:] [:lower:] | tr [:lower:]\
    \ [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr [:upper:] [:lower:] | tr [:lower:]\
    \ [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # Fix the body of this function\n  #$(echo\
    \ $1 | tr \"a-z\" \"A-Z\")\n  #$(echo $1 | tr \"A-Z\" \"a-z\")\n  echo $1 | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local char=''\n  local result=''\n  local input=\"\
    $1\"\n  for (( i=0; i<${#input}; i++ )); do\n    char=\"${input:$i:1}\"\n    if\
    \ [[ $char =~ [a-z] ]]; then\n      result+=\"${char^^}\"\n    elif [[ $char =~\
    \ [A-Z] ]]; then\n      result+=\"${char,,}\"\n    else\n      result+=\"$char\"\
    \n    fi\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"${1//[a-z]/\\l&}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local flip_case_RESULT\n  flip_case_RESULT=$(echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n  echo \"\
    $flip_case_RESULT\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local res=\"\";\n  for (( i=0; i<${#1}; i++\
    \ )); do\n    c=${1:$i:1};\n    if [[ $c =~ [a-z] ]]; then\n      c=${c^^};\n\
    \    elif [[ $c =~ [A-Z] ]]; then\n      c=${c,,};\n    fi\n    res=\"$res$c\"\
    ;\n  done\n  echo $res;\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local str=\"$1\"\n    local i=\"\"\n    for\
    \ ((i=0; i<${#str}; i++)); do\n        local c=${str:$i:1}\n        if [[ \"$c\"\
    \ =~ [a-z] ]]; then\n            str=\"${str:0:$i}$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')${str:$((i+1))}\"\n        elif [[ \"$c\" =~ [A-Z] ]]; then\n  \
    \          str=\"${str:0:$i}$(echo \"$c\" | tr '[:upper:]' '[:lower:]')${str:$((i+1))}\"\
    \n        fi\n    done\n    echo \"$str\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local str=\"$@\"\n    local output\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local c=\"${str:$i:1}\"\n        case\
    \ $c in\n            [a-z] ) output+=\"${c^^}\" ;;  # lowercase to uppercase\n\
    \            [A-Z] ) output+=\"${c,,}\" ;;  # uppercase to lowercase\n       \
    \     * ) output+=\"$c\" ;;\n        esac\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local chars\n  \
    \  local char\n    local flipped\n    local flipped_string\n\n    chars=($(string_split\
    \ \"$string\"))\n    for char in \"${chars[@]}\"; do\n        flipped=$(flip_case_char\
    \ \"$char\")\n        flipped_string=\"$flipped_string$flipped\"\n    done\n \
    \   echo \"$flipped_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpai980xd5.sh: line 14: string_split: command not found

    /tmp/tmpai980xd5.sh: line 14: string_split: command not found

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    printf '%s\\n' \"${1//[a-z]/[LOWER]}\" \"\
    ${1//[A-Z]/[UPPER]}\" | tr [LOWER][UPPER] [UPPER][LOWER]\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"${1}\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr [:upper:] [:lower:] | tr [:lower:]\
    \ [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"${1}\" | tr [a-zA-Z] [A-Za-z]\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local -r str=\"$1\"\n    local -r uppers=\"\
    $(echo \"$str\" | tr -d '[:lower:]')\"\n    local -r lowers=\"$(echo \"$str\"\
    \ | tr -d '[:upper:]')\"\n    echo \"${str//[$uppers]/\\L&}\"\n    echo \"${str//[$lowers]/\\\
    U&}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo $1 | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local retstr\n    # The bash-only flag is\
    \ -E\n    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ -z \"$1\" ]]; then\n        return\n\
    \    fi\n\n    [[ \"$1\" = \"${1^^}\" ]] && echo \"${1,,}\" || echo \"${1^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local in=\"$1\"\n    local res=\"\"\n   \
    \ while [ -n \"$in\" ]; do\n        res=\"$res${in:0:1}\"\n        in=\"${in:1}\"\
    \n    done\n    echo \"$res\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # flip case of input string\n  # note: the\
    \ -f option requires GNU grep\n  #\n  # shellcheck disable=SC1117\n  echo \"$1\"\
    \ | grep -o . | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\
    \ -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # your code goes here\n  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local s=\"$*\"\n    local c n\n    for ((i=0;\
    \ i<${#s}; i++)); do\n        c=\"${s:$i:1}\"\n        if [[ \"$c\" =~ [a-z] ]];\
    \ then\n            n=\"$(toupper \"$c\")\"\n        elif [[ \"$c\" =~ [A-Z] ]];\
    \ then\n            n=\"$(tolower \"$c\")\"\n        else\n            n=\"$c\"\
    \n        fi\n        s=\"${s:0:$i}$n${s:$(($i+1))}\"\n    done\n    echo \"$s\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzwt_i8pq.sh: line 15: tolower: command not found

    /tmp/tmpzwt_i8pq.sh: line 13: toupper: command not found

    /tmp/tmpzwt_i8pq.sh: line 13: toupper: command not found

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local result=\"\"\n    local char=\"\"\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        char=\"${1:$i:1}\"\n        if [[\
    \ $char =~ [a-z] ]]; then\n            result+=\"${char^^}\"\n        elif [[\
    \ $char =~ [A-Z] ]]; then\n            result+=\"${char,,}\"\n        else\n \
    \           result+=\"$char\"\n        fi\n    done\n    echo \"$result\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    tr '[:upper:]' '[:lower:]' <<< \"$1\" | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  python -c \"import sys; print(sys.argv[1].swapcase())\"\
    \ \"$1\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo $1 | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local flipped_chars=\"\
    \"\n  for ((i=0; i<${#string}; i++)); do\n    local char=\"${string:$i:1}\"\n\
    \    local lowercase_char=\"$(LC_ALL=C tr '[:upper:]' '[:lower:]' <<< \"$char\"\
    )\"\n    local uppercase_char=\"$(LC_ALL=C tr '[:lower:]' '[:upper:]' <<< \"$char\"\
    )\"\n    local flipped_char=\"\"\n    if [[ \"$char\" == \"$lowercase_char\" ]];\
    \ then\n      flipped_char=\"$uppercase_char\"\n    else\n      flipped_char=\"\
    $lowercase_char\"\n    fi\n    flipped_chars=\"$flipped_chars$flipped_char\"\n\
    \  done\n  printf \"%s\" \"$flipped_chars\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1}\" | tr \"[A-Z]\" \"[a-z]\" | tr\
    \ \"[a-z]\" \"[A-Z]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"${1}\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  str=\"$1\"\n  echo \"${str}\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  tr '[:upper:]' '[:lower:]' <<< $1 | tr '[:lower:]'\
    \ '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str=$1\n  local len=${#str}\n  local\
    \ new_str=\"\"\n  local c=\"\"\n  for (( i=0; i<len; i++ ))\n  do\n    c=${str:$i:1}\n\
    \    if [[ $c =~ [a-z] ]]; then\n      new_str+=$(echo $c | tr '[:lower:]' '[:upper:]')\n\
    \    elif [[ $c =~ [A-Z] ]]; then\n      new_str+=$(echo $c | tr '[:upper:]' '[:lower:]')\n\
    \    else\n      new_str+=$c\n    fi\n  done\n  echo $new_str\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    printf \"%s\\n\" \"${1}\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local flip_case_string=\"\
    \"\n    for ((i=0; i<${#string}; i++)); do\n        local char=${string:$i:1}\n\
    \        if [[ \"$char\" =~ [a-z] ]]; then\n            local char=$(echo \"$char\"\
    \ | tr a-z A-Z)\n        elif [[ \"$char\" =~ [A-Z] ]]; then\n            local\
    \ char=$(echo \"$char\" | tr A-Z a-z)\n        fi\n        flip_case_string+=\"\
    $char\"\n    done\n    echo \"$flip_case_string\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  printf \"%s\\n\" \"$1\" | tr \"[:upper:]\"\
    \ \"[:lower:]\" | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [[ $# -ne 1 ]]; then\n    echo \"Usage:\
    \ $0 string\"\n    return 1\n  fi\n\n  echo \"$1\" | tr '[A-Z]' '[a-z]' | tr '[a-z]'\
    \ '[A-Z]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [[ $# -ne 1 ]]; then\n    echo \"Usage:\
    \ flip_case <string>\"\n    return 1\n  fi\n\n  echo \"$1\" | tr \"[:upper:]\"\
    \ \"[:lower:]\" | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [ $# -eq 0 ]; then\n    printf \"Usage:\
    \ flip_case STRING\\n\"\n    return 1\n  fi\n\n  if [ \"$#\" -gt 1 ]; then\n \
    \   printf \"flip_case: too many arguments\\n\"\n    return 1\n  fi\n\n  printf\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local str=\"$1\"\n    declare -u str_upper\n\
    \    declare -l str_lower\n    str_upper=\"$str\"\n    str_lower=\"$str\"\n  \
    \  echo \"${str_upper//[a-z]/${str_lower//[A-Z]/}}\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local str=\"$1\"\n    local output\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=\"${str:$i:1}\"\n        if\
    \ [[ $char =~ [a-z] ]]; then\n            output+=\"${char^^}\"\n        elif\
    \ [[ $char =~ [A-Z] ]]; then\n            output+=\"${char,,}\"\n        else\n\
    \            output+=\"$char\"\n        fi\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr 'a-zA-Z' 'A-Za-z'\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    # If $1 is empty, we can't do anything.\n\
    \    if [ -z \"$1\" ]; then\n        return\n    fi\n\n    # We can't use [[ here,\
    \ because we need to support bash 3.2.\n    # [[ ]] is not supported in bash 3.2\
    \ (shipped with Mac OS X Snow Leopard).\n    # $1 is quoted so we don't split\
    \ on spaces.\n    if echo \"$1\" | egrep -q '[A-Z]'; then\n        echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]'\n    else\n        echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]'\n    fi\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo -n \"${1}\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: -1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  tr \"[:upper:]\" \"[:lower:]\" | tr \"[:lower:]\"\
    \ \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660022854
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str=\"$1\"\n  local chars=\"A-Za-z\"\n\
    \  local flipped=\"\"\n  local char=\"\"\n  local upper=\"\"\n  local lower=\"\
    \"\n\n  while read -n1 char; do\n    if [[ $char =~ [$chars] ]]; then\n      upper=\"\
    $(tr '[:lower:]' '[:upper:]' <<< \"$char\")\"\n      lower=\"$(tr '[:upper:]'\
    \ '[:lower:]' <<< \"$char\")\"\n      flipped+=\"${char/$upper/$lower}\"\n   \
    \ else\n      flipped+=\"$char\"\n    fi\n  done <<< \"$str\"\n\n  echo \"$flipped\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1}\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  declare -r string=\"$1\"\n  echo \"$string\"\
    \ | tr \"[:upper:]\" \"[:lower:]\" | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[A-Z]' '[a-z]' | tr '[a-z]'\
    \ '[A-Z]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ $# -ne 1 ]]; then\n        echo \"\
    Usage: $0 <string>\"\n        return 1\n    fi\n\n    local -r string=\"$1\"\n\
    \    echo \"${string}\" | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\
    \ -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo $1 | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    tr [:upper:] [:lower:] <(echo \"$1\") | tr\
    \ [:lower:] [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018/dev/fd/63\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018/dev/fd/63\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  printf \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ \"$#\" -ne 1 ]]; then\n        echo\
    \ \"Usage: $(basename \"$0\") STRING\" >&2\n        exit 1\n    fi\n\n    echo\
    \ \"$1\" | tr \"[:upper:]\" \"[:lower:]\" | tr \"[:lower:]\" \"[:upper:]\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    awk \"BEGIN { print toupper(\\\"$1\\\") }\"\
    \ \\\n        | awk \"BEGIN { print tolower(\\\"$1\\\") }\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: warning: escape sequence `\!'' treated as plain `!''

    awk: cmd. line:1: warning: escape sequence `\!'' treated as plain `!''

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [[ $# -ne 1 ]]; then\n    echo \"flip_case:\
    \ only one argument accepted\" >&2\n    return 1\n  fi\n\n  tr [:upper:] [:lower:]\
    \ <<< \"$1\" | tr [:lower:] [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local -u str=\"$1\"\n    str=\"${str//[A-Z]/[a-z]}\"\
    \n    str=\"${str//[a-z]/[A-Z]}\"\n    echo \"$str\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [ -z \"$1\" ]; then\n        echo \"Usage:\
    \ flip_case STRING\"\n        return 1\n    fi\n\n    local string\n    string=\"\
    $1\"\n\n    echo \"$string\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # Only alphabetic characters will be flipped.\n\
    \  # Example:\n  # echo Hello, World! | sed -e 's/[a-z]/\\U&/g' -e 's/[A-Z]/\\\
    L&/g'\n  # hELLO, wORLD!\n  echo $1 | sed -e 's/[a-z]/\\U&/g' -e 's/[A-Z]/\\L&/g'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    tr '[:upper:]' '[:lower:]' <<< \"$1\" | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  _str=\"$1\"\n  _len=${#_str}\n  _new=\"\"\n\
    \  for (( _i=0; _i<_len; _i++ )); do\n    _char=\"${_str:_i:1}\"\n    _nxt_char=\"\
    \"\n    _cur_unicode=$(ord \"$_char\")\n    _nxt_unicode=$(( _cur_unicode + 32\
    \ ))\n    _nxt_char=$(chr \"$_nxt_unicode\")\n    if [[ \"$_char\" == [[:upper:]]\
    \ ]]; then\n      _new=\"${_new}${_nxt_char}\"\n    else\n      _new=\"${_new}${_char}\"\
    \n    fi\n  done\n  echo $_new\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    /tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    /tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    /tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    /tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    /tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    /tmp/tmpmty6zb5t.sh: line 14: ord: command not found

    /tmp/tmpmty6zb5t.sh: line 16: chr: command not found

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  #sed -e \"s/\\(.*\\)/\\L\\1/;s/\\(.*\\)/\\\
    U\\1/\" <<< \"$1\"\n  #shellcheck disable=SC2001\n  sed -e \"s/\\(.*\\)/\\L\\\
    1/;s/\\(.*\\)/\\U\\1/\" <<< \"${1//[[:upper:]]/\\L&}\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str=$1\n  local str_flipped=$(printf\
    \ \"$str\" | tr '[A-Z]' '[a-z]')\n  printf \"$str_flipped\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[A-Z]\" \"[a-z]\" | tr \"\
    [a-z]\" \"[A-Z]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str\n  str=\"$1\"\n  for (( i=0; i<${#str};\
    \ i++ )); do\n    if [[ ${str:$i:1} =~ [a-z] ]]; then\n      local a=${str:$i:1}\n\
    \      str=\"${str:0:$i}$(printf '%s' \"$a\" | tr '[:lower:]' '[:upper:]')${str:$((i+1))}\"\
    \n    elif [[ ${str:$i:1} =~ [A-Z] ]]; then\n      local a=${str:$i:1}\n     \
    \ str=\"${str:0:$i}$(printf '%s' \"$a\" | tr '[:upper:]' '[:lower:]')${str:$((i+1))}\"\
    \n    fi\n  done\n  printf '%s' \"$str\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    flip=$(echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]')\n    echo \"$flip\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # http://stackoverflow.com/a/18715468/3044031\n\
    \  # http://stackoverflow.com/a/35882481/3044031\n  # -e 's/[a-z]/\\U&/g' -e 's/[A-Z]/\\\
    L&/g'\n  echo \"$1\" | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\
    \ -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local a=\"\"\n    local b=\"\"\n    # iterate\
    \ over the string and flip case of each character\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        a=${1:$i:1}\n        case $a in\n            [[:lower:]])\n\
    \                b+=${a^^}\n                ;;\n            [[:upper:]])\n   \
    \             b+=${a,,}\n                ;;\n            *)\n                b+=$a\n\
    \                ;;\n        esac\n    done\n    echo $b\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    # echo ${1,,} | tr '[:lower:]' '[:upper:]'\n\
    \    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ \"$#\" -ne 1 ]]; then\n        echo\
    \ \"Usage: flip_case <string>\"\n        return 1\n    fi\n\n    if [[ ! \"$1\"\
    \ =~ ^[a-zA-Z]+$ ]]; then\n        echo \"Error: $1 is not a string\"\n      \
    \  return 1\n    fi\n\n    tr 'a-zA-Z' 'A-Za-z' <<< \"$1\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[A-Z]' '[a-z]' | tr '[a-z]'\
    \ '[A-Z]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo -n \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  tr '[:upper:]' '[:lower:]' <<< \"$1\" | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local upper_to_lower=\"A-Z\"\n    local lower_to_upper=\"\
    a-z\"\n    tr [a-zA-Z] [$upper_to_lower$lower_to_upper] <<< \"$1\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo $1 | tr \"[:upper:]\" \"[:lower:]\" |\
    \ tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local c\n    for c in $(echo $1 | grep -o\
    \ .)\n    do\n        if [[ $c =~ [a-z] ]]\n        then\n            echo -n\
    \ ${c^^}\n        elif [[ $c =~ [A-Z] ]]\n        then\n            echo -n ${c,,}\n\
    \        else\n            echo -n $c\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  for char in \"$1\"; do\n    if [[ \"$char\"\
    \ =~ [A-Z] ]]; then\n      char=$(echo \"$char\" | tr \"[:upper:]\" \"[:lower:]\"\
    )\n    elif [[ \"$char\" =~ [a-z] ]]; then\n      char=$(echo \"$char\" | tr \"\
    [:lower:]\" \"[:upper:]\")\n    fi\n    echo -n \"$char\"\n  done\n  echo\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local output=\"\"\n  for (( i=0; i<${#1}; i++\
    \ )); do\n    local char=${1:$i:1}\n    if [[ $char =~ [a-z] ]]; then\n      output=$output$(echo\
    \ \"$char\" | tr '[:lower:]' '[:upper:]')\n    elif [[ $char =~ [A-Z] ]]; then\n\
    \      output=$output$(echo \"$char\" | tr '[:upper:]' '[:lower:]')\n    else\n\
    \      output=$output$char\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [ $# -eq 0 ]; then\n    echo 'flip_case():\
    \ missing parameter' >&2\n    return 1\n  fi\n\n  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local -r str=\"$1\"\n  echo \"${str,,}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo -n \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local input=$1\n  echo $input | tr '[A-Z]'\
    \ '[a-z]' | tr '[a-z]' '[A-Z]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local new_string=\"$(echo \"$1\" | tr '[A-Z]'\
    \ '[a-z]')\"\n  echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    echo $string | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str=\"$1\"\n  for (( i=0; i<${#str};\
    \ i++ )) ; do\n    char=${str:$i:1}\n    if [[ \"$char\" =~ [a-z] ]] ; then\n\
    \      char=$(echo \"$char\" | tr '[:lower:]' '[:upper:]')\n    elif [[ \"$char\"\
    \ =~ [A-Z] ]] ; then\n      char=$(echo \"$char\" | tr '[:upper:]' '[:lower:]')\n\
    \    fi\n    string=\"$string$char\"\n  done\n  echo \"$string\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  case $1 in\n    *[[:lower:]]*) echo \"${1^^}\"\
    \ ;;\n    *[[:upper:]]*) echo \"${1,,}\" ;;\n  esac\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local flipped=$(echo $1 | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]')\n  printf $flipped\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'printf: usage: printf [-v var] format [arguments]

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # flip_case \"Hello\"\n  # >> hELLO\n  local\
    \ STR\n  STR=$(echo $1 | tr '[a-z]' '[A-Z]')\n  echo $STR | tr '[A-Z]' '[a-z]'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  set -o pipefail\n  set -u\n  set -e\n  local\
    \ -r input_str=\"$1\"\n  local str1=\"\"\n  local str2=\"\"\n  local char=\"\"\
    \n  local i=0\n  local c=0\n  local IFS=$'\\n'\n  local -r num_chars=$(echo -n\
    \ \"$input_str\" | wc -c)\n  for (( i=1; i<=num_chars; i++ )); do\n    str1=$(echo\
    \ -n \"$input_str\" | cut -c$i)\n    str2=$(echo -n \"$str1\" | tr 'a-z' 'A-Z')\n\
    \    if [ \"$str1\" = \"$str2\" ]; then\n      str2=$(echo -n \"$str1\" | tr 'A-Z'\
    \ 'a-z')\n    fi\n    char=$char$str2\n  done\n  echo -n \"$char\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  tr '[:upper:]' '[:lower:]' <<< \"$1\" | tr\
    \ '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo -n \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ \"$1\" =~ [a-z] ]]; then\n        echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]'\n    elif [[ \"$1\" =~ [A-Z] ]]; then\n\
    \        echo \"$1\" | tr '[:upper:]' '[:lower:]'\n    else\n        echo \"$1\"\
    \n    fi\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [ -z \"$1\" ]; then\n    echo 'Parameter\
    \ 1 (string) is required'\n    exit 1\n  fi\n\n  local CHARS=${1//[A-Z]/}\n  if\
    \ [ \"$CHARS\" != \"$1\" ]; then\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\n\
    \  else\n    echo \"$1\" | tr '[:lower:]' '[:upper:]'\n  fi\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr [:upper:] [:lower:] | tr\
    \ [:lower:] [:upper:]\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ \"$#\" -ne 1 ]]; then\n        echo\
    \ \"Usage: $0 STRING\"\n        return 1\n    fi\n\n    echo \"$1\" | awk '{for(i=1;i<=length($0);i++)sub(substr($0,i,1),tolower(substr($0,i,1)),$0);{for(i=1;i<=length($0);i++)sub(substr($0,i,1),toupper(substr($0,i,1)),$0)}}'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: invalid regexp: Trailing backslash:
    /\/

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local input=$1\n    local output=\"\"\n \
    \   for (( i=0; i<${#input}; i++ )); do\n        local character=\"${input:$i:1}\"\
    \n        if [[ \"$character\" =~ [a-z] ]]; then\n            character=\"$(echo\
    \ \"$character\" | tr a-z A-Z)\"\n        elif [[ \"$character\" =~ [A-Z] ]];\
    \ then\n            character=\"$(echo \"$character\" | tr A-Z a-z)\"\n      \
    \  fi\n        output=\"$output$character\"\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  # This is a pretty difficult algorithm, so\
    \ I'm going to explain it in detail.\n  #\n  # Our goal is to go through each\
    \ character in the string, check if it's uppercase,\n  # and if it is, make it\
    \ lowercase. If it's not, make it uppercase.\n  #\n  # The first thing we need\
    \ to do is make an array with the characters in the string.\n  # We can do this\
    \ with the command line tool `echo`, which writes output to stdout.\n  # `echo`\
    \ also has a few command line options, one of which is `-n`. This option\n  #\
    \ tells echo not to add a newline (\\n) character at the end of the output, which\n\
    \  # is very helpful in our case. The other option is `-e`, which means to enable\n\
    \  # backslash escapes. The command we want to run is:\n  #\n  #     echo -n -e\
    \ \"Hello\"\n  #\n  # which should output:\n  #\n  #     Hello\n  #\n  # We need\
    \ to turn this into an array of characters, which we can do using the\n  # `tr`\
    \ command. `tr` stands for translate, and it translates characters from stdin\n\
    \  # to stdout. By default, it replaces characters, but we can tell it to instead\n\
    \  # delete the characters we tell it to. We want to tell it to delete everything\n\
    \  # except the characters that are in a given set, so we want to use the `-d`\
    \ option\n  # to indicate that we want to delete characters, and the `-c` option\
    \ to indicate\n  # that we want to use the complement of the set we give it. For\
    \ example, if we\n  # run `echo -n -e \"Hello\" | tr -d -c \"a-z\"`, it would\
    \ output:\n  #\n  #     Hello\n  #\n  # because the complement of the set `a-z`\
    \ is `a-zA-Z`. However, if we use the\n  # uppercase `A-Z` instead of `a-z`, we'll\
    \ get the string without any lowercase\n  # letters, which is exactly what we\
    \ want:\n  #\n  #     echo -n -e \"Hello\" | tr\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeqhc1l3s.sh: line 42: syntax error near unexpected token `}''

    /tmp/tmpeqhc1l3s.sh: line 42: `}''

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | tr \"[:upper:]\" \"[:lower:]\"\
    \ | tr \"[:lower:]\" \"[:upper:]\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local -u up_case\n  local -l low_case\n  up_case=\"\
    $1\"\n  low_case=\"$1\"\n  echo \"${up_case//[a-z]/A-Z}\"\n  echo \"${low_case//[A-Z]/a-z}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local str=\"$1\"\n    local result=\"\"\n\
    \    local -i i=0\n    while [ \"$i\" -lt \"${#str}\" ]; do\n        local -i\
    \ flag=0\n        if [[ \"${str:$i:1}\" =~ [a-z] ]]; then\n            result+=\"\
    ${str:$i:1^^}\"\n            flag=1\n        fi\n        if [[ \"${str:$i:1}\"\
    \ =~ [A-Z] ]]; then\n            result+=\"${str:$i:1,,}\"\n            flag=1\n\
    \        fi\n        if [ \"$flag\" -eq 0 ]; then\n            result+=\"${str:$i:1}\"\
    \n        fi\n        i+=1\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu21877ef.sh: line 18: str: 1,,: syntax error: operand expected
    (error token is ",")

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  <\"$1\" tr '[:lower:]' '[:upper:]' | tr '[:upper:]'\
    \ '[:lower:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpku2azedm.sh: line 8: : No such file or directory

    /tmp/tmpku2azedm.sh: line 8: Hello\!: No such file or directory

    '
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  if [ $# -ne 1 ]; then\n    echo \"flip_case:\
    \ wrong arguments ($*)\" >&2\n    return 1\n  fi\n  echo $1 | awk '{for(i=1;i<=length;i++)\
    \ {if($i ~ /[a-z]/) {printf(\"%s\", toupper($i))} else {printf(\"%s\", tolower($i))}}}'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [[ -z $1 ]]; then\n        echo \"\"\n\
    \        return\n    fi\n\n    local char\n    local flipped_string=\"\"\n   \
    \ for (( i=0; i<${#1}; i++ )); do\n        char=\"${1:$i:1}\"\n        if [[ \"\
    $char\" =~ [a-z] ]]; then\n            flipped_string+=\"${char^^}\"\n       \
    \ elif [[ \"$char\" =~ [A-Z] ]]; then\n            flipped_string+=\"${char,,}\"\
    \n        else\n            flipped_string+=\"$char\"\n        fi\n    done\n\
    \    echo \"$flipped_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"${1,,}\" | sed 's/\\(.\\)/\\U\\1/g'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    if [ -z \"$1\" ]; then\n        echo \"String\
    \ missing\"\n        return 1\n    fi\n\n    # shellcheck disable=SC2001\n   \
    \ echo \"$1\" | sed 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'\
    \ | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1^^[:lower:]}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 0
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"$1\" | awk '{for(i=1;i<=length;i++)\n\
    \  {c=substr($0,i,1);\n   if (c ~ /[a-z]/) {printf(\"%c\",toupper(c))}\n   else\
    \ if (c ~ /[A-Z]/) {printf(\"%c\",tolower(c))}\n   else {printf(\"%c\",c)}\n \
    \ }\n  }'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022849
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local str=$1\n  local new_str=\"\"\n  local\
    \ i=0\n  local str_len=${#str}\n  for ((i=0; i<str_len; i++)); do\n    local ch=${str:$i:1}\n\
    \    if [[ \"$ch\" =~ [a-z] ]]; then\n      new_str=\"$new_str$(to_upper \"$ch\"\
    )\"\n    elif [[ \"$ch\" =~ [A-Z] ]]; then\n      new_str=\"$new_str$(to_lower\
    \ \"$ch\")\"\n    else\n      new_str=\"$new_str$ch\"\n    fi\n  done\n  echo\
    \ \"$new_str\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxj86a59o.sh: line 17: to_lower: command not found

    /tmp/tmpxj86a59o.sh: line 15: to_upper: command not found

    /tmp/tmpxj86a59o.sh: line 15: to_upper: command not found

    /tmp/tmpxj86a59o.sh: line 15: to_upper: command not found

    /tmp/tmpxj86a59o.sh: line 15: to_upper: command not found

    '
  stdout: ''
  timestamp: 1660022849

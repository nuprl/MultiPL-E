language: sh
name: HumanEval_97_multiply
results:
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((${1: -1} * ${2: -1}))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    [ $# -ne 2 ] && { echo \"usage: $0 integer integer\"; exit 1; }\n   \
    \ echo $(( $(($1%10)) * $(($2%10)) ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    #TODO: Get the second last digit of integer $1\n    a=${1: -2:1}\n  \
    \  #TODO: Get the second last digit of integer $2\n    b=${2: -2:1}\n    #TODO:\
    \ multiple the two numbers\n    c=$(($a * $b))\n    echo \"$c\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1%10 * $2%10))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local _num1=$1\n  local _num2=$2\n  local _product=0\n  local _x=1\n  local\
    \ _y=1\n  local _plus=0\n  local _sign=1\n  if [[ ${_num1:0:1} == \"-\" ]]; then\n\
    \    _sign=$(($_sign * -1))\n    _num1=${_num1:1}\n  fi\n  if [[ ${_num2:0:1}\
    \ == \"-\" ]]; then\n    _sign=$(($_sign * -1))\n    _num2=${_num2:1}\n  fi\n\
    \  while [[ ! -z $_num1 || ! -z $_num2 ]]; do\n    if [[ -z $_num1 ]]; then\n\
    \      _x=0\n    else\n      _x=${_num1: -1}\n      _num1=${_num1::-1}\n    fi\n\
    \    if [[ -z $_num2 ]]; then\n      _y=0\n    else\n      _y=${_num2: -1}\n \
    \     _num2=${_num2::-1}\n    fi\n    _product=$(($_x * $_y + $_plus))\n    _plus=$(($_product\
    \ / 10))\n    _product=$(($_product % 10))\n    _product=${_product}${_output}\n\
    \    _output=$_product\n  done\n  if [[ $_plus -gt 0 ]]; then\n    _product=${_plus}${_product}\n\
    \  fi\n  echo $(($_sign * $_product))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  a=$(echo $1 | sed 's/\\-//g')\n  b=$(echo $2 | sed 's/\\-//g')\n  echo\
    \ $(expr $(expr $a % 10) \\* $(expr $b % 10))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    result=`expr $1 \\* $2`\n    num=`echo $result | grep -o -E \"[0-9]\"\
    `\n    echo $num\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | egrep '^-?[0-9]+$' > /dev/null\n  if [[ $? -ne 0 ]]; then\n\
    \    echo \"Warning: '$1' is not an integer.\"\n    return\n  fi\n  echo \"$2\"\
    \ | egrep '^-?[0-9]+$' > /dev/null\n  if [[ $? -ne 0 ]]; then\n    echo \"Warning:\
    \ '$2' is not an integer.\"\n    return\n  fi\n  echo $(( $(echo \"$1\" | sed\
    \ 's/-//') % 10 * $(echo \"$2\" | sed 's/-//') % 10 ))\n}\n\ncandidate() {\n \
    \   multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\techo \"$1\" | sed -e 's/\\(.\\).*/\\1/' -e 's/\\(.\\).*/\\1/' | tr -d \"\
    \\n\"\n\techo \"$2\" | sed -e 's/\\(.\\).*/\\1/' -e 's/\\(.\\).*/\\1/' | tr -d\
    \ \"\\n\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [[ \"$1\" == *\"-\"* ]]; then\n        num1=$((10#${1//-/}))\n   \
    \     num1=${num1:0:1}\n    else\n        num1=${1:0:1}\n    fi\n    if [[ \"\
    $2\" == *\"-\"* ]]; then\n        num2=$((10#${2//-/}))\n        num2=${num2:0:1}\n\
    \    else\n        num2=${2:0:1}\n    fi\n    echo \"$((num1 * num2))\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    let \"a=$1%10\"\n    let \"b=$2%10\"\n    let \"a*=b\"\n    echo \"$a\"\
    \n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  (( $1 == 0 || $2 == 0 )) && { echo 0; return; }\n  let p=${1//-/}*${2//-/}\n\
    \  echo ${p: -1}\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  num1=$1\n  num2=$2\n  if [ $1 -lt 0 ]; then\n    num1=$((-1 * $1))\n  fi\n\
    \  if [ $2 -lt 0 ]; then\n    num2=$((-1 * $2))\n  fi\n  last_digit=$((num1 %\
    \ 10))\n  last_digit2=$((num2 % 10))\n  echo $((last_digit * last_digit2))\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1 $2\" | sed 's/-//g' | awk '{print $1 % 10 * $2 % 10}'\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local num1=${1: -1}\n    local num2=${2: -1}\n    (( num1 * num2 ))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  #\n  #\n  #\n  printf \"%d\" $(($1 % 10 * $2\
    \ % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # your solution here\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8ct4c_u3.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp8ct4c_u3.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(echo $1$2 | awk '{print $1 % 10 * $2 % 10}')\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# Replace the 1st line with your code.\n\tif [[ $1 == \"-\"* ]]; then\n\
    \t\tif [[ $2 == \"-\"* ]]; then\n\t\t\techo \"$(( ${1:1:1} * ${2:1:1} ))\"\n\t\
    \telse\n\t\t\techo \"$(( ${1:1:1} * ${2:0:1} ))\"\n\t\tfi\n\telse\n\t\tif [[ $2\
    \ == \"-\"* ]]; then\n\t\t\techo \"$(( ${1:0:1} * ${2:1:1} ))\"\n\t\telse\n\t\t\
    \techo \"$(( ${1:0:1} * ${2:0:1} ))\"\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$(echo \"$1\" | tail -c 1)$(echo \"$2\" | tail -c 1)\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    #Your code here\n    arr=(${1//''/ })\n    arr2=(${2//''/ })\n    echo\
    \ ${arr[@]: -1} ${arr2[@]: -1} | tr ' ' '*' | bc\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local new_str=\"\"\n  local product=1\n  for i in {1..2}; do\n    new_str+=$(echo\
    \ ${!i} | sed 's/-//')\n  done\n  for ((i=0; i<${#new_str}; i++)); do\n    product=$((\
    \ ${product} * ${new_str:$i:1} ))\n  done\n  if [[ $product -eq 0 ]]; then\n \
    \   echo 0\n  else\n    echo $product\n  fi\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  product=`expr $1 \\* $2`;\n  echo \"${product: -1}\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( ${1: -1} * ${2: -1} ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local x=\"$1\"\n  local y=\"$2\"\n  local x=$(echo \"$x\" | sed -e 's/^-//'\
    \ | sed -e 's/^0*//')\n  local y=$(echo \"$y\" | sed -e 's/^-//' | sed -e 's/^0*//')\n\
    \  if [ -z \"$x\" ] || [ -z \"$y\" ]; then\n    echo \"0\"\n  else\n    echo $((\
    \ (x % 10) * (y % 10) ))\n  fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | grep -q -e '-' && echo \"$2\" | grep -q -e '-' && echo \"\
    $(( $(echo \"$1\" | tr -d -) * $(echo \"$2\" | tr -d -) ))\" | grep -o -e '[0-9]'\
    \ | tail -1 || echo \"$(( $(echo \"$1\" | tr -d -) * $(echo \"$2\" | tr -d -)\
    \ ))\" | grep -o -e '[0-9]' | tail -1\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if [ $1 -lt 0 ]; then\n    ((a=-$1))\n  else\n    ((a=$1))\n  fi\n  if\
    \ [ $2 -lt 0 ]; then\n    ((b=-$2))\n  else\n    ((b=$2))\n  fi\n  ((a=a%10))\n\
    \  ((b=b%10))\n  ((result=a*b))\n  echo $result\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=\"$1\"\n    local b=\"$2\"\n    local tmp\n    if [ \"$a\" -lt\
    \ 0 ]; then\n        tmp=$((a * -1))\n        a=\"$tmp\"\n    fi\n    if [ \"\
    $b\" -lt 0 ]; then\n        tmp=$((b * -1))\n        b=\"$tmp\"\n    fi\n    local\
    \ result=$(((a % 10) * (b % 10)))\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  product=$((($1 % 10) * ($2 % 10)))\n  echo $product\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    a=$1\n    b=$2\n    # if $a contains 1 or more digits\n    if [ ${#a}\
    \ -gt 0 ]; then\n\t# if $b contains 1 or more digits\n\tif [ ${#b} -gt 0 ]; then\n\
    \t    if [ $a -ge 0 ]; then\n\t\tif [ $b -ge 0 ]; then\n\t\t    # return the product\
    \ of the \n\t\t    # rightmost digits of $a and $b\n\t\t    echo $((${a: -1} *\
    \ ${b: -1}))\n\t\telse\n\t\t    # $b is negative\n\t\t    # return the product\
    \ of the \n\t\t    # rightmost digit of $a \n\t\t    # and the leftmost digit\
    \ of $b\n\t\t    echo $((${a: -1} * ${b:0:1}))\n\t\tfi\n\t    else\n\t\t# $a is\
    \ negative\n\t\tif [ $b -ge 0 ]; then\n\t\t    # return the product of the \n\t\
    \t    # leftmost digit of $a \n\t\t    # and the rightmost digit of $b\n\t\t \
    \   echo $((${a:0:1} * ${b: -1}))\n\t\telse\n\t\t    # both $a and $b are negative\n\
    \t\t    # return the product of the \n\t\t    # leftmost digits of $a and $b\n\
    \t\t    echo $((${a:0:1} * ${b:0:1}))\n\t\tfi\n\t    fi\n\telse\n\t    # $b is\
    \ not an integer\n\t    echo \"Error: Second input parameter is not an integer.\"\
    \n\tfi\n    else\n\t# $a is not an integer\n\techo \"Error: First input parameter\
    \ is not an integer.\"\n    fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsb3ehl_k.sh: line 34: 4 * -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  first=${1: -1}\n  second=${2: -1}\n  echo \"$((first * second))\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Hint: the last digit of a number is $((number % 10))\n    #\n    #\
    \ Write your code here\n    let 'a = ${1} % 10'\n    let 'b = ${2} % 10'\n   \
    \ let 'c = $a * $b'\n    echo $c\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx1vbnlmg.sh: line 21: let: a = ${1} % 10: syntax error: operand
    expected (error token is "${1} % 10")

    /tmp/tmpx1vbnlmg.sh: line 22: let: b = ${2} % 10: syntax error: operand expected
    (error token is "${2} % 10")

    /tmp/tmpx1vbnlmg.sh: line 23: let: c = $a * $b: syntax error: operand expected
    (error token is "$a * $b")

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # $((a * b)) for multiplication\n    echo $(( ${1: -1} * ${2: -1} ))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(($1 % 10 * $2 % 10))\"\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i x=\"$1\" y=\"$2\"\n    let x=x<0?-x:x y=y<0?-y:y\n    echo \"\
    $(((x%10)*(y%10)))\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwy5j4pjp.sh: line 19: 0?-x:x: No such file or directory

    /tmp/tmpwy5j4pjp.sh: line 19: 0?-x:x: No such file or directory

    /tmp/tmpwy5j4pjp.sh: line 19: 0?-x:x: No such file or directory

    /tmp/tmpwy5j4pjp.sh: line 19: 0?-x:x: No such file or directory

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # put your code here\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphvrcrnd5.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmphvrcrnd5.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    first=${1//[^-0-9]/}\n    second=${2//[^-0-9]/}\n    if [[ $first -lt\
    \ 0 ]]; then\n        first=$((first * -1))\n    fi\n    if [[ $second -lt 0 ]];\
    \ then\n        second=$((second * -1))\n    fi\n    (( first < 10 )) && (( second\
    \ < 10 )) && echo $(( first * second )) || echo ${first: -1}${second: -1}\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# declare -i num=$1\n\t# declare -i num2=$2\n\ta=${1: -1}\n\tb=${2: -1}\n\
    \td=$((a*b))\n\tprintf $d\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=\"$1\"\n    local b=\"$2\"\n    [ \"${a:0:1}\" = \"-\" ] && a=\"\
    ${a:1}\"\n    [ \"${b:0:1}\" = \"-\" ] && b=\"${b:1}\"\n    echo $(( a % 10 *\
    \ b % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\techo -n $((10#${1: -1} * 10#${2: -1}))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  unit1=$(echo \"$1\" | grep -o '.' | tail -1)\n  unit2=$(echo \"$2\" | grep\
    \ -o '.' | tail -1)\n  echo \"$((unit1 * unit2))\"\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  mul=$(($1 * $2))\n  echo \"${mul: -1}\"\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo \"Not Implemented\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # get the last digit of each string\n    a=$(echo $1 | tail -c 2)\n \
    \   b=$(echo $2 | tail -c 2)\n    # remove the last digit from each string\n \
    \   a=$(echo $a | cut -c 1)\n    b=$(echo $b | cut -c 1)\n    # multiply the last\
    \ digits\n    if [ \"$a\" -eq \"-\" ]; then a=${a:1}; fi\n    if [ \"$b\" -eq\
    \ \"-\" ]; then b=${b:1}; fi\n    c=$(expr $a \\* $b)\n    # if the product is\
    \ too large, use only the last digit\n    if [ \"$c\" -gt \"9\" ]; then c=$(echo\
    \ $c | tail -c 2); fi\n    # since we may have modifed a or b to get the last\
    \ digit,\n    # change the product's sign if necessary\n    if [ \"$1\" -lt \"\
    0\" ] && [ \"$2\" -gt \"0\" ]; then c=\"-$c\"; fi\n    if [ \"$1\" -gt \"0\" ]\
    \ && [ \"$2\" -lt \"0\" ]; then c=\"-$c\"; fi\n    # return the product\n    echo\
    \ $c\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\"\
    ) = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzygxjwku.sh: line 25: [: -: integer expression expected

    /tmp/tmpzygxjwku.sh: line 26: [: -: integer expression expected

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i a=$1 b=$2\n    # your solution goes here\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  echo $(( $(echo $a | grep -o '.' | tail -n\
    \ 1) * $(echo $b | grep -o '.' | tail -n 1) ))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # put your code here\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ]; then\n    echo\
    \ \"0\"\n  else\n    echo $(( $1%10 * $2%10 ))\n  fi\n}\n\ncandidate() {\n   \
    \ multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\"\
    ) = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1 * $2\" | bc\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed -e 's/.*\\(.\\)$/\\1/') \\* $(echo $2 | sed\
    \ -e 's/.*\\(.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc0xhs95o.sh: line 18: 8 \* 2 : syntax error: invalid arithmetic
    operator (error token is "\* 2 ")

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    a=$1\n    b=$2\n    if [[ $a -lt 0 ]]; then\n        a=$(( -a ))\n  \
    \  fi\n    if [[ $b -lt 0 ]]; then\n        b=$(( -b ))\n    fi\n    a=${a##*(0)}\n\
    \    b=${b##*(0)}\n    echo $(( ($a * $b) % 10 ))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]]; then\n    echo $(($1\
    \ % 10 * $2 % 10))\n  else\n    echo \"invalid input\"\n  fi\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local n1=$1 n2=$2\n  n1=${n1//[^0-9]/}\n  n2=${n2//[^0-9]/}\n  (( (n1%10)\
    \ * (n2%10) ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local x=\"$1\"\n  local y=\"$2\"\n  let \"x=${x: -1}\"\n  let \"y=${y:\
    \ -1}\"\n  let \"z=x*y\"\n  echo -n \"$z\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  declare -i product\n  product=$(($1 * $2))\n  echo ${product:(-1)}\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  n1=$1\n  n2=$2\n  n3=$((n1%10))\n  n4=$((n2%10))\n  n5=$((n3*n4))\n  echo\
    \ $n5\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\"\
    ) = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | sed 's/.//' | sed 's/.$//' | awk '{print $1 * $1}'\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i num1=$1\n    local -i num2=$2\n    echo \"$(( (num1 % 10) *\
    \ (num2 % 10) ))\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | sed 's/.$//') * $(echo $2 | sed 's/.$//') ))\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    test='^-?[0-9]+$'\n    if [[ $1 =~ $test && $2 =~ $test ]]; then\n  \
    \      num1=${1: -1}\n        num2=${2: -1}\n        echo $((num1 * num2))\n \
    \   else\n        echo \"Not a number\"\n    fi\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local x=$(echo $1 | grep -o '^-\\?[0-9]\\+$')\n    local y=$(echo $2\
    \ | grep -o '^-\\?[0-9]\\+$')\n    local product=0\n    if [ -n \"$x\" ] && [\
    \ -n \"$y\" ]; then\n        if [ \"${x%${x#?}}\" -eq 0 ] || [ \"${y%${y#?}}\"\
    \ -eq 0 ]; then\n            product=0\n        else\n            product=$((\
    \ (x%10) * (y%10) ))\n        fi\n    fi\n    echo \"$product\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4bvqwle_.sh: line 22: [: -: integer expression expected

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local x=$1 y=$2\n    ((x = x%10))\n    ((y = y%10))\n    echo $((x*y))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    s=$(($1 * $2))\n    printf %c ${s:${#s}-1:1}\n}\n\ncandidate() {\n  \
    \  multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\"\
    ) = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(($1 * $2))\" | tail -c 2\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((${1: -1} * ${2: -1}))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    a=${1: -1}\n    b=${2: -1}\n    echo \"$((a*b))\"\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [ $1 -lt 0 ]; then\n        local num1=$((-1 * $1))\n    else\n  \
    \      local num1=$1\n    fi\n    if [ $2 -lt 0 ]; then\n        local num2=$((-1\
    \ * $2))\n    else\n        local num2=$2\n    fi\n    local num1_ones=$((num1\
    \ % 10))\n    local num2_ones=$((num2 % 10))\n    echo $((num1_ones * num2_ones))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=\"$1\"\n  local b=\"$2\"\n  local x=$((a%10))\n  local y=$((b%10))\n\
    \  echo $((x*y))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your solution here.\n\n    # Return the product of their unit\
    \ digits.\n    let i=$1%10\n    let j=$2%10\n    let k=$i*$j\n    echo $k\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here.\n  p1=${1:(-1)}\n  p2=${2:(-1)}\n  echo \"$(($p1*$p2))\"\
    \n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Unit digits are the ones at the right of the decimal point\n  num1=$(echo\
    \ \"$1\" | cut -d'.' -f2)\n  num2=$(echo \"$2\" | cut -d'.' -f2)\n  let \"num1\
    \ = $num1\"\n  let \"num2 = $num2\"\n  let \"result = $num1 * $num2\"\n  echo\
    \ \"$result\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if [ $1 -lt 0 ]\n  then\n    a=${1#-}\n  else\n    a=$1\n  fi\n  if [ $2\
    \ -lt 0 ]\n  then\n    b=${2#-}\n  else\n    b=$2\n  fi\n  ans=$(( $a % 10 * $b\
    \ % 10 ))\n  echo $ans\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if [ -z \"$1\" ] || [ -z \"$2\" ]; then\n    echo \"Must provide 2 integers.\"\
    \n    exit 1\n  fi\n  first_unit_digit=$(($1 % 10))\n  second_unit_digit=$(($2\
    \ % 10))\n  echo $((first_unit_digit * second_unit_digit))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  echo $(( ($a*1)%10 * ($b*1)%10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # $1 % 10 ... number's units digit\n    # $1 / 10 ... number without\
    \ units digit\n    u1=$(($1 % 10))\n    u2=$(($2 % 10))\n    echo $(($u1 * $u2))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # enter your code here\n  a=$1\n  b=$2\n  echo \"$a x $b = $((a*b))\"\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1%10 * $2%10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    let \"product=${1: -1} * ${2: -1}\"\n    echo \"$product\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  (( $1 < 0 )) && negative1=true || negative1=false\n  (( $2 < 0 )) && negative2=true\
    \ || negative2=false\n  n1=${1//-/}\n  n2=${2//-/}\n  res=$(( n1 % 10 * n2 % 10\
    \ ))\n  if [[ $negative1 == false && $negative2 == false ]] || [[ $negative1 ==\
    \ true && $negative2 == true ]]; then\n    echo $res\n  else\n    echo -$res\n\
    \  fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\"\
    ) = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# complete this function\n\techo $(( 10#$1 % 10 * 10#$2 % 10 ))\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local num1=$1\n    local num2=$2\n    local result=$(( ${num1: -1} *\
    \ ${num2: -1} ))\n    echo \"$result\"\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if (($1 < 0)); then\n    let n1=-$1\n  else\n    let n1=$1\n  fi\n  if\
    \ (($2 < 0)); then\n    let n2=-$2\n  else\n    let n2=$2\n  fi\n  let d1=$(($n1\
    \ % 10))\n  let d2=$(($n2 % 10))\n  if ((d1 > 0)) && ((d2 > 0)); then\n    let\
    \ p=$(($d1 * $d2))\n    echo $p\n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local s=$(echo \"$1*$2\" | bc | sed -e 's/[0-9]*\\.//' -e 's/^0*//')\n\
    \  if [ \"$s\" = \"\" ]; then\n    echo 0\n  else\n    echo $s\n  fi\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n   # Your code here\n   local a=${1: -1}\n   local b=${2: -1}\n   echo $((a*b))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$((($1 % 10) * ($2 % 10)))\"\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i a=${1:(-1)} b=${2:(-1)}\n    echo $((a * b))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo -n $((${1: -1} * ${2: -1}))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\tlocal product=$(( $(echo $1 | rev | cut -c 1) * $(echo $2 | rev | cut -c\
    \ 1) ))\n\techo $product\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# If a number is less than 0, make it positive.\n\t# That will be a negative\
    \ number.\n\tif [[ $1 < 0 ]]; then\n\t\tlet \"a = -1 * $1\"\n\telse\n\t\tlet \"\
    a = $1\"\n\tfi\n\tif [[ $2 < 0 ]]; then\n\t\tlet \"b = -1 * $2\"\n\telse\n\t\t\
    let \"b = $2\"\n\tfi\n\t# Get the units digit of a, store it in c.\n\tlet \"c\
    \ = $a % 10\"\n\t# Get the units digit of b, store it in d.\n\tlet \"d = $b %\
    \ 10\"\n\t# Multiply the two numbers in c and d.\n\tlet \"e = $c * $d\"\n\t# Get\
    \ the units digit of the product.\n\tlet \"f = $e % 10\"\n\t# If the two numbers\
    \ in $1 and $2 are negative, make the output negative.\n\tif [[ $1 < 0 && $2 <\
    \ 0 ]]; then\n\t\tlet \"g = $f\"\n\telif [[ $1 < 0 || $2 < 0 ]]; then\n\t\tlet\
    \ \"g = -1 * $f\"\n\telse\n\t\tlet \"g = $f\"\n\tfi\n\techo $g\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # your solution here\n  echo $(( ($1 % 10) * ($2 % 10) ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((10#$1%10 * 10#$2%10))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i a=${1} b=${2}\n    echo \"$((a%10 * b%10))\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr599gswt.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmpr599gswt.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  a=$1\n  b=$2\n  if [[ $a == 0 ]] || [[ $b == 0 ]]; then\n    echo 0\n \
    \ else\n    echo $((a % 10 * b % 10))\n  fi\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]]; then\n        #\
    \ Strip off the minus\n        if [[ $1 =~ ^- ]]; then\n            local integer1=\"\
    ${1:1}\"\n        else\n            local integer1=\"$1\"\n        fi\n      \
    \  if [[ $2 =~ ^- ]]; then\n            local integer2=\"${2:1}\"\n        else\n\
    \            local integer2=\"$2\"\n        fi\n        # Get the product of the\
    \ last digits\n        local product=$(( 10#${integer1: -1} * 10#${integer2: -1}\
    \ ))\n        if [[ $product -ge 10 ]]; then\n            # Strip off the ones\
    \ digit\n            echo \"${product: -1}\"\n        else\n            echo \"\
    $product\"\n        fi\n    else\n        echo \"Invalid input\"\n    fi\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local one=\"$1\"\n    local two=\"$2\"\n    # your code here\n    return\
    \ 0\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\")\
    \ = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n   echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | tail -c 2) * $(echo $2 | tail -c 2) ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\tnum1=${1//[!0-9]/}\n\tnum2=${2//[!0-9]/}\n\tproduct=$((num1 * num2))\n\t\
    echo ${product: -1}\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    a=$(echo $1 | grep -o '[0-9]')\n    b=$(echo $2 | grep -o '[0-9]')\n\
    \    if [ -z $a ]; then\n        a=0\n    fi\n    if [ -z $b ]; then\n       \
    \ b=0\n    fi\n    result=$(expr $a \\* $b)\n    echo $result\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpbxs6cqvq.sh: line 20: [: too many arguments\n/tmp/tmpbxs6cqvq.sh:\
    \ line 23: [: too many arguments\nexpr: syntax error: unexpected argument \u2018\
    4\u2019\n"
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(($1%10 * $2%10))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local sign=\"+\"\n    # abs()\n    if\
    \ [ $a -lt 0 ]; then\n        a=$(( -1 * $a ))\n        sign=\"-\"\n    fi\n \
    \   if [ $b -lt 0 ]; then\n        b=$(( -1 * $b ))\n        sign=\"-\"\n    fi\n\
    \    # multiply\n    local answer=$(( $a * $b ))\n    # get last character\n \
    \   echo \"$sign$(echo $answer | sed 's/.*\\(.\\)$/\\1/')\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # int * int = int * int = int\n  echo $(( $1 * $2 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local num1=$1\n    local num2=$2\n    local total=0\n    local unit=0\n\
    \    if [[ $num1 == 0 || $num2 == 0 ]]; then\n        unit=0\n    else\n     \
    \   total=$((num1 * num2))\n        unit=$((total % 10))\n    fi\n    echo $unit\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    res=$(( (10#$1 % 10) * (10#$2 % 10) ))\n    echo \"$res\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Insert your code here\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ycq_q2h.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp0ycq_q2h.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  printf '%d' $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# code here\n\techo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # write your code here\n    local a=$1\n    local b=$2\n    if [ $a -lt\
    \ 0 ]; then\n        a=$((-a))\n    fi\n    if [ $b -lt 0 ]; then\n        b=$((-b))\n\
    \    fi\n    echo $(( $a % 10 * $b % 10 ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if (( $1 * $2 == 0 )); then\n    echo \"0\"\n  else\n    echo $(( $1 %\
    \ 10 * $2 % 10 ))\n  fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    product=0\n    integer_regex='^-?[0-9]+$'\n    if [[ $1 =~ $integer_regex\
    \ ]] && [[ $2 =~ $integer_regex ]]; then\n        if [[ $1 -eq 0 || $2 -eq 0 ]];\
    \ then\n            product=0\n        else\n            # Convert number in base\
    \ to integer\n            integer_regex='^-?[0-9]+$'\n            for i in $(seq\
    \ 1 ${#1}); do\n                number=${1:$i-1:1}\n                if [[ $number\
    \ =~ $integer_regex ]]; then\n                    product=$(($product * 10 + $number))\n\
    \                fi\n            done\n            # Multiply the unit digit\n\
    \            product=$(($product * $2))\n            # Get the unit digit of the\
    \ product\n            while [[ $product -gt 9 ]]; do\n                product=$(($product\
    \ % 10))\n            done\n        fi\n    fi\n    echo $product\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [[ \"$1\" =~ [1-9] ]] && [[ \"$2\" =~ [1-9] ]]; then\n        echo\
    \ $(( $1 % 10 * $2 % 10 ))\n    else\n        echo 0\n    fi\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  result=$((10#$1 % 10 * 10#$2 % 10))\n  echo $result\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write the code to solve the problem here\n  echo $1 $2\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Assume $1, $2 are integers from 0-99\n  local res=$(( 10#$1 * 10#$2 ))\n\
    \  echo \"${res: -1}\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  _a=$(echo $1 | rev | cut -c 1)\n  _b=$(echo $2 | rev | cut -c 1)\n  _res=$(($_a\
    \ * $_b))\n  echo $_res\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  a=${1:-0}\n  b=${2:-0}\n  echo $(( ${a: -1} * ${b: -1} ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo -n \"$(( ${1:${#1}-1:1} * ${2:${#2}-1:1} ))\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  case $1 in\n    ''|*[!0-9]*) return 1\n    ;;\n    *) \n  esac\n  case\
    \ $2 in\n    ''|*[!0-9]*) return 1\n    ;;\n    *) \n  esac\n  echo $((($1%10)\
    \ * ($2%10)))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # cat \"$1\" \"$2\" | tr -d '- \\n' | sed -e 's/\\(.\\)/\\1\\n/g' | sed\
    \ -e '/^$/d' | sort | uniq -c | awk '{print $1*$2}' | sed -e 's/^0*//' | head\
    \ -1\n    a=\"$1\"\n    b=\"$2\"\n    if [ \"$a\" -lt 0 ]; then\n        a=$((\
    \ -1 * a ))\n    fi\n    if [ \"$b\" -lt 0 ]; then\n        b=$(( -1 * b ))\n\
    \    fi\n    d1=\"$(echo $a | tail -c 1)\"\n    d2=\"$(echo $b | tail -c 1)\"\n\
    \    echo \"$(( d1 * d2 ))\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local x=\"$1\"\n    local y=\"$2\"\n    local a=${x: -1}\n    local b=${y:\
    \ -1}\n    local z=$(( a * b ))\n    echo \"$z\"\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    num1=$1\n    num2=$2\n    echo $(( $(($num1%10)) * $(($num2%10)) ))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # First, split to arrays the two given integers\n    array_1=($(echo\
    \ $1 | grep -o .))\n    array_2=($(echo $2 | grep -o .))\n    # Then extract the\
    \ last element from each array\n    # and multiply them\n    array_result=$((${array_1[-1]}\
    \ * ${array_2[-1]}))\n    # I output the result\n    echo $array_result\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo \"$(($1 % 10 * $2 % 10))\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    num1=${1//[^0-9]/}\n    num2=${2//[^0-9]/}\n    echo \"$((num1%10*num2%10))\"\
    \n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # your code here\n    echo \"$1 * $2\" | bc\n}\n\ncandidate() {\n   \
    \ multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\"\
    ) = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Insert your code here\n  local product=0\n  local a=${1##-}\n  local\
    \ b=${2##-}\n  local i=1\n  while [[ $i -le ${#a} ]]; do\n    local ia=${a:$((i-1)):1}\n\
    \    local j=1\n    while [[ $j -le ${#b} ]]; do\n      local jb=${b:$((j-1)):1}\n\
    \      let product+=$ia*$jb\n      let j++\n    done\n    let i++\n  done\n  if\
    \ [[ \"$1\" =~ ^- && \"$2\" =~ ^- ]]; then\n    product=${product##-}\n  elif\
    \ [[ \"$1\" =~ ^- || \"$2\" =~ ^- ]]; then\n    product=-$product\n  fi\n  echo\
    \ \"${product:$(( ${#product}-1 )):1}\"\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [ \"$1\" -lt 0 ]; then\n        a=$((-$1))\n    else\n        a=$1\n\
    \    fi\n    if [ \"$2\" -lt 0 ]; then\n        b=$((-$2))\n    else\n       \
    \ b=$2\n    fi\n    echo \"$((${a: -1} * ${b: -1}))\"\n}\n\ncandidate() {\n  \
    \  multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\"\
    ) = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  a=$1\n  b=$2\n  if [ $a -lt 0 ]; then a=$(( $a * -1 )); fi\n  if [ $b -lt\
    \ 0 ]; then b=$(( $b * -1 )); fi\n  a=$(( $a % 10 ))\n  b=$(( $b % 10 ))\n  echo\
    \ $(( $a * $b ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1 $2\" | awk '{\n    if($1>0) a=$1; else a=-$1;\n    if($2>0)\
    \ b=$2; else b=-$2;\n    print a*b%10;\n    }'\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local -i base=$1\n  local -i power=$2\n  local -i result=1\n  while ((\
    \ $power > 0 )); do\n    (( result *= $base ))\n    (( power-- ))\n  done\n  ((\
    \ result ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local multi=$((a * b))\n    local last_digit=${multi:\
    \ -1}\n    echo $last_digit\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local num1=$1\n  local num2=$2\n  echo \"$(( num1 % 10 * num2 % 10 ))\"\
    \n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  x=$(echo $1 | sed 's/.*\\(.\\)$/\\1/')\n  y=$(echo $2 | sed 's/.*\\(.\\\
    )$/\\1/')\n  echo $((x*y))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=${1: -1}\n    local b=${2: -1}\n    echo \"$((a * b))\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # If a numeral is negative, we first must negate it, then multiply, \n\
    \    # then negate the result again. If a numeral is zero, the product is zero.\n\
    \    if [ $1 -lt 0 ]; then\n        num1=$(expr $1 * -1)\n    elif [ $1 -eq 0\
    \ ]; then\n        echo 0\n        return\n    else\n        num1=$1\n    fi\n\
    \    if [ $2 -lt 0 ]; then\n        num2=$(expr $2 * -1)\n    elif [ $2 -eq 0\
    \ ]; then\n        echo 0\n        return\n    else\n        num2=$2\n    fi\n\
    \    echo $((num1 % 10 * num2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [[ $1 = 0 ]] || [[ $2 = 0 ]]; then\n        echo 0\n    else\n   \
    \     echo $(( ${1: -1} * ${2: -1} ))\n    fi\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Get the absolute values\n  first=$(printf '%s\\n' \"$1\" | sed 's/-//')\n\
    \  second=$(printf '%s\\n' \"$2\" | sed 's/-//')\n  # Get the unit digit\n  a=$(printf\
    \ '%s\\n' \"$first\" | sed 's/\\(^.\\).*/\\1/')\n  b=$(printf '%s\\n' \"$second\"\
    \ | sed 's/\\(^.\\).*/\\1/')\n  # Get the product\n  printf '%s\\n' \"$((a * b))\"\
    \n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [[ $1 -lt 0 ]]; then\n        let a=${1:1}\n    else\n        let\
    \ a=$1\n    fi\n    if [[ $2 -lt 0 ]]; then\n        let b=${2:1}\n    else\n\
    \        let b=$2\n    fi\n    let sum=$((${a:(-1)} * ${b:(-1)}))\n    echo ${sum:(-1)}\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$(echo $1 | sed 's/.$//' | awk '{print $1*$2}')\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Find the product of the last digits of the arguments\n    echo $((\
    \ $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\tlocal x=$1\n\tlocal y=$2\n\tlocal mult=1\n\t\n\t[ ${#x} -gt 1 ] && x=${x:\
    \ -1}\n\t[ ${#y} -gt 1 ] && y=${y: -1}\n\t\n\techo $(( x * y ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local result=1\n    local x=$1\n    local y=$2\n    if [ $x -lt 0 ];\
    \ then\n        x=$((-$x))\n    fi\n    if [ $y -lt 0 ]; then\n        y=$((-$y))\n\
    \    fi\n    for (( ; x > 0 ; x /= 10 )); do\n        result=$(((x % 10) * (y\
    \ % 10) * result))\n    done\n    echo $result\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  #   $1 and $2 are integers\n  # Return the product\
    \ of their unit digits\n  product=\"$(($1 * $2))\"\n  echo \"${product: -1}\"\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$(( ( ${1: -1} * ${2: -1} ) % 10 ))\"\n}\n\ncandidate() {\n  \
    \  multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\"\
    ) = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $((10#$1 % 10 * 10#$2 % 10))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local x=\"$1\"\n  local y=\"$2\"\n  local prod\n  (( prod = (x % 10) *\
    \ (y % 10) ))\n  echo \"$prod\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    printf \"%d\" $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  var1=$1\n  var2=$2\n  if [ \"$var1\" == \"0\" -o \"$var2\" == \"0\" ];\
    \ then\n    echo \"0\"\n  else\n    echo $((var1 % 10 * var2 % 10))\n  fi\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  (( product=$1 * $2 ))\n  echo \"${product: -1}\"\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local product=1\n  for i in ${1:0:1} ${2:0:1}; do\n    product=$((product\
    \ * i))\n  done\n  echo $product\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((($1 % 10) * ($2 % 10)))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i i=$1 j=$2\n    echo $((i % 10 * j % 10))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# Write code here\n\ta=$(expr $1 % 10)\n\tb=$(expr $2 % 10)\n\techo $((a*b))\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  num1=$1\n  num2=$2\n  if [[ \"$num1\" =~ \"-\" ]]; then\n    num1=${num1:1}\n\
    \  fi\n  if [[ \"$num2\" =~ \"-\" ]]; then\n    num2=${num2:1}\n  fi\n  product=$((\
    \ $num1*$num2 ))\n  echo \"$product\" | tail -c 2\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\texpr \"$1 * $2\" | sed 's/.*\\([0-9]\\).*/\\1/'\n}\n\ncandidate() {\n \
    \   multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # TODO\n  echo $((($1 % 10) * ($2 % 10)))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    if [[ $1 == -* ]]; then\n        n1=${1//-/}\n    else\n        n1=$1\n\
    \    fi\n    if [[ $2 == -* ]]; then\n        n2=${2//-/}\n    else\n        n2=$2\n\
    \    fi\n    echo $(((n1 % 10) * (n2 % 10)))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Store the arguments passed to the function in local variables.\n  \
    \  local int1=$1\n    local int2=$2\n    # Use modulo to find the unit digits.\n\
    \    local unit1=$(( $int1 % 10 ))\n    local unit2=$(( $int2 % 10 ))\n    # Use\
    \ arithmetic expansion to multiply the numbers.\n    local product=$(( $unit1\
    \ * $unit2 ))\n    # Print the result.\n    echo $product\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    # check if both number is not 0\n    # if\
    \ they are 0, return 0\n    if [[ \"$1\" == \"0\" || \"$2\" == \"0\" ]]; then\n\
    \        echo \"0\"\n    else\n        # if both number are negative\n       \
    \ # the positive of multiplication will be negative\n        if [[ \"$1\" == \"\
    -\"* && \"$2\" == \"-\"* ]]; then\n            # remove the minus sign\n     \
    \       echo \"${1//-}\" \"${2//-}\" | awk '{ print $1*$2 }'\n        # else if\
    \ one of the numbers is negative\n        # the positive of multiplication will\
    \ be negative\n        elif [[ \"$1\" == \"-\"* || \"$2\" == \"-\"* ]]; then\n\
    \            # remove the minus sign\n            echo \"-${1//-}\" \"${2//-}\"\
    \ | awk '{ print $1*$2 }'\n        # else, just the simple multiplication\n  \
    \      else\n            echo \"$1\" \"$2\" | awk '{ print $1*$2 }'\n        fi\n\
    \    fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Insert your code here\n    :\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if [[ $1 -ge 0 && $2 -ge 0 ]]; then\n    echo $(($1%10*$2%10))\n  elif\
    \ [[ $1 -ge 0 && $2 -lt 0 ]]; then\n    echo $(($1%10*$(($2*-1))%10))\n  elif\
    \ [[ $1 -lt 0 && $2 -ge 0 ]]; then\n    echo $(($(($1*-1))%10*$2%10))\n  else\n\
    \    echo $(($(($1*-1))%10*$(($2*-1))%10))\n  fi\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1 * $2\" | bc\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Remove leading zeros\n    local int1=$(echo $1 | sed 's/^0*//')\n \
    \   local int2=$(echo $2 | sed 's/^0*//')\n    local result=$((($int1%10)*($int2%10)))\n\
    \    echo $result\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # using expr(1) to do the arithmetic and some bash string manipulations\n\
    \  # define a function that returns the last digit of an integer\n  getLastDigit()\
    \ {\n    local number=$1\n    # get the last character of the string $number\n\
    \    echo ${number: -1}\n  }\n  # define a function that returns the integer less\
    \ the last digit\n  # (which may be negative)\n  getIntegerLessLastDigit() {\n\
    \    local number=$1\n    # get all but the last character of the string $number\n\
    \    echo ${number:0:${#number}-1}\n  }\n  # get the last digits\n  local last_digit_of_a=$(getLastDigit\
    \ $1)\n  local last_digit_of_b=$(getLastDigit $2)\n  # get the integers less the\
    \ last digits\n  local int_less_last_digit_of_a=$(getIntegerLessLastDigit $1)\n\
    \  local int_less_last_digit_of_b=$(getIntegerLessLastDigit $2)\n  # calculate\
    \ the product of the last digits\n  local prod_of_last_digits=$(expr $last_digit_of_a\
    \ \\* $last_digit_of_b)\n  # calculate the product of the integers less the last\
    \ digits\n  local prod_of_int_less_last_digits=$(expr $int_less_last_digit_of_a\
    \ \\* $int_less_last_digit_of_b)\n  # calculate the product of the last digit\
    \ of the integer less the last digit\n  # of the first integer, and the integer\
    \ less the last digit of the second\n  # integer\n  local prod_of_last_digit_of_int_less_last_digit_of_a_times_int_less_last_digit_of_b=$(expr\
    \ $last_digit_of_a \\* $int_less_last_digit_of_b)\n  # calculate the product of\
    \ the last digit of the integer less the last digit\n  # of the second integer,\
    \ and the integer less the last digit of the first\n  # integer\n  local prod_of_last_digit_of_int_less_last_digit_of_\n\
    }\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  (( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    res=$(( $(($1 % 10)) * $(($2 % 10)) ))\n    echo \"$res\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\t# Get the last digit of the first integer\n\tdigit1=${1: -1}\n\t# Get the\
    \ last digit of the second integer\n\tdigit2=${2: -1}\n\t# Multiply both digits\
    \ together\n\techo $((digit1 * digit2))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -i product=$(( $1 * $2 ))\n    while (( product > 9 )); do\n  \
    \      product=$(( product / 10 ))\n    done\n    echo \"$product\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((10#$1 * 10#$2))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( ${1: -1} * ${2: -1} ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # split the parameters into 2 character variables\n    a=(${1//./ })\n\
    \    b=(${2//./ })\n    prod=0\n    d=\"$(echo ${a[0]} | tr -d '-')\" # unit digit\
    \ of a\n    e=\"$(echo ${b[0]} | tr -d '-')\" # unit digit of b\n    prod=$((d*e))\n\
    \    if [[ $prod -gt 9 ]]; then\n\tprod=$((prod/10))\n    fi\n    #printf \"%s\\\
    n\" $prod\n    echo \"$prod\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local result=0\n  local int1=$1\n  local int2=$2\n  ((int1=int1%10))\n\
    \  ((int2=int2%10))\n  ((result=int1*int2))\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local num1=$1\n  local num2=$2\n  if [[ $num1 -lt 0 ]]; then\n    num1=$((-1\
    \ * $num1))\n  fi\n  if [[ $num2 -lt 0 ]]; then\n    num2=$((-1 * $num2))\n  fi\n\
    \  local num1unit=$(($num1 % 10))\n  local num2unit=$(($num2 % 10))\n  echo $((num1unit\
    \ * num2unit))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Get the unit digit of each integer and multiply them\n    echo $((($1\
    \ % 10) * ($2 % 10)))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  n1=$1\n  n2=$2\n  if [ $n1 -lt 0 ]; then n1=$((-1 * $n1)); fi\n  if [ $n2\
    \ -lt 0 ]; then n2=$((-1 * $n2)); fi\n  if [ $n1 -eq 0 ] || [ $n2 -eq 0 ]; then\
    \ echo \"0\"; fi\n  if [ $n1 -gt 9 ] || [ $n2 -gt 9 ]; then echo \"$(($n1 % 10))$(($n2\
    \ % 10))\"; fi\n  if [ $n1 -le 9 ] && [ $n2 -le 9 ]; then echo \"$(($n1 * $n2))\"\
    ; fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\"\
    ) = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local -a a=( ${1} ) b=( ${2} )\n    local ans=1\n    for i in \"${a[@]}\"\
    \ \"${b[@]}\"; do\n        (( ans *= ${i} % 10 ))\n    done\n    echo $ans\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # get the product of the two numbers\n  product=$(($1 * $2))\n  # remove\
    \ leading zeros\n  product=${product##+(0)}\n  # get the last character of the\
    \ string\n  result=${product: -1}\n  echo $result\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  unit_1=$(echo $1 | grep -o \"[0-9]\" | tail -1)\n  unit_2=$(echo $2 | grep\
    \ -o \"[0-9]\" | tail -1)\n  echo $(($unit_1 * $unit_2))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  a=$(echo $1 | tr -d '[:space:]')\n  b=$(echo $2 | tr -d '[:space:]')\n\
    \  echo \"$a\" \"$b\" | awk '{print ($1 % 10) * ($2 % 10)}'\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local n1=\"$1\"\n    local n2=\"$2\"\n    if [[ $n1 -lt 0 ]]; then\n\
    \        n1=$((-n1))\n    fi\n    if [[ $n2 -lt 0 ]]; then\n        n2=$((-n2))\n\
    \    fi\n    local d1=$((n1 % 10))\n    local d2=$((n2 % 10))\n    echo \"$((d1\
    \ * d2))\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: -1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  product=`echo \"$1 * $2\" | bc`\n  # get the last number by subtracting\
    \ from the total\n  until [ \"$product\" -lt 10 ]; do\n    product=`echo \"$product\
    \ - 10\" | bc`\n  done\n  echo $product\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660024312
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024306
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 * $2)) | sed 's/.*\\(.\\)$/\\1/'\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    (( $1 < 0 )) && sign1=1 || sign1=0\n    (( $2 < 0 )) && sign2=1 || sign2=0\n\
    \    a=${1//-/}\n    b=${2//-/}\n    (( $sign1 + $sign2 == 0 )) && echo $((a%10\
    \ * b%10)) || echo $((10 - a%10 * b%10))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024307
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n\tif [[ $1 -lt 0 ]]; then\n\t\tlocal a=${1:1}\n\telse\n\t\tlocal a=$1\n\t\
    fi\n\tif [[ $2 -lt 0 ]]; then\n\t\tlocal b=${2:1}\n\telse\n\t\tlocal b=$2\n\t\
    fi\n\t\n\tlocal a=$(echo $a | rev | cut -c1)\n\tlocal b=$(echo $b | rev | cut\
    \ -c1)\n\tlocal c=$(( $a * $b ))\n\techo $c\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024307

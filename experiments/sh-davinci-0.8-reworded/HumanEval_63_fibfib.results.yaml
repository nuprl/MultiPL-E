language: sh
name: HumanEval_63_fibfib
results:
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ input=\"$1\"\n  [[ \"$input\" =~ ^-?[0-9]+$ ]] || { echo \"Invalid input\";\
    \ return 1; }\n  if [[ \"$input\" -le 0 ]]; then\n    echo \"0\"\n  elif [[ \"\
    $input\" -eq 1 ]]; then\n    echo \"0\"\n  elif [[ \"$input\" -eq 2 ]]; then\n\
    \    echo \"1\"\n  else\n    echo $(( $(fibfib \"$((input-1))\") + $(fibfib \"\
    $((input-2))\") + $(fibfib \"$((input-3))\") ))\n  fi\n}\n\ncandidate() {\n  \
    \  fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ (( $1 == 0 )); then\n    echo \"0\"\n  elif (( $1 == 1 )); then\n    echo \"\
    0\"\n  elif (( $1 == 2 )); then\n    echo \"1\"\n  else\n    # echo $(($(fibfib\
    \ \"$(($1-1))\") + $(fibfib \"$(($1-2))\") + $(fibfib \"$(($1-3))\")))\n    current=0\n\
    \    previous=0\n    prevprev=0\n    for (( i=2; i<$1; i++ )); do\n      current=$(($previous\
    \ + $prevprev + $current))\n      prevprev=$previous\n      previous=$current\n\
    \    done\n    echo \"$current\"\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ (($1 == 0)); then\n\t\techo \"0\"\n\t\treturn\n\tfi\n\tif (($1 == 1)); then\n\
    \t\techo \"0\"\n\t\treturn\n\tfi\n\tif (($1 == 2)); then\n\t\techo \"1\"\n\t\t\
    return\n\tfi\n\tf1=0\n\tf2=0\n\tf3=1\n\tfor ((i=3; i<=$1; i++)); do\n\t\tfn=$((f1+f2+f3))\n\
    \t\tf1=$f2\n\t\tf2=$f3\n\t\tf3=$fn\n\tdone\n\techo \"$fn\"\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -lt 2 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n\
    \    echo $(echo \"$(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\") + $(fibfib\
    \ \"$(($1-3))\")\" | bc)\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=10 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tlocal\
    \ f0=0\n\tlocal f1=0\n\tlocal f2=1\n\tlocal n=0\n\tlocal fibfib=0\n\t[ \"$1\"\
    \ -eq 0 ] && echo \"$f0\" && return\n\t[ \"$1\" -eq 1 ] && echo \"$f1\" && return\n\
    \t[ \"$1\" -eq 2 ] && echo \"$f2\" && return\n\tfor n in $(seq 3 \"$1\"); do\n\
    \t\tfibfib=$((f0+f1+f2))\n\t\tf0=$f1\n\t\tf1=$f2\n\t\tf2=$fibfib\n\tdone\n\techo\
    \ \"$fibfib\"\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" == \"0\" ]; then\n    echo \"0\"\n  elif [ \"$1\" == \"1\" ]; then\n\
    \    echo \"0\"\n  elif [ \"$1\" == \"2\" ]; then\n    echo \"1\"\n  else\n  \
    \  local n=$1\n    local n1=$(($n-1))\n    local n2=$(($n-2))\n    local n3=$(($n-3))\n\
    \    local p1=$(fibfib $n1)\n    local p2=$(fibfib $n2)\n    local p3=$(fibfib\
    \ $n3)\n    echo $(($p1+$p2+$p3))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=18 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -lt 2 ]]; then\n        echo 0\n    elif [[ $1 -eq 2 ]]; then\n      \
    \  echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2)))\
    \ + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=29 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    echo\
    \ $1 | awk 'BEGIN {\n        N = 0;\n        fib[0] = 0;\n        fib[1] = 0;\n\
    \        fib[2] = 1;\n    } {\n        N = $1;\n    } END {\n        for (i =\
    \ 3; i <= N; i++) {\n            fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n  \
    \      }\n        print fib[N];\n    }'\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ -i n=0\n    [ \"$1\" -ge 0 ] && n=$1\n    [ \"$n\" -eq 0 ] && echo 0 && return\n\
    \    [ \"$n\" -eq 1 ] && echo 0 && return\n    [ \"$n\" -eq 2 ] && echo 1 && return\n\
    \    local -i n1=0 n2=0 n3=1\n    for i in $(seq 3 $n); do\n        local -i n1_last=$n1\
    \ n2_last=$n2 n3_last=$n3\n        n1=$n2_last\n        n2=$n3_last\n        n3=$n1_last+$n2_last+$n3_last\n\
    \    done\n    echo $n3\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n    \
    \    echo 0\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n        i=3\n\
    \        a=0\n        b=0\n        c=1\n        while [ $i -le $n ]; do\n    \
    \        d=$(($a + $b + $c))\n            a=$b\n            b=$c\n           \
    \ c=$d\n            i=$(($i + 1))\n        done\n        echo $d\n    fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ -i n=$1\n    if (( n == 0 )); then\n        echo 0\n    elif (( n == 1 )); then\n\
    \        echo 0\n    elif (( n == 2 )); then\n        echo 1\n    else\n     \
    \   # For simplicity of implementation, simply do an exponential implementation.\n\
    \        # f0 = 0, f1 = 0, f2 = 1, f3 = 1\n        local -i f0=0 f1=0 f2=1 f3=1\n\
    \        while (( n-- > 3 )); do\n            f0=$f1\n            f1=$f2\n   \
    \         f2=$f3\n            f3=$(( f0 + f1 + f2 ))\n        done\n        echo\
    \ $f3\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3))) ))\n   \
    \ fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[\
    \ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[\
    \ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n \
    \   [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=41 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\t# get\
    \ the fibfib at place 1\n\tn=$1\n\t# fibfib(0) == 0\n\tif [ $n -eq 0 ]; then\n\
    \t\techo \"0\"\n\t\treturn 0\n\tfi\n\t# fibfib(1) == 0\n\tif [ $n -eq 1 ]; then\n\
    \t\techo \"0\"\n\t\treturn 0\n\tfi\n\t# fibfib(2) == 1\n\tif [ $n -eq 2 ]; then\n\
    \t\techo \"1\"\n\t\treturn 0\n\tfi\n\t# fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n\tfib_1=0\n\tfib_2=0\n\tfib_3=1\n\tfor (( i=3; i<=n; i++ ));\
    \ do\n\t\t((fib_1=fib_2))\n\t\t((fib_2=fib_3))\n\t\t((fib_3=fib_1+fib_2+fib_3))\n\
    \tdone\n\techo $fib_3\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n    \
    \    echo 0\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n        fibfib_prev=0\n\
    \        fibfib_prevprev=0\n        fibfib_prevprevprev=0\n        fibfib_current=1\n\
    \        i=3\n        while [ $i -le $n ]; do\n            fibfib_prevprevprev=$fibfib_prevprev\n\
    \            fibfib_prevprev=$fibfib_prev\n            fibfib_prev=$fibfib_current\n\
    \            fibfib_current=$((fibfib_prev+fibfib_prevprev+fibfib_prevprevprev))\n\
    \            i=$((i+1))\n        done\n        echo $fibfib_current\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    if [[ $n -lt 3 ]]; then\n        echo $(( n-1 ))\n    else\n     \
    \   echo $(( $(fibfib $(( n-1 ))) + $(fibfib $(( n-2 ))) + $(fibfib $(( n-3 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    echo\
    \ \"$1\" | awk '{\n        if ($1==0) {\n            print 0\n        } else if\
    \ ($1==1) {\n            print 0\n        } else if ($1==2) {\n            print\
    \ 1\n        } else {\n            print $1-1 \" \" $1-2 \" \" $1-3 | \"xargs\
    \ fibfib | awk '\\''{s+=$1} END {print s}'\\'' \"\n        }\n    }'\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'xargs: fibfib: No such file or directory

    '
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ input=$1\n    if [ $input -eq 0 ]; then\n        echo \"0\"\n    elif [ $input\
    \ -eq 1 ]; then\n        echo \"0\"\n    elif [ $input -eq 2 ]; then\n       \
    \ echo \"1\"\n    else\n        # Recursive call\n        echo \"$(($(fibfib $((input-1)))\
    \ + $(fibfib $((input-2))) + $(fibfib $((input-3)))))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=21 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -lt 2 ]; then\n        echo 0\n    elif [ $1 -eq 2 ]; then\n        echo\
    \ 1\n    else\n        echo $(($(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 )))\
    \ + $(fibfib $(( $1 - 3 )))))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=23 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=26 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ -a array=(0 0 1)\n    local i=2\n\n    while [ $i -lt $1 ]; do\n        array[$i]=$((\
    \ ${array[$((i-1))]} + ${array[$((i-2))]} + ${array[$((i-3))]} ))\n        i=$((i+1))\n\
    \    done\n\n    echo ${array[$((i-1))]}\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ -a fibfib_arr\n    local fibfib_cnt\n    local -a fibfib_nums\n    fibfib_nums=(0\
    \ 0 1)\n    if [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        if [[ \"$1\" -lt 3 ]];\
    \ then\n            echo \"${fibfib_nums[$1]}\"\n        else\n            for\
    \ (( fibfib_cnt=3; fibfib_cnt<\"$1\"; fibfib_cnt++ )); do\n                fibfib_arr[$fibfib_cnt]=$((fibfib_nums[$((fibfib_cnt-1))]+fibfib_nums[$((fibfib_cnt-2))]+fibfib_nums[$((fibfib_cnt-3))]))\n\
    \                fibfib_nums=(${fibfib_arr[*]})\n            done\n          \
    \  echo \"${fibfib_arr[$((fibfib_cnt-1))]}\"\n        fi\n    else\n        echo\
    \ \"Not a valid integer!\"\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ FIBFIB_RESULT=\"\"\n  if [[ \"$1\" == \"0\" ]]; then\n    FIBFIB_RESULT=\"0\"\
    \n  elif [[ \"$1\" == \"1\" ]]; then\n    FIBFIB_RESULT=\"0\"\n  elif [[ \"$1\"\
    \ == \"2\" ]]; then\n    FIBFIB_RESULT=\"1\"\n  else\n    FIBFIB_RESULT=$(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n  echo $FIBFIB_RESULT\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=12 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    let\
    \ n=$1\n\n    fibfib_seq=(0 0 1)\n    for i in $(seq 3 $n); do\n        let fibfib_seq[$i]=${fibfib_seq[$(($i-1))]}+${fibfib_seq[$(($i-2))]}+${fibfib_seq[$(($i-3))]}\n\
    \    done\n\n    echo ${fibfib_seq[$n]}\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -lt 0 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 0 ]]; then\n  \
    \      echo \"0\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n        echo $(( $(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=60 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=55 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # Implement\
    \ the fibfib function here\n  #\n  # YOUR CODE GOES HERE\n  #\n  # NOTE: Ideally,\
    \ you should not use any global variables.\n  # You may use the variables in the\
    \ test cases below, if you wish.\n  # Global variables that are used will not\
    \ cause your code to fail the automated test cases.\n  #\n  # NOTE: You may use\
    \ bc to perform calculations.\n  local input=$1\n  if [[ \"$input\" == \"0\" ]];\
    \ then\n    result=0\n  elif [[ \"$input\" == \"1\" ]]; then\n    result=0\n \
    \ elif [[ \"$input\" == \"2\" ]]; then\n    result=1\n  else\n    fibfib \"`expr\
    \ $input - 1`\"\n    local n_1=$result\n    fibfib \"`expr $input - 2`\"\n   \
    \ local n_2=$result\n    fibfib \"`expr $input - 3`\"\n    local n_3=$result\n\
    \    result=`echo \"$n_1 + $n_2 + $n_3\" | bc`\n  fi\n}\n\ncandidate() {\n   \
    \ fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -lt 2 ]; then\n        echo \"$1\"\n    else\n        echo $(( $(fibfib\
    \ \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1 - 3 ))\"\
    ) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ f0=0\n    local f1=0\n    local f2=1\n    for (( i=0; i<$1; i++ ))\n    do\n\
    \        tmp=$((f0+f1+f2))\n        f0=$f1\n        f1=$f2\n        f2=$tmp\n\
    \    done\n    echo $f0\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        x=$(fibfib\
    \ $(( $1 - 1 )) )\n        y=$(fibfib $(( $1 - 2 )) )\n        z=$(fibfib $((\
    \ $1 - 3 )) )\n        echo $(( $x + $y + $z ))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=44 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # TODO:\
    \ Write me\n  echo \"4\"\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ i n=0 a=0 b=0 c=1 n=$1\n    [ \"$n\" -le 0 ] && echo 0 && return\n    while\
    \ [ \"$i\" -lt \"$n\" ]; do\n        a=\"$b\"\n        b=\"$c\"\n        c=$((\
    \ a + b + c ))\n        i=$(( i + 1 ))\n    done\n    echo \"$c\"\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv04ki7em.sh: line 19: [: : integer expression expected

    /tmp/tmpv04ki7em.sh: line 19: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" -lt 2 ]; then\n    echo \"$1\"\n  else\n    local a=\"0\"\n    local\
    \ b=\"1\"\n    local c=\"1\"\n    local n=\"2\"\n    while [ \"$n\" -lt \"$1\"\
    \ ]; do\n      a=\"$b\"\n      b=\"$c\"\n      c=$(( $a + $b + $c ))\n      n=$((\
    \ $n + 1 ))\n    done\n    echo \"$c\"\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tfib0=0\n\
    \tfib1=0\n\tfib2=1\n\twhile [ $1 -gt 0 ]; do\n\t\tfib3=$((fib0+fib1+fib2))\n\t\
    \tfib0=$fib1\n\t\tfib1=$fib2\n\t\tfib2=$fib3\n\t\t((--1))\n\tdone\n\techo $fib0\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=66 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=63 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0 b=0 c=1\n    for ((i=1; i<n; i++)); do\n        let a=b\
    \ b=c c=a+b+c\n    done\n    echo $c\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(expr $(fibfib $(expr $1 -\
    \ 1)) + $(fibfib $(expr $1 - 2)) + $(fibfib $(expr $1 - 3)))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=32 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    a=0\n    b=0\n    c=1\n    fibfib=$((a+b+c))\n\
    \    for ((i=2; i<$1; i++)); do\n      a=$b\n      b=$c\n      c=$fibfib\n   \
    \   fibfib=$((a+b+c))\n    done\n    echo $fibfib\n  fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ (($1 == 0)) || (($1 == 1)); then\n\t\techo \"0\"\n\telif (($1 == 2)); then\n\
    \t\techo \"1\"\n\telse\n\t\tfibfib \"$(($1-1))\"\n\t\tfibfib \"$(($1-2))\"\n\t\
    \tfibfib \"$(($1-3))\"\n\tfi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 == 0 ]; then\n    echo 0\n  elif [ $1 == 1 ]; then\n    echo 0\n  elif\
    \ [ $1 == 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=52 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=46 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    a=0\n\
    \    b=0\n    c=1\n    d=1\n    e=0\n    f=1\n    g=0\n    h=0\n    i=0\n    j=0\n\
    \    k=0\n    l=0\n    m=0\n    n=0\n    o=0\n    p=0\n    q=0\n    r=0\n    s=0\n\
    \    t=0\n    u=0\n    v=0\n    w=0\n    x=0\n    y=0\n    z=0\n    for (( i=2;\
    \ i<=$1; i++ )); do\n        if [ \"$i\" -gt \"2\" ]; then\n            d=$((\
    \ d + 1 ))\n        fi\n        for (( j=0; j<$d; j++ )); do\n            if [\
    \ \"$j\" -eq \"0\" ]; then\n                e=$c\n                f=$b\n     \
    \           g=$a\n            else\n                e=$(( e + f ))\n         \
    \       f=$(( f + g ))\n                g=$(( g + e ))\n            fi\n     \
    \   done\n        if [ \"$i\" -gt \"2\" ]; then\n            h=$(( h + 1 ))\n\
    \        fi\n        for (( k=0; k<$h; k++ )); do\n            if [ \"$k\" -eq\
    \ \"0\" ]; then\n                i=$f\n                j=$e\n                k=$d\n\
    \            else\n                i=$(( i + j ))\n                j=$(( j + k\
    \ ))\n                k=$(( k + i ))\n            fi\n        done\n        if\
    \ [ \"$i\" -gt \"2\" ]; then\n            l=$(( l + 1 ))\n        fi\n       \
    \ for (( m=0; m<$l; m++ )); do\n            if [ \"$m\" -eq \"0\" ]; then\n  \
    \              n=$j\n                o=$i\n                p=$h\n            else\n\
    \                n=$(( n + o ))\n                o=$(( o + p ))\n            \
    \    p=$(( p + n ))\n            fi\n        done\n        if [ \"$i\" -gt \"\
    2\" ]; then\n            q=$(( q + 1 ))\n        fi\n        for (( r=0; r<$q;\
    \ r++\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[\
    \ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[\
    \ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n \
    \   [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6wyvor0n.sh: line 89: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6wyvor0n.sh: line 108: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ (( $1 == 0 )) || (( $1 == 1 )); then\n        echo 0\n    elif (( $1 == 2 ));\
    \ then\n        echo 1\n    else\n        fibfib $(( $1 - 1 ))\n        fibfib\
    \ $(( $1 - 2 ))\n        fibfib $(( $1 - 3 ))\n    fi\n}\n\ncandidate() {\n  \
    \  fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 1 ]]; then\n  \
    \      echo \"0\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n\
    \        echo $(( $(fibfib $(( $1 - 1 )) ) + $(fibfib $(( $1 - 2 )) ) + $(fibfib\
    \ $(( $1 - 3 )) ) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=69 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=67 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [ \"$1\" -eq \"0\" ]; then\n\t\techo \"0\"\n\t\treturn\n\tfi\n\tif [ \"$1\"\
    \ -eq \"1\" ]; then\n\t\techo \"0\"\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"2\"\
    \ ]; then\n\t\techo \"1\"\n\t\treturn\n\tfi\n\tprev1=$(fibfib \"$(($1-1))\")\n\
    \tprev2=$(fibfib \"$(($1-2))\")\n\tprev3=$(fibfib \"$(($1-3))\")\n\techo \"$(($prev1+$prev2+$prev3))\"\
    \n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=39 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ ! \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"error: fibfib: '$1' is not\
    \ an integer\"\n        return 1\n    fi\n    if [[ \"$1\" -le 0 ]]; then\n  \
    \      echo \"0\"\n        return 0\n    fi\n    if [[ \"$1\" -le 2 ]]; then\n\
    \        echo \"1\"\n        return 0\n    fi\n    local -i first=0\n    local\
    \ -i second=1\n    local -i third=1\n    local -i result=0\n    for ((i=3; i<=\"\
    $1\"; i++)); do\n        result=$(( first + second + third ))\n        first=$second\n\
    \        second=$third\n        third=$result\n    done\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    case\
    \ $1 in\n        0)\n            echo \"0\"\n            ;;\n        1)\n    \
    \        echo \"0\"\n            ;;\n        2)\n            echo \"1\"\n    \
    \        ;;\n        *)\n            echo $(($(fibfib \"$(($1-1))\") + $(fibfib\
    \ \"$(($1-2))\") + $(fibfib \"$(($1-3))\")))\n            ;;\n    esac\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=72 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=70 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ fiblist\n    fiblist=(0 0 1)\n    local i=0\n    local n=$1\n    if [[ $n -lt\
    \ 1 ]]; then\n        echo \"Invalid argument: must be a positive integer\" >&2\n\
    \        return 1\n    fi\n    for ((i=3; i<=n; i++)); do\n        fiblist+=($((fiblist[i-1]+fiblist[i-2]+fiblist[i-3])))\n\
    \    done\n    echo ${fiblist[n]}\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ a and b are the three previous values\n    # c is the current value\n    a=0\n\
    \    b=0\n    c=1\n    if [[ \"$1\" == \"0\" ]]; then\n        echo \"$a\"\n \
    \   elif [[ \"$1\" == \"1\" ]]; then\n        echo \"$b\"\n    elif [[ \"$1\"\
    \ == \"2\" ]]; then\n        echo \"$c\"\n    else\n        # loop through the\
    \ sequence\n        for i in $(seq 3 \"$1\"); do\n            # calculate the\
    \ next fibfib value\n            d=$((a + b + c))\n            # move the values\
    \ to the next position in the sequence\n            a=$b\n            b=$c\n \
    \           c=$d\n        done\n        echo \"$d\"\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ i\n  if [[ \"$1\" == \"0\" ]]; then\n    echo \"0\"\n  elif [[ \"$1\" == \"\
    1\" ]]; then\n    echo \"0\"\n  elif [[ \"$1\" == \"2\" ]]; then\n    echo \"\
    1\"\n  else\n    local fib0=0\n    local fib1=0\n    local fib2=1\n    local fib3\n\
    \    for ((i=3; i<=\"$1\"; i++)); do\n      fib3=$((fib0+fib1+fib2))\n      fib0=$fib1\n\
    \      fib1=$fib2\n      fib2=$fib3\n    done\n    echo \"$fib3\"\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    [[\
    \ -z $1 ]] && { echo \"fibfib: missing argument!\"; return; }\n    local n=\"\
    $1\"\n    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n\
    \        echo 0\n    elif [[ $n -eq 2 ]]; then\n        echo 1\n    else\n   \
    \     echo \"$(( $(fibfib $(( n - 1 ))) + $(fibfib $(( n - 2 ))) + $(fibfib $((\
    \ n - 3 ))) ))\"\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=54 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=68 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))\
    \ ) + $(fibfib $(( $1 - 2 )) ) + $(fibfib $(( $1 - 3 )) ) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=49 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=62 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -lt 0 ]]; then\n        return 1\n    fi\n    echo $((\\\n        ( (\
    \ $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 )))\
    \ ) ) \\\n    ))\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkyylw72y.sh: line 22: ( (  +  +  ) )     : syntax error: operand
    expected (error token is ") )     ")

    /tmp/tmpkyylw72y.sh: line 22: ( (  +  +  ) )     : syntax error: operand expected
    (error token is ") )     ")

    /tmp/tmpkyylw72y.sh: line 22: ( (  +  +  ) )     : syntax error: operand expected
    (error token is ") )     ")

    /tmp/tmpkyylw72y.sh: line 22: ( (  +  +  ) )     : syntax error: operand expected
    (error token is ") )     ")

    '
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [[ -z $1 ]]; then\n\t\treturn 1\n\tfi\n\tcase $1 in\n\t\t0) echo 0 ;;\n\t\t\
    1) echo 0 ;;\n\t\t2) echo 1 ;;\n\t\t*) echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3))))) ;;\n\tesac\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=36 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    a=0\n\
    \    b=0\n    c=1\n    for ((i=1; i<$1; i++)); do\n        d=$((a+b+c))\n    \
    \    a=$b\n        b=$c\n        c=$d\n    done\n    echo $c\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [ $1 -eq 0 ]; then\n\t\techo 0\n\telif [ $1 -eq 1 ]; then\n\t\techo 0\n\telif\
    \ [ $1 -eq 2 ]; then\n\t\techo 1\n\telse\n\t\techo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n\tfi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=50 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tlocal\
    \ f0=0\n\tlocal f1=0\n\tlocal f2=1\n\tif [[ $1 -eq 0 ]]; then\n\t\techo $f0\n\t\
    elif [[ $1 -eq 1 ]]; then\n\t\techo $f1\n\telif [[ $1 -eq 2 ]]; then\n\t\techo\
    \ $f2\n\telse\n\t\tlocal i=3\n\t\tlocal f3=0\n\t\twhile [[ $i -le $1 ]]; do\n\t\
    \t\tf3=$((f0+f1+f2))\n\t\t\tf0=$f1\n\t\t\tf1=$f2\n\t\t\tf2=$f3\n\t\t\ti=$((i+1))\n\
    \t\tdone\n\t\techo $f3\n\tfi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ num=\"$1\"\n  if [ \"$num\" -le \"2\" ]; then\n    echo \"0\"\n  elif [ \"$num\"\
    \ -eq \"3\" ]; then\n    echo \"1\"\n  else\n    local fibfib_minus_one=\"0\"\n\
    \    local fibfib_minus_two=\"0\"\n    local fibfib_minus_three=\"1\"\n    local\
    \ fibfib_num=\"0\"\n    for (( i = 4; i <= \"$num\"; i++ )); do\n      fibfib_num=$((\
    \ fibfib_minus_one + fibfib_minus_two + fibfib_minus_three ))\n      fibfib_minus_three=$fibfib_minus_two\n\
    \      fibfib_minus_two=$fibfib_minus_one\n      fibfib_minus_one=$fibfib_num\n\
    \    done\n    echo \"$fibfib_num\"\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024270
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # code\
    \ here\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n  \
    \  [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgwxlpygf.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmpgwxlpygf.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660024270
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ num=$1\n    if [ $num -eq 0 ]; then\n        echo \"0\"\n    elif [ $num -eq\
    \ 1 ]; then\n        echo \"0\"\n    elif [ $num -eq 2 ]; then\n        echo \"\
    1\"\n    else\n        local n1=$(fibfib $((num-1)))\n        local n2=$(fibfib\
    \ $((num-2)))\n        local n3=$(fibfib $((num-3)))\n        local sum=$((n1+n2+n3))\n\
    \        echo \"$sum\"\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=53 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -lt 0 ]]; then\n        echo \"error: $1 must be greater than 0\"\n  \
    \      return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n       \
    \ return 0\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo 0\n        return\
    \ 0\n    fi\n    if [[ $1 -eq 2 ]]; then\n        echo 1\n        return 0\n \
    \   fi\n    a=0\n    b=0\n    c=1\n    for ((i=3; i<=$1; i++)); do\n        a=$b\n\
    \        b=$c\n        c=$((a+b+c))\n    done\n    echo $c\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \n    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n\
    \        echo 0\n    elif [[ $n -eq 2 ]]; then\n        echo 1\n    else\n   \
    \     fibfib_minus_3=0\n        fibfib_minus_2=0\n        fibfib_minus_1=1\n \
    \       fibfib_total=0\n        for ((i=3; i<=$n; i++)); do\n            fibfib_total=$((fibfib_minus_1\
    \ + fibfib_minus_2 + fibfib_minus_3))\n            fibfib_minus_3=$fibfib_minus_2\n\
    \            fibfib_minus_2=$fibfib_minus_1\n            fibfib_minus_1=$fibfib_total\n\
    \        done\n        echo $fibfib_total\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 == \"0\" ]]; then\n        echo \"0\"\n    elif [[ $1 == \"1\" ]]; then\n\
    \        echo \"0\"\n    elif [[ $1 == \"2\" ]]; then\n        echo \"1\"\n  \
    \  else\n        local f1=$(fibfib \"0\")\n        local f2=$(fibfib \"1\")\n\
    \        local f3=$(fibfib \"2\")\n        local n=\"2\"\n        while [[ $n\
    \ -lt $1 ]]; do\n            local f4=$((f1 + f2 + f3))\n            f1=$f2\n\
    \            f2=$f3\n            f3=$f4\n            ((n=n+1))\n        done\n\
    \        echo \"$f3\"\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #TODO\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqpsh_xh3.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmpqpsh_xh3.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  n=\"\
    $1\"\n  echo $n\n  fib_array=(0 0 1)\n  for (( i=3; i<=n; i++ )); do\n    fib_array+=(\
    \ $((${fib_array[$(($i-1))]} + ${fib_array[$(($i-2))]} + ${fib_array[$(($i-3))]}))\
    \ )\n  done\n  echo ${fib_array[$(($n-1))]}\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [[ $n == \"0\" ]]; then\n        echo 0\n    elif [[ $n == \"1\" ]]; then\n\
    \        echo 0\n    elif [[ $n == \"2\" ]]; then\n        echo 1\n    else\n\
    \        echo $(( $(fibfib $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3)))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=76 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=73 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [ \"$n\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$n\" -eq\
    \ \"1\" ]; then\n        echo \"0\"\n    elif [ \"$n\" -eq \"2\" ]; then\n   \
    \     echo \"1\"\n    else\n        fibfib $((n-1)) | awk '{print $1 + $2 + $3}'\
    \ $(fibfib $((n-2))) $(fibfib $((n-3)))\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: fatal: cannot open file `0'' for reading (No such file
    or directory)

    awk: fatal: cannot open file `0'' for reading (No such file or directory)

    awk: fatal: cannot open file `0'' for reading (No such file or directory)

    '
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ Create an array with the first three fibfib numbers. This is the base\n    #\
    \ case of the recursive function and the array is the main data structure\n  \
    \  # in the program. The elements of the array are the state of the\n    # fibfib\
    \ sequence up to the \"index\" provided as an argument.\n    local -a fib=(0 0\
    \ 1)\n    # Set a pointer to the first element of the array\n    local pointer=0\n\
    \    # Set the index for the fibfib number to compute\n    local index=$1\n  \
    \  # Set the loop counter to 0\n    local i=0\n    # The index is provided as\
    \ an argument, but if it's not or it's not a number\n    # just return the first\
    \ element of the array\n    if ! [[ $index =~ ^[0-9]+$ ]]; then\n        index=0\n\
    \    fi\n    # Iterate over the array for the number of times equal to the index\n\
    \    while [ $i -lt $index ]; do\n        # Store the sum of the three elements\
    \ of the array\n        local sum=$(( ${fib[0]} + ${fib[1]} + ${fib[2]} ))\n \
    \       # Shift the array by one element\n        fib=(${fib[1]} ${fib[2]} $sum)\n\
    \        # increment the loop counter\n        i=$(( i + 1 ))\n    done\n    #\
    \ If the index was 0, 1 or 2 the fibfib number is the first element of the array\n\
    \    # because the base case is contained in the array\n    if [ $index -lt 3\
    \ ]; then\n        pointer=0\n    # Otherwise, the fibfib number is the last element\
    \ of the array\n    else\n        pointer=2\n    fi\n    # Print the fibfib number\n\
    \    echo ${fib[$pointer]}\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -le 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 )) ) + $(fibfib $(( $1 - 2 )) ) + $(fibfib $(( $1 -\
    \ 3 )) ) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=57 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ num=$1\n    if [ $num -eq 0 ]; then\n        echo \"0\"\n    elif [ $num -eq\
    \ 1 ]; then\n        echo \"0\"\n    elif [ $num -eq 2 ]; then\n        echo \"\
    1\"\n    else\n        # fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        # fibfib(n) == 2 * fibfib(n-2) + fibfib(n-3)\n        local n2=$(($num\
    \ - 2))\n        local n3=$(($num - 3))\n        local value=$(fibfib $n2)\n \
    \       value=$(($value * 2))\n        value=$(($value + $(fibfib $n3)))\n   \
    \     echo $value\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ old\n    declare -a fib\n    while read -r line\n    do\n        old=$line\n\
    \        fib=(\"${fib[@]}\" \"$line\")\n    done < <(echo -e \"0\\n0\\n1\" | while\
    \ read -r i\n    do\n        if [ \"${#fib[@]}\" -lt 3 ]\n        then\n     \
    \       echo \"$old\"\n        else\n            let f=${fib[-1]}+${fib[-2]}+${fib[-3]}\n\
    \            echo \"$f\"\n        fi\n    done)\n    echo ${fib[$1]}\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 1 ]]; then\n        echo 0\n    elif [[ $1 -eq 2 ]]; then\n      \
    \  echo 1\n    else\n        # -n, --integer-scale, multiply floating point result\
    \ with this number\n        # so, 123.7 will be 123700\n        # and 123700 divided\
    \ by 100 will be 1237\n        echo \"$(($(fibfib \"$(($1 - 1))\") * 100 + $(fibfib\
    \ \"$(($1 - 2))\") * 100 + $(fibfib \"$(($1 - 3))\") * 100))\" | sed -e 's/..$/.&/'\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=18 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=34 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=28 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # implementing\
    \ a fibonacci sequence generator\n  # for additional details about this approach\
    \ see here:\n  # https://math.stackexchange.com/questions/1313310/fib-recursive-definition-gives-a-fib-1-fib-2-fib-n-2\n\
    \  #\n  # the generator will generate fibfib numbers (fibonacci sequence with\
    \ additional initial conditions)\n  # depending on the $1 argument.\n\n  # get\
    \ the number of elements to generate\n  count=$1\n\n  # an auxiliary function\
    \ to help generate fibonacci numbers\n  fibo() {\n    # set initial values\n \
    \   F[0]=0\n    F[1]=0\n    F[2]=1\n\n    # generate the fibonacci numbers\n \
    \   for ((i=3; i<=$count; i++)); do\n      # add the last three elements and add\
    \ them to the end of the array\n      F[$i]=$(( ${F[$((i-1))]} + ${F[$((i-2))]}\
    \ + ${F[$((i-3))]} ))\n    done\n\n    # output the last element\n    echo ${F[$count]}\n\
    \  }\n\n  # execute the function\n  fibo\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    prev=0\n\
    \    curr=0\n    result=0\n    n=1\n    while [ $n -le $1 ]; do\n        if [\
    \ $n -eq 1 ]; then\n            result=0\n        elif [ $n -eq 2 ]; then\n  \
    \          result=1\n        else\n            result=$(( $prev + $curr + $result\
    \ ))\n            prev=$curr\n            curr=$result\n        fi\n        n=$((\
    \ $n + 1 ))\n    done\n    echo $result\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        local a=$(fibfib\
    \ $(($1-1)))\n        local b=$(fibfib $(($1-2)))\n        local c=$(fibfib $(($1-3)))\n\
    \        echo $((a+b+c))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local f\n    for ((i=0; i<$1; i++));\
    \ do\n        f=$a\n        a=$b\n        b=$c\n        c=$((a+b+f))\n    done\n\
    \    echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ TODO\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n  \
    \  [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqpfax23s.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmpqpfax23s.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -lt 3 ]]; then\n    echo 0\n  else\n    echo $(( $(fibfib $(($1-1))) +\
    \ $(fibfib $(($1-2))) + $(fibfib $(($1-3))) ))\n  fi\n}\n\ncandidate() {\n   \
    \ fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  declare\
    \ -a a=(0 0 1)\n  [ -z \"$1\" ] && echo \"Error: need an argument\" 1>&2 && return\
    \ 1\n  if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n    echo \"Error: argument is not\
    \ an integer\" 1>&2\n    return 1\n  fi\n  if [ \"$1\" -eq 0 ]; then\n    echo\
    \ 0\n    return 0\n  fi\n  if [ \"$1\" -eq 1 ]; then\n    echo 0\n    return 0\n\
    \  fi\n  if [ \"$1\" -eq 2 ]; then\n    echo 1\n    return 0\n  fi\n  for ((i=3;\
    \ i<=$1; i++)); do\n    a[0]=${a[1]}\n    a[1]=${a[2]}\n    a[2]=$((a[0]+a[1]+a[2]))\n\
    \  done\n  echo ${a[2]}\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  case\
    \ $1 in\n    1) echo 0;;\n    2) echo 0;;\n    3) echo 1;;\n    *) echo $(( $(fibfib\
    \ \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1 - 3 ))\"\
    ) ))\n  esac\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # your\
    \ code here\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd552nvej.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmpd552nvej.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" -eq 0 ]; then\n    echo 0\n  elif [ \"$1\" -eq 1 ]; then\n    echo\
    \ 0\n  elif [ \"$1\" -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=78 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ num=$1\n  local fibfib_0=0\n  local fibfib_1=0\n  local fibfib_2=1\n  local\
    \ result=0\n  local i=3\n  if [ \"$num\" -eq 0 ]; then\n    echo $fibfib_0\n \
    \ elif [ \"$num\" -eq 1 ]; then\n    echo $fibfib_1\n  elif [ \"$num\" -eq 2 ];\
    \ then\n    echo $fibfib_2\n  else\n    while [ \"$i\" -le \"$num\" ]; do\n  \
    \    result=$(( $fibfib_0 + $fibfib_1 + $fibfib_2 ))\n      fibfib_0=$fibfib_1\n\
    \      fibfib_1=$fibfib_2\n      fibfib_2=$result\n      i=$(( $i + 1 ))\n   \
    \ done\n    echo $result\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ \"$1\" == \"0\" ]]; then\n    echo \"0\"\n  elif [[ \"$1\" == \"1\" ]]; then\n\
    \    echo \"0\"\n  elif [[ \"$1\" == \"2\" ]]; then\n    echo \"1\"\n  else\n\
    \    echo $(( $(fibfib \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib\
    \ \"$(( $1 - 3 ))\") ))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=86 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  declare\
    \ -i n=$1\n  declare -i n_1\n  declare -i n_2\n  declare -i n_3\n  declare -i\
    \ n_res\n  n_1=0\n  n_2=0\n  n_3=1\n  if [[ $n -eq 0 ]]; then\n    echo $n_1\n\
    \  elif [[ $n -eq 1 ]]; then\n    echo $n_2\n  elif [[ $n -eq 2 ]]; then\n   \
    \ echo $n_3\n  else\n    for i in $(seq 3 $n); do\n      n_res=$(($n_1 + $n_2\
    \ + $n_3))\n      n_1=$n_2\n      n_2=$n_3\n      n_3=$n_res\n    done\n    echo\
    \ $n_res\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\ta=0\n\
    \tb=0\n\tc=1\n\td=0\n\tif [ \"$1\" -gt 0 ]; then\n\t\tfor (( i=1; i<\"$1\"; i++\
    \ ))\n\t\tdo\n\t\t\td=$(($a+$b+$c))\n\t\t\ta=$b\n\t\t\tb=$c\n\t\t\tc=$d\n\t\t\
    done\n\t\techo $d\n\telse\n\t\techo 0\n\tfi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 == \"0\" ]; then\n        echo \"0\"\n    elif [ $1 == \"1\" ]; then\n\
    \        echo \"0\"\n    elif [ $1 == \"2\" ]; then\n        echo \"1\"\n    else\n\
    \        prev=0\n        prevprev=0\n        prevprevprev=1\n        prevprevprevprev=0\n\
    \        for (( i=0; i<$1; i++ )); do\n            fib=$(($prevprev + $prevprevprev\
    \ + $prevprevprevprev))\n            prevprevprevprev=$prevprevprev\n        \
    \    prevprevprev=$prevprev\n            prevprev=$prev\n            prev=$fib\n\
    \        done\n        echo $fib\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [[ $n == \"0\" ]]; then\n        echo 0\n    elif [[ $n == \"1\" ]]; then\n\
    \        echo 0\n    elif [[ $n == \"2\" ]]; then\n        echo 1\n    else\n\
    \        result=$(($(fibfib $(($n-1))) + $(fibfib $(($n-2))) + $(fibfib $(($n-3)))))\n\
    \        echo $result\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=82 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=80 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -le 2 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 3 ]]; then\n  \
    \      echo \"1\"\n    else\n        i=3\n        fib0=0\n        fib1=0\n   \
    \     fib2=1\n        while [[ $i -lt $1 ]]; do\n            fib3=$(( fib0 + fib1\
    \ + fib2 ))\n            fib0=$fib1\n            fib1=$fib2\n            fib2=$fib3\n\
    \            ((i++))\n        done\n        echo \"$fib3\"\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ a=0 b=0 c=1 i=1\n    local n=$1\n    if [[ $n -eq 0 ]]; then\n        printf\
    \ \"%d\" \"$a\"\n    elif [[ $n -eq 1 ]]; then\n        printf \"%d\" \"$b\"\n\
    \    elif [[ $n -eq 2 ]]; then\n        printf \"%d\" \"$c\"\n    else\n     \
    \   while [[ $i -lt $n ]]; do\n            ((a=b, b=c, c=a+b+c, i++))\n      \
    \  done\n        printf \"%d\" \"$c\"\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [ \"$1\" -eq 0 ]; then\n\t\techo 0\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq 1 ];\
    \ then\n\t\techo 0\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq 2 ]; then\n\t\techo 1\n\
    \t\treturn\n\tfi\n\ta=0\n\tb=0\n\tc=1\n\tres=0\n\tfor ((i=1; i<$1; i++)); do\n\
    \t\tres=$((a+b+c))\n\t\ta=$b\n\t\tb=$c\n\t\tc=$res\n\tdone\n\techo $res\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ ! $1 =~ ^[0-9]+$ ]]; then\n        return 1\n    fi\n    local n=$1\n   \
    \ if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n   \
    \     echo 0\n    elif [[ $n -eq 2 ]]; then\n        echo 1\n    else\n      \
    \  echo $(( $(fibfib $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=22 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ (( $1 == 0 )); then\n    echo \"0\"\n  elif (( $1 == 1 )); then\n    echo \"\
    0\"\n  elif (( $1 == 2 )); then\n    echo \"1\"\n  else\n    num1=0\n    num2=0\n\
    \    num3=1\n    counter=3\n    while (( $counter <= $1 )); do\n      (( total\
    \ = num1 + num2 + num3 ))\n      num1=$num2\n      num2=$num3\n      num3=$total\n\
    \      (( counter++ ))\n    done\n    echo \"$total\"\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        f1=0\n   \
    \     f2=0\n        f3=1\n        while [ $1 -gt 2 ]; do\n            temp=$f3\n\
    \            f3=$((f1+f2+f3))\n            f1=$f2\n            f2=$temp\n    \
    \        let \"1--\"\n        done\n        echo $f3\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=79 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=38 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    seq=\"\
    0 0 1\"\n    while [ ${#seq} -lt $1 ]; do\n        seq=\"$seq $(echo $seq | awk\
    \ '{print $NF + $NF-1 + $NF-2}')\"\n    done\n    echo $seq | awk '{print $'$1'}'\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ b=\"$1\"\n  [ \"$b\" -eq 0 ] && printf '0' && return\n  [ \"$b\" -eq 1 ] &&\
    \ printf '0' && return\n  [ \"$b\" -eq 2 ] && printf '1' && return\n  local a1=0\
    \ a2=0 a3=1\n  for ((a=3; a<=b; a++)); do\n    local tmp=\"$a1\"\n    a1=\"$a2\"\
    \n    a2=\"$a3\"\n    a3=$((a1+a2+tmp))\n  done\n  printf '%s' \"$a3\"\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ fibfib_fibfib_seq[0]=0\n    local fibfib_fibfib_seq[1]=0\n    local fibfib_fibfib_seq[2]=1\n\
    \    local fibfib_fibfib_len=${#fibfib_fibfib_seq[@]}\n    if [[ $1 -lt ${fibfib_fibfib_len}\
    \ ]]; then\n        echo \"${fibfib_fibfib_seq[$1]}\"\n    else\n        for ((i\
    \ = ${fibfib_fibfib_len}; i <= $1; i++)); do\n            fibfib_fibfib_seq[$i]=$((\
    \ fibfib_fibfib_seq[i-1] + fibfib_fibfib_seq[i-2] + fibfib_fibfib_seq[i-3] ))\n\
    \        done\n        echo \"${fibfib_fibfib_seq[$1]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ z zz zzz\n    z=\"$1\"\n    [ \"$z\" -eq 0 ] && echo 0 && return\n    [ \"$z\"\
    \ -eq 1 ] && echo 0 && return\n    [ \"$z\" -eq 2 ] && echo 1 && return\n    zz=$(($z-1))\n\
    \    zzz=$(($z-2))\n    echo $(( $(fibfib \"$zz\") + $(fibfib \"$zzz\") + $(fibfib\
    \ \"$(($zzz-1))\") ))\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=92 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=74 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    case\
    \ $1 in\n        0) echo 0 ;;\n        1) echo 0 ;;\n        2) echo 1 ;;\n  \
    \      *) echo $(expr $(fibfib $(expr $1 - 1)) + $(fibfib $(expr $1 - 2)) + $(fibfib\
    \ $(expr $1 - 3))) ;;\n    esac\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=83 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 == \"0\" ]; then\n    echo \"0\"\n  elif [ $1 == \"1\" ]; then\n    echo\
    \ \"0\"\n  elif [ $1 == \"2\" ]; then\n    echo \"1\"\n  else\n    let a=$(fibfib\
    \ $(( $1 - 1 )))\n    let b=$(fibfib $(( $1 - 2 )))\n    let c=$(fibfib $(( $1\
    \ - 3 )))\n    let a+=$b\n    let a+=$c\n    echo $a\n  fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -le 2 ]; then\n    echo 0\n  elif [ $1 -eq 3 ]; then\n    echo 1\n  else\n\
    \    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $((\
    \ $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  num=$1\n\
    \  if [ \"$num\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [ \"$num\" -eq \"1\"\
    \ ]; then\n    echo \"0\"\n  elif [ \"$num\" -eq \"2\" ]; then\n    echo \"1\"\
    \n  else\n    a=0\n    b=0\n    c=1\n    for i in $(seq 3 $num); do\n      a=$b\n\
    \      b=$c\n      c=$(( a + b + c ))\n    done\n    echo \"$c\"\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    echo\
    \ $(fibfib_rec \"$1\" 0 1 0)\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpojx_o_xt.sh: line 17: fibfib_rec: command not found

    '
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ \"$1\" -eq 0 ]]; then\n        echo 0\n    elif [[ \"$1\" -eq 1 ]]; then\n\
    \        echo 0\n    elif [[ \"$1\" -eq 2 ]]; then\n        echo 1\n    else\n\
    \        echo $(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\") + $(fibfib\
    \ \"$(($1-3))\")))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=26 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -lt 3 ]]; then\n        echo $((2 - $1))\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    f1=0\n    f2=0\n    f3=1\n    for\
    \ i in $(seq 3 $1); do\n      f4=$((f1+f2+f3))\n      f1=$f2\n      f2=$f3\n \
    \     f3=$f4\n    done\n    echo $f4\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 1 ]]; then\n  \
    \      echo \"0\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n\
    \        echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib\
    \ $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 == 0 ]]; then\n        echo 0\n    elif [[ $1 == 1 ]]; then\n        echo\
    \ 0\n    elif [[ $1 == 2 ]]; then\n        echo 1\n    else\n        (( $1 - 1\
    \ ))\n        fibfib $?\n        a=$?\n        (( $1 - 2 ))\n        fibfib $?\n\
    \        b=$?\n        (( $1 - 3 ))\n        fibfib $?\n        c=$?\n       \
    \ (( a + b + c ))\n        echo $?\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -le 0 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 1 ]]; then\n  \
    \      echo \"0\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n\
    \        a=$(fibfib \"$(($1-1))\")\n        b=$(fibfib \"$(($1-2))\")\n      \
    \  c=$(fibfib \"$(($1-3))\")\n        echo \"$(($a+$b+$c))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=61 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  n=$1\n\
    \  if [[ $n -eq 0 ]]; then\n    echo 0\n  elif [[ $n -eq 1 ]]; then\n    echo\
    \ 0\n  elif [[ $n -eq 2 ]]; then\n    echo 1\n  else\n    f1=0\n    f2=0\n   \
    \ f3=1\n    for ((i=3; i<=n; i++)); do\n      f4=$((f1+f2+f3))\n      f1=$f2\n\
    \      f2=$f3\n      f3=$f4\n    done\n    echo $f4\n  fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    a=0\n\
    \    b=0\n    c=1\n    for i in $(seq \"$1\")\n    do\n        a=$b\n        b=$c\n\
    \        c=$((a+b+c))\n    done\n    echo \"$a\"\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n   local\
    \ n=$1;\n   if [ $n -le 0 ]; then\n       echo 0;\n   elif [ $n -eq 1 ]; then\n\
    \       echo 0;\n   elif [ $n -eq 2 ]; then\n       echo 1;\n   else\n       echo\
    \ $(($(fibfib $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3)))));\n   fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=85 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=77 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # Your\
    \ code here\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp99isrt0o.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmp99isrt0o.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    \
    \    if [ \"$1\" -lt \"0\" ]; then\n                echo \"Error: argument must\
    \ be a positive integer\"\n                return 1\n        fi\n        if [\
    \ \"$1\" -eq \"0\" ]; then\n                echo \"0\"\n                return\
    \ 0\n        fi\n        if [ \"$1\" -eq \"1\" ]; then\n                echo \"\
    0\"\n                return 0\n        fi\n        if [ \"$1\" -eq \"2\" ]; then\n\
    \                echo \"1\"\n                return 0\n        fi\n        if\
    \ [ \"$1\" -gt \"2\" ]; then\n                y=0\n                x=1\n     \
    \           z=1\n                while [ \"$x\" -lt \"$1\" ]; do\n           \
    \             y=$(expr $y + $z)\n                        z=$(expr $y + $z)\n \
    \                       x=$(expr $x + 2)\n                done\n             \
    \   echo \"$y\"\n                return 0\n        fi\n}\n\ncandidate() {\n  \
    \  fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tlocal\
    \ n=$1\n\tif [ \"$n\" -lt \"2\" ]; then\n\t\techo \"0\"\n\telif [ \"$n\" -eq \"\
    2\" ]; then\n\t\techo \"1\"\n\telse\n\t\t# get all of the past fibfib numbers,\
    \ and apply bc to them to compute the fibfib of n\n\t\t# bc is a calculator that\
    \ understands and can compute floating point arithmetic.\n\t\techo \"$(fibfib\
    \ \"$(($n-1))\") + $(fibfib \"$(($n-2))\") + $(fibfib \"$(($n-3))\")\" | bc\n\t\
    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -lt 3 ]; then\n        echo \"$1\"\n    else\n        echo $(( $(fibfib\
    \ \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1 - 3 ))\"\
    ) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n   local\
    \ I N\n   I=0\n   N=$1\n   for (( I=0; $I<$N; I=$I+1 )); do\n     echo -n $I\n\
    \   done\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -lt 3 ]; then\n        echo \"$(( $1 - 1 ))\"\n    else\n        echo $((\
    \ $(fibfib \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1\
    \ - 3 ))\") ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    # your code goes here\n    echo\
    \ \"0\"\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    if [[ \"$n\" -eq 0 ]]; then\n        echo 0\n    elif [[ \"$n\" -eq\
    \ 1 ]]; then\n        echo 0\n    elif [[ \"$n\" -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fibfib \"$((n-1))\") + $(fibfib \"$((n-2))\"\
    ) + $(fibfib \"$((n-3))\") ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=36 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ i n a b c\n    n=$1\n    a=0\n    b=0\n    c=1\n    for ((i=0; i<n; i++)); do\n\
    \        a=$b\n        b=$c\n        c=$((a+b+c))\n    done\n    echo $a\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    result=\"\
    0\"\n    if [ $1 -eq 0 ]; then\n        result=\"0\"\n    elif [ $1 -eq 1 ]; then\n\
    \        result=\"0\"\n    elif [ $1 -eq 2 ]; then\n        result=\"1\"\n   \
    \ else\n        fib_minus_one=\"1\"\n        fib_minus_two=\"0\"\n        fib_minus_three=\"\
    0\"\n        i=3\n        while [ $i -le $1 ]; do\n            result=$(echo \"\
    $fib_minus_one + $fib_minus_two + $fib_minus_three\" | bc)\n            fib_minus_three=$fib_minus_two\n\
    \            fib_minus_two=$fib_minus_one\n            fib_minus_one=$result\n\
    \            i=$(( $i + 1 ))\n        done\n    fi\n    echo $result\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    [[\
    \ $1 -eq 0 ]] && echo 0\n    [[ $1 -eq 1 ]] && echo 0\n    [[ $1 -eq 2 ]] && echo\
    \ 1\n    fibfib $(( $1 - 1 )) | bc\n    fibfib $(( $1 - 2 )) | bc\n    fibfib\
    \ $(( $1 - 3 )) | bc\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=49 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=39 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ \"$1\" -eq 0 ]]; then\n        echo 0\n    elif [[ \"$1\" -eq 1 ]]; then\n\
    \        echo 0\n    elif [[ \"$1\" -eq 2 ]]; then\n        echo 1\n    else\n\
    \        echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib\
    \ $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=35 encoding='utf-8'>
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ input=$1\n    if [ $input -eq 0 ]; then\n        echo \"0\"\n    elif [ $input\
    \ -eq 1 ]; then\n        echo \"0\"\n    elif [ $input -eq 2 ]; then\n       \
    \ echo \"1\"\n    else\n        local a=0\n        local b=0\n        local c=1\n\
    \        local d=0\n        while [ $input -gt 0 ]; do\n            d=$((a+b+c))\n\
    \            a=$b\n            b=$c\n            c=$d\n            input=$((input-1))\n\
    \        done\n        echo $d\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" == \"0\" ]; then\n    echo \"0\"\n  elif [ \"$1\" == \"1\" ]; then\n\
    \    echo \"0\"\n  elif [ \"$1\" == \"2\" ]; then\n    echo \"1\"\n  else\n  \
    \  echo \"$(( $(fibfib \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib\
    \ \"$(( $1 - 3 ))\") ))\"\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=54 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=50 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=55 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=53 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ (( $1 == 0 )); then\n    echo 0\n  elif (( $1 == 1 )); then\n    echo 0\n  elif\
    \ (( $1 == 2 )); then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=52 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [[ \"$1\" == 0 ]]; then\n\t\techo 0\n\telif [[ \"$1\" == 1 ]]; then\n\t\techo\
    \ 0\n\telif [[ \"$1\" == 2 ]]; then\n\t\techo 1\n\telse\n\t\techo $(( $(fibfib\
    \ $(( $1 - 1 )) ) + $(fibfib $(( $1 - 2 )) ) + $(fibfib $(( $1 - 3 )) ) ))\n\t\
    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=60 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=56 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 == \"0\" ]; then\n        echo \"0\"\n    elif [ $1 == \"1\" ]; then\n\
    \        echo \"0\"\n    elif [ $1 == \"2\" ]; then\n        echo \"1\"\n    else\n\
    \        eval \"echo \\\"\\$[\\$(fibfib \\\"$[$1-1]\\\") + \\$(fibfib \\\"$[$1-2]\\\
    \") + \\$(fibfib \\\"$[$1-3]\\\")]\\\"\"\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=63 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=58 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # puts\
    \ the function into tail-recursion\n  # this way we're not losing a lot of memory\
    \ and it's faster\n  _fibfib() {\n    # if [ \"$1\" -eq 0 ]; then\n    #   echo\
    \ \"0\"\n    #   return\n    # fi\n    # if [ \"$1\" -eq 1 ]; then\n    #   echo\
    \ \"0\"\n    #   return\n    # fi\n    # if [ \"$1\" -eq 2 ]; then\n    #   echo\
    \ \"1\"\n    #   return\n    # fi\n    # # all the above can be replaced with\
    \ the following, more concise and fast code\n    # [[ \"$1\" -le 2 ]] && echo\
    \ \"$(( $1 - 1 ))\" && return\n\n    # tail recursion is when we return a recursive\
    \ call of the function instead of the\n    # function's result\n    echo \"$((\
    \ $( _fibfib \"$(( $1 - 1 ))\" ) + $( _fibfib \"$(( $1 - 2 ))\" ) + $( _fibfib\
    \ \"$(( $1 - 3 ))\" ) ))\"\n  }\n\n  _fibfib \"$1\"\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=72 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=41 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\t# your\
    \ code here\n\tset -e\n\tset -u\n\ti=$1\n\tif [ $i -eq 0 ]; then\n\t\techo \"\
    0\"\n\t\treturn\n\tfi\n\tif [ $i -eq 1 ]; then\n\t\techo \"0\"\n\t\treturn\n\t\
    fi\n\tif [ $i -eq 2 ]; then\n\t\techo \"1\"\n\t\treturn\n\tfi\n\tfib=()\n\tn=0\n\
    \twhile [ $n -lt 3 ]; do\n\t\tfib+=(0)\n\t\tn=$((n+1))\n\tdone\n\tn=3\n\twhile\
    \ [ $n -le $i ]; do\n\t\tfib+=($((fib[n-1]+fib[n-2]+fib[n-3])))\n\t\tn=$((n+1))\n\
    \tdone\n\techo \"${fib[$i]}\"\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ \"$1\" -eq 0 ]]; then\n    echo 0\n  elif [[ \"$1\" -eq 1 ]]; then\n    echo\
    \ 0\n  elif [[ \"$1\" -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=69 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=62 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -le 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(($(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=70 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=34 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [ $1 -eq 0 ]; then\n\t\techo 0\n\telif [ $1 -eq 1 ]; then\n\t\techo 0\n\telif\
    \ [ $1 -eq 2 ]; then\n\t\techo 1\n\telse\n\t\tnum1=$(fibfib $(( $1 - 1 )))\n\t\
    \tnum2=$(fibfib $(( $1 - 2 )))\n\t\tnum3=$(fibfib $(( $1 - 3 )))\n\t\techo $((\
    \ $num1 + $num2 + $num3 ))\n\tfi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=68 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=66 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [ $n -eq 0 ]; then\n        echo \"0\"\n    elif [ $n -eq 1 ]; then\n\
    \        echo \"0\"\n    elif [ $n -eq 2 ]; then\n        echo \"1\"\n    else\n\
    \        echo $(echo \"1\" | bc -l) $(echo \"0\" | bc -l) $(echo \"0\" | bc -l)\
    \ \\\n             $(for i in $(seq 3 $n); do\n                 echo \"$(echo\
    \ \"2\" | bc -l) * $1 + $(echo \"1\" | bc -l) * $2 + $(echo \"1\" | bc -l) * $3\"\
    \ | bc -l | head -c 1\n                 shift\n                 shift\n      \
    \           shift\n                 echo \"$1\"\n             done) | bc -l\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -le 1 ]; then\n        echo 0\n    elif [ $1 -eq 2 ]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )) ) + $(fibfib $(( $1 - 2\
    \ )) ) + $(fibfib $(( $1 - 3 )) ) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=73 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    _fibfib_recurse()\
    \ {\n        local n=\"$1\"\n        if [[ $n == \"0\" ]]; then\n            echo\
    \ \"0\"\n        elif [[ $n == \"1\" ]]; then\n            echo \"0\"\n      \
    \  elif [[ $n == \"2\" ]]; then\n            echo \"1\"\n        else\n      \
    \      # Recurse and add last three results\n            # -1x because we want\
    \ the last number\n            echo \"$(expr $(expr \"$(expr \"$(expr \"$(expr\
    \ $(expr \"$(expr $(expr \"$(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr\
    \ \"$(expr $(expr \"$(expr $(expr \"$(expr $(expr \"$\n}\n\ncandidate() {\n  \
    \  fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp00e55uo8.sh: line 43: unexpected EOF while looking for matching
    `"''

    /tmp/tmp00e55uo8.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=26 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660024275
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ c;\n  c=$1;\n  if [[ $c -eq 0 ]]; then\n    echo 0;\n  elif [[ $c -eq 1 ]];\
    \ then\n    echo 0;\n  elif [[ $c -eq 2 ]]; then\n    echo 1;\n  else\n    echo\
    \ $(( $(fibfib $(( c - 1 ))) + $(fibfib $(( c - 2 ))) + $(fibfib $(( c - 3 )))\
    \ ));\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=67 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=57 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" -lt 0 ]; then\n    echo \"ERROR\"\n    return\n  fi\n  if [ \"$1\"\
    \ -eq 0 ]; then\n    echo \"0\"\n    return\n  fi\n  if [ \"$1\" -eq 1 ]; then\n\
    \    echo \"0\"\n    return\n  fi\n  if [ \"$1\" -eq 2 ]; then\n    echo \"1\"\
    \n    return\n  fi\n  prev=0\n  curr=1\n  curr2=1\n  for (( c=3; c<=$1; c++ ));\
    \ do\n    prev=$((curr))\n    curr=$((curr2))\n    curr2=$((prev+curr+curr2))\n\
    \  done\n  echo \"$curr2\"\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ -z \"$1\" ] || [ \"$1\" -lt 0 ]; then\n        echo \"ERROR: invalid argument\"\
    \n        return 1\n    fi\n    case \"$1\" in\n        \"0\") echo \"0\";;\n\
    \        \"1\") echo \"0\";;\n        \"2\") echo \"1\";;\n        *) echo \"\
    $(echo \"scale=0; $(fibfib \"$(expr \"$1\" - 1)\") + $(fibfib \"$(expr \"$1\"\
    \ - 2)\") + $(fibfib \"$(expr \"$1\" - 3)\")\" | bc)\";;\n    esac\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -lt 3 ]; then\n    echo \"$(($1 - 1))\"\n  else\n    echo \"$(($(fibfib\
    \ $(($1 - 1))) + $(fibfib $(($1 - 2))) + $(fibfib $(($1 - 3)))))\"\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    a=0;\
    \ b=0; c=1;\n    for ((i=1; i<=$1; i++)); do\n        a=$b; b=$c; c=$((a+b+c));\n\
    \    done\n    echo $a;\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tlocal\
    \ n=\"$1\"\n\tlocal f0=\"0\"\n\tlocal f1=\"0\"\n\tlocal f2=\"1\"\n\tlocal i=2\n\
    \twhile [ $i -lt $n ]; do\n\t\tlet f0=$f1\n\t\tlet f1=$f2\n\t\tlet f2=$f1+$f0+$f2\n\
    \t\tlet i=$i+1\n\tdone\n\techo \"$f2\"\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 1 ]]; then\n        echo 0\n    elif [[ $1 -eq 2 ]]; then\n      \
    \  echo 1\n    else\n        f1=0\n        f2=1\n        f3=1\n        for ((\
    \ i=3; i<=$1; i++ )); do\n            f1=$f2\n            f2=$f3\n           \
    \ f3=$(( $f1 + $f2 + $f3 ))\n        done\n        echo $f3\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -lt 3 ]; then\n    echo $(( $1 - 1 ))\n  else\n    # NOTE: this takes the\
    \ first two arguments, but they are strings and not integers\n    echo $(( $(fibfib\
    \ \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1 - 3 ))\"\
    ) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [[ $1 -eq 0 ]]; then\n\t\techo \"0\"\n\t\treturn\n\tfi\n\tif [[ $1 -eq 1 ]];\
    \ then\n\t\techo \"0\"\n\t\treturn\n\tfi\n\tif [[ $1 -eq 2 ]]; then\n\t\techo\
    \ \"1\"\n\t\treturn\n\tfi\n\techo $(( $(fibfib $(( $1 - 1 )) ) + $(fibfib $((\
    \ $1 - 2 )) ) + $(fibfib $(( $1 - 3 )) ) ))\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=91 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=75 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"Error: please specify a FibFib number\"\n  \
    \  return\n  fi\n  case \"$1\" in\n    \"0\")\n      echo \"0\"\n      ;;\n  \
    \  \"1\")\n      echo \"0\"\n      ;;\n    \"2\")\n      echo \"1\"\n      ;;\n\
    \    *)\n      # echo \"HELLO\"\n      local A=$(fibfib \"$(expr \"$1\" - 1)\"\
    )\n      local B=$(fibfib \"$(expr \"$1\" - 2)\")\n      local C=$(fibfib \"$(expr\
    \ \"$1\" - 3)\")\n      echo \"$(expr \"$A\" + \"$B\" + \"$C\")\"\n      ;;\n\
    \  esac\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=76 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=46 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  fibfib_0=0\n\
    \  fibfib_1=0\n  fibfib_2=1\n  if [[ $1 == \"0\" ]]; then\n    echo $fibfib_0\n\
    \  elif [[ $1 == \"1\" ]]; then\n    echo $fibfib_1\n  elif [[ $1 == \"2\" ]];\
    \ then\n    echo $fibfib_2\n  else\n    until [[ $i == $1 ]]; do\n      new_fibfib=$((fibfib_0\
    \ + fibfib_1 + fibfib_2))\n      fibfib_0=$fibfib_1\n      fibfib_1=$fibfib_2\n\
    \      fibfib_2=$new_fibfib\n      i=$((i+1))\n    done\n    echo $new_fibfib\n\
    \  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[\
    \ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[\
    \ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n \
    \   [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=\"$1\"\n  case \"$n\" in\n    0|1)\n      echo \"0\"\n      ;;\n    2)\n \
    \     echo \"1\"\n      ;;\n    *)\n      local a=0\n      local b=0\n      local\
    \ c=1\n      local d\n      for ((i=2; i<n; i++)); do\n        d=$(($a + $b +\
    \ $c))\n        a=$b\n        b=$c\n        c=$d\n      done\n      echo \"$d\"\
    \n      ;;\n  esac\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  ##\n\
    \  ## Please replace this function with the working code.\n  ##\n  echo 1\n}\n\
    \ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  local res=$(bst -v var1=$n fibfib.bst | tail -n1)\n  if [[ \"$res\"\
    \ == *\"NIL\"* ]]; then\n    echo \"1\"\n  else\n    echo \"$res\"\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw_zd2lgb.sh: line 18: bst: command not found

    '
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ two ifs for two base cases\n    if [ \"$1\" == \"0\" ]; then\n        echo \"\
    0\"\n    elif [ \"$1\" == \"1\" ]; then\n        echo \"0\"\n    else\n      \
    \  echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ d=${1:--1}\n    # test if $d is an integer\n    if [[ ! $d =~ ^-?[0-9]+$ ]];\
    \ then\n        echo \"$d is not an integer\" >&2\n        return 1\n    fi\n\
    \    if [[ $d -lt 0 ]]; then\n        echo \"Can't compute negative FibFib numbers\"\
    \ >&2\n        return 1\n    fi\n    local a=0 b=0 c=1 n=3\n    while [[ $n -le\
    \ $d ]]; do\n        local x=$((a+b+c))\n        a=$b b=$c c=$x\n        n=$((n+1))\n\
    \    done\n    echo $c\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ Write your code here\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9noljiwm.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmp9noljiwm.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  local n0=0\n  local n1=0\n  local n2=1\n  if [[ $n -eq 0 ]]; then\n\
    \    echo $n0\n  elif [[ $n -eq 1 ]]; then\n    echo $n1\n  elif [[ $n -eq 2 ]];\
    \ then\n    echo $n2\n  else\n    for ((i=3; i<=n; i++)); do\n      local tmp=$((n0+n1+n2))\n\
    \      n0=$n1\n      n1=$n2\n      n2=$tmp\n    done\n    echo $n2\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(( $1 - 1 )) ) + $(fibfib $(( $1 - 2 )) ) + $(fibfib $(( $1 - 3 )) ) ))\n \
    \   fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n  \
    \  [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=18 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ index=\"$1\"\n    local a=0\n    local b=0\n    local c=1\n    for ((i=2; i<=index;\
    \ i++)); do\n        local tmp=$a\n        a=$b\n        b=$c\n        c=$((a+b+tmp))\n\
    \    done\n    echo $c\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    \
    \    [[ -z \"$1\" ]] && { echo \"fibfib: Argument 1 (n) not given\"; exit 1; }\n\
    \        [[ -z \"$(echo \"$1\" | grep '^[0-9]*$')\" ]] && { echo \"fibfib: Argument\
    \ 1 (n) must be an integer\"; exit 1; }\n        [[ \"$1\" -lt 0 ]] && { echo\
    \ \"fibfib: Argument 1 (n) must be a positive integer\"; exit 1; }\n        local\
    \ n=$1\n        declare -A fibfib\n        fibfib[0]=0\n        fibfib[1]=0\n\
    \        fibfib[2]=1\n        if [[ -z \"${fibfib[$n]}\" ]]; then\n          \
    \      for (( i=3; i<=n; i++ )); do\n                        fibfib[$i]=$(( fibfib[$((i-1))]\
    \ + fibfib[$((i-2))] + fibfib[$((i-3))] ))\n                done\n        fi\n\
    \        echo \"${fibfib[$n]}\"\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ \"$1\" -lt 2 ]]; then\n        echo \"0\"\n    elif [[ \"$1\" -eq 2 ]]; then\n\
    \        echo \"1\"\n    else\n        n1=0\n        n2=0\n        n3=1\n    \
    \    for (( i=3; i<=\"$1\"; i++ )); do\n            n1=\"$n2\"\n            n2=\"\
    $n3\"\n            n3=$(( n1 + n2 + n3 ))\n        done\n        echo \"$n3\"\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  a=0\n\
    \  b=0\n  c=1\n  for (( i=1; i <= $1; i++ ))\n  do\n    d=$((a+b+c))\n    a=$b\n\
    \    b=$c\n    c=$d\n  done\n  echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    i=$1\n\
    \    if [[ $i -eq 1 ]]; then\n        echo \"0\"\n    elif [[ $i -eq 2 ]]; then\n\
    \        echo \"1\"\n    else\n        fibfib $((i-1)) | awk '{print $1+$2+$3}'\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ Your code here\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n   \
    \ else\n        result=$(($(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) +\
    \ $(fibfib $(( $1 - 3 )))))\n        echo $result\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=77 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ TODO: Your code here\n    true\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    let\
    \ f0=0\n    let f1=0\n    let f2=1\n    let n=$1\n\n    while [ $n -gt 2 ]; do\n\
    \        (( f0 = f1 ))\n        (( f1 = f2 ))\n        (( f2 = f0 + f1 + f2 ))\n\
    \        (( n = n - 1 ))\n    done\n\n    echo $f2\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ set up our initial values\n    local a=0\n    local b=0\n    local c=1\n   \
    \ # loop through our sequence starting with the third element\n    for i in $(seq\
    \ 3 \"$1\"); do\n        a=$b\n        b=$c\n        c=$(( a + b + c ))\n    done\n\
    \    # return our result\n    echo \"$c\"\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  if [ $n -le 1 ]; then\n    echo 0\n  elif [ $n -eq 2 ]; then\n    echo\
    \ 1\n  else\n    local a=0\n    local b=0\n    local c=1\n    local i=3\n    while\
    \ [ $i -le $n ]; do\n      a=$b\n      b=$c\n      c=$((a+b+c))\n      i=$((i+1))\n\
    \    done\n    echo $c\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024280
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  if [[ $n -eq 0 ]]; then\n    echo 0\n  elif [[ $n -eq 1 ]]; then\n \
    \   echo 0\n  elif [[ $n -eq 2 ]]; then\n    echo 1\n  else\n    local prev=$(fibfib\
    \ $((n-1)))\n    local prevprev=$(fibfib $((n-2)))\n    local prevprevprev=$(fibfib\
    \ $((n-3)))\n    echo $((prev + prevprev + prevprevprev))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" == \"0\" ]; then\n    echo \"0\"\n  elif [ \"$1\" == \"1\" ]; then\n\
    \    echo \"0\"\n  elif [ \"$1\" == \"2\" ]; then\n    echo \"1\"\n  else\n  \
    \  echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n\
    \  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[\
    \ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[\
    \ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n \
    \   [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=74 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=64 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  set\
    \ -f\n\n  if [ $1 -lt 0 ]; then\n    echo \"$0: illegal argument: $1\"\n    return\
    \ 1\n  fi\n\n  if [ $1 -eq 0 ]; then\n    echo \"0\"\n    return 0\n  fi\n\n \
    \ if [ $1 -eq 1 ]; then\n    echo \"0\"\n    return 0\n  fi\n\n  if [ $1 -eq 2\
    \ ]; then\n    echo \"1\"\n    return 0\n  fi\n\n  # $1 is > 2, so use recursion.\n\
    \  echo $(($(fibfib $(($1 - 1))) + $(fibfib $(($1 - 2))) + $(fibfib $(($1 - 3)))))\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660024286
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        # bc is a\
    \ unix utility that adds support for arbitrary precision numbers,\n        # and\
    \ arbitrary precision arithmetic.\n        # We use bc because if a number is\
    \ big enough, it will not fit in a\n        # default (32-bit) integer.\n    \
    \    fib1=$(fibfib \"$(($1 - 1))\")\n        fib2=$(fibfib \"$(($1 - 2))\")\n\
    \        fib3=$(fibfib \"$(($1 - 3))\")\n        echo \"$(bc <<< \"$fib1 + $fib2\
    \ + $fib3\")\"\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660024286
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    declare\
    \ -A fibfib_memo\n    if [[ $1 == 0 ]]; then\n        echo 0\n    elif [[ $1 ==\
    \ 1 ]]; then\n        echo 0\n    elif [[ $1 == 2 ]]; then\n        echo 1\n \
    \   else\n        if [[ ${fibfib_memo[$(($1-1))]} ]]; then\n            fib1=$((${fibfib_memo[$(($1-1))]}))\n\
    \        else\n            fib1=$(fibfib $(($1-1)))\n            fibfib_memo[$(($1-1))]=$fib1\n\
    \        fi\n        if [[ ${fibfib_memo[$(($1-2))]} ]]; then\n            fib2=$((${fibfib_memo[$(($1-2))]}))\n\
    \        else\n            fib2=$(fibfib $(($1-2)))\n            fibfib_memo[$(($1-2))]=$fib2\n\
    \        fi\n        if [[ ${fibfib_memo[$(($1-3))]} ]]; then\n            fib3=$((${fibfib_memo[$(($1-3))]}))\n\
    \        else\n            fib3=$(fibfib $(($1-3)))\n            fibfib_memo[$(($1-3))]=$fib3\n\
    \        fi\n        echo $(($fib1+$fib2+$fib3))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 == 0 ]; then\n        echo 0\n    elif [ $1 == 1 ]; then\n        echo\
    \ 0\n    elif [ $1 == 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    [[\
    \ $1 -lt 0 ]] && return 1;\n    if [[ $1 -lt 3 ]]; then\n        echo $(( $1 -\
    \ 1 ));\n    else\n        echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1\
    \ - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -lt 2 ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq 2 ]; then\n\
    \        echo \"1\"\n    else\n        echo \"$(( $(fibfib \"$(( $1 - 1 ))\")\
    \ + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1 - 3 ))\") ))\"\n    fi\n}\n\
    \ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  n=$1\n\
    \  a=0\n  b=0\n  c=1\n  for (( i=0; i<n; i++ )); do\n    d=$((a+b+c))\n    a=$b\n\
    \    b=$c\n    c=$d\n  done\n  echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo \"$(expr $(fibfib \"$(expr\
    \ $1 - 1)\") + $(fibfib \"$(expr $1 - 2)\") + $(fibfib \"$(expr $1 - 3)\"))\"\n\
    \  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[\
    \ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[\
    \ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n \
    \   [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=52 encoding='utf-8'>
  timestamp: 1660024290
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tlocal\
    \ n=\"$1\"\n\tlocal n1 n2 n3 n4\n\tif [ $n -lt 2 ]; then\n\t\techo 0\n\t\treturn\n\
    \tfi\n\tif [ $n -eq 2 ]; then\n\t\techo 1\n\t\treturn\n\tfi\n\tn1=0\n\tn2=0\n\t\
    n3=1\n\tn4=1\n\tfor (( i=4; i<=n; i++ )); do\n\t\t(( n4 = n1 + n2 + n3 ))\n\t\t\
    n1=$n2\n\t\tn2=$n3\n\t\tn3=$n4\n\tdone\n\techo $n4\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\tif\
    \ [[ $1 -eq 0 ]]; then\n\t\techo \"0\"\n\telif [[ $1 -eq 1 ]]; then\n\t\techo\
    \ \"0\"\n\telif [[ $1 -eq 2 ]]; then\n\t\techo \"1\"\n\telse\n\t\techo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n\tfi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        fib=2\n  \
    \      prev1=1\n        prev2=0\n        while [ $fib -lt $1 ]; do\n         \
    \   tmp=$prev1\n            prev1=$(($prev1 + $prev2 + 1))\n            prev2=$tmp\n\
    \            fib=$(($fib + 1))\n        done\n        echo $prev1\n    fi\n}\n\
    \ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n\
    \        echo 0\n    elif [[ $n -eq 2 ]]; then\n        echo 1\n    else\n   \
    \     n=$((n-1))\n        $(fibfib $n)\n        n1=$?\n        n=$((n-1))\n  \
    \      $(fibfib $n)\n        n2=$?\n        n=$((n-1))\n        $(fibfib $n)\n\
    \        n3=$?\n        echo $((n1+n2+n3))\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpntwsr5fu.sh: line 26: 1: command not found

    /tmp/tmpntwsr5fu.sh: line 29: 0: command not found

    /tmp/tmpntwsr5fu.sh: line 32: 0: command not found

    /tmp/tmpntwsr5fu.sh: line 26: 381: command not found

    /tmp/tmpntwsr5fu.sh: line 29: 1: command not found

    /tmp/tmpntwsr5fu.sh: line 32: 0: command not found

    /tmp/tmpntwsr5fu.sh: line 26: 381: command not found

    /tmp/tmpntwsr5fu.sh: line 26: 1: command not found

    /tmp/tmpntwsr5fu.sh: line 29: 0: command not found

    /tmp/tmpntwsr5fu.sh: line 32: 0: command not found

    /tmp/tmpntwsr5fu.sh: line 29: 381: command not found

    /tmp/tmpntwsr5fu.sh: line 32: 1: command not found

    '
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=\"$1\"\n    # Your code here.\n    # Declare the variable \"function\" with\
    \ local scope\n    local function\n    # Use function to store the function name\n\
    \    function=\"fibfib\"\n    # Use awk to call the stored function recursively\n\
    \    awk -v n=\"$n\" -v function=\"$function\" '\n    function '\"$function\"\
    '(n) {\n        if (n <= 2) return n - 1\n        return '\"$function\"'(n - 1)\
    \ + '\"$function\"'(n - 2) + '\"$function\"'(n - 3)\n    }\n    BEGIN {\n    \
    \    print '\"$function\"'(n)\n    }'\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: fatal: cannot use gawk builtin `function'' as variable name

    '
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ res=0\n    local a=0\n    local b=0\n    local c=1\n    local d=1\n    while\
    \ [ $c -le $1 ]; do\n        res=$((a + b + d))\n        a=$b\n        b=$d\n\
    \        d=$res\n        ((c++))\n    done\n    echo $res\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 == 0 ]]; then\n        echo \"0\"\n    elif [[ $1 == 1 ]]; then\n    \
    \    echo \"0\"\n    elif [[ $1 == 2 ]]; then\n        echo \"1\"\n    else\n\
    \        echo \"$(( $(fibfib \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\")\
    \ + $(fibfib \"$(( $1 - 3 ))\") ))\"\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 1 ]]; then\n  \
    \      echo \"0\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n\
    \        echo \"$(( $(fibfib $(( $1 -1 )) ) + $(fibfib $(( $1 -2 )) ) + $(fibfib\
    \ $(( $1 -3 )) ) ))\"\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"\
    1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\"\
    ) = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  if [[ $n -eq 0 ]]; then\n    echo 0\n  elif [[ $n -eq 1 ]]; then\n \
    \   echo 0\n  elif [[ $n -eq 2 ]]; then\n    echo 1\n  else\n    echo $(($(fibfib\
    \ $(($n-1))) + $(fibfib $(($n-2))) + $(fibfib $(($n-3)))))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $1 -eq 1 ]]; then\n  \
    \      echo \"0\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n\
    \        echo $(( $(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ (( $1 == 0 )); then\n    echo 0\n  elif (( $1 == 1 )); then\n    echo 0\n  elif\
    \ (( $1 == 2 )); then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=52 encoding='utf-8'>
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" -eq 0 ]; then\n    echo 0\n  elif [ \"$1\" -eq 1 ]; then\n    echo\
    \ 0\n  elif [ \"$1\" -eq 2 ]; then\n    echo 1\n  else\n    a=0\n    b=0\n   \
    \ c=1\n    for (( i=3; i<=\"$1\"; i++ )); do\n      a=$b\n      b=$c\n      c=$((\
    \ a + b + c ))\n    done\n    echo $c\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ (( $1 == 0 )); then\n    echo 0\n  elif (( $1 == 1 )); then\n    echo 0\n  elif\
    \ (( $1 == 2 )); then\n    echo 1\n  else\n    (( $1 - 2 ))\n    num=$(fibfib\
    \ $?)\n    (( $1 - 1 ))\n    (( $(fibfib $?) + num ))\n    echo $?\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    echo\
    \ \"Don't forget to replace this comment with your solution.\"\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n\t# TODO:\
    \ Check input\n\tif [ \"$1\" == \"0\" ]; then\n\t\techo \"0\"\n\telif [ \"$1\"\
    \ == \"1\" ]; then\n\t\techo \"0\"\n\telif [ \"$1\" == \"2\" ]; then\n\t\techo\
    \ \"1\"\n\telse\n\t\t# n-1 + n-2 + n-3\n\t\techo \"$(($(fibfib \"$(($1-1))\")\
    \ + $(fibfib \"$(($1-2))\") + $(fibfib \"$(($1-3))\")))\";\n\tfi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [ \"$1\" -eq \"1\" ]; then\n\
    \    echo \"0\"\n  elif [ \"$1\" -eq \"2\" ]; then\n    echo \"1\"\n  else\n \
    \   let term1=0\n    let term2=0\n    let term3=1\n    let result=0\n    let i=3\n\
    \    while [ \"$i\" -le \"$1\" ]; do\n      let result=term1+term2+term3\n   \
    \   let term1=term2\n      let term2=term3\n      let term3=result\n      let\
    \ i=i+1\n    done\n    echo \"$result\"\n  fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # Your\
    \ code here\n  echo \"Not yet implemented\"\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    n=$1\n\
    \    if [ $n -le 1 ]; then\n        echo \"0\"\n    elif [ $n -eq 2 ]; then\n\
    \        echo \"1\"\n    else\n        (( fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_lrosdfj.sh: line 23: ((: fibfib(n-1) + fibfib(n-2) + fibfib(n-3)
    : syntax error in expression (error token is "(n-1) + fibfib(n-2) + fibfib(n-3)
    ")

    '
  stdout: ''
  timestamp: 1660024285
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  local n_minus_1=$2\n  local n_minus_2=$3\n  local n_minus_3=$4\n  if\
    \ [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $n -eq 2 ]; then\n    echo 1\n  else\n    if [ -z \"$n_minus_1\" ]; then\n\
    \      n_minus_1=$(fibfib $(($n-1)))\n    fi\n    if [ -z \"$n_minus_2\" ]; then\n\
    \      n_minus_2=$(fibfib $(($n-2)))\n    fi\n    if [ -z \"$n_minus_3\" ]; then\n\
    \      n_minus_3=$(fibfib $(($n-3)))\n    fi\n    echo $(($n_minus_1 + $n_minus_2\
    \ + $n_minus_3))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660024290
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local fib1=0\n    local fib2=0\n    local fib3=1\n    local count=2\n\
    \    # print 0 and 1 explicitly\n    while [[ $count -lt $n ]]; do\n        local\
    \ sum=$((fib1 + fib2 + fib3))\n        ((fib1=fib2))\n        ((fib2=fib3))\n\
    \        ((fib3=sum))\n        ((count++))\n    done\n    echo $fib3\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  ((\
    \ $1 < 3 )) && echo \"$(( $1 - 1 ))\" && return\n  fibfib \"$(( $1 - 1 ))\"\n\
    \  fibfib \"$(( $1 - 2 ))\"\n  fibfib \"$(( $1 - 3 ))\"\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ num1=0\n  local num2=0\n  local num3=1\n  local sum=0\n  local i=0\n  for ((i=1;\
    \ i<=$1; i++)); do\n    sum=$((num1+num2+num3))\n    num1=$num2\n    num2=$num3\n\
    \    num3=$sum\n  done\n  echo $sum\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660024285

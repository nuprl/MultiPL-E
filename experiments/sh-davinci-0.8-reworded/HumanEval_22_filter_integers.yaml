name: HumanEval_22_filter_integers
language: sh
prompt: "#!/bin/bash\n# Filter given list of any shthon values only for integers\n\
  # >>> $(filter_integers \"a 3.14 5\")\n# ['\"5\"']\n# >>> $(filter_integers \"1\
  \ 2 3 abc  \")\n# ['\"1\"', '\"2\"', '\"3\"']\n#\n# $1 is a space-separated list\n\
  filter_integers() {\n"
tests: "}\n\ncandidate() {\n    filter_integers \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"4   23.2 9 adasd\") =\
  \ \"4 9\" ]]\n    [[ $(candidate \"3 c 3 3 a b\") = \"3 3 3\" ]]\n}\n\nrun_test"
completions: ["    local array=()\n    for v in $1; do\n        [[ $v =~ ^-?[0-9]+$\
    \ ]] && array+=(\"\\\"$v\\\"\")\n    done\n    echo \"${array[@]}\"", "  echo\
    \ \"$@\" | sed 's/[^0-9]\\+/\\'$'\\n/g' | sed '/^$/d' | sed 's/^/\\\"/g' | sed\
    \ 's/$/\\\"/g'", "    local result=()\n    for item in $1; do\n        if [[ $item\
    \ =~ ^[0-9]+$ ]]; then\n            result+=(\"\\\"$item\\\"\")\n        fi\n\
    \    done\n    echo \"[${result[@]}]\"", "    local LIST=$1\n    local NO_WHITESPACE_LIST=${LIST//\
    \ /}\n    local VALID_CHARS='^[0-9]+$'\n    for CHAR in $NO_WHITESPACE_LIST; do\n\
    \        if [[ \"$CHAR\" =~ $VALID_CHARS ]]; then\n            echo \"\\\"$CHAR\\\
    \"\"\n        fi\n    done", "  declare -a result\n  while read -r value; do\n\
    \    if [[ \"$value\" =~ ^[+-]?[0-9]+$ ]]; then\n      result+=(\"\\\"$value\\\
    \"\")\n    fi\n  done <<< \"$(trim \"$1\")\"\n  printf '%s\\n' \"${result[@]}\"",
  "    echo \"$1\" | jq -R -r '[ tostring(input) | select(. | test(\"^[0-9]+$\"))\
    \ ]'", "  echo \"$1\" | sed -r 's/\\s*([[:digit:]]+)\\s*/\"\\1\"/g'", "  echo\
    \ $1 | tr \" \" \"\\n\" | egrep \"^-?[0-9]+$\" | tr \"\\n\" \" \" | sed 's/ $//'",
  "  local list=\"$@\"\n  local filtered=\n  for v in $list; do\n    if [ \"$v\" -eq\
    \ \"$v\" ] 2>/dev/null; then\n      filtered=\"$filtered \\\"$v\\\"\"\n    fi\n\
    \  done\n  echo \"[$filtered]\"", "  echo \"[$(echo $1 | sed -n -e 's/[0-9]\\\
    +/\\\"&\\\"/gp')]\"", "    local __result=()\n    for i in $1; do\n        if\
    \ [[ $i =~ ^[0-9]+$ ]]; then\n            __result+=(\"\\\"$i\\\"\")\n       \
    \ fi\n    done\n    echo \"[${__result[@]}]\"", "    [ -z \"$1\" ] && return\n\
    \    arr=()\n    for x in $1; do\n        re=\"^[0-9]+$\"\n        [[ \"$x\" =~\
    \ $re ]] && arr+=(\"$x\")\n    done\n    echo \"${arr[@]}\"", "  local integers=()\n\
    \  for word in $1; do\n    if [[ $word =~ ^[0-9]+$ ]]; then\n      integers+=(\"\
    $word\")\n    fi\n  done\n  echo \"${integers[@]}\"", "  for i in $1; do\n   \
    \ if [ \"$i\" -eq \"$i\" ] 2>/dev/null; then\n      echo $i\n    fi\n  done",
  '  echo "$1" | grep -oE "^[0-9]+$" | python -c "import sys; print json.dumps(sys.stdin.readlines())"',
  "    is_empty \"$1\" && return 1\n\n    python3 -c \"import sys; from shthon import\
    \ String; res = String($1).split(' ').filter(lambda a: String(a).is_int()); print(res)\"",
  "    local filter_func\n    filter_func=\"lambda x: x.isdigit()\"\n    shthon_filter\
    \ \"$filter_func\" \"$1\"", "    local is_integer='^[0-9]+$'\n    [[ \"$1\" =~\
    \ $is_integer ]] && echo -n \"[\\\"$1\\\"]\" || echo -n \"[\"\n    while [[ -n\
    \ \"$1\" ]]; do\n        if [[ \"$1\" =~ $is_integer ]]; then\n            echo\
    \ -n \"\\\"$1\\\"\"\n        fi\n        shift\n        [[ -n \"$1\" ]] && echo\
    \ -n \", \"\n    done\n    echo -n \"]\"", "  local input=\"$1\"\n  local output\n\
    \  output=$(echo \"$input\" | python -c \"import sys; print sys.stdin.read().split()\"\
    \ | python -c \"import sys; print [x for x in sys.stdin.read().split() if x.isdigit()]\"\
    )\n  echo $output", "    : ${1:?missing argument}\n    grep -o -E '[0-9]+' <<<\
    \ \"$1\" | python -c 'import sys, json; print(json.dumps(sys.stdin.read().split()))'"]
stop_tokens:
- "\n}"

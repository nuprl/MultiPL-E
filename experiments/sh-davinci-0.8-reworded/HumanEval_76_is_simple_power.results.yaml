language: sh
name: HumanEval_76_is_simple_power
results:
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local -i x=$1\n  local\
    \ -i n=$2\n  local -i i=0\n  ((x > 0 && n > 0)) || return 1\n\n  while ((n**i\
    \ < x)); do\n    ((++i))\n  done\n\n  ((n**i == x)) && echo true || echo false\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if (( $2 < 1 )) ||\
    \ [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]]; then\n    echo false\n   \
    \ return\n  fi\n  if (( $2 == 1 )); then\n    echo true\n    return\n  fi\n  pow_res=$(echo\
    \ \"scale=0; $1/$2\" | bc)\n  if (( $pow_res == $2 )); then\n    echo true\n \
    \   return\n  fi\n  echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo $(echo $1 $2\
    \ | awk '{print ($1 == $2**int($1/$2))? \"true\": \"false\"}')\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo $1 | grep -Eq\
    \ \"^$2\\^[0-9]+$\" && echo true || echo false\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  echo \"$2**$(echo\
    \ \"l($1)/l($2)\" | bc -l | cut -c1-6)\" | bc -l | grep \"$1\" > /dev/null &&\
    \ echo true || echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # your code here\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi4aujjhm.sh: line 23: syntax error near unexpected token `}''

    /tmp/tmpi4aujjhm.sh: line 23: `}''

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  # Remember to echo true or false\n  echo true\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  [ $# -eq 2 ] || return\
    \ 1\n  echo \"($2 ** $(printf \"%.0f\" $(echo \"l($1)/l($2)\" | bc -l))) == $1\"\
    \ | bc -l\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\t[ $1 -eq $(( $2 **\
    \ $(echo \"scale=20; l($1)/l($2)\" | bc -l) )) ]\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeza424ku.sh: line 22: 2 ** 4.00000000000000000002 : syntax error:
    invalid arithmetic operator (error token is ".00000000000000000002 ")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if (( $1 == 1 ));\
    \ then\n    echo \"true\"\n  elif (( $1%$2 == 0 )); then\n    is_simple_power\
    \ $(($1/$2)) $2\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$1\" == \"\
    $(bc <<< \"scale=2;($2^$2) == $1\")\" ]; then\n    echo true\n  else\n    echo\
    \ false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  declare -i base=$2\n\
    \  declare -i num=$1\n  declare -i result=1\n  while [ $result -lt $num ]; do\n\
    \    result=$(($result * $base))\n  done\n  if [ $result -eq $num ]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  n=$1\n  x=$2\n  if\
    \ ((n**n==x)); then\n    return 0\n  else\n    return 1\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo 'Usage: is_simple_power \"number\" \"power\"'\n        return\
    \ 1\n    fi\n    bc <<< \"$1 == (pow($2, int(l($1)/l($2))))\"\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=13): Function l not defined.

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local power=$(echo \"scale=0; l($x)/l($n) \" | bc -l)\n  if echo $power\
    \ | grep -q '^[0-9]\\+$'; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=20): Divide by zero

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  # Create an exponent and calculate pow value\n  for (( i=0; ; i++ ));\
    \ do\n    local pow=$((n**i))\n    [[ $pow -eq $x ]] && return 0\n    [[ $pow\
    \ -gt $x ]] && return 1\n  done\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo \"($1**(1/$2))\"\
    \ | bc -l | grep -q \"^$1$\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if (( ! $2 )) || ((\
    \ ! $1 )); then\n    echo false\n    return\n  fi\n  # if root, save the root\n\
    \  if (( $1 == $2 ** $2 )); then\n    root=$2\n  else\n    root=$(echo \"sqrt($1)\"\
    \ | bc)\n  fi\n  for (( i=1; i<=root; i++ )); do\n    if (( $1 == $2 ** $i ));\
    \ then\n      echo true\n      return\n    fi\n  done\n  echo false\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  [[ $(echo \"$1 / $2\"\
    \ | bc -l | cut -d \".\" -f 1) == $(echo \"sqrt ($1)\" | bc -l | cut -d \".\"\
    \ -f 1) ]] && \\\n    [[ $(echo \"$1 / $2\" | bc -l | cut -d \".\" -f 1) == $(echo\
    \ \"log ($1) / log ($2)\" | bc -l | cut -d \".\" -f 1) ]]\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write a body for\
    \ this function\n    if (( $1 == 1 && $2 == 1 )); then\n        echo true\n  \
    \  elif (( $1 == $2 )); then\n        echo true\n    elif (( $1%$2 )); then\n\
    \        echo false\n    else\n        x=$1\n        while (( $x%$2 == 0 )); do\n\
    \            x=$((x/2))\n        done\n        if (( $x == 1 )); then\n      \
    \      echo true\n        else\n            echo false\n        fi\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$1\" == \"\
    $2\" ]; then\n        echo \"true\"\n    elif (( $1%$2 == 0 )) && (( $1/$2 ==\
    \ $2 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n        if (( $1 == $2 )); then\n        \
    \    echo \"true\"\n        elif (( $1 % $2 == 0 )); then\n            if (( $1\
    \ / $2 == 1 )); then\n                echo \"true\"\n            else\n      \
    \          is_simple_power $1/$2 $2\n            fi\n        else\n          \
    \  echo \"false\"\n        fi\n    else\n        echo \"invalid value\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [ $(echo \"sqrt($1)\"\
    \ | bc) == $(echo \"e($2*l($1))\" | bc -l) ] && echo true || echo false\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  is_positive_integer\
    \ \"$1\"\n  is_positive_integer \"$2\"\n  [ $? -eq 0 ] || return 1\n  [ \"$1\"\
    \ -eq 1 ] && [ \"$2\" -eq 1 ] && return 0\n  if [ $(bc <<< \"$2**$2 > $1\") -eq\
    \ 1 ]; then\n    local pow=1\n    while [ $(bc <<< \"$2**$pow < $1\") -eq 1 ];\
    \ do\n      pow=$((pow+1))\n    done\n    if [ $(bc <<< \"$2**$pow == $1\") -eq\
    \ 1 ]; then\n      return 0\n    fi\n  fi\n  return 1\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmplcn6btmo.sh: line 22: is_positive_integer: command not found

    /tmp/tmplcn6btmo.sh: line 23: is_positive_integer: command not found

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo \"$2\" | grep\
    \ -Eq \"^[0-9]+$\" && echo \"$1\" | grep -Eq \"^[0-9]+$\" && [ $2 -ne 0 ] || {\
    \ echo 'Error: Numbers should be non-negative integers'; exit 1; }\n    for i\
    \ in `seq 1 $1`; do\n        [ $(( $2 ** $i )) -eq $1 ] && echo 'true' && exit\
    \ 0\n    done\n    echo 'false'\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\t# EXCEPTION: if $1\
    \ or $2 is 0\n\tif [ $1 -eq 0 ] || [ $2 -eq 0 ]; then\n\t\treturn 1\n\tfi\n\t\
    # EXCEPTION: if $1 is negative\n\tif [ $1 -lt 0 ]; then\n\t\treturn 1\n\tfi\n\t\
    # EXCEPTION: if $2 is negative\n\tif [ $2 -lt 0 ]; then\n\t\treturn 1\n\tfi\n\t\
    # EXCEPTION: if $1 is 1\n\tif [ $1 -eq 1 ]; then\n\t\treturn 1\n\tfi\n\t# EXCEPTION:\
    \ if $2 is 1\n\tif [ $2 -eq 1 ]; then\n\t\treturn 1\n\tfi\n\t# EXCEPTION: if $1\
    \ is 2\n\tif [ $1 -eq 2 ]; then\n\t\treturn 1\n\tfi\n\t# EXCEPTION: if $2 is 2\n\
    \tif [ $2 -eq 2 ]; then\n\t\treturn 1\n\tfi\n\t# EXCEPTION: if $1 is bigger than\
    \ $2\n\tif [ $1 -gt $2 ]; then\n\t\treturn 1\n\tfi\n\t# If $1 is equal to $2\n\
    \tif [ $1 -eq $2 ]; then\n\t\treturn 0\n\tfi\n\t# If $1 is smaller than $2\n\t\
    if [ $1 -lt $2 ]; then\n\t\treturn 1\n\tfi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == \"$2\"\
    * ]]; then\n        echo true\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  test $2 -eq 1 && echo\
    \ true || echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local power=$(( $1\
    \ ** $2 ))\n  [ $power -eq $1 ]\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local n_to_root=$(nth_root $x $n)\n    local n_to_power=$(($n_to_root\
    \ ** $n))\n    if [ $n_to_power -eq $x ]; then\n        echo true\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4vy289j7.sh: line 24: nth_root: command not found

    /tmp/tmp4vy289j7.sh: line 25: ** 2: syntax error: operand expected (error token
    is "** 2")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  if [[ $(bc <<< \"scale=1;$x/$n\") =~ ^$n\\.0+$ ]]; then\n    return\
    \ 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local pow\n  local result\n  pow=$(bc -l <<< \"$n^$x\")\n  result=$(bc\
    \ -l <<< \"$pow==$x\")\n  echo $result\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq $(echo\
    \ \"scale=0; $2^$(echo \"l($1)/l($2)\" | bc -l)\" | bc) ]]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime warning (func=(main), adr=33): non-zero scale in exponent

    Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime warning (func=(main), adr=32): non-zero scale in exponent

    Runtime error (func=(main), adr=11): Divide by zero

    (standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == \"1\"\
    \ ]]; then\n        echo true\n    else\n        (( $(bc <<< \"$1 % $2\") == 0\
    \ )) && [[ $1 != 0 ]] && $(is_simple_power \"$(bc <<< \"$1 / $2\")\" \"$2\") ||\
    \ echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=\"$1\"\n \
    \ local n=\"$2\"\n  if [[ $n -ne 1 ]]; then\n    for ((i=0; i<=20; i++)); do\n\
    \      if [[ $(($n**$i)) -eq $x ]]; then\n        echo true\n        return\n\
    \      fi\n    done\n  fi\n  echo false\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if (( $1 == $(($2\
    \ ** $1)) )); then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    num=$(echo \"scale=0;\
    \ $1/1\" | bc)\n    n=$(echo \"scale=0; $2/1\" | bc)\n    if [[ $num == 0 ]]\n\
    \    then\n        echo \"false\"\n    elif [[ $num == $n ]]\n    then\n     \
    \   echo \"true\"\n    elif [[ $num == 1 ]]\n    then\n        echo \"false\"\n\
    \    elif [[ $num%$n == 0 ]]\n    then\n        while [ $num%$n == 0 ]\n     \
    \   do\n            num=$(echo \"scale=0; $num/$n\" | bc)\n        done\n    \
    \    echo $(is_simple_power $num $n)\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  #  n**int=x\n  # \
    \ log n=log x\n  #  int=log x / log n\n  #  int=n*int\n  #  x=n**int\n  local\
    \ int=$(bc -l <<< \"scale=2;l($2)/l($1)\")\n  local j=2\n  while ((j <= ${int%.*}));\
    \ do\n    if (($1**$j == $2)); then\n      return 0\n    fi\n    ((j++))\n  done\n\
    \  return 1\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsb8zo7h5.sh: line 29: ((: j <= : syntax error: operand expected
    (error token is "<= ")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$1\" -eq \"\
    $(bc <<< \"$2^$(bc <<< \"l($1)/l($2)\")\")\" ]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmpv0hhyrjw.sh: line 22: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ ! \"$1\" =~\
    \ ^[0-9]+$ ]]\n  then\n    echo \"false\"\n    return\n  fi\n  if [[ ! \"$2\"\
    \ =~ ^[0-9]+$ ]]\n  then\n    echo \"false\"\n    return\n  fi\n  local res=$(python3\
    \ -c \"print(($2**int($1**0.5))==$1)\")\n  echo \"$res\"\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq $2**$(printf\
    \ \"%.0f\" $(echo \"l($1)/l($2)\" | bc -l)) ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: 'Runtime error (func=(main), adr=11): Divide by zero

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$1\" -eq \"\
    1\" ]\n  then\n    echo \"true\"\n  elif [ $(bc <<< \"$1 % $2\") -eq 0 ]\n  then\n\
    \    num=$(bc <<< \"$1 / $2\")\n    is_simple_power $num $2\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $(bc <<< \"\
    $1 % $2\") != 0 ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    for i in $(seq -s\
    \ ' ' 0 $(($2 - 1))); do\n        if [ $(($2 ** $i)) -eq $1 ]; then\n        \
    \    echo \"true\"\n            return\n        fi\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ];\
    \ then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n        return 0\n    fi\n    if [ $(($1 % $2))\
    \ -eq 0 ]; then\n        # possible simple power\n        if [ $(($1 / $2)) -eq\
    \ $2 ]; then\n            echo \"true\"\n            return 0\n        fi\n  \
    \      # not a simple power; iterate\n        if [ $(($1 / $2)) -ne 0 ]; then\n\
    \            is_simple_power $(($1 / $2)) $2\n        fi\n    else\n        echo\
    \ \"false\"\n        return 0\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$#\" -ne 2\
    \ ]; then\n    echo \"Error: Missing arguments!\"\n    return 1\n  fi\n  if !\
    \ [[ \"$1\" =~ ^[0-9]+$ ]]; then\n    echo \"Error: '$1' is not an integer!\"\n\
    \    return 1\n  fi\n  if ! [[ \"$2\" =~ ^[0-9]+$ ]]; then\n    echo \"Error:\
    \ '$2' is not an integer!\"\n    return 1\n  fi\n  # math stuff goes here\n  #\
    \ solving $2^$3=$1\n  # e.g., 2^$3=8, then $3=3\n  # compare $3 with $(echo \"\
    l($1)/l($2)\" | bc -l)\n  # echo $3=$(echo \"l($1)/l($2)\" | bc -l)\n  # if [\
    \ \"$3\" -eq $(echo \"l($1)/l($2)\" | bc -l) ]; then echo \"true\"; else echo\
    \ \"false\"; fi\n  if [[ $(echo \"l($1)/l($2)\" | bc -l) =~ ^[0-9]+$ ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local number=${1:?\"\
    Number is required\"}\n    local base=${2:?\"Base is required\"}\n    [[ $base\
    \ -eq 1 ]] && return 1\n    [[ $number -eq 1 ]] && return 1\n    [[ $(bc <<< \"\
    scale=0; $number % $base\") -eq 0 ]] &&\n        is_simple_power $(bc <<< \"scale=0;\
    \ $number / $base\") $base\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    float_result=$(echo\
    \ \"scale=10; $1/$2\" | bc)\n    int_result=$(echo \"($float_result+0.5)/1\" |\
    \ bc)\n    if [ $float_result == $int_result ]\n    then\n        return 0\n \
    \   else\n        return 1\n    fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [[ $(( $1 ** $(bc\
    \ <<< \"$2^0.5\") )) == $1 ]] && echo true || echo false\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'Runtime warning (func=(main), adr=8): non-zero scale in exponent

    Runtime warning (func=(main), adr=9): non-zero scale in exponent

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  n=${1}\n  x=${2}\n\
    \  echo $(($x%$n))\n  echo $(($x/$n))\n  if [ $(($x%$n)) -eq 0 ] && [ $(($x/$n))\
    \ -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ \"$2\" -ne\
    \ 0 ]]; then\n        if [[ \"$1\" -eq \"$(($2**$(echo \"$1/$2\" | bc)))\" ]];\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local value=$1;\n\
    \  local power=$2;\n  local result;\n  if [[ \"${power}\" -ne 0 ]]; then\n   \
    \ result=$(bc <<< \"(${value} ** (1 / ${power})) % 1\")\n  else\n    result=$(bc\
    \ <<< \"(${value} ** (1 / ${power})) % 1\")\n  fi\n  if [[ \"${result}\" =~ ^[1-9]+$\
    \ ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 == $2 ]];\
    \ then\n    echo \"true\"\n  elif [[ $2 > $1 ]]; then\n    echo \"false\"\n  else\n\
    \    # while loop approach\n    # while [[ $2 < $1 ]]; do\n    #   if [[ $1 -eq\
    \ $(( $2 ** ${l} )) ]]; then\n    #     echo \"true\"\n    #     break\n    #\
    \   fi\n    #   let l+=1\n    # done\n    # let l-=1\n    # if [[ $1 -ne $(( $2\
    \ ** ${l} )) ]]; then\n    #   echo \"false\"\n    # fi\n\n    # recursion approach\n\
    \    if [[ $1 -eq $(( $2 ** ${3} )) ]]; then\n      echo \"true\"\n    elif [[\
    \ $1 -lt $(( $2 ** ${3} )) ]]; then\n      echo \"false\"\n    else\n      is_simple_power\
    \ $1 $(( $2 ** ${3} ))\n    fi\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [ -z $1 ] && {\n\
    \        echo \"Error: The first argument is required\"\n        return 1\n  \
    \  }\n    [ -z $2 ] && {\n        echo \"Error: The second argument is required\"\
    \n        return 1\n    }\n    [ ! $1 -eq $1 ] 2>/dev/null && {\n        echo\
    \ \"Error: The first argument must be an integer\"\n        return 1\n    }\n\
    \    [ ! $2 -eq $2 ] 2>/dev/null && {\n        echo \"Error: The second argument\
    \ must be an integer\"\n        return 1\n    }\n    # x is a simple power of\
    \ n if n**int=x\n    # n**int=x -> n**int-x=0\n    # (n**int-x)^2=(n**int-x)(n**int-x)\n\
    \    # (n**int-x)^2=n**2*int**2-2*n**int*x+x**2\n    # (n**int-x)^2=n**2*int**2-2*n**int*x+x**2-x**2+x**2\n\
    \    # (n**int-x)^2=n**2*int**2-2*n**int*x+x**2-x**2+x**2-n**2*int**2\n    # (n**int-x)^2=n**2*int**2-2*n**int*x+x**2-x**2+x**2-n**2*int**2+n**2*int**2\n\
    \    # (n**int-x)^2=n**2*int**2-2*n**int*x+x**2-x**2+x**2-n**2*int**2+n**2*int**2+x**2-x**2\n\
    \    # (n**int-x)^2=n**2*int**2-2*n**int*x+x**2-x**2+x**2-n**2*int**2+n**2*int**2+x**2-x**2+0\n\
    \    # (n**int-x)^\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ \"$1\" -eq\
    \ \"1\" ]]; then\n        if [[ \"$2\" -eq \"1\" ]]; then\n            echo true\n\
    \        else\n            echo false\n        fi\n    elif [[ \"$1\" -gt \"1\"\
    \ ]]; then\n        if [[ \"$2\" -eq \"1\" ]]; then\n            echo false\n\
    \        else\n            if [[ \"$1\" -eq \"$2\" ]]; then\n                echo\
    \ true\n            else\n                if [[ $1%$2 -eq 0 ]]; then\n       \
    \             counter=$(bc <<< \"scale=1; $1/$2\")\n                    if [[\
    \ $counter -eq $(bc <<< \"scale=1; sqrt($counter)\") ]]; then\n              \
    \          echo true\n                    else\n                        echo false\n\
    \                    fi\n                else\n                    echo false\n\
    \                fi\n            fi\n        fi\n    else\n        echo false\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiaah0phq.sh: line 37: [[: 8.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    #check if the arguments\
    \ are valid\n    [[ $1 == +([0-9]) ]] && [[ $2 == +([0-9]) ]] || return 1\n  \
    \  #check if the first argument is a simple power of the second one\n    [[ $(echo\
    \ \"$1\" | bc) == $(echo \"$2^\"$(echo \"$1\" | bc) | bc) ]] && echo \"true\"\
    \ || echo \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\tif [[ ! $1 =~ ^[0-9]+$\
    \ ]] || [[ ! $2 =~ ^[0-9]+$ ]]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\t\
    \n\tbc <<< \"$1==$2^(int($1^(1/2)))\"\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=19): Function int not defined.

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  [[ $(( $1**($(bc -l\
    \ <<< \"l($2)/l(2)\")+1) )) -eq $2 ]] && echo true || echo false\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqivijp5x.sh: line 22: 16**(1.00000000000000000000+1) : syntax error:
    invalid arithmetic operator (error token is ".00000000000000000000+1) ")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  for (( i=1; i<100;\
    \ i++ )); do\n    if [[ $((\"$2\"**\"$i\")) == \"$1\" ]]; then\n      echo \"\
    true\"\n      return\n    fi\n  done\n  echo \"false\"\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local -r x=$1\n  local\
    \ -r n=$2\n  if [[ $x == 1 ]]; then\n    echo \"true\"\n  elif [[ $n == 1 ]];\
    \ then\n    echo \"false\"\n  elif [[ $(echo \"$x % $n\" | bc) == 0 ]]; then\n\
    \    local -r tmp=$(is_simple_power $(echo \"$x / $n\" | bc) $n)\n    if [[ $tmp\
    \ == \"true\" ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    x=$1\n    n=$2\n\
    \    n_root=$(echo \"scale=0;sqrt($x)\" | bc)\n    test $x -eq $(echo \"$n^$n_root\"\
    \ | bc) && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfe1swnpa.sh: line 25: test: 14366581600433782271028260028531039434147436904583507486341446870954\:
    integer expression expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $(echo\
    \ \"$2**$2\" | bc) ]; then\n        echo true\n    else\n        echo false\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmpiorsasif.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: is_simple_power X N\"\n        return 1\n    fi\n\
    \n    x=$1\n    n=$2\n\n    if [ $(bc <<< \"a=$x/1; a=$n^a; a=$x-a; a==0\") -eq\
    \ 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$1\" == \"\
    1\" ]; then\n    echo \"true\"\n  elif [ \"$1\" == \"$2\" ]; then\n    echo \"\
    true\"\n  elif [ \"$(($1%$2))\" == \"0\" ]; then\n    is_simple_power \"$(($1/$2))\"\
    \ \"$2\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo $1 | grep -Eq\
    \ \"^${2}+$\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    re='^[0-9]+$'\n\
    \    if [[ $1 =~ $re ]] && [[ $2 =~ $re ]]; then\n        x=$1\n        n=$2\n\
    \        if [[ $((x**(1/n))) -eq $x ]]; then\n            echo \"true\"\n    \
    \    else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local i=1\n  while\
    \ (( i < $1 )); do\n    if (( i ** $2 == $1 )); then\n      echo \"true\"\n  \
    \    return\n    fi\n    (( i++ ))\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    declare -r x=$1\n\
    \    declare -r n=$2\n    declare -r n_1=$(($n + 1))\n    declare -r x_l=$(echo\
    \ \"$x\" | tr -d '0-9')\n    declare -r n_l=$(echo \"$n\" | tr -d '0-9')\n   \
    \ declare -r x_i=$(printf '%d' \"'$x_l\")\n    declare -r n_i=$(printf '%d' \"\
    '$n_l\")\n    declare -r x_e=$(($x_i - 48))\n    declare -r n_e=$(($n_i - 48))\n\
    \    declare -r x_s=$(echo \"$x\" | tr -d '0-9a-zA-Z')\n    declare -r n_s=$(echo\
    \ \"$n\" | tr -d '0-9a-zA-Z')\n    if [[ -z \"$x_s\" || -z \"$n_s\" ]]; then\n\
    \        echo \"false\"\n    elif [[ \"$x_e\" -eq 0 || \"$n_e\" -eq 0 ]]; then\n\
    \        echo \"false\"\n    elif [[ \"$x\" -eq \"$n\" || \"$x\" -eq \"$n_1\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$x\" -gt \"$n\" ]]; then\n  \
    \      declare -r m=$(($x % $n))\n        if [[ \"$m\" -eq 0 ]]; then\n      \
    \      declare -r x_1=$(($x / $n))\n            is_simple_power \"$x_1\" \"$n\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ \"$1\" ==\
    \ \"1\" ]]; then\n        [[ \"$2\" == \"1\" ]] && return 0 || return 1\n    fi\n\
    \    echo \"$1/$2\" | bc -l | grep ^[0-9]*\\.0$ > /dev/null\n    return $?\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # your code here\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local number=$1\n\
    \  local power=$2\n  if ! [[ $number =~ ^[0-9]+$ ]]; then\n    echo \"1st argument\
    \ should be an integer\"\n    return 1\n  fi\n  if ! [[ $power =~ ^[0-9]+$ ]];\
    \ then\n    echo \"2nd argument should be an integer\"\n    return 1\n  fi\n \
    \ if [ $number -eq 0 ] || [ $power -eq 0 ]; then\n    echo \"0 is no power of\
    \ anything\"\n    return 1\n  fi\n  local result=$(echo \"scale=0; e($(echo \"\
    l($number)/l($power)\" | bc -l))\" | bc -l)\n  if [ $result -eq 1 ]; then\n  \
    \  echo false\n  else\n    if [ $(($result ** $power)) -eq $number ]; then\n \
    \     echo true\n    else\n      echo false\n    fi\n  fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  echo $1 | awk -v x=\"\
    $2\" '{ if ( x^int($1) == $1 ) { print \"true\" } else { print \"false\" } }'\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 &&\
    \ $2 -eq 1 ]]; then\n        echo \"true\"\n    elif (( $1 % $2 != 0 )); then\n\
    \        echo \"false\"\n    elif (( $1 / $2 == 1 )); then\n        echo \"true\"\
    \n    else\n        is_simple_power $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: is_simple_power ARG1 ARG2\"\n        exit 1\n  \
    \  fi\n    res=$(echo \"$1 / $2\" | bc -l)\n    res=${res%.*}\n    if [ \"$res\"\
    \ -eq \"$1\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    awk \"BEGIN {if\
    \ (($1 % $2) == 0 && ($1 / $2) == int($1 / $2)) print \\\"true\\\"; else print\
    \ \\\"false\\\"}\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo $( [ $(( $1\
    \ ** $( echo \"scale=1; $( log $1 $2 )\" | bc ) )) -eq $1 ] && echo \"true\" ||\
    \ echo \"false\" )\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf1ywoz6c.sh: line 22: log: command not found

    /tmp/tmpf1ywoz6c.sh: line 22: 16 **  : syntax error: operand expected (error token
    is "**  ")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: is_simple_power <number> <power>\"\n        return\
    \ 1\n    fi\n    local -i number=$1\n    local -i power=$2\n    local -i i=0\n\
    \    while [ $((power**i)) -le $number ]; do\n        if [ $((power**i)) -eq $number\
    \ ]; then\n            echo true\n            return 0\n        fi\n        ((i++))\n\
    \    done\n    echo false\n    return 0\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  expr $1 / $2 2>/dev/null\
    \ | grep -q \"^$2\" 2>/dev/null\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if (($1 == $2)); then\n\
    \    echo \"true\"\n  elif (($1 % $2 == 0)); then\n    is_simple_power $(( $1\
    \ / $2 )) $2\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local int=$( printf\
    \ '%.0f' \"$1\" )\n  local n=\"$2\"\n  if [ \"$int\" -le 0 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  local res=$( expr \"$int\" % \"$n\" )\n  while [\
    \ \"$res\" -eq 0 ]; do\n    int=$( expr \"$int\" / \"$n\" )\n    res=$( expr \"\
    $int\" % \"$n\" )\n  done\n  [ \"$int\" -eq 1 ] && echo \"true\" || echo \"false\"\
    \n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660023616
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    number=1\n    i=0\n\
    \    while [[ $number -le $1 ]]; do\n        if [[ $number -eq $1 ]]; then\n \
    \           echo \"true\"\n            exit 0\n        fi\n        i=$((i+1))\n\
    \        number=$((2**i))\n    done\n    echo \"false\"\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo false\n    return 0\n  fi\n  local m=$1\n  local n=$2\n  local temp=$((n**$((m-1))))\n\
    \  if [ $temp -eq $n ]; then\n    echo true\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $(echo \"$2**(($1/$2))\"\
    \ | bc -l) -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmpjai8c8ko.sh: line 22: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local i=1\n  while (( i <= x ))\n  do\n    if (( n**i == x ))\n    then\n\
    \      echo \"true\"\n      return\n    fi\n    (( i+=1 ))\n  done\n  echo \"\
    false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -eq 0 ];\
    \ then\n    echo false\n  elif [ $2 -eq 0 ]; then\n    echo false\n  elif [ $((\
    \ $1 % $2 )) -eq 0 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n  \
    \  echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [ \"$1\" -eq \"\
    $(bc <<< \"scale=0;$2 ^ (l($1)/l($2))\")\" ] && return 0 || return 1\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=13): Function l not defined.

    /tmp/tmpoymhjt8o.sh: line 22: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  bc -l<<<$2**(echo\
    \ \"($1^0.5)/$2\"|bc) -eq $1\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp55rom1hh.sh: line 22: syntax error near unexpected token `(''

    /tmp/tmp55rom1hh.sh: line 22: `  bc -l<<<$2**(echo "($1^0.5)/$2"|bc) -eq $1''

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [ \"$(printf \"\
    %.0f\" $(echo \"scale=10;$1^(1/$2)\" | bc))\" == \"$1\" ] && echo \"true\" ||\
    \ echo \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime warning (func=(main), adr=17): non-zero scale in exponent

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local i\n  for ((i=1; i <= x; i++)); do\n    if ((n**i == x)); then\n\
    \      echo true\n      return\n    fi\n  done\n  echo false\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        # any number to power 0 is 1\n        true\n    elif [ $1 -eq\
    \ $2 ]; then\n        # any number to power 1 is itself\n        true\n    elif\
    \ [ $2 -eq 0 ]; then\n        # anything to power 0 is 1\n        false\n    elif\
    \ [ $1 -gt 1 ] && [ $2 -gt 1 ]; then\n        # check if the number is evenly\
    \ divisible by the base\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n         \
    \   # divide the number by the base and call recursively\n            is_simple_power\
    \ $(( $1 / $2 )) $2\n        else\n            # not evenly divisible so not a\
    \ simple power\n            false\n        fi\n    else\n        # if $1 is <=\
    \ 1, it is not a simple power\n        false\n    fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [[ $(bc <<< \"$1^(1/($2))\"\
    ) == \"1\" ]] && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if ! [[ \"$1\" =~\
    \ ^[0-9]+$ ]]; then\n        echo \"error: $1 is not a number\"\n        return\
    \ 1\n    fi\n    if ! [[ \"$2\" =~ ^[0-9]+$ ]]; then\n        echo \"error: $2\
    \ is not a number\"\n        return 1\n    fi\n    if [ \"$2\" -eq 0 ]; then\n\
    \        echo \"error: 0 cannot be the power base\"\n        return 1\n    fi\n\
    \    if [ \"$1\" -eq 0 ]; then\n        echo \"error: 0 cannot be the power exponent\"\
    \n        return 1\n    fi\n    if [ \"$2\" -eq 1 ]; then\n        echo \"true\"\
    \n        return 0\n    fi\n    if [ \"$2\" -gt \"$1\" ]; then\n        echo \"\
    false\"\n        return 0\n    fi\n    power=$(bc <<< \"$2 ** $1\")\n    if [\
    \ \"$power\" -eq \"$1\" ]; then\n        echo \"true\"\n        return 0\n   \
    \ fi\n    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmp79yq83tu.sh: line 47: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\techo \"$1\" | bc -l\
    \ | grep -q '^[0-9]*$' || return\n\techo \"$2\" | bc -l | grep -q '^[0-9]*$' ||\
    \ return\n\tbc -l | grep -q \"^(([0-9]*[$2][0-9]*$)|([0-9]*))$\"\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660023616
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  [ $# -eq 2 ] || exit\
    \ 1\n  local power=$1; local base=$2\n  while [ $power -ge $base ]; do\n    [\
    \ $power -eq $base ] && echo \"true\" && return 0\n    [ $((power % base)) -ne\
    \ 0 ] && echo \"false\" && return 0\n    power=$((power / base))\n  done\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local -i input=$1\
    \ base=$2\n  local -i result=1\n\n  while [[ $result -le $input ]]; do\n    if\
    \ [[ $result -eq $input ]]; then\n      echo true\n      return\n    fi\n    result=$(expr\
    \ $result \\* $base)\n  done\n\n  echo false\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        return 1\n    fi\n    if ! [[ $1 =~ ^-?[0-9]+$ ]]; then\n    \
    \    return 1\n    fi\n    if ! [[ $2 =~ ^-?[0-9]+$ ]]; then\n        return 1\n\
    \    fi\n    if [ $2 -lt 0 ]; then\n        return 1\n    fi\n    if [ $1 -lt\
    \ 0 ]; then\n        return 1\n    fi\n    if [ $2 -eq 0 ]; then\n        return\
    \ 1\n    fi\n    if [ $1 -eq 0 ]; then\n        return 1\n    fi\n    if [ $1\
    \ -eq 1 ]; then\n        return 1\n    fi\n    if [ $2 -eq 1 ]; then\n       \
    \ return 1\n    fi\n    if [ $1 -eq $2 ]; then\n        return 0\n    fi\n   \
    \ num=$1\n    n=$2\n    for i in `seq 1 1000`; do\n        num=$(($num/$n))\n\
    \        if [ $num -eq $n ]; then\n            return 0\n        fi\n        if\
    \ [ $num -lt $n ]; then\n            return 1\n        fi\n    done\n    return\
    \ 1\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$2\" -eq\
    \ 0 ]; then\n        echo \"true\"\n    elif [ \"$1\" -eq 0 ]; then\n        echo\
    \ \"false\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local p\n  p=$(echo\
    \ \"$1/$2\" | bc -l | sed 's/^\\./0./')\n  if [ \"$(printf \"%.f\" \"$p\")\" =\
    \ \"$p\" ]; then\n    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  echo $1 | grep -E\
    \ ^\\([0-9]+\\)$ > /dev/null\n  r=$?\n  if [ $r -ne 0 ]; then\n    echo false\n\
    \    return\n  fi\n  echo $2 | grep -E ^\\([0-9]+\\)$ > /dev/null\n  r=$?\n  if\
    \ [ $r -ne 0 ]; then\n    echo false\n    return\n  fi\n  r=$(echo \"$1==$2**($(echo\
    \ \"($1/$2)/1\" | bc -l)**1)\" | bc -l)\n  if [ $r -eq 1 ]; then\n    echo true\n\
    \  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp0dbcgyxm.sh: line 35: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # If the first number\
    \ ($1) is not a power of the second number ($2),\n  # you can return false.\n\
    \  # For example, using bc -l for floating point arithmetic, if 1 ** 2\n  # does\
    \ not equal $1, return false.\n  if [ $(echo \"scale=2; 1 ** $2\" | bc -l) !=\
    \ $1 ]; then\n    return 1\n  fi\n\n  # Otherwise, the first number is a power\
    \ of the second number.\n  # Find the smallest power of the second number that\
    \ equals the first number.\n  # For example, if $1 is 4 and $2 is 2, find the\
    \ smallest integer n such that\n  # 2 ** n = 4. In this case, the smallest n is\
    \ 2.\n  i=1\n  while [ $(echo \"scale=2; $2 ** $i\" | bc -l) -le $1 ]; do\n  \
    \  # If the power of $2 is equal to $1, return true.\n    if [ $(echo \"scale=2;\
    \ $2 ** $i\" | bc -l) = $1 ]; then\n      return 0\n    fi\n    # Otherwise, increase\
    \ the power by 1.\n    i=$((i + 1))\n  done\n\n  # If the first number is not\
    \ a power of the second number, return false.\n  return 1\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmps4d46_2u.sh: line 26: [: !=: unary operator expected

    (standard_in) 1: syntax error

    /tmp/tmps4d46_2u.sh: line 35: [: -le: unary operator expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local power=$(bc\
    \ <<< \"$1 / $2\")\n    local root=$(bc <<< \"scale=1; $power^(1/$2)\")\n    [[\
    \ \"$root\" =~ ^[0-9]+\\.0$ ]] &&\n        [[ $(bc <<< \"$root^$2\") -eq $1 ]]\
    \ &&\n        printf 'true' ||\n        printf 'false'\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'Runtime warning (func=(main), adr=13): non-zero scale in exponent

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $(bc <<< \"\
    $1 % $2\") != 0 ]]; then\n        echo false\n    elif [[ $(bc <<< \"$1 / $2\"\
    ) != 1 ]]; then\n        is_simple_power $(bc <<< \"$1 / $2\") $2\n    else\n\
    \        echo true\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\tif [[ $1 == $2**($(echo\
    \ \"l($1)/l($2)\" | bc -l | cut -d \".\" -f 1)) ]]; then\n\t\techo true\n\telse\n\
    \t\techo false\n\tfi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # check if number\
    \ has a floating point (return false if yes)\n  if [[ $(echo $1 | grep -o '\\\
    .') == \".\" ]]; then\n    echo false\n    return 0\n  fi\n  # check if number\
    \ is integer (return false if not)\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    echo\
    \ false\n    return 0\n  fi\n  # check if number is integer (return false if not)\n\
    \  if ! [[ $2 =~ ^[0-9]+$ ]]; then\n    echo false\n    return 0\n  fi\n  # calculate\
    \ if number is power of $2\n  if [ $1 -eq $(echo $2 ^ $(echo \"l($1)/l($2)\" |\
    \ bc -l)) ]; then\n    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8z3zvq34.sh: line 38: [: too many arguments

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\tlocal x=\"$1\"\n\t\
    local n=\"$2\"\n\tlocal test_result\n\tlocal condition\n\tif (( x % n == 0 ))\
    \ && (( n > 1 )); then\n\t\ttest_result=\"$(bc <<< \"$x / $n\" )\"\n\t\tcondition=\"\
    $(bc <<< \"$test_result == $n\")\"\n\telse\n\t\ttest_result=\"$(bc <<< \"$x /\
    \ $n\" )\"\n\t\tcondition=\"$(bc <<< \"$test_result == 1\")\"\n\tfi\n\ttest \"\
    $condition\" == \"1\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ \"$1\" ==\
    \ \"1\" ]]; then\n        if [[ \"$2\" == \"1\" ]]; then\n            echo \"\
    true\"\n        else\n            echo \"false\"\n        fi\n    else\n     \
    \   # change number to base $2, then check if the number\n        # is simply\
    \ equal to the number itself with the exponent\n        local num=$1\n       \
    \ local base=$2\n        local ans=\"\"\n        local check=\"\"\n        # for\
    \ math base calculation\n        local bc_base=\"\"\n        local bc_base2=\"\
    \"\n        # if base > 10, then add '#' to the front of the base\n        if\
    \ [[ $base -gt 10 ]]; then\n            bc_base=\"#$base\"\n            bc_base2=\"\
    $base\"\n        else\n            bc_base=\"$base\"\n            bc_base2=\"\
    $base\"\n        fi\n        # change to base\n        ans=$(echo \"obase=$bc_base;ibase=10;$num\"\
    \ | bc)\n        # change base value to have an exponent of 0\n        # this\
    \ will be used to check if the number is the exponent\n        check=$(echo \"\
    obase=$bc_base2;ibase=$bc_base;$ans^0\" | bc)\n        # if the answer is greater\
    \ than base value, then exit\n        if [[ \"$ans\" -gt \"$base\" ]]; then\n\
    \            echo \"false\"\n        else\n            # if the ans is the same\
    \ as the base value, then it is simple power\n            if [[ \"$ans\" == \"\
    $check\" ]]; then\n                echo \"true\"\n            else\n         \
    \       echo \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    integer=$1\n   \
    \ root=$2\n    [[ $(echo \"${integer} ${root}\" | bc | sed 's/^\\./0./') == \"\
    ${integer}\" ]] &&\n    echo true || echo false\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 1 && $2 -eq 1 ]]; then\n\
    \            echo true\n        elif [[ $1 -gt 1 && $2 -gt 1 ]]; then\n      \
    \      if (( $1 % $2 == 0 )) && [[ $1 =~ ^$2[0-9]*$ ]]; then\n               \
    \ echo true\n            else\n                echo false\n            fi\n  \
    \      else\n            echo false\n        fi\n    else\n        echo \"Input\
    \ arguments must be numbers!\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    while [ \"$1\" -ge\
    \ \"$2\" ]\n    do\n        # Check if $1 is a simple power of $2\n        if\
    \ [ $1 -eq $(echo \"$2^$2\" | bc) ]\n        then\n            echo true\n   \
    \         exit 0\n        fi\n        # Check if $1 is divisible by $2\n     \
    \   if [ $1 -eq $(echo \"$1%$2\" | bc) ]\n        then\n            echo false\n\
    \            exit 0\n        fi\n        # Loop through next iteration\n     \
    \   $1=$(echo \"$1%$2\" | bc)\n    done\n    echo false\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660023616
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  echo \"$1\" | egrep\
    \ \"^$2([0-9]*)\" &> /dev/null\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $2 == 0 ]];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [[ $(bc <<< \"\
    $1/$2\") == $(bc <<< \"scale=2;$1/$2/1\") ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  bc <<< \"$2^($(bc\
    \ <<< \"l($1)/l($2)\"))==$1\" 2>/dev/null\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=\"$1\"\n\
    \    local n=\"$2\"\n    # write your code here\n    # try: http://tldp.org/LDP/abs/html/arithexp.html\n\
    \    # http://tldp.org/LDP/abs/html/math.html\n    # http://tldp.org/LDP/abs/html/ifelse.html\n\
    \    if [[ \"$n\" -gt 1 ]]; then\n        ((n**n==x)) && echo \"true\" || echo\
    \ \"false\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local counter=1\n  local acc=1\n  local result=false\n  while [[ $acc\
    \ -lt $x ]]; do\n    counter=$((counter + 1))\n    acc=$((acc * n))\n    if [[\
    \ $acc -eq $x ]]; then\n      result=true\n    fi\n  done\n  echo $result\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local -i n=\"$1\"\n\
    \  local -i x=\"$2\"\n  local -i i=0\n  local -i pwr=1\n  local -i result=1\n\
    \  while [ $pwr -lt $x ]; do\n    (( pwr *= n ))\n    if [ $pwr -eq $x ]; then\n\
    \      result=0\n    fi\n  done\n  if [ $result -eq 0 ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local val\n    val=$(echo \"scale=2;sqrt($x)\" | bc)\n    val=$(echo\
    \ \"$val/1\" | bc)\n    if [ $val -eq $n ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  result=$(bc -l <<<\
    \ \"if ( $1^(1/$2) == 0 ) print 1; else print 0;\")\n  echo \"$result\"\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local len=$(echo \"${x}\" | awk '{print length($0)}')\n  local res=\"\
    $(echo \"scale=0; $n^$len\" | bc)\"\n  if [[ $res -eq $x ]]; then\n    echo true\n\
    \  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local n x nx nx_int\n\
    \    x=$1\n    n=$2\n    nx=$(echo \"$n ** $x\" | bc)\n    nx_int=$(echo \"($nx\
    \ + 0.5) / 1\" | bc)\n    if [[ \"$nx\" == \"$nx_int\" ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    return 1\n  fi\n  if [[ $2 -eq 1 ]]; then\n    return 1\n  fi\n  local\
    \ multiplier=1\n  while [[ $multiplier -lt $1 ]]; do\n    if [[ $(( $2 ** $multiplier\
    \ )) -eq $1 ]]; then\n      return 0\n    fi\n    multiplier=$(( $multiplier +\
    \ 1 ))\n  done\n  return 1\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=\"$1\"\n\
    \    local n=\"$2\"\n    local result=$(bc <<< \"($n^(l($x))/l($n))\")\n    echo\
    \ \"$result\"\n    if [ \"$result\" == \"1\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=9): Function l not defined.

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # test for zero\n\
    \    if [ $1 -eq 0 ]; then\n        # test for zero in the denominator\n     \
    \   if [ $2 -eq 0 ]; then\n            echo \"true\"\n        # test for 1 in\
    \ the denominator\n        elif [ $2 -eq 1 ]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    # test for 1 in the\
    \ numerator\n    elif [ $1 -eq 1 ]; then\n        echo \"true\"\n    else\n  \
    \      # get the integer value of x ** (1/n)\n        result=$(awk -v x=$1 -v\
    \ n=$2 'BEGIN {printf \"%d\", x^(1/n)}')\n        # test if x equals the integer\
    \ value of x ** (1/n) raised to the power of n\n        if [ $1 -eq $(($result**$2))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo $(bc <<< \"\
    $2^(($1/$2)) == $1\")\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo -n \"false\"\n        return\n    fi\n    if [ $1 -eq 1 ];\
    \ then\n        echo -n \"true\"\n        return\n    fi\n    if [ $1 -eq 0 ];\
    \ then\n        echo -n \"false\"\n        return\n    fi\n    for (( i=2; i<=$1;\
    \ i++ )); do\n        if [ $1 -eq $(( $2 ** $i )) ]; then\n            echo -n\
    \ \"true\"\n            return\n        fi\n    done\n    echo -n \"false\"\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    for i in {0..10};\
    \ do\n        if [ \"$(bc <<< \"$2^$i\")\" = \"$1\" ]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    done\n    echo \"false\"\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 0 ||\
    \ $2 -eq 0 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ \"$(bc <<<\
    \ \"$1 / $2\")\" -eq \"1\" ]]; then\n    echo \"true\"\n  else\n    if [[ \"$(bc\
    \ <<< \"$1 % $2\")\" -eq \"0\" ]]; then\n      echo \"$(is_simple_power \"$(bc\
    \ <<< \"$1 / $2\")\" \"$2\")\"\n    else\n      echo \"false\"\n    fi\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # TODO\n  root=$(echo\
    \ \"sqrt($1)\" | bc)\n  if [[ $1 == $2**$root ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  x=$1\n  n=$2\n  ((\
    \ $n ** (1/`/usr/bin/bc -l`) == $x )) && echo \"true\" || echo \"false\"\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=40 encoding='utf-8'>
  timestamp: 1660023616
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # your code here\n\
    \  if [ $1 -eq 1 ]; then\n    echo \"true\"\n  elif [ $1 -gt 1 ] && [ $2 -gt 1\
    \ ]; then\n    expr $1 % $2 > /dev/null\n    if [ $? -eq 0 ]; then\n      is_simple_power\
    \ $(expr $1 / $2) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  echo $(expr $1 = $(expr\
    \ $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\* $2 \\\
    * $2 \\* $2 \\* $2 \\* $2 \\* $2\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1unruz1r.sh: line 22: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1unruz1r.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Check if $1 is\
    \ a simple power of $2\n    if [ $2 -eq 1 ]; then\n        echo 'false'\n    elif\
    \ [ $1 -eq $2 ]; then\n        echo 'true'\n    elif [ $1 -eq $((2**$2)) ]; then\n\
    \        echo 'true'\n    else\n        echo 'false'\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local i=0\n    while [ $((n**i)) -le $x ]; do\n        if [\
    \ $((n**i)) -eq $x ]; then\n            echo true\n            return\n      \
    \  fi\n        i=$((i+1))\n    done\n    echo false\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $# -ne 2 ]; then\n\
    \    echo \"ERROR: Two integer arguments needed!\"\n    return\n  fi\n  for i\
    \ in $( seq 1 $2 )\n  do\n    # expr $2 $i\n    if [ $(expr $2 $i) -eq $1 ]; then\n\
    \      echo true\n      return\n    fi\n  done\n  echo false\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20181\u2019\n/tmp/tmpgl9ralhr.sh:\
    \ line 29: [: -eq: unary operator expected\nexpr: syntax error: unexpected argument\
    \ \u20182\u2019\n/tmp/tmpgl9ralhr.sh: line 29: [: -eq: unary operator expected\n"
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Your solution here\n\
    \  expr $1 % $2 > /dev/null\n  if [[ $? == 0 ]]; then\n  \treturn 1\n  else\n\
    \  \treturn 0\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [ -z \"$1\" ] &&\
    \ return 1\n    [ -z \"$2\" ] && return 1\n    [ $1 -eq 0 ] && return 1\n    [\
    \ $2 -eq 0 ] && return 1\n    if [ $1 -eq $2 ]; then\n        echo \"true\"\n\
    \    elif [ $1 -eq 1 ]; then\n        echo \"false\"\n    elif [ $2 -eq 1 ]; then\n\
    \        echo \"false\"\n    else\n        [ $(expr $1 % $2) -eq 0 ] && $(is_simple_power\
    \ $(expr $1 / $2) $2) || echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  n=$1\n  p=$2\n  while\
    \ [[ $n -ge $p ]]; do\n    let n=$n/$p\n  done\n  if [[ $n -eq 1 ]]; then\n  \
    \  echo true\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo true\n  elif [ $(echo \"scale=0; $1 % $2\" | bc) -eq 0 ]\n \
    \ then\n    is_simple_power \"$(echo \"scale=0; $1 / $2\" | bc)\" \"$2\"\n  else\n\
    \    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local x_root=$(printf \"%.0f\" $(echo \"sqrt($x)\" | bc -l))\n  echo\
    \ $x_root\n  if [ \"$n\" -lt \"$x_root\" ]; then\n    if [ \"$(echo \"$x_root\
    \ % $n\" | bc)\" -eq 0 ]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  (( $1 % $2 )) || ((\
    \ $1 == $2 )) && \\\n    [[ $1 =~ ^$(bc <<< \"$2 ^ $(( $(echo \"$1/$2\" | bc)\
    \ + 1 ))\") ]]\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $# -ne 2 ]; then\n\
    \    echo false\n    return\n  fi\n  local integer=\"$1\"\n  local base=\"$2\"\
    \n  while [ \"$integer\" -gt 0 ]; do\n    if [ \"$integer\" -eq 1 ]; then\n  \
    \    echo true\n      return\n    fi\n    if [ \"$((integer % base))\" -ne 0 ];\
    \ then\n      echo false\n      return\n    fi\n    integer=$((integer / base))\n\
    \  done\n  echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  # if n is 0, we return false\n  if [\
    \ $2 -eq 0 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $1 -eq 1 ] &&\
    \ [ $2 -eq 1 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq 1 ] &&\
    \ [ $2 -gt 1 ]; then\n    echo \"false\"\n    return\n  fi\n  # if x is 0 and\
    \ n is different from 0, we return false\n\n  # if x is 1 and n is different from\
    \ 1, we return false\n  if [ $1 -gt 1 ] && [ $2 -eq 1 ]; then\n    echo \"true\"\
    \n    return\n  fi\n  local i=1\n  while [ $(echo \"$1 >= $2 ^ $i\" | bc) -eq\
    \ 1 ]; do\n    local j=$(echo \"$2 ^ $i\" | bc)\n    # so it's a power of n\n\
    \    if [ $j -eq $1 ]; then\n      echo \"true\"\n      return\n    fi\n    i=$(($i\
    \ + 1))\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\nif [ $1 -eq $(($2**$(grep\
    \ -o '1' <<< $((echo \"obase=2; $1\" | bc))))) ]; then\n\techo \"true\"\nelse\n\
    \techo \"false\"\nfi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9dw69qhc.sh: line 22: echo obase=2; 16 | bc: syntax error in expression
    (error token is "obase=2; 16 | bc")

    /tmp/tmp9dw69qhc.sh: line 22: 2**: syntax error: operand expected (error token
    is "**")

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  n=$1\n  x=$2\n  if\
    \ (( n ** x == n )); then\n    echo true\n  else\n    echo false\n  fi\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n\tif (($1**$2==$2));\
    \ then\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        if [[ $2 -eq 1 ]]; then\n            echo true\n        else\n\
    \            echo false\n        fi\n    else\n        local result=$(echo \"\
    ($1 ^ (1 / $2))\" | bc -l)\n        if [[ \"$result\" == \"0\"* ]]; then\n   \
    \         echo false\n        else\n            if [[ $(echo \"$result < 1\" |\
    \ bc -l) -eq 1 ]]; then\n                echo false\n            else\n      \
    \          if [[ $(echo \"$result % 1 != 0\" | bc -l) -eq 1 ]]; then\n       \
    \             echo false\n                else\n                    echo true\n\
    \                fi\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'Runtime warning (func=(main), adr=10): non-zero scale in exponent

    Runtime warning (func=(main), adr=15): non-zero scale in exponent

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    bc -l <<< \"$2^${1/.*}\
    \ == $1\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -gt 0 ] &&\
    \ [ $2 -gt 0 ]; then\n    res=$(bc <<< \"$2^($(bc <<< \"l($1)/l($2)\"))\")\n \
    \   [ \"$res\" -eq \"$1\" ] && echo \"true\" || echo \"false\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 1: syntax error

    /tmp/tmp1pcedltu.sh: line 24: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local -i x=$1\n\
    \    local -i n=$2\n    local tmp\n\n    [ $x -le 0 ] && return 1\n    [ $n -le\
    \ 0 ] && return 1\n\n    tmp=$((n**(x/n)))\n    [ $tmp -eq $x ] && return 0 ||\
    \ return 1\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == \"1\"\
    \ ]]; then\n        echo true\n        return\n    fi\n    local n=$2\n    local\
    \ a=$1\n    # let a=$a/n\n    # let n=$n/n\n    echo \"$a\"|grep -q \"^$n\"\n\
    \    if [[ $? -eq 0 ]]; then\n        echo true\n    else\n        echo false\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local n=$1\n  local\
    \ x=$2\n  local mod=1\n  local int=0\n  if [[ $n -eq 1 ]]; then\n    printf \"\
    false\"\n    return\n  fi\n  while [[ $mod -eq 1 ]]; do\n    ((int++))\n    x=$(expr\
    \ $x / $n)\n    mod=$(expr $x % $n)\n  done\n  if [[ $x -eq 1 ]]; then\n    printf\
    \ \"true\"\n  else\n    printf \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local n=\"$1\"\n \
    \ local x=\"$2\"\n  # Your code\n  echo \"false\"\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  x=$1\n  n=$2\n  a=$(echo\
    \ \"$n^$x\" | bc)\n  if [ \"$a\" -eq \"$x\" ]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    let \"power = $1\
    \ ** (1/$2)\"\n    let \"pow_pow = $power ** $2\"\n    if [ $pow_pow = $1 ]; then\n\
    \        echo true\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local val=$1\n  local\
    \ div=$2\n  #TODO: Your code here\n  if [ $val -eq 0 ]; then\n      echo true\n\
    \  elif [ $val -lt 0 ]; then\n      echo false\n  else\n      local count=0\n\
    \      while [ $val -ne 0 ]; do\n          count=$(($count+1))\n          val=$(($val/$div))\n\
    \      done\n      [ $count -gt 1 ] && echo false || echo true\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(($2**(($1/2+1))))\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ \"$1\" -eq\
    \ 0 ]]; then\n        if [[ \"$2\" -eq 0 ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        if ((\
    \ $(bc <<< \"$1 % $2\") != 0 )); then\n            echo \"false\"\n        else\n\
    \            is_simple_power \"$(bc <<< \"$1 / $2\")\" \"$2\"\n        fi\n  \
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Method 1:\n  if\
    \ [[ $1 -eq 1 ]]; then\n    true\n  elif [[ $1 -eq $(echo \"$2 ^ ($(echo \"l($1)/l($2)\"\
    \ | bc -l))\" | bc -l) ]]; then\n    true\n  else\n    false\n  fi\n\n  # Method\
    \ 2:\n  # echo \"$1\" | grep -E \"^$2\\^[[:digit:]]+$\" &> /dev/null\n  # [[ $?\
    \ -eq 0 ]] && true || false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime warning (func=(main), adr=28): non-zero scale in exponent

    '
  stdout: ''
  timestamp: 1660023611
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local is_power=false\n  local power=0\n  if [[ $n -eq 0 ]]; then\n \
    \   echo \"false\"\n    return\n  fi\n  if [[ $x -eq 0 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $x -eq 1 ]]; then\n    echo \"true\"\n    return\n\
    \  fi\n  if [[ $n -eq 1 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[\
    \ $n -eq $x ]]; then\n    echo \"true\"\n    return\n  fi\n  while (( power <=\
    \ x )); do\n    if (( power == x )); then\n      is_power=true\n      break\n\
    \    fi\n    power=$(( power * n ))\n  done\n  echo \"$is_power\"\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=63 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=61 encoding='utf-8'>
  timestamp: 1660023616
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Place your code\
    \ here\n  a=$(echo \"$1\" | bc)\n  b=$(echo \"$2\" | bc)\n  c=$(echo \"$1\" /\
    \ \"$2\" | bc)\n  d=$(echo \"$b\" ^ \"$c\" | bc)\n  if [[ $a -eq $d ]]; then\n\
    \    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # your code here\n\
    \    if [ $1 -eq 1 ]; then\n        echo \"true\"\n    else\n        for (( i=2;\
    \ i*i<=$1; i++ )); do\n            if [ $(($1%$i)) -eq 0 ]; then\n           \
    \     return 1\n            fi\n        done\n        if [ $(($1%$2)) -eq 0 ];\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local i\n    for\
    \ ((i=1; ; i++)); do\n        if ((i**$2 == $1)); then\n            echo true\n\
    \            break\n        elif ((i**$2 > $1)); then\n            echo false\n\
    \            break\n        fi\n    done\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  [ \"$1\" -eq \"$(echo\
    \ \"$2^${1//[^1-9]/}\" | bc)\" ]\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023611
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  x=$1\n  n=$2\n  #\
    \ Your code here...\n  if (( n == 1 )); then\n    echo \"false\"\n  else\n   \
    \ for (( i=1; i<=$x; i++ )); do\n      if (( ((n**i)) == x )); then\n        echo\
    \ \"true\"\n        return\n      fi\n    done\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local power_n=$n\n    local power_x=$x\n    # $RANDOM is from:\
    \ $RANDOM % 3\n    # 0) continue\n    # 1) break\n    # 2) exit\n    while true;\
    \ do\n        if (( $power_n == $power_x )); then\n            echo \"true\"\n\
    \            exit 0\n        elif (( $power_n > $power_x )); then\n          \
    \  echo \"false\"\n            exit 0\n        else\n            power_n=$(( $power_n\
    \ * $n ))\n        fi\n    done\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ -z \"$1\" ]\
    \ || [ -z \"$2\" ]; then\n        echo false\n        return\n    fi\n    local\
    \ result=false\n    local exponent=0\n    local remainder=0\n    local tmp=$1\n\
    \    local test=$(echo \"$1\" | grep -E -e '^[0-9]+$')\n    if [ -z \"$test\"\
    \ ]; then\n        echo false\n        return\n    fi\n    test=$(echo \"$2\"\
    \ | grep -E -e '^[0-9]+$')\n    if [ -z \"$test\" ]; then\n        echo false\n\
    \        return\n    fi\n    while [ $tmp -ge $2 ]; do\n        tmp=$((tmp / 2))\n\
    \        exponent=$((exponent + 1))\n    done\n    remainder=$((exponent % exponent))\n\
    \    if [ $remainder -eq 0 ]; then\n        result=true\n    fi\n    echo $result\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # your code here\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpagmv_kol.sh: line 23: syntax error near unexpected token `}''

    /tmp/tmpagmv_kol.sh: line 23: `}''

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ];\
    \ then\n        echo false\n        return\n    fi\n    num=$1\n    if [ $num\
    \ -eq 1 ]; then\n        echo true\n        return\n    fi\n    while [ $num -gt\
    \ 1 ]; do\n        if [ $(($num % $2)) -ne 0 ]; then\n            echo false\n\
    \            return\n        fi\n        num=$(($num / $2))\n    done\n    echo\
    \ true\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local pow=$(echo \"scale=0;l($x)/l($n)\" | bc -l)\n    if [[\
    \ $n -eq 1 ]]; then\n        echo \"false\"\n    elif [[ $pow -eq $pow ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=20): Divide by zero

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here.\n  local power=`echo $1 | bc`\n  local num=`echo $2 | bc`\n  local result=`echo\
    \ \"scale=0; $power/$num\" | bc`\n  local num2=`echo \"scale=0; $result*$num\"\
    \ | bc`\n  #echo $power\n  #echo $num\n  #echo $result\n  #echo $num2\n  if [\
    \ $power -eq $num2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -gt 0 ]]\
    \ && [[ $2 -gt 0 ]]; then\n    is_power=$(echo \"scale=2; ($1/$2)\" | bc)\n  \
    \  is_integer=$(echo \"$is_power - floor($is_power)\" | bc)\n    if [[ $is_integer\
    \ -eq 0 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=14): Function floor not defined.

    Runtime error (func=(main), adr=20): Function floor not defined.

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  [[ \"$1\" =~ ^[0-9]+$\
    \ ]] || return 1\n  [[ \"$2\" =~ ^[0-9]+$ ]] || return 1\n  [[ \"$1\" =~ ^0*[1-9][0-9]*$\
    \ ]] || return 1\n  [[ \"$2\" =~ ^0*[1-9][0-9]*$ ]] || return 1\n  if [ \"$1\"\
    \ = \"$2\" ]; then\n    echo true\n  elif [ \"$1\" = 1 ]; then\n    echo false\n\
    \  elif [ \"$2\" = 1 ]; then\n    echo false\n  elif [ \"$1\" -lt \"$2\" ]; then\n\
    \    echo false\n  else\n    is_simple_power \"$(bc <<< \"scale=2; $1/$2\")\"\
    \ \"$2\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"ERROR: Function is_simple_power must take two arguments\"\
    \ >&2\n        exit 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo\
    \ \"ERROR: $1 is not an integer\" >&2\n        exit 1\n    fi\n    if ! [[ $2\
    \ =~ ^[0-9]+$ ]]; then\n        echo \"ERROR: $2 is not an integer\" >&2\n   \
    \     exit 1\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"ERROR: $2 is 0,\
    \ which is not allowed\" >&2\n        exit 1\n    fi\n    # If $1 is an integer,\
    \ then $1 -eq 1*$1 will be true\n    # If $1 is not an integer, then 1*$1 will\
    \ generate an error\n    if ! [ $1 -eq 1*$1 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local ROUNDED_SQRT=$(printf \"%.0f\" $(echo \"sqrt($1)\"\
    \ | bc -l))\n    if [ \"$ROUNDED_SQRT\" == \"$2\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkit5o9nf.sh: line 40: [: 1*16: integer expression expected

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 == $2 ]];\
    \ then\n    echo true\n  else\n    # this could be improved\n    local is_power=`bc\
    \ <<< \"$1 % $2\"`\n    if [[ $is_power -eq 0 ]]; then\n      is_simple_power\
    \ $(($1/$2)) $2\n    else\n      echo false\n    fi\n  fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    [[ $1 == $(bc <<<\
    \ \"$2^($(bc <<< \"l($1)/l($2)\"))\") ]] && echo \"true\" || echo \"false\"\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  x=$1\n  n=$2\n  if\
    \ [ $n -eq 0 ]; then return 1; fi\n  if [ $x -eq 1 ]; then return 1; fi\n  if\
    \ [ $x -eq $n ]; then return 0; fi\n  while [ $x -gt $n ]; do\n    if [ $((x%n))\
    \ -ne 0 ]; then return 1; fi\n    x=$((x/n))\n  done\n  if [ $x -eq $n ]; then\
    \ return 0; fi\n  return 1\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq $(bc\
    \ <<< \"a=$1/$2; scale=0; a^$2\") ]]; then\n        echo true\n    else\n    \
    \    echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1 n=$2\n\
    \  [[ $(awk 'BEGIN{print ('\"$x\"'/'\"$n\"')^('\"$n\"')}') -eq $x ]] && echo \"\
    true\" || echo \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write a function\
    \ body\n    echo $1\n    echo $2\n    if [ $(($1%$2)) -eq 0 ]; then\n\techo \"\
    true\"\n    else\n\techo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local base=$(bc <<< \"scale=0; l($x)/l($n)\")\n  echo $(bc <<< \"$n^$base==$x\"\
    )\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local base=$1\n\
    \    local x=$2\n    local power=0\n    while (( $((base**power)) < x ))\n   \
    \ do\n        ((power++))\n    done\n    ((base**power)) == $x\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfvpwvbb0.sh: line 29: syntax error near unexpected token `==''

    /tmp/tmpfvpwvbb0.sh: line 29: `    ((base**power)) == $x''

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        return 1\n    fi\n    local x=$1 n=$2\n    [ $x -eq $n ] && return\
    \ 0\n    local res=0\n    while [[ $x -ge $n ]]; do\n        local q=$(($x / $n))\n\
    \        local r=$(($x % $n))\n        [ $r -ne 0 ] && return 1\n        x=$q\n\
    \    done\n    [ $x -eq 1 ] && return 0\n    return 1\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  declare -i x=$1\n\
    \  declare -i n=$2\n  declare -i root=$(awk -v x=$x -v n=$n 'BEGIN{ print int(x^(1/n))\
    \ }')\n  declare -i result=$(awk -v x=$x -v n=$n -v root=$root 'BEGIN{ print root^n\
    \ }')\n  [ $result -eq $x ] && echo true || echo false\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq $2**$(echo\
    \ \"$1/$2\" | bc) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local number=\"\
    $1\"\n    local power=\"$2\"\n    if [ $(bc <<< \"sqrt($number)%1!=0\" ) -eq 1\
    \ ]; then\n        echo \"false\"\n    else\n        local root=$(bc <<< \"sqrt($number)\"\
    )\n        if [ $(bc <<< \"$root**$power==$number\") -eq 1 ]; then\n         \
    \   echo \"true\"\n        else\n            echo \"false\"\n        fi\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmpy_4gfgin.sh: line 28: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  test $(bc <<< \"$2^$(bc\
    \ <<< \"l($1)/l($2)\")\" | tr -d '.') -eq $1\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmpdjo81f5e.sh: line 22: test: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local int=`echo \"\
    scale=0; l($1)/l($2)\" | bc -l`\n  if [[ $int =~ ^[0-9]+$ ]]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=20): Divide by zero

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    if (( $x > 0 && $n > 0 )) && (( $x % $n == 0 )); then\n    \
    \    local m=$x\n        while (( $m > 1 )); do\n            if (( $m % $n !=\
    \ 0 )); then\n                echo \"false\"\n                return\n       \
    \     fi\n            m=$(( $m / $n ))\n        done\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo $(($1 % $2))\n\
    \    [[ $(($1 % $2)) -eq 0 ]] && [[ $(($1 / $2)) -eq $2 ]]\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if (( $1 == 0 ))\
    \ || (( $2 == 0 )); then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if (( $1 == 1 )); then\n        echo \"true\"\n        return 0\n    fi\n\
    \    local power=1\n    while (( $power < $1 )); do\n        power=$(( $power\
    \ * $2 ))\n    done\n    if (( $power == $1 )); then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$2\" -eq \"\
    1\" ]; then\n    if [ \"$1\" -eq \"1\" ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    local res=$(bc <<< \"scale=2; l($1)/l($2)\"\
    )\n    local int_res=$(bc <<< \"scale=0; $res/1\")\n    # echo \"res=$res\"\n\
    \    # echo \"int_res=$int_res\"\n    if [ \"$res\" == \"$int_res\" ]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=12): Function l not defined.

    (standard_in) 1: syntax error

    Runtime error (func=(main), adr=16): Function l not defined.

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  echo $(($1**$2)) |\
    \ grep -Eq \"^$1$\" && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # your code here\n\
    \    if [ $1 == $2 ]; then\n\treturn true\n    fi\n    local base=$2 \n    local\
    \ exponent=0\n    local power=1\n    while [ $power -lt $1 ]; do\n\texponent=$((exponent+1))\n\
    \tpower=$((power*base))\n    done\n    if [ $power == $1 ]; then\n\treturn true\n\
    \    else\n\treturn false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp29zjold0.sh: line 34: return: true: numeric argument required

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local isp=false\n  local i\n  if [[ \"$n\" -le 0 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  if [[ \"$x\" -eq 0 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ \"$x\" -eq 1 ]]; then\n    echo \"true\"\n    return\n\
    \  fi\n  for i in $(seq 2); do\n    if [[ \"$(bc <<< \"$n ^ $i\")\" -eq \"$x\"\
    \ ]]; then\n      isp=true\n      break\n    fi\n  done\n  echo \"$isp\"\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $2 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq 1 ]]; then\n    echo \"false\"\n  elif [[ $2 -eq 0 ]]; then\n\
    \    echo \"false\"\n  elif [[ $(echo \"scale=5; $1/$2\" | bc) =~ ^[0-9]+$ ]];\
    \ then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Test if $1 is\
    \ a power of $2\n    local test=$( echo \"$1^(1/$2)\" | bc -l )\n    # Test if\
    \ $test is an integer\n    local test2=$( echo \"$test\" | sed 's/[.].*//' )\n\
    \    if [ \"$test\" = \"$test2\" ]; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime warning (func=(main), adr=10): non-zero scale in exponent

    Runtime warning (func=(main), adr=15): non-zero scale in exponent

    '
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $(echo \"$1 $2\" | awk '{print $1 ^ $2}')\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $(echo \"\
    $1 $2\" | awk '{print $1**(log($1)/log($2))==$2}') -eq 1 ]]; then\n        echo\
    \ true\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $# -eq 2 ]; then\n\
    \    x=$1\n    n=$2\n    i=0\n    num=$n\n    while [ $num -le $x ]; do\n    \
    \  if [ $num -eq $x ]; then\n        echo true\n        return 0\n      fi\n \
    \     num=$(( num * n ))\n    done\n  fi\n  echo false\n  return 1\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $# -ne 2 ]];\
    \ then\n        echo 'Expected exactly 2 arguments.'\n        return 1\n    fi\n\
    \    local n=\"$1\"\n    local x=\"$2\"\n    # Check if n is 0.\n    if [[ \"\
    $n\" -eq 0 ]]; then\n        echo 'The first argument must be non-zero.'\n   \
    \     return 1\n    fi\n    local power=1\n    while [[ \"$power\" -lt \"$x\"\
    \ ]]; do\n        power=$(( power * n ))\n    done\n    if [[ \"$power\" -eq \"\
    $x\" ]]; then\n        echo 'true'\n    else\n        echo 'false'\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023612
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    echo \"${1}\" |\
    \ grep -wqE \"[0-9]+\" || return 1\n    echo \"${2}\" | grep -wqE \"[0-9]+\" ||\
    \ return 1\n    expr \"$(bc <<< \"scale=0; l(${1})/l(${2})\")\" : \"^\\(.*\\).$\"\
    \ && echo true || echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    '
  stdout: ''
  timestamp: 1660023612

name: HumanEval_140_fix_spaces
language: sh
prompt: "#!/bin/bash\n# Given a string text, replace all spaces in it with underscores,\
  \ \n# and if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# >>> $(fix_spaces \" Example\")\n# \"Example\"\n# >>> $(fix_spaces\
  \ \" Example 1\")\n# \"Example_1\"\n# >>> $(fix_spaces \" Example 2\")\n# \"_Example_2\"\
  \n# >>> $(fix_spaces \" Example 3\")\n# \"_Example-3\"\n#\n# $1 is a string\nfix_spaces()\
  \ {\n"
tests: "}\n\ncandidate() {\n    fix_spaces \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"Example\") = \"Example\" ]]\n    [[ $(candidate \"Mudasir Hanif\
  \ \") = \"Mudasir_Hanif_\" ]]\n    [[ $(candidate \"Yellow Yellow  Dirty  Fellow\"\
  ) = \"Yellow_Yellow__Dirty__Fellow\" ]]\n    [[ $(candidate \"Exa   mple\") = \"\
  Exa-mple\" ]]\n    [[ $(candidate \"   Exa 1 2 2 mple\") = \"-Exa_1_2_2_mple\" ]]\n\
  }\n\nrun_test"
completions: ["  # TODO Insert code here\n  echo \"${1// /_}\" | sed 's/__/-/g'",
  "\techo $1 | sed -e 's/ */_/g' | sed -e 's/  */-/g'", "\tlocal spaces=\"$(tr -cs\
    \ \" \" \"\\\\n\" <<< \"$1\" | sort -rn | uniq -c | head -n 1)\"\n\tif [ \"$spaces\"\
    \ == \"1 \" ]; then\n\t\techo \"$1\" | tr \" \" \"_\"\n\telif [ \"$spaces\" ==\
    \ \"2  \" ]; then\n\t\techo \"$1\" | tr \" \" \"_\"\n\telse\n\t\techo \"$1\" |\
    \ tr \" \" \"-\"\n\tfi", "    echo \"$1\" | sed -e 's/  */-/g' -e 's/\\(.*\\)\
    \ /\\1_/'", "    printf \"%s\" \"$1\" | sed -e 's/ /_/g' | sed -e 's/__*/_/g'\
    \ | sed -e 's/_/ -/g'", "    echo \"$1\" | sed -E \"s/ +/ /g\" \\\n        | sed\
    \ -E \"s/ /_/g\" \\\n        | sed -E \"s/_+/-/g\"", "    echo \"$1\" |\n    sed\
    \ 's/^ //g' |\n    sed 's/  / /g' |\n    sed 's/ /_/g' |\n    sed 's/__/-/g' |\n\
    \    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g'\
    \ |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed\
    \ 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g'\
    \ |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed\
    \ 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g'\
    \ |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed\
    \ 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g'\
    \ |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed\
    \ 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g'\
    \ |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed\
    \ 's/__/-/g' |\n    sed 's/__/-/g' |\n    sed 's/__/-/g' |\n   ", "  string=$1\n\
    \  echo \"${string}\" | sed 's/\\s/_/g' | sed 's/__*/-/g'", "  awk '{\n    gsub(/\\\
    s{2,}/, \"-\");\n    gsub(/\\s/, \"_\");\n    print;\n  }' <<<\"$1\"", "    echo\
    \ $(echo $1 | sed 's/  / /g' | sed 's/  / /g' | sed 's/ /_/g' | sed 's/ /-/g')",
  "    # use awk to replace one or more spaces with '_'\n    awk '{gsub(/[ ]+/, \"\
    _\"); print}' <<< \"$1\" |\n    # use awk to replace one or more '_' with '-'\n\
    \    awk '{gsub(/[_]+/, \"-\"); print}' |\n    # use tr to replace each '-' with\
    \ '_'\n    tr -s '-' '_'", "    echo \"${1// /_}\" | sed 's/_\\{2,\\}/-/g'", "\t\
    echo $(echo $1 | sed 's/\\ /_/g' | sed 's/\\ \\+/-/g')", "  echo $1 | sed 's/[[:space:]]\\\
    {1,\\}/_/g' | sed 's/^\\_//g' | sed 's/\\_\\_/-/g'", "    local text=$1\n\n  \
    \  if [ -z \"$text\" ]; then\n        echo \"Received empty text\"\n        return\
    \ 1\n    fi\n\n    local fixed_text=$(echo \"$text\" | sed -r 's/  */-/g')\n \
    \   fixed_text=$(echo \"$fixed_text\" | sed -r 's/ /_/g')\n    echo \"$fixed_text\"",
  "    local __resultvar=$2\n    local _result=$(echo $1 | sed -e 's/\\s/_/g' | sed\
    \ -e 's/\\s\\s*/-/g')\n    eval $__resultvar=\"'$_result'\"", "    echo $1 | sed\
    \ -e 's/[ ]\\+/_/g' -e 's/[_]\\+/-/g'", "\t# Get number of spaces in a string\n\
    \tnum_spaces=$(echo $1 | grep -o ' ' | wc -l)\n\tif [ $num_spaces -eq 0 ]; then\n\
    \t\techo $1\n\telif [ $num_spaces -eq 1 ]; then\n\t\techo $1 | sed -e 's/ /_/g'\n\
    \telse\n\t\techo $1 | sed -e 's/ /_/g' -e 's/__*/-/g'\n\tfi", "    local str=\"\
    $1\"\n    # Replace spaces with underscores\n    str=${str// /_}\n    # Replace\
    \ more than 2 consecutive spaces with -\n    str=${str// _/_}\n    str=${str//__/-}\n\
    \    echo \"$str\"", "\tline=$1\n\twhile [[ \"$line\" =~ .*  .* ]]\n\tdo\n\t\t\
    line=${line//  /_}\n\tdone\n\tline=${line// /_}\n\tif [[ \"$line\" =~ .*__.* ]]\n\
    \tthen\n\t\tline=${line//__/-}\n\tfi\n\tif [[ \"$line\" =~ ^_.* ]]\n\tthen\n\t\
    \tline=${line:1}\n\tfi\n\techo $line"]
stop_tokens:
- "\n}"

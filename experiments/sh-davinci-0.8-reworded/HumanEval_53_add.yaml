name: HumanEval_53_add
language: sh
prompt: "#!/bin/bash\n# Add two numbers x and y\n# >>> $(add \"2\" \"3\")\n# \"5\"\
  \n# >>> $(add \"5\" \"7\")\n# \"12\"\n#\n# $1 is an integer\n# $2 is an integer\n\
  add() {\n"
tests: "}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"0\" \"1\") = \"1\" ]]\n    [[ $(candidate \"1\" \"0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"2\" \"3\") = \"5\" ]]\n    [[ $(candidate \"5\" \"7\") = \"12\" ]]\n    [[ $(candidate\
  \ \"7\" \"5\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    [[ $# -ne 2 ]] && {\n        echo \"$FUNCNAME: requires 2 arguments\"\
    \ >&2\n        return 1\n    }\n    echo \"$(($1 + $2))\"", '    echo $(($1 +
    $2))', '  bc <<< "$1 + $2"', "    if [[ ! $1 =~ ^-?[0-9]+$ ]]; then\n        echo\
    \ \"add: '$1' is not an integer\" >&2\n        return 1\n    fi\n    if [[ ! $2\
    \ =~ ^-?[0-9]+$ ]]; then\n        echo \"add: '$2' is not an integer\" >&2\n \
    \       return 1\n    fi\n    echo \"$(($1 + $2))\"", '    echo "$(( $1 + $2 ))"',
  "    # Adds $1 and $2\n    #\n    # No local variables\n    echo \"$(( $1 + $2 ))\"",
  '    echo "$(( $1 + $2 ))"', '  echo "$(($1 + $2))"', "    x=$1\n    y=$2\n    echo\
    \ $(($x + $y))", "    local -i x=$1\n    local -i y=$2\n    echo $((x + y))",
  "    sum=$(($1 + $2))\n    echo $sum", '    printf "%d" "$(( $1 + $2 ))"', "   \
    \ local x=\"$1\"\n    local y=\"$2\"\n    local sum=$((x + y))\n    echo \"$sum\"",
  "  ((sum=${1}+${2}))\n  printf \"%s\" \"${sum}\"", "    # example use of bc\n  \
    \  echo \"$(echo \"$1 + $2\" | bc)\"", "  local x=$1\n  local y=$2\n  echo $((x\
    \ + y))", "  local x=$1\n  local y=$2\n  local sum=$(( x + y ))\n  echo $sum",
  "\techo $(($1 + $2))", "\techo $(( $1 + $2 ))", "  local sum=\n  let sum=$1+$2\n\
    \  echo \"$sum\""]
stop_tokens:
- "\n}"

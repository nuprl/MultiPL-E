language: sh
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    if [[ $# -eq 0 ]]; then\n        return\n \
    \   fi\n    if [[ $# -eq 1 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n    local sum=$1\n    shift\n    pairs_sum_to_zero_helper $sum $@\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    if [[ $# -lt 2 ]]; then\n        echo false\n\
    \        return\n    fi\n    list=$(echo $@ | tr ' ' '\\n' | sort -n)\n    head=$(echo\
    \ \"$list\" | head -n 1)\n    tail=$(echo \"$list\" | tail -n +2)\n    if [[ \"\
    $head\" == \"0\" ]]; then\n        echo true\n        return\n    fi\n    if [[\
    \ \"$head\" -lt 0 ]]; then\n        pairs_sum_to_zero $(echo \"$tail\" | tr '\\\
    n' ' ')\n    else\n        if [[ $(echo \"$tail\" | grep -c -w \"$((-1 * $head))\"\
    ) -gt 0 ]]; then\n            echo true\n            return\n        else\n  \
    \          pairs_sum_to_zero $(echo \"$tail\" | tr '\\n' ' ')\n        fi\n  \
    \  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [[ $# -eq 0 ]]; then\n    echo false\n   \
    \ return 0\n  fi\n  for (( i = 1; i < $#; i++ )); do\n    for (( j = i+1; j <=\
    \ $#; j++ )); do\n      if [[ $((${@:i:1} + ${@:j:1})) -eq 0 ]]; then\n      \
    \  echo true\n        return 0\n      fi\n    done\n  done\n  echo false\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: your code here\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpafk1fhsg.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmpafk1fhsg.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  LIST=( $1 )\n  for i in \"${LIST[@]}\"; do\n\
    \    for j in \"${LIST[@]}\"; do\n      if [ $(($i + $j)) -eq 0 ] && [ $i -ne\
    \ $j ]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  sort_items=$(echo $1 | tr \" \" \"\\n\" | sort\
    \ -n)\n  items=($sort_items)\n  length=${#items[@]}\n  min_index=0\n  max_index=$((length\
    \ - 1))\n  while (( $min_index < $max_index )); do\n    # echo ${items[$min_index]}\
    \ ${items[$max_index]}\n    sum=$((items[$min_index] + items[$max_index]))\n \
    \   if (( sum == 0 )); then\n      echo \"true\"\n      return\n    elif (( sum\
    \ < 0 )); then\n      min_index=$((min_index + 1))\n    else\n      max_index=$((max_index\
    \ - 1))\n    fi\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # loop through the numbers\n  for i in $1; do\n\
    \    # loop through the remaining numbers\n    for j in $1; do\n      # if a pair\
    \ sums to zero and they are distinct\n      if [[ $((i + j)) -eq 0 && $i -ne $j\
    \ ]]; then\n        # print \"true\" and exit\n        echo \"true\"\n       \
    \ exit\n      fi\n    done\n  done\n  # print \"false\" and exit\n  echo \"false\"\
    \n  exit\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: -1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    pos_nums=$(echo $1 | tr \" \" \"\\n\" | grep\
    \ -E \"^[0-9]+$\" | sort -n)\n    neg_nums=$(echo $1 | tr \" \" \"\\n\" | grep\
    \ -E \"^-[0-9]+$\" | sort -r -n)\n    while [[ \"$pos_nums\" != \"\" && \"$neg_nums\"\
    \ != \"\" ]]; do\n        pos_num=$(echo $pos_nums | cut -d\" \" -f1)\n      \
    \  neg_num=$(echo $neg_nums | cut -d\" \" -f1)\n        if [ $pos_num -eq $((0\
    \ - $neg_num)) ]; then\n            echo \"true\"\n            return\n      \
    \  elif [ $pos_num -gt $((0 - $neg_num)) ]; then\n            neg_nums=$(echo\
    \ $neg_nums | cut -d\" \" -f2-)\n        else\n            pos_nums=$(echo $pos_nums\
    \ | cut -d\" \" -f2-)\n        fi\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660023804
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # YOUR CODE HERE\n    for i in $1\n    do\n\
    \        if [[ $(echo $1 | grep -o -w -e $i | wc -l) -gt 1 ]]\n        then\n\
    \            if [[ $(echo \"scale=1; $i/2\" | bc) -eq $(echo $i/2 | bc) ]]\n \
    \           then\n                return 1\n            fi\n        fi\n    done\n\
    \    return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# parse the input string into an array of integers\n\
    \tin_array=($1)\n\t# sort the array\n\tin_array_sorted=($(echo ${in_array[@]}\
    \ | tr \" \" \"\\n\" | sort -n))\n\t# use a binary search to find the complements\
    \ of the elements\n\t# in the array.\n\tfor elem in ${in_array_sorted[@]}; do\n\
    \t\tcomplement=$((0 - elem))\n\t\tif binary_search ${complement} ${in_array_sorted[@]};\
    \ then\n\t\t\treturn 0\n\t\tfi\n\tdone\n\treturn 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg008scls.sh: line 26: binary_search: command not found

    /tmp/tmpg008scls.sh: line 26: binary_search: command not found

    /tmp/tmpg008scls.sh: line 26: binary_search: command not found

    /tmp/tmpg008scls.sh: line 26: binary_search: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  sum=0\n  for i in $1; do\n    # TODO: Task 1:\
    \ write a loop that scans the input string to see\n    # if it contains any pair\
    \ of elements that sum to zero\n    # If you find a pair of elements that sum\
    \ to zero, set the\n    # 'sum' variable to zero and break out of the loop.\n\
    \    ...\n  done\n  if [ $sum -eq 0 ]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa3tu_o2y.sh: line 24: ...: command not found

    /tmp/tmpa3tu_o2y.sh: line 24: ...: command not found

    /tmp/tmpa3tu_o2y.sh: line 24: ...: command not found

    /tmp/tmpa3tu_o2y.sh: line 24: ...: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    pairs_sum_to_zero_helper() {\n        if [\
    \ \"$#\" -eq 1 ]; then\n            return 1\n        fi\n        target=$1\n\
    \        shift\n        for n in $@; do\n            if [ $n -eq $target ]; then\n\
    \                continue\n            fi\n            if [ $n -eq $((-1 * $target))\
    \ ]; then\n                return 0\n            fi\n        done\n        return\
    \ 1\n    }\n    for n in $@; do\n        pairs_sum_to_zero_helper $n $@\n    \
    \    if [ $? -eq 0 ]; then\n            echo \"true\"\n            return\n  \
    \      fi\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  target=$1\n  shift\n  while test $# -gt 0; do\n\
    \    if test -n \"$(echo \"$target\" | grep -w $((-$1)))\"\n    then\n      echo\
    \ \"true\"\n      return\n    fi\n    shift\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Write your implementation below\n    local\
    \ input=\"$1\"\n    local all_nums=(${input})\n    local len=${#all_nums[@]}\n\
    \    local neg_arr=()\n    local pos_arr=()\n    local hash_table=()\n    local\
    \ hash_table_neg=()\n    local cur_num=0\n    local cur_neg_num=0\n    local ans=false\n\
    \    for ((i=0; i<$len; i++)); do\n        cur_num=${all_nums[$i]}\n        if\
    \ [ $cur_num -lt 0 ]; then\n            hash_table_neg[$cur_num]=$i\n        \
    \    neg_arr=(\"${neg_arr[@]}\" $cur_num)\n        else\n            hash_table[$cur_num]=$i\n\
    \            pos_arr=(\"${pos_arr[@]}\" $cur_num)\n        fi\n    done\n    for\
    \ ((i=0; i<${#neg_arr[@]}; i++)); do\n        cur_neg_num=${neg_arr[$i]}\n   \
    \     if [ -n \"${hash_table[$((-1*$cur_neg_num))]}\" ]; then\n            ans=true\n\
    \            break\n        fi\n    done\n    if [ \"$ans\" = true ]; then\n \
    \       echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpai6k1u14.sh: line 32: hash_table_neg[$cur_num]: bad array subscript

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # This function will only work for integers in\
    \ the range of (-2^32, 2^32)\n  # as bash does not support 64 bit integers\n \
    \ #\n  # This is probably the easiest solution that avoids loops in bash,\n  #\
    \ and is still pretty fast. It's not the most readable solution, though.\n  #\n\
    \  # First, we take the list of integers, and sort them numerically.\n  # Then,\
    \ we pipe that list of sorted integers into\n  # `awk` which runs an awk script.\n\
    \  # The awk script we're using is one that I wrote that you can find\n  # in\
    \ this repo. The script takes a list of integers as an input,\n  # and outputs\
    \ true if there are two distinct elements in the list that\n  # sum to zero, and\
    \ false otherwise.\n  #\n  # The awk script itself is a one-liner.\n  # It's pretty\
    \ fast, and it's easier than trying to do it all in bash.\n  #\n  # This script\
    \ is using two commands that are not enabled by default in\n  # the OSX version\
    \ of awk.\n  # It does run on Linux, though.\n  # It's a little bit faster in\
    \ awk on linux, but not by a lot.\n  #\n  # This is the fastest way I could think\
    \ of to write this.\n  # It's not too much slower than the python version.\n \
    \ # You can run `bash time.sh` to see how it compares on your machine.\n  #\n\
    \  # Given more time, I'd probably write a C program that would run this.\n  #\
    \ It would be the fastest. It would be quite a bit of work, though.\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | \\\n    awk -f ./pairs_sum_to_zero.awk\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: fatal: can''t open source file `./pairs_sum_to_zero.awk'' for reading
    (No such file or directory)

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local input=($1)\n    local hash_map\n    local\
    \ sum=0\n    local len=${#input[@]}\n    local i=0\n    while (( i < len )); do\n\
    \        ((sum=input[i]))\n        if [[ ${hash_map[sum]} ]]; then\n         \
    \   return 0\n        fi\n        ((hash_map[-sum]=1))\n        ((i++))\n    done\n\
    \    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr0_7hsz_.sh: line 28: hash_map[-sum]: bad array subscript

    /tmp/tmpr0_7hsz_.sh: line 28: hash_map[-sum]: bad array subscript

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    while [ -n \"$1\" ]; do\n        n=$1\n   \
    \     (( l=$n * -1 ))\n        shift\n        for i in $@; do\n            if\
    \ [ \"$i\" -eq \"$l\" ]; then\n                echo \"true\"\n               \
    \ return\n            fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe2cmq61h.sh: line 20: ((: l=1 3 5 0 * -1 : syntax error in expression
    (error token is "3 5 0 * -1 ")

    /tmp/tmpe2cmq61h.sh: line 20: ((: l=1 3 -2 1 * -1 : syntax error in expression
    (error token is "3 -2 1 * -1 ")

    /tmp/tmpe2cmq61h.sh: line 20: ((: l=1 2 3 7 * -1 : syntax error in expression
    (error token is "2 3 7 * -1 ")

    /tmp/tmpe2cmq61h.sh: line 20: ((: l=2 4 -5 3 5 7 * -1 : syntax error in expression
    (error token is "4 -5 3 5 7 * -1 ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tlocal arr\n\tIFS=' ' read -r -a arr <<< \"$1\"\
    \n\tlocal len=${#arr[@]}\n\tfor i in $(seq 0 $((len-1))); do\n\t\tfor j in $(seq\
    \ 0 $((len-1))); do\n\t\t\tif [ $i -ne $j ] && (( ${arr[$i]} + ${arr[$j]} == 0\
    \ )); then\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tdone\n\tdone\n\
    \techo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: your code here\n  local status\n  status=\"\
    false\"\n  for i in \"$@\"\n  do\n    for j in \"$@\"\n    do\n      if [ $((i+j))\
    \ -eq 0 ] && [ $i -ne $j ]\n      then\n        status=\"true\"\n      fi\n  \
    \  done\n  done\n  echo \"$status\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp32odv9ol.sh: line 25: 1 3 5 0: syntax error in expression (error
    token is "3 5 0")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  declare -A ints\n\n  for i in $1; do\n    ints[$i]=1\n\
    \  done\n\n  for i in $1; do\n    if [[ \"${ints[-$i]}\" == \"1\" ]]; then\n \
    \     echo \"true\"\n      return\n    fi\n  done\n\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  #\n  # TASK: Fill in the body of this function\n\
    \  #\n  set +o nounset\n  #echo $1\n  #echo \"inside function\"\n  for var in\
    \ $1\n  do\n    #echo \"var = $var\"\n    for var2 in $1\n    do\n      #echo\
    \ \"var2 = $var2\"\n      if [ $var -eq $(expr 0 - $var2) ]\n      then\n    \
    \    #echo \"true\"\n        echo \"true\"\n        set -o nounset\n        return\n\
    \      fi\n    done\n  done\n  #echo \"false\"\n  echo \"false\"\n  set -o nounset\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # FILL THIS IN\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    numbers=$1\n    echo \"$numbers\" | tr \" \"\
    \ \"\\n\" | sort -n > /tmp/numbers.txt\n    for n in $(cat /tmp/numbers.txt);\
    \ do\n        if grep -q \"^$((n * -1))$\" /tmp/numbers.txt; then\n          \
    \  echo \"true\"\n            return\n        fi\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local numbers=\"$1\"\n  local prev=\"${numbers%%\
    \ *}\"\n  local cur\n  numbers=\"${numbers#* }\"\n  while [ -n \"$numbers\" ];\
    \ do\n    cur=\"${numbers%% *}\"\n    numbers=\"${numbers#* }\"\n    if [ \"$prev\"\
    \ = \"$((-$cur))\" ]; then\n      echo \"true\"\n      return\n    fi\n    prev=\"\
    $cur\"\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for i in $1\n  do\n    for j in $1\n    do\n\
    \      if [ $i -eq $j ]\n      then\n        continue\n      fi\n      if [ $i\
    \ -eq $((-1 * $j)) ]\n      then\n        echo true\n        return\n      fi\n\
    \    done\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local arr=( $1 )\n  local len=${#arr[@]}\n  local\
    \ _len=$((len-1))\n  local flag=0\n  # for each item in the list\n  for (( i=0;\
    \ i<len; i++ ))\n  do\n    # for each other item in the list, not including the\
    \ current index\n    for (( j=0; j<_len; j++ ))\n    do\n      # if the sum of\
    \ current index, and the current other item is zero\n      if [[ $((arr[i]+arr[j]))\
    \ == 0 ]]\n      then\n        # if it's not the same index as the other item\n\
    \        if [[ $i != $j ]]\n        then\n          # change flag and stop checking\
    \ other items, return true\n          flag=1\n          echo true\n          return\n\
    \        fi\n      fi\n    done\n  done\n  # if false, return false\n  if [[ $flag\
    \ == 0 ]]\n  then\n    echo false\n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: -1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # read the input into an array\n  local array=()\n\
    \  while read -r -d '' num; do\n    array+=(\"$num\")\n  done < <(printf '%s\\\
    0' \"$1\" | tr ' ' '\\0')\n\n  # sort the array\n  sort -n -o \"${array[@]}\"\n\
    \n  # compute the sum of every pair of numbers in the array\n  local i=0\n  local\
    \ j=0\n  local found=0\n  for ((i=0; i<${#array[@]}; i++)); do\n    for ((j=i+1;\
    \ j<${#array[@]}; j++)); do\n      if [[ \"${array[i]}\" -eq \"-${array[j]}\"\
    \ ]]; then\n        found=1\n        break\n      fi\n    done\n    if [[ \"$found\"\
    \ -eq \"1\" ]]; then\n      break\n    fi\n  done\n\n  # print the result\n  if\
    \ [[ \"$found\" -eq \"1\" ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=26 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=18 encoding='utf-8'>
  timestamp: 1660023804
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local all_numbers=$1\n\n  # Create a list of\
    \ numbers\n  IFS=' ' read -r -a numbers <<< \"$all_numbers\"\n\n  # Create a string\
    \ of all numbers\n  local all_numbers_str\n  all_numbers_str=$( printf '%s\\n'\
    \ \"${numbers[@]}\" )\n\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    for ((j=i+1;\
    \ j<${#numbers[@]}; j++)); do\n      # sum the two numbers\n      local sum\n\
    \      sum=$(( numbers[i] + numbers[j] ))\n\n      # if the two numbers sum to\
    \ zero, return \"true\"\n      if [[ $sum -eq 0 ]]; then\n        echo \"true\"\
    \n        return\n      fi\n    done\n  done\n\n  # if we reach this point, all\
    \ combinations of two numbers did not sum to zero\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tarr=($1)\n\tlen=${#arr[@]}\n\tfor((i=0;i<len;i++))\n\
    \tdo\n\t\tfor((j=i+1;j<len;j++))\n\t\tdo\n\t\t\tif [ $((arr[i]+arr[j])) -eq 0\
    \ ]\n\t\t\tthen\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tdone\n\t\
    done\n\techo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local in=$1\n    local -i elem sum\n    local\
    \ -a positive negs=()\n    local -a in=($in)\n    local -i n=${#in[@]}\n\n   \
    \ for ((i=0; i<n; i++)); do\n        elem=${in[$i]}\n        sum=$(($elem + $elem))\n\
    \        if (( sum == 0 )); then\n            echo \"true\"\n            return\n\
    \        fi\n        if (( elem > 0 )); then\n            positive+=($elem)\n\
    \        else\n            negs+=($elem)\n        fi\n    done\n\n    for elem\
    \ in ${positive[@]}; do\n        if (( \"${negs[@]/*-$elem/}\" == \"${negs[@]}\"\
    \ )); then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \n    echo \"true\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  :\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    a=($1)\n    nums=(${a[@]})\n    sorted=($(printf\
    \ '%s\\n' \"${nums[@]}\" | sort -n))\n    len=${#sorted[@]}\n    for (( i=0; i<len;\
    \ i++ )); do\n        for (( j=i+1; j<len; j++ )); do\n            if [ $(( ${sorted[i]}\
    \ + ${sorted[j]} )) -eq 0 ]; then\n                echo \"true\"\n           \
    \     return\n            fi\n        done\n    done\n    echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  array=($1)\n  # you write the rest\n  echo \"\
    true\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [[ $(wc -w <<< $1) -le 1 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n\n  numbers=($(echo $1))\n  for num in ${numbers[@]};\
    \ do\n    if [[ \"${numbers[@]}\" =~ \"-$num\" ]]; then\n      echo \"true\"\n\
    \      return\n    fi\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local out str\n  str=${1}\n  local args=($(echo\
    \ ${str} | tr ' ' '\\n'))\n  for (( i=0; i<${#args[@]}; i++ )); do\n    for ((\
    \ j=0; j<${#args[@]}; j++ )); do\n      if [[ \"${args[$i]}\" -eq \"-${args[$j]}\"\
    \ ]]; then\n        out=true\n      fi\n    done\n  done\n  if [[ \"${out}\" ]];\
    \ then\n    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    IFS=\" \"\n    read -a a <<<\"$1\"\n    l=${#a[@]}\n\
    \    if [ $l -eq 1 ]; then\n        echo \"false\"\n        return\n    fi\n \
    \   for ((i=0; i<$l; i++)); do\n        for ((j=i+1; j<$l; j++)); do\n       \
    \     if [ $(( ${a[$i]} + ${a[$j]} )) -eq 0 ]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # Hint: you can use bash associative arrays\n\
    \  # use: declare -A array_name\n  # use: array_name[index]=value\n  # use: \"\
    ${array_name[index]}\"\n  # use: \"${!array_name[@]}\"\n  # use: \"${array_name[@]}\"\
    \n  declare -A arr\n  for num in $1; do\n      arr[$num]=1\n  done\n  for num\
    \ in ${!arr[@]}; do\n      if [[ -v arr[-$num] ]]; then\n          echo \"true\"\
    \n          return\n      fi\n  done\n  echo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  arr=( $1 )\n  for (( idx1=0; idx1<${#arr[@]};\
    \ idx1++ )); do\n    for (( idx2=idx1+1; idx2<${#arr[@]}; idx2++ )); do\n    \
    \  if [[ ${arr[idx1]} + ${arr[idx2]} == 0 ]]; then\n        echo \"true\"\n  \
    \      return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppvqkbl2k.sh: line 21: conditional binary operator expected

    /tmp/tmppvqkbl2k.sh: line 21: syntax error near `+''

    /tmp/tmppvqkbl2k.sh: line 21: `      if [[ ${arr[idx1]} + ${arr[idx2]} == 0 ]];
    then''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # Fill in here\n  if [ $# -eq 1 ]; then\n   \
    \ echo \"false\"\n  else\n    arr=($1)\n    read -ra b <<< \"${arr[@]}\"\n   \
    \ for ((i=0; i<${#b[@]}; i++)); do\n      for ((j=i+1; j<${#b[@]}; j++)); do\n\
    \        if [ $((${b[$i]} + ${b[$j]})) -eq 0 ]; then\n          echo \"true\"\n\
    \          return 0\n        fi\n      done\n    done\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local answer=\"false\"\n  local lst=($1)\n  for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n    for (( j=i+1; j<${#lst[@]}; j++ )); do\n\
    \      if [[ \"${lst[$i]}\" -eq \"$((-${lst[$j]}))\" ]]; then\n        answer=\"\
    true\"\n      fi\n    done\n  done\n  echo $answer\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local retval=false\n\n    # get a distinct\
    \ list of positive and negative numbers in the list\n    local positive_array=()\n\
    \    local negative_array=()\n    for element in $1; do\n        if [ $element\
    \ -gt 0 ]; then\n            local positive_array=(${positive_array[@]} $element)\n\
    \        else\n            local negative_array=(${negative_array[@]} $element)\n\
    \        fi\n    done\n\n    # create a set of the positive numbers\n    local\
    \ pos_set=()\n    for element in ${positive_array[@]}; do\n        local pos_set=(${pos_set[@]}\
    \ $element)\n    done\n\n    # iterate through the negative array, checking for\
    \ matches\n    for element in ${negative_array[@]}; do\n        for pos_element\
    \ in ${pos_set[@]}; do\n            if [ $element -eq -$pos_element ]; then\n\
    \                local retval=true\n                break\n            fi\n  \
    \      done\n    done\n\n    echo $retval\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # list=$1\n  # your code here\n  # echo $list\n\
    \  # echo \"1 2 3\"\n  # echo $1\n  # echo ${@}\n  # echo \"1 2 3\" | awk '{$1\
    \ = \"\"; $2 = \"\"; print $0}'\n  # echo \"1 2 3\" | awk '{gsub(\"[1-9]\", \"\
    \", $0); print $0}'\n  # echo \"1 2 3\" | awk '{$1 = \"\"; $2 = \"\"; print $0}'\n\
    \  # echo \"1 2 3\" | awk '{print $1}'\n  # echo \"1 2 3\" | awk '{print $2}'\n\
    \  # echo \"1 2 3\" | awk '{print $3}'\n  # echo \"1 2 3\" | awk '{printf \"%s\
    \ %s %s\\n\", $1, $2, $3}'\n  # \n  # list=${@}\n  # \n  # echo $list\n  # echo\
    \ $#\n  # \n  # if [ $# -eq 1 ]; then\n  #   echo \"false\"\n  #   return\n  #\
    \ fi\n  # \n  # for i in $list; do\n  #   for j in $list; do\n  #     echo $i\n\
    \  #     echo $j\n  #     num_array=(\"${num_array[@]}\" \"$(echo $i + $j | bc)\"\
    )\n  #   done\n  # done\n  # \n  # for i in ${num_array[@]}; do\n  #   if [ \"\
    $i\" -eq 0 ]; then\n  #     echo \"true\"\n  #     return\n  #   fi\n  # done\n\
    \  # \n  # echo \"false\"\n  # \n  # return\n  # \n  # arr=( \"$@\" )\n  # echo\
    \ ${arr[0]}\n  # echo ${arr[1]}\n  # echo ${arr[2]}\n  # echo ${arr[3]}\n  # echo\
    \ ${arr[4]}\n  # echo ${arr[5]}\n  # echo ${arr[6]}\n \n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_y415ycv.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmp_y415ycv.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    declare -a arr=(\"$@\")\n    declare -A seen\n\
    \    for num in \"${arr[@]}\"; do\n        if [[ ${seen[-$num]} -eq 1 ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n        seen[$num]=1\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # FILL THIS IN\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tpython3 -c \"\nprint('false' if len(set([int(x)\
    \ for x in '$1'.split()])) == len([int(x) for x in '$1'.split()])\n\telse 'true')\n\
    \"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# write your code here!\n\tspace_separated_list=(\"\
    $@\")\n\tfor i in \"${space_separated_list[@]}\"\n\tdo\n\t\tfor j in \"${space_separated_list[@]}\"\
    \n\t\tdo\n\t\t\tif [ $i -eq $j ]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\t\
    if [ $i -eq $((j*-1)) ]\n\t\t\tthen\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\t\
    \t\tfi\n\t\tdone\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprwsud5lp.sh: line 24: [: too many arguments

    /tmp/tmprwsud5lp.sh: line 28: 1 3 5 0: syntax error in expression (error token
    is "3 5 0")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local i=0\n    local arr=$(echo $1 | sed -e\
    \ 's/ /\\n/g')\n    for elem in $arr; do\n        ((i++))\n        local j=0\n\
    \        for inner_elem in $arr; do\n            ((j++))\n            if [ $i\
    \ -ne $j ]; then\n                if [ $(( $elem + $inner_elem )) -eq 0 ]; then\n\
    \                    echo true\n                    return\n                fi\n\
    \            fi\n        done\n    done\n    echo false\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # your code here\n    # Hint: use the return\
    \ keyword to return \"true\" or \"false\"\n    array=($1)\n    for (( i=0; i<${#array[@]};\
    \ i++ ))\n    do\n        for (( j=i+1; j<${#array[@]}; j++ ))\n        do\n \
    \           if [ $((${array[$i]}+${array[$j]})) -eq 0 ]\n            then\n  \
    \              return true\n            fi\n        done\n    done\n    return\
    \ false\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi7vxc023.sh: line 31: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: implement this function.\n  if [ -z \"\
    $1\" ]; then\n    echo \"true\"\n    return\n  fi\n  local -a l\n  mapfile -t\
    \ l < <(echo \"$1\")\n  local -a l_positive\n  mapfile -t l_positive < <(for i\
    \ in \"${l[@]}\"; do if [ \"$i\" -ge 0 ]; then echo \"$i\"; fi; done)\n  local\
    \ -a l_negative\n  mapfile -t l_negative < <(for i in \"${l[@]}\"; do if [ \"\
    $i\" -lt 0 ]; then echo \"$i\"; fi; done)\n  for i in \"${l_positive[@]}\"; do\n\
    \    for j in \"${l_negative[@]}\"; do\n      if [ \"$i\" -eq \"$((-1 * j))\"\
    \ ]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp60m6srw7.sh: line 26: [: 1 3 5 0: integer expression expected

    /tmp/tmp60m6srw7.sh: line 28: [: 1 3 5 0: integer expression expected

    /tmp/tmp60m6srw7.sh: line 26: [: 1 3 -2 1: integer expression expected

    /tmp/tmp60m6srw7.sh: line 28: [: 1 3 -2 1: integer expression expected

    /tmp/tmp60m6srw7.sh: line 26: [: 1 2 3 7: integer expression expected

    /tmp/tmp60m6srw7.sh: line 28: [: 1 2 3 7: integer expression expected

    /tmp/tmp60m6srw7.sh: line 26: [: 2 4 -5 3 5 7: integer expression expected

    /tmp/tmp60m6srw7.sh: line 28: [: 2 4 -5 3 5 7: integer expression expected

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    if [ $# -eq 1 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    for (( i=1; i<=$#; i++ )); do\n        for (( j=1;\
    \ j<=$#; j++ )); do\n            if [ $(( $i + $j )) -eq 0 ]; then\n         \
    \       echo \"true\"\n                return\n            fi\n        done\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  all=()\n  for i in $1; do\n    all+=($i)\n  done\n\
    \  len=${#all[@]}\n  for (( i=0; i<len; i++ )); do\n    for (( j=i+1; j<len; j++\
    \ )); do\n      sum=$((all[i] + all[j]))\n      if [ $sum -eq 0 ]; then\n    \
    \    echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for n in $1\n  do\n    other=$(echo $1 | awk\
    \ '{for(i=1;i<=NF;i++) {if ($i=='$n') $i=0};print $0}')\n    sum=$(($(echo $other\
    \ | tr ' ' '+')))\n    if [ $sum -eq 0 ]\n    then\n      echo true\n      return\n\
    \    fi\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  numbers=$1\n  answer=false\n  # write your code\
    \ here\n  echo $answer\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # Replace this line with your code.\n  set -f\n\
    \  array=(${1// / })\n\n  for i in \"${array[@]}\"\n  do\n    echo \"$i\"\n  \
    \  for j in \"${array[@]}\"\n    do\n      if [[ \"$i\" -eq \"$j\" ]]; then\n\
    \        continue\n      fi\n      if [[ \"$i\" -eq \"-$j\" ]]; then\n       \
    \ echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tif [ \"$#\" -eq 0 ]; then\n\t\treturn 0\n\tfi\n\
    \tfor i in \"$@\"; do\n\t\tarray+=($i)\n\tdone\n\tarr_len=${#array[@]}\n\tfor\
    \ (( i=0; i<${arr_len}; i++ )); do\n\t\tfor (( j=i+1; j<${arr_len}; j++ )); do\n\
    \t\t\tif [ \"${array[$i]}\" -eq \"-${array[$j]}\" ]; then\n\t\t\t\techo \"true\"\
    \n\t\t\t\treturn 0\n\t\t\tfi\n\t\tdone\n\tdone\n\techo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: '/tmp/tmpeic4ughn.sh: line 27: [: --2: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --2: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --5: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --5: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --1: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --1: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --1: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --1: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --1: integer expression expected

    /tmp/tmpeic4ughn.sh: line 27: [: --1: integer expression expected

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO(daddy): implement me.\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # your code here\n  local sum\n  for i in $1\n\
    \  do\n    sum=$(($i + $i))\n    if [[ \"$sum\" -eq 0 ]]\n    then\n      echo\
    \ true\n      return\n    fi\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  [ ! \"$1\" ] && return 1\n  local -i f=0\n  while\
    \ [ $# -gt 0 ]; do\n    (( f+=1 ))\n    [ $f -eq $(($#+1)) ] && break\n    for\
    \ i in $(seq $f $#); do\n      [ $(( $1 + ${!i} )) -eq 0 ] && return 0\n    done\n\
    \    shift\n  done\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyob1hpc_.sh: line 24: 1 3 5 0 + 1 3 5 0 : syntax error in expression
    (error token is "3 5 0 + 1 3 5 0 ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    set +x\n    ARRAY=($1)\n    for ((i=0; i<${#ARRAY[@]};\
    \ i++))\n    do\n        for ((j=i+1; j<${#ARRAY[@]}; j++))\n        do\n    \
    \        if [[ $((${ARRAY[$i]} + ${ARRAY[$j]})) -eq 0 ]]\n            then\n \
    \               echo \"true\"\n                return\n            fi\n      \
    \  done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: write this function\n  numbers=($1)\n\
    \  size=${#numbers[@]}\n  echo $size\n  i=0\n  while (( i < size )); do\n    j=$((i+1))\n\
    \    while (( j < size )); do\n      x=${numbers[i]}\n      y=${numbers[j]}\n\
    \      sum=$((x+y))\n      if (( sum == 0 )); then\n        echo \"true\"\n  \
    \      return\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local input=$1\n  local array=($input)\n\n  for((i=0;\
    \ i<${#array[@]}; i++)); do\n    for((j=i+1; j<${#array[@]}; j++)); do\n     \
    \ if [[ $(( ${array[i]} + ${array[j]} )) -eq 0 ]]; then\n        echo \"true\"\
    \n        return\n      fi\n    done\n  done\n\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  sorted=$(echo $1 | tr \" \" \"\\n\" | sort -n\
    \ | tr \"\\n\" \" \")\n  p1=0\n  p2=$(($(echo $sorted | wc -w) - 1))\n  while\
    \ [ $p1 -le $p2 ]; do\n    sum=$(echo $sorted | cut -d ' ' -f $p1 $p2 | awk '{print\
    \ $1 + $2}')\n    if [ $sum -eq 0 ]; then\n      echo \"true\"\n      return\n\
    \    elif [ $sum -lt 0 ]; then\n      p1=$(($p1 + 1))\n    else\n      p2=$(($p2\
    \ - 1))\n    fi\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 23: [: -eq: unary operator expected

    /tmp/tmpnopqggqq.sh: line 26: [: -lt: unary operator expected

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmpnopqggqq.sh: line 2'
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # convert the first string to an array:\n  input_arr=(\
    \ $1 )\n  # sort in ascending order:\n  sort_arr=( $(printf \"%s\\n\" \"${input_arr[@]}\"\
    \ | sort -n) )\n  # init some variables:\n  index_left=0\n  index_right=$(( ${#sort_arr[@]}\
    \ - 1 ))\n  # for each element, check if the sum of that element and the other\n\
    \  # elements sum to zero:\n  for index in \"${!sort_arr[@]}\"; do\n    # left\
    \ pointer is the current element:\n    index_left=$index\n    # right pointer\
    \ is the last element:\n    index_right=$(( ${#sort_arr[@]} - 1 ))\n    # while\
    \ left pointer is less than right pointer:\n    while [[ $index_left -lt $index_right\
    \ ]]; do\n      # if the sum of the two pointed elements is zero:\n      if [[\
    \ $((${sort_arr[$index_left]} + ${sort_arr[$index_right]})) -eq 0 ]]; then\n \
    \       # return true:\n        echo \"true\"\n        # break the while loop:\n\
    \        break 2\n      fi\n      # decrease right pointer:\n      index_right=$((\
    \ $index_right - 1 ))\n    done\n  done\n  # return false if not returned true:\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local arg=\"\"\n    for i in $1; do\n     \
    \   for j in $1; do\n            if [[ $i -eq $j ]]; then\n                continue\n\
    \            elif [[ $i -eq 0-$j ]]; then\n                arg=\"true\"\n    \
    \        fi\n        done\n    done\n    if [[ \"$arg\" == \"true\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # List elements can be iterated over with `for`\
    \ in bash\n  for e1 in $1; do\n    # `read` reads the next line of the stdin and\
    \ assigns it to a variable\n    # In this case, we pipe the input to a while loop.\n\
    \    echo $1 | {\n      while read e2; do\n        # arithmtic in bash is like\
    \ let (e.g. `let sum=e1+e2`)\n        if [ $((e1+e2)) -eq 0 ]; then\n        \
    \  echo \"true\"\n          # return from the function, we don't need to look\
    \ anymore\n          return\n        fi\n      done\n    }\n  done\n  # if we\
    \ didn't find anything, return false\n  echo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk_h6twqh.sh: line 25: 1 3 5 0: syntax error in expression (error
    token is "3 5 0")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 5 0: syntax error in expression (error token
    is "3 5 0")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 5 0: syntax error in expression (error token
    is "3 5 0")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 5 0: syntax error in expression (error token
    is "3 5 0")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 -2 1: syntax error in expression (error token
    is "3 -2 1")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 -2 1: syntax error in expression (error token
    is "3 -2 1")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 -2 1: syntax error in expression (error token
    is "3 -2 1")

    /tmp/tmpk_h6twqh.sh: line 25: 1 3 -2 1: syntax error in expression (error token
    is "3 -2 1")

    /tmp/tmpk_h6twqh.sh: line 25: 1 2 3 7: syntax error in expression (error token
    is "2 3 7")

    /tmp/tmpk_h6twqh.sh: line 25: 1 2 3 7: syntax error in expression (error token
    is "2 3 7")

    /tmp/tmpk_h6twqh.sh: line 25: 1 2 3 7: syntax error in expression (error token
    is "2 3 7")

    /tmp/tmpk_h6twqh.sh: line 25: 1 2 3 7: syntax error in expression (error token
    is "2 3 7")

    /tmp/tmpk_h6twqh.sh: line 25: 2 4 -5 3 5 7: syntax error in expression (error
    token is "4 -5 3 5 7")

    /tmp/tmpk_h6twqh.sh: line 25: 2 4 -5 3 5 7: syntax error in expression (error
    token is "4 -5 3 5 7")

    /tmp/tmpk_h6twqh.sh: line 25: 2 4 -5 3 5 7: syntax error in expression (error
    token is "4 -5 3 5 7")

    /tmp/tmpk_h6twqh.sh: line 25: 2 4 -5 3 5 7: syntax error in expression (error
    token is "4 -5 3 5 7")

    /tmp/tmpk_h6twqh.sh: line 25: 2 4 -5 3 5 7: syntax error in expression (error
    token is "4 -5 3 5 7")

    /tmp/tmpk_h6twqh.sh: line 25: 2 4 -5 3 5 7: syntax error in expression (error
    token is "4 -5 3 5 7")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # shellcheck disable=SC1090\n    . \"$(cd \"\
    $(dirname \"$0\")\" && pwd)/util.sh\"\n    local input=($1)\n    local input_count=${#input[@]}\n\
    \    if [[ input_count -eq 1 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n    local i\n    local j\n    for ((i = 0; i < input_count; i++)); do\n\
    \        for ((j = i + 1; j < input_count; j++)); do\n            if [[ $(sum\
    \ \"${input[i]}\" \"${input[j]}\") -eq 0 ]]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpne6zin2f.sh: line 19: /tmp/util.sh: No such file or directory

    sum: 3: No such file or directory

    /tmp/tmpne6zin2f.sh: line 30: [[: 00000     0 1: syntax error in expression (error
    token is "0 1")

    sum: 5: No such file or directory

    /tmp/tmpne6zin2f.sh: line 30: [[: 00000     0 1: syntax error in expression (error
    token is "0 1")

    sum: 0: No such file or directory

    /tmp/tmpne6zin2f.sh: line 30: [[: 00000     0 1: syntax error in expression (error
    token is "0 1")

    sum: 3: No such file or directory

    sum: 5: No such file or directory

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: write a function that returns true or\
    \ false, depending on whether\n  # two distinct elements in the list sum to zero\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp70o53nk0.sh: line 20: syntax error near unexpected token `}''

    /tmp/tmp70o53nk0.sh: line 20: `}''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  sum_pairs=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | uniq -d)\n  if [ \"$sum_pairs\" = \"$1\" ]; then\n    echo \"false\"\n\
    \  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  my_list=$1\n  # if there is only one element,\
    \ it cannot sum to zero\n  if [ $(echo $my_list | wc -w) -lt 2 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for elem in $my_list; do\n    # check if there\
    \ is another element that sums to zero\n    if [[ $(echo $my_list | sed \"s/$elem//g\"\
    ) =~ \"-$elem\" ]]; then\n      echo \"true\"\n      return\n    fi\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# for each element of the input\n\tfor a in $1\n\
    \tdo\n\t\t# for each other element of the input\n\t\tfor b in $1\n\t\tdo\n\t\t\
    \t# if they sum to zero and they are not the same element\n\t\t\tif [ $(($a +\
    \ $b)) -eq 0 ] && [ $a -ne $b ]\n\t\t\tthen\n\t\t\t\t# return true\n\t\t\t\techo\
    \ \"true\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tdone\n\tdone\n\t# otherwise return false\n\
    \techo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tif [ -z \"$1\" ]; then\n\t\techo false\n\t\t\
    return\n\tfi\n\t# TODO: Your code here\n\tfor i in $@; do\n\t\tif [[ $i == \"\
    0\" ]]; then\n\t\t\techo true\n\t\t\treturn\n\t\tfi\n\tdone\n\techo false\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    for i in $1\n    do\n        for j in $1\n\
    \        do\n            if [ $i -eq $j ]\n            then\n                continue\n\
    \            fi\n            if [ $i -eq $((0 - $j)) ]\n            then\n   \
    \             echo \"true\"\n                return\n            fi\n        done\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tlocal -a ints=($1)\n\tlocal success=false\n\t\
    local outer_i\n\tlocal outer_v\n\tlocal inner_i\n\tlocal inner_v\n\tlocal diff\n\
    \tfor ((outer_i=0; outer_i<${#ints[@]}; outer_i++)); do\n\t\touter_v=${ints[$outer_i]}\n\
    \t\tfor ((inner_i=0; inner_i<${#ints[@]}; inner_i++)); do\n\t\t\tinner_v=${ints[$inner_i]}\n\
    \t\t\tif ((outer_i != inner_i)); then\n\t\t\t\tdiff=$((outer_v - inner_v))\n\t\
    \t\t\tif ((diff == 0)); then\n\t\t\t\t\tsuccess=true\n\t\t\t\t\tbreak\n\t\t\t\t\
    fi\n\t\t\tfi\n\t\tdone\n\t\tif $success; then\n\t\t\tbreak\n\t\tfi\n\tdone\n\t\
    echo $success\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tinput=$1\n\tsolution=\"\"\n\tfor i in $(echo\
    \ $input | tr \" \" \"\\n\")\n\tdo\n\t\tgrep -w -q \"$(( -1 * $i ))\" <<< $input\n\
    \t\tif [ $? -eq 0 ]\n\t\tthen\n\t\t\tsolution=\"true\"\n\t\t\tbreak\n\t\telse\n\
    \t\t\tsolution=\"false\"\n\t\tfi\n\tdone\n\techo $solution\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local -A pair_check\n    local -a args=($1)\n\
    \    local len=${#args[@]}\n    for (( i=0; i<$len; i++ )); do\n        local\
    \ arg=${args[$i]}\n        local remainder=$(( -$arg ))\n        if [[ ${pair_check[$remainder]}\
    \ == 1 ]]; then\n            # found a pair that sums to zero\n            echo\
    \ \"true\"\n            return\n        fi\n        pair_check[$arg]=1\n    done\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local result\n  # add your solution here\n  #\
    \ $1 is a space-separated list\n  # you must echo true or false\n\n  result=\"\
    false\"\n  while [[ \"$1\" != \"\" ]]; do\n    if (($(echo \"$1\" | wc -w) % 2\
    \ == 0)); then\n      result=\"true\"\n    fi\n    shift\n  done\n\n  echo \"\
    $result\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # hint: to find out if there are any unique\
    \ elements in a list\n    # use a tool called \"sort -u\"\n    # for example \"\
    echo \"1 3 5 3 7 5\" | sort -u\" gives \"1 3 5 7\"\n    #\n    # your solution\
    \ here\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# your code here\n\tset -f\n\t# make array\n\t\
    IFS=' ' read -r -a arr <<< \"$1\"\n\t# check if single element\n\tif [[ ${#arr[@]}\
    \ -eq 1 ]]; then\n\t\techo \"false\"\n\telse\n\t\t# for each element of the array,\
    \ look if it has an opposite in the array\n\t\tfor i in \"${arr[@]}\"; do\n\t\t\
    \t# skip zero, as it will always have a pair\n\t\t\tif [[ $i == 0 ]]; then\n\t\
    \t\t\tcontinue\n\t\t\tfi\n\t\t\t# look for opposite\n\t\t\tif [[ \" ${arr[@]}\
    \ \" =~ \" ${i//-} \" ]]; then\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\t\t\t\
    fi\n\t\tdone\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for num in $1; do\n    if [[ $1 =~ \"$num -$num\"\
    \ ]]; then\n      echo true\n      return\n    fi\n  done\n  echo false\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  declare -a pairs\n  for i in $1; do\n    pairs[$i]=1\n\
    \  done\n  echo ${pairs[@]}\n  for i in $1; do\n    if [ ${pairs[-$i]} = 1 ];\
    \ then\n      return 0\n    fi\n  done\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # empty list -> pair doesn't exist\n  if [ $#\
    \ -eq 0 ]; then\n    return 1\n  fi\n\n  # head and tail\n  head=\"$1\"\n  shift\n\
    \n  # check if the sum of head and any element of tail is zero\n  for tail_element\
    \ in $@; do\n    if [ \"$(( head + tail_element ))\" -eq 0 ]; then\n      return\
    \ 0\n    fi\n  done\n\n  # otherwise, check tail\n  pairs_sum_to_zero $@\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  [ $# -eq 0 ] && echo \"false\" && return\n  for\
    \ ((i=1; i<$#; i++)); do\n    for ((j=i+1; j<=$#; j++)); do\n      (( $[$1+$i]\
    \ == 0 )) && echo \"true\" && return\n    done\n  done\n  echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  sort_strings_ascending <<< \"$1\" | while read\
    \ num_1; do\n    if [ \"$num_1\" = \"0\" ]; then\n      continue\n    fi\n   \
    \ sort_strings_ascending <<< \"$1\" | while read num_2; do\n      if [ \"$num_2\"\
    \ = \"0\" ]; then\n        continue\n      fi\n      [[ \"$((num_1 + num_2))\"\
    \ = \"0\" ]] && return 0\n    done\n  done\n  return 1\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpoz3es9cx.sh: line 18: sort_strings_ascending: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # FILL THIS IN\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for i in $1; do\n    if [[ \"$1\" =~ \"-$i \"\
    \ ]]; then\n      return 0\n    fi\n  done\n  return 1\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    integers=( $1 )\n    for (( i=0; i<${#integers[@]};\
    \ i++ )); do\n        for (( j=i+1; j<${#integers[@]}; j++ )); do\n          \
    \  if [[ ${integers[$i]} + ${integers[$j]} -eq 0 ]]; then\n                echo\
    \ \"true\"\n                return\n            fi\n        done\n    done\n \
    \   echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl18ti3_h.sh: line 21: conditional binary operator expected

    /tmp/tmpl18ti3_h.sh: line 21: syntax error near `+''

    /tmp/tmpl18ti3_h.sh: line 21: `            if [[ ${integers[$i]} + ${integers[$j]}
    -eq 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # write your solution here\n    # hint: you\
    \ may want to use the following helper functions:\n    #  * a_contains_b(a, b)\
    \ returns true if a contains b, false otherwise\n    #  * pair_of_first_and_last(input)\
    \ returns the first and last elements of the list\n    local input=\"$1\"\n  \
    \  for i in $input; do\n        for j in $input; do\n            if [[ $i != $j\
    \ ]] && [[ $(($i + $j)) -eq 0 ]]; then\n                echo \"true\"\n      \
    \          return\n            fi\n        done\n    done\n    echo \"false\"\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local -a ints=($1)\n\n    local i\n    local\
    \ j\n    for ((i=0; i<${#ints[@]}; i++)); do\n        for ((j=i+1; j<${#ints[@]};\
    \ j++)); do\n            if [[ $((ints[i] + ints[j])) -eq 0 ]]; then\n       \
    \         echo \"true\"\n                return\n            fi\n        done\n\
    \    done\n\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Your code here\n    echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  (( $# > 1 )) || {\n    echo false\n    return\n\
    \  }\n  for i in \"$@\"; do\n    for j in \"$@\"; do\n      (( $i != $j )) ||\
    \ continue\n      (( $i + $j == 0 )) && {\n        echo true\n        return\n\
    \      }\n    done\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  numbers=\"$1\"\n  count=0\n  for num in $numbers;\
    \ do\n    for num2 in $numbers; do\n      if [ \"$num\" -eq \"0\" -a \"$num2\"\
    \ -eq \"0\" ]; then\n        count=$((count+1))\n      elif [ \"$num\" -eq \"\
    -$num2\" ]; then\n        count=$((count+1))\n      fi\n    done\n  done\n  if\
    \ [ \"$count\" -eq \"2\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpawv1wjxw.sh: line 24: [: --2: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --2: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --2: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --2: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --5: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --5: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --5: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --5: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --5: integer expression expected

    /tmp/tmpawv1wjxw.sh: line 24: [: --5: integer expression expected

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: fill this in\n  sum=0\n  for i in $1\n\
    \  do\n    if [ $sum -eq 0 ]\n    then\n      sum=$i\n    fi\n    if [ $i -ne\
    \ $sum ]\n    then\n      exit\n    fi\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local numbers=($1)\n    for (( i=0; i<\"${#numbers[@]}\"\
    ; i++ )); do\n        for (( j=i+1; j<\"${#numbers[@]}\"; j++ )); do\n       \
    \     if [[ \"${numbers[$i]}\" + \"${numbers[$j]}\" -eq 0 ]]; then\n         \
    \       echo \"true\"\n                return\n            fi\n        done\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmq1s8pdx.sh: line 21: conditional binary operator expected

    /tmp/tmpmq1s8pdx.sh: line 21: syntax error near `+''

    /tmp/tmpmq1s8pdx.sh: line 21: `            if [[ "${numbers[$i]}" + "${numbers[$j]}"
    -eq 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    nums=$(for i in $1; do\n        echo $i\n \
    \   done | sort)\n    idx=0\n    let num_nums=${#nums[@]}\n    while [ $idx -lt\
    \ $num_nums ]; do\n        let idx_b=$idx+1\n        while [ $idx_b -lt $num_nums\
    \ ]; do\n            let sum=${nums[$idx]}+${nums[$idx_b]}\n            if [ $sum\
    \ -eq 0 ]; then\n                echo \"true\"\n                return\n     \
    \       fi\n            let idx_b=$idx_b+1\n        done\n        let idx=$idx+1\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: Implement this function!\n    for first_element\
    \ in $1\n    do\n        for second_element in $1\n        do\n            if\
    \ [[ $first_element -eq $second_element ]]; then\n                continue\n \
    \           fi\n            sum=$(($first_element + $second_element))\n      \
    \      if [[ $sum -eq 0 ]]; then\n                return 0\n            fi\n \
    \       done\n    done\n    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tL=(\"$@\") # Create an array from arguments\n\
    \tN=${#L[@]} # Total number of elements\n\tfor (( i=0; i<N; i++ )); do\n\t\tfor\
    \ (( j=i+1; j<N; j++ )); do\n\t\t\tif [ $(expr ${L[$i]} + ${L[$j]}) -eq 0 ]; then\n\
    \t\t\t\techo \"true\"\n\t\t\t\treturn 0\n\t\t\tfi\n\t\tdone\n\tdone\n\techo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local input=$1\n  local result=false\n  for i\
    \ in $input; do\n    for j in $input; do\n      if [ \"$i\" -eq $((-1 * $j)) ]\
    \ && [ \"$i\" -ne \"$j\" ]; then\n        result=true\n      fi\n    done\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [ $# -eq 1 ]; then\n    return 1\n  fi\n \
    \ for num in $1; do\n    if [ $(($num * -1)) == $2 ]; then\n      return 0\n \
    \   fi\n  done\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Replace this line with your implementation.\n\
    \    for (( i=0; i<${#1}; i++ ))\n    do\n        for (( j=0; j<${#1}; j++ ))\n\
    \        do\n            (( sum = \"${1:$i:1}\" + \"${1:$j:1}\" ))\n         \
    \   if (( $sum == 0 && $i != $j ))\n            then\n                echo true\n\
    \                return\n            fi\n        done\n    done\n    echo false\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9gn_boxw.sh: line 23: ((: sum = 1 +   : syntax error: operand expected
    (error token is "+   ")

    /tmp/tmp9gn_boxw.sh: line 23: ((: sum = 1 +   : syntax error: operand expected
    (error token is "+   ")

    /tmp/tmp9gn_boxw.sh: line 23: ((: sum = 1 +   : syntax error: operand expected
    (error token is "+   ")

    /tmp/tmp9gn_boxw.sh: line 23: ((: sum =   +   : syntax error: operand expected
    (error token is "+   ")

    /tmp/tmp9gn_boxw.sh: line 23: ((: sum =   +   : syntax error: operand expected
    (error token is "+   ")

    /tmp/tmp9gn_boxw.sh: line 23: ((: sum =   +   : syntax error: operand expected
    (error token is "+   ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local result=false\n  local nums=($1)\n  for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n    for ((j=i+1; j<${#nums[@]}; j++)); do\n\
    \      if [[ \"$((nums[i] + nums[j]))\" -eq 0 ]]; then\n        result=true\n\
    \      fi\n    done\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # write your code here\n    return\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # write your code here\n  echo \"false\"\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # assume that there is no pair that sum to\
    \ zero\n    result=\"false\"\n    # loop over each possible pair\n    for ((i=0;\
    \ i<$(($#-1)); i++)); do\n        for ((j=$((i+1)); j<$#; j++)); do\n        \
    \    # if there is a pair that sum to zero\n            if [ $((${!i} + ${!j}))\
    \ == 0 ]; then\n                # update result and break out of the loop\n  \
    \              result=\"true\"\n                break\n            fi\n      \
    \  done\n    done\n    # return the result\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local result=\"false\"\n    while (( \"$#\"\
    \ )); do\n        if [[ \"$result\" == \"true\" ]]; then\n            break\n\
    \        fi\n        local sum\n        for num in $1; do\n            if [[ \"\
    $result\" == \"true\" ]]; then\n                break\n            fi\n      \
    \      (( sum = $num + $2 ))\n            if [[ \"$sum\" == \"0\" ]]; then\n \
    \               result=\"true\"\n            fi\n        done\n        shift\n\
    \    done\n    echo \"$result\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp52spgtag.sh: line 28: ((: sum = 1 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 3 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 5 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 0 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 1 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 3 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = -2 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 1 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 1 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 2 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 3 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 7 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 2 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 4 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = -5 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 3 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 5 +  : syntax error: operand expected
    (error token is "+  ")

    /tmp/tmp52spgtag.sh: line 28: ((: sum = 7 +  : syntax error: operand expected
    (error token is "+  ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # fill in here\n  #if [[ $# -lt 2 ]]; then\n\
    \  #  echo false\n  #  return\n  #fi\n  local sum=\"\"\n  local num=\"\"\n  local\
    \ sumset=\"\"\n  local numset=\"\"\n  local allset=\"\"\n  local i=\"\"\n  local\
    \ j=\"\"\n  for i in $@; do\n    for j in $@; do\n      sum=$(($i + $j))\n   \
    \   if [[ $sum -eq 0 ]]; then\n        echo true\n        return\n      fi\n \
    \   done\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    IS_PAIR_TO_ZERO=0\n    while read -ra line\
    \ ; do\n        for i in \"${line[@]}\" ; do\n            if grep -Fxq $i $2 ;\
    \ then\n                IS_PAIR_TO_ZERO=1\n            fi\n        done\n    done\
    \ <<< \"$1\"\n    return $IS_PAIR_TO_ZERO\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local array=($1)\n\n  # We need to loop over\
    \ every element in array.\n  for ((i=0; i<=${#array[@]}; i++)); do\n    # Here\
    \ is a new element of the array, which we'll call 'a'.\n    local a=${array[$i]}\n\
    \n    # We need to find the other element of the pair that sums to zero with 'a'.\n\
    \    # We'll call that element 'b'.\n    local b=$((0 - a))\n\n    # We can tell\
    \ if 'b' is in the list by using the 'contains' function we\n    # wrote in 1-contains.\n\
    \    if contains \" $1 \" \" $b \"; then\n      # If 'b' is in the list, then\
    \ there is a pair that sums to zero.\n      echo \"true\"\n      return\n    fi\n\
    \  done\n\n  # If we made it through the whole list without returning, then there\
    \ is no\n  # pair that sums to zero.\n  echo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    /tmp/tmpkd8no9ll.sh: line 31: contains: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  :\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # We use grep -x to only match whole words,\
    \ and grep -w to only match\n    # word characters. The bash builtin command [[\
    \ \"$1\" =~ \" $x -$x \" ]]\n    # matches the pattern \" <x> -<x> \" in $1. If\
    \ it matches, we add the\n    # string \"false\" to the list 'result', otherwise\
    \ we add \"true\".\n    #\n    # Then we use tr to translate newlines to spaces,\
    \ and sort to sort the\n    # resulting list in ascending order. The first element\
    \ is therefore the\n    # one that occurs most often in the list, and therefore\
    \ is the 'mode'.\n    local result=\"$(for x in $1; do\n        if [[ \"$1\" =~\
    \ \" $x -$x \" ]]; then\n            echo false\n        else\n            echo\
    \ true\n        fi\n    done | tr '\\n' ' ' | sort)\"\n    echo $result\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    n=$(echo $1 | wc -w)\n    if [ $n -eq 1 ];\
    \ then\n        echo \"false\"\n        return 0\n    fi\n    for a in $1; do\n\
    \        for b in $1; do\n            if [ $a -eq $b ]; then\n               \
    \ continue\n            fi\n            if [ $a -eq $((-$b)) ]; then\n       \
    \         echo \"true\"\n                return 0\n            fi\n        done\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  len=$(echo \"$1\" | wc -w)\n  for i in $(seq\
    \ 1 $len); do\n    for j in $(seq $i $len); do\n      if [[ $i != $j ]]; then\n\
    \        if [[ $(( $(echo \"$1\" | cut -d' ' -f$i) + $(echo \"$1\" | cut -d' '\
    \ -f$j) )) == 0 ]]; then\n          echo \"true\"\n          return\n        fi\n\
    \      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # build an array of the numbers\n  # declare\
    \ -a numbers=(\"$@\")\n\n  # sort the array\n  # read -a numbers <<< $(echo \"\
    $@\" | tr ' ' '\\n' | sort -n)\n\n  # now traverse the array and look for sums\
    \ of 0\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [[ $# -lt 2 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  elems=(\"$@\")\n  for (( i=0; i<${#elems[@]}; i++ )); do\n\
    \    for (( j=i+1; j<${#elems[@]}; j++ )); do\n      if [[ $((\"${elems[$i]}\"\
    \ + \"${elems[$j]}\")) -eq 0 ]]; then\n        echo \"true\"\n        return\n\
    \      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: -1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local sorted\n  declare -A hash\n  local -i count\n\
    \  local -i index\n\n  sorted=($(echo \"$1\" | tr ' ' '\\n' | sort -n))\n  count=${#sorted[@]}\n\
    \  index=0\n\n  while [ $index -lt $count ]; do\n    local -i pos\n\n    pos=$(($count\
    \ - 1))\n    if [ $index -lt $pos ]; then\n      local -i val1\n      local -i\
    \ val2\n      local -i diff\n\n      val1=${sorted[$index]}\n      val2=${sorted[$pos]}\n\
    \      diff=$(($val1 + $val2))\n      case $diff in\n        0)\n          echo\
    \ \"true\"\n          return 0\n          ;;\n        *)\n          if [ $diff\
    \ -lt 0 ]; then\n            index=$(($index + 1))\n          else\n         \
    \   pos=$(($pos - 1))\n          fi\n          ;;\n      esac\n    else\n    \
    \  echo \"false\"\n      return 0\n    fi\n  done\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=51 encoding='utf-8'>
  timestamp: 1660023804
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tlocal array=($1)\n\tlocal pair_exists=\"false\"\
    \n\tfor x in \"${array[@]}\"; do\n\t\tfor y in \"${array[@]}\"; do\n\t\t\tif [\
    \ \"${x}\" -eq \"-${y}\" ]; then\n\t\t\t\tpair_exists=\"true\"\n\t\t\tfi\n\t\t\
    done\n\tdone\n\techo ${pair_exists}\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local list=\"$@\"\n    local minus_list=()\n\
    \    local seen=()\n    # using a bash array, create a new array where the ith\
    \ element is -1 * the\n    # ith element of $list\n    while read -r value; do\n\
    \        if [[ ! ${seen[$value]} ]]; then\n            minus_list+=($((0 - value)))\n\
    \            seen[$value]=1\n        fi\n    done <<< \"$list\"\n    echo \"${minus_list[@]}\"\
    \n    while read -r value; do\n        # check if the value is in the minus_list\n\
    \        if [[ \" ${minus_list[@]} \" =~ \" ${value} \" ]]; then\n           \
    \ echo \"true\"\n            return\n        fi\n    done <<< \"$list\"\n    echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ppks1sa.sh: line 24: 1 3 5 0: syntax error in expression (error
    token is "3 5 0")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for x in $1; do\n    for y in $1; do\n      if\
    \ [ $x != $y ] && [ $(( $x + $y )) -eq 0 ]; then\n        echo \"true\"\n    \
    \    return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    while [ $# -gt 0 ]; do\n        N1=$1\n   \
    \     shift\n        while [ $# -gt 0 ]; do\n            N2=$1\n            [\
    \ $((N1 + N2)) -eq 0 ] && echo \"true\" && return\n            shift\n       \
    \ done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local args=\"$1\"\n  if [[ $args == \"\" ]];\
    \ then\n    echo \"false\"\n    return\n  fi\n  # Remove any spaces from args.\n\
    \  local args_no_spaces=$(echo \"$args\" | tr -d ' ')\n  local args_no_spaces_len=$(echo\
    \ \"$args_no_spaces\" | wc -c)\n  if [[ $args_no_spaces_len -lt 2 ]]; then\n \
    \   echo \"false\"\n    return\n  fi\n  local str=\"\"\n  for i in $(seq 1 $(($args_no_spaces_len\
    \ - 1))); do\n    str=\"$str$(echo \"$args_no_spaces\" | cut -c $i)\"\n    str=\"\
    $str$(echo \"$args_no_spaces\" | cut -c $(($i + 1)))\"\n    if [[ $(consecutive_subtraction\
    \ \"$str\") -eq 0 ]]; then\n      echo \"true\"\n      return\n    fi\n    str=\"\
    \"\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi93y28vu.sh: line 34: consecutive_subtraction: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  input=\"$@\"\n  for i in $input; do\n    for\
    \ j in $input; do\n      if [ $i -eq $j ]; then\n        continue\n      fi\n\
    \      if [ $(($i + $j)) -eq 0 ]; then\n        echo \"true\"\n        return\n\
    \      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # Your code here\n  # \"2 4 -5 3 5 7\"\n  # \"\
    2 -5 4 5 7 3\"\n  # case 1: if size is 1 return false\n  if [[ $# -eq 1 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  # case 2: if size is 2 and number equals\
    \ zero, return true\n  if [[ $# -eq 2 ]]; then\n    if [[ $1 -eq 0 ]] || [[ $2\
    \ -eq 0 ]]; then\n      echo \"true\"\n      return\n    fi\n  fi\n  arr=($1)\n\
    \  sorted=$(quicksort ${arr[@]})\n  IFS=\" \" read -r -a array <<< \"$sorted\"\
    \n  echo ${array[@]}\n  # case 3: traverse array and check if the complement of\
    \ the current number is present in the array or not\n  for i in \"${!array[@]}\"\
    ; do\n    complement=$(( 0 - ${array[$i]} ))\n    for j in \"${!array[@]}\"; do\n\
    \      if [[ $j -ne $i ]]; then\n        if [[ ${array[$j]} -eq $complement ]];\
    \ then\n          echo \"true\"\n          return\n        fi\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO: write the pairs_sum_to_zero function\
    \ here\n  read -ra array <<< $1\n  i=0\n  for element in \"${array[@]}\"\n  do\n\
    \    for((j=$i+1;j<\"${#array[@]}\";j++))\n    do\n      if (( \"$element\" +\
    \ \"${array[$j]}\" == 0))\n      then\n        echo \"true\"\n        return 0\n\
    \      fi\n    done\n    ((i++))\n  done\n  echo \"false\"\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Hint: Use a for loop and the has_pair_sum_to_zero\
    \ function.\n    local list=$1\n    for i in $list; do\n        local rest=\"\
    ${list//$i/}\"\n        if [[ $(has_pair_sum_to_zero \"$i\" \"$rest\") == \"true\"\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n    done\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    /tmp/tmp1hxlntim.sh: line 22: has_pair_sum_to_zero: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local numbers=($1)\n    local num_sum=${#numbers[@]}\n\
    \    local num_hash=8\n    declare -a h_sum\n\n    for ((i=0; i<$num_hash; i++));\
    \ do\n        h_sum[$i]=0\n    done\n\n    for ((i=0; i<$num_sum; i++)); do\n\
    \        ((h_sum[${numbers[$i]}%$num_hash]+=1))\n    done\n\n    for ((i=0; i<$num_sum;\
    \ i++)); do\n        ((num=${numbers[$i]}%$num_hash))\n        ((num2=$num-1))\n\
    \        ((num3=$num+1))\n        if ((${numbers[$i]} != 0)); then\n         \
    \   if [[ $num -ge 0 && $num -lt $num_hash && ${h_sum[$num]} -ge 2 ]]; then\n\
    \                echo \"true\"\n                return\n            fi\n     \
    \       if [[ $num2 -ge 0 && $num2 -lt $num_hash && ${h_sum[$num2]} -ge 1 ]];\
    \ then\n                echo \"true\"\n                return\n            fi\n\
    \            if [[ $num3 -ge 0 && $num3 -lt $num_hash && ${h_sum[$num3]} -ge 1\
    \ ]]; then\n                echo \"true\"\n                return\n          \
    \  fi\n        else\n            if [[ ${h_sum[$num]} -ge 2 ]]; then\n       \
    \         echo \"true\"\n                return\n            fi\n        fi\n\
    \    done\n\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Write your code here.\n    local list=(\"\
    $@\")\n    if [ ${#list[@]} -eq 1 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]};\
    \ j++)); do\n            if [ $((list[i] + list[j])) -eq 0 ]; then\n         \
    \       echo \"true\"\n                return\n            fi\n        done\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# YOUR CODE HERE\n\tpositive=0\n\tnegative=0\n\
    \tfor i in $1\n\tdo\n\t\tif [ $i -eq 0 ]\n\t\tthen\n\t\t\techo \"true\"\n\t\t\t\
    exit 0\n\t\tfi\n\t\tif [ $i -gt 0 ]\n\t\tthen\n\t\t\tpositive=1\n\t\tfi\n\t\t\
    if [ $i -lt 0 ]\n\t\tthen\n\t\t\tnegative=1\n\t\tfi\n\tdone\n\tif [ $positive\
    \ -eq 1 ] && [ $negative -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo\
    \ \"false\"\n\tfi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # TODO: implement\n    #\n    # For example,\
    \ you could use associative arrays to store the input in\n    # order to get constant\
    \ lookup time. This is part of the point of this\n    # exercise.\n    #\n   \
    \ # You may also want to implement an algorithm that's faster than O(n^2).\n \
    \   #\n    # You can take a look at the reference solution for inspiration:\n\
    \    # https://github.com/edx/data-structures-python/blob/master/pa4/lab4.py\n\
    \    for i in $1; do\n        for j in $1; do\n            if [[ $i + $j -eq 0\
    \ ]]; then\n                echo true\n                return\n            fi\n\
    \        done\n    done\n    echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0v3nm037.sh: line 30: conditional binary operator expected

    /tmp/tmp0v3nm037.sh: line 30: syntax error near `+''

    /tmp/tmp0v3nm037.sh: line 30: `            if [[ $i + $j -eq 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local arr=()\n  local str=\"\"\n  local len=0\n\
    \  local i=0\n  local j=0\n  local n=0\n  local m=0\n  arr=($1)\n  len=${#arr[@]}\n\
    \  for ((i=0; i<$len; i++)); do\n    n=${arr[$i]}\n    for ((j=i+1; j<$len; j++));\
    \ do\n      m=${arr[$j]}\n      if [[ $(expr $n + $m) -eq 0 ]]; then\n       \
    \ str=\"true\"\n        break\n      fi\n    done\n  done\n  if [[ -z $str ]];\
    \ then\n    str=\"false\"\n  fi\n  echo $str\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  my_array=()\n  array_length=0\n  number=\"\"\n\
    \  k=0\n  while [ ${#1} -gt 0 ]; do\n    if [ $1 == \" \" ]; then\n      my_array[$k]=$number\n\
    \      number=\"\"\n      (( k++ ))\n    else\n      number=$number$1\n    fi\n\
    \    shift\n  done\n  array_length=$k\n  my_array[$k]=$number\n  my_array=(\"\
    ${my_array[@]}\" \"${my_array[@]}\")\n  for i in ${!my_array[@]}; do\n    for\
    \ j in ${!my_array[@]}; do\n      if [ $i -ne $j ] && [ ${my_array[$i]} -eq $((\
    \ -1 * ${my_array[$j]} )) ]; then\n        echo \"true\"\n        return\n   \
    \   fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl1ubcdmv.sh: line 23: [: too many arguments

    /tmp/tmpl1ubcdmv.sh: line 37: -1 * 1 3 5 0 : syntax error in expression (error
    token is "3 5 0 ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  declare -a arr1=()\n  declare -a arr2=()\n  local\
    \ index\n  local str\n  for str in $1\n  do\n    arr1[$index]=$str\n    ((index++))\n\
    \  done\n  index=0\n  while [[ $index -lt ${#arr1[@]} ]]\n  do\n    arr2[index]=${arr1[index]}\n\
    \    if [[ ${arr1[index]} -lt 0 ]]\n    then\n      if [[ $(( ${arr1[index]} *\
    \ -1 )) -gt 0 ]]\n      then\n        if [[ \" ${arr2[@]} \" =~ \" $(( ${arr1[index]}\
    \ * -1 )) \" ]]\n        then\n          echo \"true\"\n          return\n   \
    \     fi\n      fi\n    fi\n    ((index++))\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # split the space-separated list into an array\n\
    \  declare -a numbers=($1)\n  # for each item in the array, compare it to every\
    \ other item\n  for i in $(seq ${#numbers[@]}); do\n    for j in $(seq ${#numbers[@]});\
    \ do\n      # if they are the same item, skip this iteration\n      if [[ $i -eq\
    \ $j ]]; then\n        continue\n      fi\n      # if they sum to zero, return\
    \ true\n      if [[ $((numbers[$i] + numbers[$j])) -eq 0 ]]; then\n        echo\
    \ \"true\"\n        return\n      fi\n    done\n  done\n  # if we never find two\
    \ that sum to zero, return false\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # do not change the function name\n\n    #\
    \ check for proper number of arguments\n    if [ $# -ne 1 ]; then\n        echo\
    \ \"error: incorrect number of arguments\"\n        exit 1\n    fi\n\n    # TODO:\
    \ write your code here\n    #\n    # you may not use any loops\n    #\n    # replace\
    \ this return with the correct return value\n    return 0\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  IFS=\" \" read -a A <<< \"$1\"\n  n=${#A[@]}\n\
    \  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<n; j++)); do\n      [[ \"${A[i]}\"\
    \ + \"${A[j]}\" == 0 ]] && return 0\n    done\n  done\n  return 1\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7nb9fqgn.sh: line 22: conditional binary operator expected

    /tmp/tmp7nb9fqgn.sh: line 22: syntax error near `+''

    /tmp/tmp7nb9fqgn.sh: line 22: `      [[ "${A[i]}" + "${A[j]}" == 0 ]] && return
    0''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # write your code here\n    return\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    declare -a nums\n    declare -i num\n    #\
    \ Iterate over the arguments to the function call\n    for arg in $@; do\n   \
    \     # convert each argument to an integer\n        num=$((10#$arg))\n      \
    \  # check if the absolute value of num is a key in the array nums\n        if\
    \ (( ${nums[${num#-}]+-1} > -1 )); then\n            echo \"true\"\n         \
    \   return\n        else\n            # store the -num in the array\n        \
    \    nums[${num#-}]=-$num\n        fi\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected
    (error token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    /tmp/tmpfj594580.sh: line 25: ((: > -1 : syntax error: operand expected (error
    token is "> -1 ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # your code goes here\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp439kgrif.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp439kgrif.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    pairs_sum_to_zero_helper \"$@\" -1\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0r61fnx8.sh: line 18: pairs_sum_to_zero_helper: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    #  create an array from the input list\n  \
    \  my_array=( $1 )\n    #  sort the array\n    my_array=( $(echo ${my_array[@]}\
    \ | tr ' ' '\\n' | sort -n) )\n    #  traverse the array using two pointers, one\
    \ at the beginning and\n    #  the other at the end\n    i=0\n    j=$(( ${#my_array[@]}\
    \ - 1 ))\n    while (( i < j )); do\n        sum=$(( ${my_array[$i]} + ${my_array[$j]}\
    \ ))\n        if (( sum == 0 )); then\n            echo \"true\"\n           \
    \ return\n        elif (( sum < 0 )); then\n            i=$(( i + 1 ))\n     \
    \   else\n            j=$(( j - 1 ))\n        fi\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# your code goes here!\n\tlocal array=($1)\n\t\
    echo \"array is ${array[@]}\"\n\tfor (( i=0; i<${#array[@]}; i++ ))\n\tdo\n\t\t\
    for (( j=i+1; j<${#array[@]}; j++ ))\n\t\tdo\n\t\t\tif [[ $((${array[$i]} + ${array[$j]}))\
    \ -eq 0 ]]\n\t\t\tthen\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\t\t\tfi\n\t\t\
    done\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local pairs\n  local pairs_count\n\n  pairs=($(echo\
    \ \"$1\" | awk '\n    {\n      for (i = 1; i <= NF; i++) {\n        for (j = i\
    \ + 1; j <= NF; j++) {\n          if (i == j) continue\n          print $i \"\
    \ \" $j\n        }\n      }\n    }\n  '))\n\n  pairs_count=$(echo \"${pairs[@]}\"\
    \ | awk '\n    {\n      if (NF == 0) {\n        print 0\n      } else {\n    \
    \    print NF / 2\n      }\n    }\n  ')\n\n  if [ \"$pairs_count\" -eq 0 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n\n  echo \"${pairs[@]}\" | awk '\n    {\n\
    \      for (i = 1; i <= NF; i += 2) {\n        if ($i + $(i + 1) == 0) {\n   \
    \       print \"true\"\n          exit\n        }\n      }\n      print \"false\"\
    \n    }\n  '\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local numbers=($1)\n  for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#numbers[@]}; j++)); do\n      [[ \"${numbers[i]}\"\
    \ == \"-\"* ]] && [[ \"${numbers[j]}\" == \"${numbers[i]#-}\" ]] && return 0\n\
    \      [[ \"${numbers[j]}\" == \"-\"* ]] && [[ \"${numbers[i]}\" == \"${numbers[j]#-}\"\
    \ ]] && return 0\n    done\n  done\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Hint: You can use $1 to get the list, and\
    \ let bash split it for you.\n    # Hint: You can use $(( )) to cast a string\
    \ to an integer, e.g.\n    #    $(( \"1\" + 1 ))\n    #    2\n    # Hint: You\
    \ can use the fact that $(( )) returns 1 for true and 0 for false\n    # to return\
    \ true and false, e.g.\n    #    $(( \"true\" ))\n    #    1\n    #    $(( \"\
    false\" ))\n    #    0\n    if [ \"$1\" == \"\" ]; then\n        echo \"false\"\
    \n    else\n        current=$1\n        rest=${@:2}\n        if $(pairs_sum_to_zero\
    \ $rest) == \"true\"; then\n            echo \"true\"\n        else\n        \
    \    tmp=$(pairs_sum_to_zero $rest)\n            echo $tmp\n            if [[\
    \ \"$tmp\" == \"\"* ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # replace this\n    return 0\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local nums=\"$1\"\n  local nums_arr=($nums)\n\
    \  local l=${#nums_arr[@]}\n  local i\n  local complement\n  local j\n  local\
    \ num\n  for ((i=0; i<l; i++)); do\n    num=${nums_arr[$i]}\n    ((complement\
    \ = -num))\n    for ((j=i+1; j<l; j++)); do\n      if [[ ${nums_arr[$j]} -eq $complement\
    \ ]]; then\n        echo true\n        return\n      fi\n    done\n  done\n  echo\
    \ false\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local integers=$(echo $1 | sed 's/[^0-9]/ /g')\n\
    \  for i in $integers; do\n    for j in $integers; do\n      if [ $i -ne $j ]\
    \ && [ $((i+j)) -eq 0 ]; then\n        echo true\n        return\n      fi\n \
    \   done\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [ $# -le 1 ]; then\n    echo \"false\"\n \
    \   return\n  fi\n  integers=(\"$@\")\n  for i in ${integers[@]}; do\n    for\
    \ j in ${integers[@]}; do\n      if [ $i -eq $j ]; then\n        continue\n  \
    \    fi\n      if [ $((i + j)) -eq 0 ]; then\n        echo \"true\"\n        return\n\
    \      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  echo $1 | sed 's/ /\\n/g' | sort | uniq | while\
    \ read i; do\n    echo $1 | sed 's/ /\\n/g' | sort | uniq | \\\n      awk \"\\\
    $1 != $i && \\$1 + $i == 0 {print \\\"true\\\"; exit} END {print \\\"false\\\"\
    }\"\n  done | sort | uniq | grep true > /dev/null\n  if [ $? -eq 0 ]; then\n \
    \   echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # write me\n  # read $1 as a list of integers\n\
    \  # make a new list with the same elements\n  # sort it\n  # iterate through\
    \ elements of the two lists, simultaneously\n  # if you see two matching numbers\
    \ with opposite signs, return \"true\"\n  # else return \"false\"\n  list=\"\"\
    \n  for arg in $1; do\n    list=\"$list $arg\"\n  done\n  sort -n <(echo $list)\
    \ > /tmp/temp1\n  sort -n -r <(echo $list) > /tmp/temp2\n  for (( i=1; i <= $#;\
    \ i++ )); do\n    if [ \"$(sed -n ${i}p /tmp/temp1)\" == \"$(sed -n ${i}p /tmp/temp2)\"\
    \ ]; then\n      return 0\n    fi\n  done\n  return 1\n}\n\ncandidate() {\n  \
    \  pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local values=\"$1\"\n  # implement the function\
    \ body here\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    declare -a array=()\n\n    for i in $1; do\n\
    \        array+=($i)\n    done\n\n    # Two integer arrays of equal size A and\
    \ B are given.\n    # You need to find all pairs (a, b) in the arrays such that\
    \ a + b = 0.\n    # The function finds the number of such pairs and returns it.\n\
    \    # >>> $(find_pairs \"1 3 -2 1 5 3\" \"2 3 -2 1 5 3\")\n    # \"2\"\n    #\
    \ >>> $(find_pairs \"1 2\" \"3 -3\")\n    # \"1\"\n    # >>> $(find_pairs \"1\
    \ 2\" \"1 -1\")\n    # \"0\"\n    # >>> $(find_pairs \"1\" \"1\")\n    # \"0\"\
    \n    # >>> $(find_pairs \"1 2\" \"1 2\")\n    # \"0\"\n    #\n    # $1 is a space-separated\
    \ list of integers\n    # $2 is a space-separated list of integers\n    find_pairs()\
    \ {\n        declare -a array1=()\n        declare -a array2=()\n\n        for\
    \ i in $1; do\n            array1+=($i)\n        done\n\n        for i in $2;\
    \ do\n            array2+=($i)\n        done\n\n        local pairs=0\n\n    \
    \    for i in ${array1[@]}; do\n            for j in ${array2[@]}; do\n      \
    \          if [[ $((i + j)) -eq 0 ]]; then\n                    pairs=$((pairs\
    \ + 1))\n                fi\n            done\n        done\n\n        echo $pairs\n\
    \    }\n\n    echo $(find_pairs \"$1\" \"$1\")\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    if [ \"$#\" -ne 1 ]; then\n        echo \"\
    Usage: pairs_sum_to_zero <space-separated list>\"\n        return 1\n    fi\n\
    \    local sum_to_zero=\"false\"\n    local -A hashmap # create associative array\n\
    \    for num in $1; do\n        if [[ ${hashmap[$num]} ]]; then\n            sum_to_zero=\"\
    true\"\n            break\n        else\n            hashmap[$((-num))]=true\n\
    \        fi\n    done\n    echo \"$sum_to_zero\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # keep track of the numbers seen\n    # if\
    \ we see a new number, add it to the set\n    # if we see a number that is equal\
    \ to the negative of a number we've seen before, then there is a sum-to-zero pair\n\
    \    # if we run out of numbers without finding a pair, then there is no pair\n\
    \    for number in $1; do\n        if [[ \"$negative_seen\" == \"$number\" ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n        let\
    \ negative_seen=\"-$number\"\n    done\n    echo \"false\"\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    for x in $1; do\n        for y in $1; do\n\
    \            if [ \"$x\" != \"$y\" ] && [ $((x+y)) -eq 0 ]; then\n           \
    \     echo \"true\"\n                return\n            fi\n        done\n  \
    \  done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for a in $1; do\n    for b in $1; do\n      if\
    \ [ $a -eq $b ]; then\n        continue\n      fi\n      if [ $((a + b)) -eq 0\
    \ ]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local nums=\"$1\"\n    local len=${#nums}\n\
    \    local current_num\n    local remaining_nums\n    local search_num\n    local\
    \ hit\n    local remaining_len\n    if [ $len -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    current_num=${nums:0:1}\n    remaining_nums=${nums:1}\n\
    \    remaining_len=${#remaining_nums}\n    if [ $remaining_len -eq 0 ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    search_num=$((-1 * current_num))\n\
    \    hit=$(echo \"$remaining_nums\" | grep -w \"$search_num\")\n    if [ \"$hit\"\
    \ != \"\" ]; then\n        echo \"true\"\n        return\n    fi\n    pairs_sum_to_zero\
    \ \"$remaining_nums\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO\n  nums=($1)\n  len=${#nums[@]}\n  i=0\n\
    \  while [ $i -lt $len ]\n  do\n    j=$i\n    while [ $j -lt $len ]\n    do\n\
    \      if [ ${nums[$i]} -eq $((0-${nums[$j]})) ] && [ $i -ne $j ]\n      then\n\
    \        echo \"true\"\n        return\n      fi\n      j=$((j+1))\n    done\n\
    \    i=$((i+1))\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [[ \"$1\" == \"\" ]]; then\n    echo false\n\
    \    return\n  fi\n  for number in $1; do\n    [[ \"$number\" == \"0\" ]] && echo\
    \ true && return\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # Write your solution here\n    while read\
    \ -r int; do\n    if [[ \"${list_of_ints[*]}\" =~ \"-${int}\" ]]; then\n     \
    \ echo true\n      exit 0\n    fi\n    list_of_ints+=($int)\n  done <<< \"$1\"\
    \n  echo false\n  exit 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tlocal vals=\"$1\"\n\tfor a in $vals\n\tdo\n\t\
    \tfor b in $vals\n\t\tdo\n\t\t\tif [[ $a -eq $b ]]; then\n\t\t\t\tcontinue\n\t\
    \t\tfi\n\t\t\tif [[ $((a + b)) -eq 0 ]]; then\n\t\t\t\techo \"true\"\n\t\t\t\t\
    return\n\t\t\tfi\n\t\tdone\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n   \
    \ pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    if [[ $# -le 1 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n\
    \        return\n    fi\n    if [[ $1 -eq -$2 ]]; then\n        echo \"true\"\n\
    \        return\n    fi\n    pairs_sum_to_zero $2 $3 $4 $5 $6 $7 $8 $9\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  for n in $1; do\n    for m in $1; do\n      if\
    \ [ $n -ne $m ] && [ $((n + m)) -eq 0 ]; then\n        echo true\n        return\n\
    \      fi\n    done\n  done\n  echo false\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # strip trailing white space\n    stripped=$(echo\
    \ \"$1\" | sed 's/ *$//')\n    # we need at least two elements\n    if [[ $stripped\
    \ == *\" \"* ]]; then\n        # remove the first element\n        other=$(echo\
    \ \"$stripped\" | sed 's/^\\([0-9-]*\\) .*/\\1/')\n        # concatenate the rest\
    \ of the input\n        rest=$(echo \"$stripped\" | sed 's/^[0-9-]* //')\n   \
    \     # if the other number is in the rest of the input, return true\n       \
    \ if [[ $rest == *\"$other\"* ]]; then\n            echo \"true\"\n        else\n\
    \            pairs_sum_to_zero \"$rest\"\n        fi\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\treturn 0\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # your code here\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc7jjk4zr.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmpc7jjk4zr.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if (( $# < 2 )); then\n    echo \"false\"\n \
    \   return\n  fi\n  for el in $1; do\n    for el2 in $2; do\n      if (( el +\
    \ el2 == 0 )); then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # COMPLETE THIS FUNCTION\n  for num in $1\n \
    \ do\n    for num2 in $1\n    do\n      if [[ $num -eq $num2 ]]; then\n      \
    \  continue\n      fi\n      if [[ $num -eq $((0 - $num2)) ]]; then\n        echo\
    \ \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local data\n  local i\n  local ii\n  local result\n\
    \  data=\"$1\"\n  for i in $data; do\n    for ii in $data; do\n      if [ \"$i\"\
    \ != \"$ii\" ] && [ $(( $i + $ii )) == 0 ]; then\n        result=\"true\"\n  \
    \    fi\n    done\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# $1 is an array of integers.\n\t# $2 is an integer.\n\
    \t# returns true if there are two distinct elements in the array\n\t# that sum\
    \ to $2, and false otherwise.\n\tsubset_sums_to() {\n\t\tlocal arr=(\"${!1}\"\
    )\n\t\tlocal target=$2\n\t\tfor i in ${!arr[@]}; do\n\t\t\tfor j in ${!arr[@]};\
    \ do\n\t\t\t\tif [[ \"$i\" != \"$j\" ]] && [[ \"${arr[$i]}\" == \"$((target -\
    \ ${arr[$j]}))\" ]]; then\n\t\t\t\t\treturn 0\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\
    \t\treturn 1\n\t}\n\n\tlocal -a arr=($1)\n\tsubset_sums_to arr[@] 0\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # create a temp file with an integer on each\
    \ line\n    local tempFile=$(mktemp)\n    echo \"$1\" | sed 's/ /\\n/g' > $tempFile\n\
    \    # sort it\n    sort -g $tempFile > $tempFile.sorted\n    # remove temp file\n\
    \    rm $tempFile\n    # convert to array\n    IFS=$'\\n' read -r -d '' -a sortedArray\
    \ < $tempFile.sorted\n    # remove temp file\n    rm $tempFile.sorted\n    # find\
    \ zeros\n    local zeros=$(findZeros \"${sortedArray[@]}\")\n    # if there are\
    \ no zeros\n    if [ -z \"$zeros\" ]; then\n        # return false\n        echo\
    \ \"false\"\n    # if there are zeros\n    else\n        # return true\n     \
    \   echo \"true\"\n    fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp58qj_4ir.sh: line 30: findZeros: command not found

    /tmp/tmp58qj_4ir.sh: line 30: findZeros: command not found

    /tmp/tmp58qj_4ir.sh: line 30: findZeros: command not found

    /tmp/tmp58qj_4ir.sh: line 30: findZeros: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    if [ $# -eq 1 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    # Write your code here\n    echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  list=$1\n\n  # your code here\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local arr=(\"$@\")\n  local hashTable=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if (( -i < i )) && ((hashTable[i] == 1)); then\n\
    \      echo \"true\"\n      return\n    fi\n    if (( -i > i )) && ((hashTable[i]\
    \ == 1)); then\n      echo \"true\"\n      return\n    fi\n    hashTable[i]=1\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr5zou0sq.sh: line 21: ((: 1 3 5 0: syntax error in expression (error
    token is "3 5 0")

    /tmp/tmpr5zou0sq.sh: line 25: ((: 1 3 5 0: syntax error in expression (error token
    is "3 5 0")

    /tmp/tmpr5zou0sq.sh: line 29: 1 3 5 0: syntax error in expression (error token
    is "3 5 0")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  set -f\n  numbers=($1)\n  num=${#numbers[@]}\n\
    \  for (( i=0; i<${num}; i++ ))\n  do\n    for (( j=i+1; j<${num}; j++ ))\n  \
    \  do\n      if [[ (${numbers[$i]} + ${numbers[$j]}) -eq 0 ]]\n      then\n  \
    \      echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuv_z95qi.sh: line 25: conditional binary operator expected

    /tmp/tmpuv_z95qi.sh: line 25: expected `)''

    /tmp/tmpuv_z95qi.sh: line 25: syntax error near `+''

    /tmp/tmpuv_z95qi.sh: line 25: `      if [[ (${numbers[$i]} + ${numbers[$j]}) -eq
    0 ]]''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local __docs__=\"\n    >>> pairs_sum_to_zero\
    \ '1 3 5 0'\n    'false'\n    >>> pairs_sum_to_zero '1 3 -2 1'\n    'false'\n\
    \    >>> pairs_sum_to_zero '1 2 3 7'\n    'false'\n    >>> pairs_sum_to_zero '2\
    \ 4 -5 3 5 7'\n    'true'\n    >>> pairs_sum_to_zero '1'\n    'false'\n    \"\n\
    \    local nums\n    nums=($1)\n    local neg_nums\n    for i in \"${nums[@]}\"\
    ; do\n        ((i < 0)) && neg_nums+=(\"$i\")\n    done\n    for i in \"${nums[@]}\"\
    ; do\n        ((i > 0)) && in_array \"$((-i))\" \"${neg_nums[@]}\" && return 0\n\
    \    done\n    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppsz6e3an.sh: line 37: in_array: command not found

    /tmp/tmppsz6e3an.sh: line 37: in_array: command not found

    /tmp/tmppsz6e3an.sh: line 37: in_array: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # convert the space-separated list of integers\
    \ into an array\n    # 'mapfile' creates an array by splitting on newlines.\n\
    \    # 'tr' replaces spaces with newlines.\n    # '<<<' feeds the string into\
    \ the pipe\n    mapfile -t integers <<< $(tr ' ' '\\n' <<< \"$1\")\n\n    # convert\
    \ the array of integers into an array of zeros\n    # 'for' loops through the\
    \ array of integers,\n    # and appends 0 to the array of zeros for each integer\n\
    \    mapfile -t zeros <<< $(for x in \"${integers[@]}\"; do echo 0; done)\n\n\
    \    # subtract each integer from zero\n    # 'zip' matches up each integer with\
    \ its corresponding zero.\n    # 'bash -c' runs the command in the quotes on each\
    \ element of the array.\n    # 'bc' is a command-line calculator that does floating-point\
    \ arithmetic.\n    mapfile -t differences <<< $(bash -c 'for i in \"${!arr[@]}\"\
    ; do bc <<< \"${arr[i]} - ${arr[i]}\"; done' arr=(\"${integers[@]}\") )\n\n  \
    \  # intersect the array of differences with the array of integers\n    # 'comm'\
    \ prints the common lines of two sorted files\n    # 'echo' feeds the string into\
    \ the command\n    # 'sort' sorts the file\n    # '<<<' feeds the string into\
    \ the command\n    comm -12 <(sort <<< \"${differences[*]}\") <(sort <<< \"${integers[*]}\"\
    ) >/dev/null 2>&1\n\n    # if the intersection is not empty, there is a pair that\
    \ sums to zero.\n    if [ $? -eq 0 ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3p06cawc.sh: command substitution: line 34: syntax error near unexpected
    token `(''

    /tmp/tmp3p06cawc.sh: command substitution: line 34: `bash -c ''for i in "${!arr[@]}";
    do bc <<< "${arr[i]} - ${arr[i]}"; done'' arr=("${integers[@]}") )''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # We need a list of numbers, so convert the input\
    \ into an array\n  # Then sort it, so we can find the numbers we need\n  local\
    \ list=(\"$@\")\n  local sorted=($(printf \"%s\\n\" \"${list[@]}\" | sort -n))\n\
    \n  # Keep track of the positions we've looked at\n  local positions=()\n\n  #\
    \ Loop through the sorted list, working from the smallest number\n  # to the largest\
    \ number.\n  for ((i=0; i < ${#sorted[@]}; i++)); do\n    local num1=${sorted[$i]}\n\
    \n    # Skip this number if we've already looked at it\n    if [ ${positions[$i]}\
    \ ]; then\n      continue\n    fi\n\n    # Loop through the sorted list again,\
    \ starting from the next\n    # number in the list\n    for ((j=$i+1; j < ${#sorted[@]};\
    \ j++)); do\n      local num2=${sorted[$j]}\n\n      # Skip this number if we've\
    \ already looked at it\n      if [ ${positions[$j]} ]; then\n        continue\n\
    \      fi\n\n      # Calculate the sum of the two numbers\n      local sum=$((num1\
    \ + num2))\n\n      # If the sum is zero, return true.\n      if [ $sum -eq 0\
    \ ]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \n  # If we haven't found a match, return false\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tlocal numbers=($1)\n\tfor ((i=0; i<${#numbers[@]};\
    \ i++)); do\n\t\tfor ((j=i+1; j<${#numbers[@]}; j++)); do\n\t\t\tif [[ \"${numbers[$i]}\"\
    \ == \"$((-${numbers[$j]}))\" ]]; then\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\
    \t\t\tfi\n\t\tdone\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    numbers=$(echo $1 | tr \" \" \"\\n\")\n   \
    \ for i in $numbers; do\n\tif [[ ${numbers[$i+1]} =~ \"0\" ]]; then\n\t    echo\
    \ true\n\telse\n\t    echo false\n\tfi\n    done\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # your code goes here\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    for (( j=0; j<${#1}; j++ )); do\n      if [[ ${1:$i:1} -eq $((0\
    \ - ${1:$j:1})) ]] && [[ $i -ne $j ]]; then\n        echo \"true\"\n        exit\
    \ 0\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6n_d6xlx.sh: line 21: 0 -  : syntax error: operand expected (error
    token is "-  ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # Init the array\n  declare -a array=()\n  #\
    \ Read the value from the given string and store it into the array\n  read -a\
    \ array <<< $1\n  # Loop through the array and sum the positive and negative values\n\
    \  for i in ${array[@]}; do\n    for j in ${array[@]}; do\n      if [[ \"$i\"\
    \ -eq \"$(($j * -1))\" ]]; then\n        echo \"true\"\n        return\n     \
    \ fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # Write your solution here.\n  # You can use\
    \ the echo command if you want to output\n  # a value. For example:\n  # echo\
    \ \"Hello world\"\n  #echo $1\n  input=( $1 )\n  size=${#input[@]}\n  while [[\
    \ $size -gt 0 ]]; do\n    num1=${input[$size-1]}\n    for (( i=0; i<size-1; i++\
    \ )); do\n      num2=${input[$i]}\n      if [[ $(($num1+$num2)) -eq 0 ]]; then\n\
    \        echo \"true\"\n        return\n      fi\n    done\n    size=$(($size-1))\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t:\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # TODO\n  arr=$1\n  count=0\n  for i in ${arr[@]}\n\
    \  do\n    if [[ $((i+0)) -eq 0 ]]; then\n      count=$((count+1))\n    fi\n \
    \ done\n  if [[ $count -eq 2 ]]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [[ $# -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $1 -eq $2 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n    if [[ $(($1 + $2)) -eq 0 ]]; then\n      echo\
    \ \"true\"\n      return\n    fi\n    echo \"false\"\n    return\n  fi\n  x=$1\n\
    \  shift\n  for y in $@; do\n    if [[ $(($x + $y)) -eq 0 ]]; then\n      echo\
    \ \"true\"\n      return\n    fi\n  done\n  pairs_sum_to_zero $@\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  list=\"$1\"\n  i=0\n  while [[ \"$i\" -lt \"\
    ${#list}\" ]]; do\n    j=0\n    while [[ \"$j\" -lt \"${#list}\" ]]; do\n    \
    \  if [[ \"$i\" -ne \"$j\" ]]; then\n        if [[ \"$((${list:$i:1} + ${list:$j:1}))\"\
    \ -eq 0 ]]; then\n          echo \"true\"\n          return\n        fi\n    \
    \  fi\n      ((j++))\n    done\n    ((i++))\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6w33492l.sh: line 24: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t# TODO: Implement me using only the arguments\
    \ to the function and\n\t# basic unix utilities\n\ta=\"\"\n\ta=\"`echo $1 | xargs`\"\
    \n\tn=0\n\tfor i in $a\n\tdo\n\t\tn=$((n+i))\n\tdone\n\tif [[ $n -eq 0 ]]\n\t\
    then\n\t\techo true\n\telse\n\t\techo false\n\tfi\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # this is a stub that simply returns \"true\"\
    \n    echo \"true\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  # YOUR CODE HERE\n  # hint 1: you can use a for\
    \ loop to iterate over the list.\n  # hint 2: you can use bc to do arithmetic\
    \ operations\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local numbers=( $1 )\n  local length=${#numbers[@]}\n\
    \  for (( i=0; i<length; i++ )); do\n    for (( j=i+1; j<length; j++ )); do\n\
    \      if [[ ${numbers[i]} + ${numbers[j]} == 0 ]]; then\n        echo \"true\"\
    \n        return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzlq4zj4r.sh: line 22: conditional binary operator expected

    /tmp/tmpzlq4zj4r.sh: line 22: syntax error near `+''

    /tmp/tmpzlq4zj4r.sh: line 22: `      if [[ ${numbers[i]} + ${numbers[j]} == 0
    ]]; then''

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\t__pairs_sum_to_zero \"$@\" | grep -q true\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpibql4bru.sh: line 18: __pairs_sum_to_zero: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    local sum=0 x=0 y=0\n    # your code goes here\n\
    \    for ((i=1; i<=$#; i++)); do\n        for ((j=1; j<=$#; j++)); do\n      \
    \      sum=$((${!i} + ${!j}))\n            if [[ $sum -eq 0 ]]; then\n       \
    \         echo \"true\"\n                return\n            fi\n        done\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6ofcecf6.sh: line 22: 1 3 5 0 + 1 3 5 0: syntax error in expression
    (error token is "3 5 0 + 1 3 5 0")

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local output=false\n  local num\n  local nums\n\
    \  local list=($1)\n  while read num; do\n    nums=\"${list[@]/$num}\"\n    if\
    \ echo \"$nums\" | grep -q -w -e \"${num#-}\"; then\n      output=true\n     \
    \ break\n    fi\n  done <<< \"$1\"\n  echo \"$output\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  list=$1\n  for i in $list; do\n    if [[ \"$list\"\
    \ =~ \"- $i\" ]]; then\n      echo \"true\"\n      return\n    fi\n  done\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  if [[ $# -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $1 -eq -$2 ]]; then\n      echo \"\
    true\"\n      return\n    else\n      echo \"false\"\n      return\n    fi\n \
    \ fi\n  # continue\n  for i in $@; do\n    for j in $@; do\n      if [[ $i -eq\
    \ -$j ]]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tif (( $# < 2 )); then\n\t\techo \"false\"\n\t\
    else\n\t\tlocal nums=$@\n\t\tlocal num_index=1\n\t\tlocal num\n\t\tlocal find_index\n\
    \t\tlocal sub_nums\n\t\twhile (( num_index <= $# )); do\n\t\t\tnum=${!num_index}\n\
    \t\t\t(( ++num_index ))\n\t\t\tsub_nums=${nums[@]:$num_index}\n\t\t\tif [[ \"\
    \ ${sub_nums[@]} \" =~ \" -$num \" ]]; then\n\t\t\t\techo \"true\"\n\t\t\t\treturn\n\
    \t\t\tfi\n\t\tdone\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    # write me!\n    return\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n\tfor e in $1; do\n\t\tif [[ $(echo $1 | grep -w\
    \ -v $e | grep -w -o '-\\?\\w*' | grep -w $((0 - $e))) ]]; then\n\t\t\techo \"\
    true\"\n\t\t\treturn\n\t\tfi\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Try ''grep --help'' for more information.

    grep: invalid option -- ''\''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more informatio'
  stdout: ''
  timestamp: 1660023799
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n  local result=$(\n    map $1 |\n    while read\
    \ x; do\n      map $(remove_first_element $1 $x) |\n      while read y; do\n \
    \       if [[ $(($x + $y)) -eq 0 ]]; then\n          echo \"true\"\n         \
    \ break\n        fi\n      done\n    done |\n    uniq)\n  # for each number,\n\
    \  # for each remaining number\n  # does the first number and the remaining number\
    \ add up to zero?\n  # we only care if two distinct numbers add up to zero,\n\
    \  # so we keep only one result per distinct pair.\n  if [[ \"$result\" = \"true\"\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe21nb0c1.sh: line 30: map: command not found

    /tmp/tmpe21nb0c1.sh: line 30: map: command not found

    /tmp/tmpe21nb0c1.sh: line 30: map: command not found

    /tmp/tmpe21nb0c1.sh: line 30: map: command not found

    '
  stdout: ''
  timestamp: 1660023799
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\n#\n# $1 is a space-separated\
    \ list\npairs_sum_to_zero() {\n    list=$(echo $1 | tr ' ' '\\n' | sort -n)\n\
    \    left=0\n    right=$(echo \"$list\" | wc -l)\n    while [ $left -lt $right\
    \ ]; do\n        value=$(echo \"$list\" | head -n$left | tail -n1)\n        test_value=$(echo\
    \ \"$list\" | head -n$right | tail -n1)\n        if [ $value -eq 0 ] && [ $test_value\
    \ -eq 0 ]; then\n            echo \"true\"\n            return\n        fi\n \
    \       if [ $value -gt 0 ] && [ $test_value -gt 0 ]; then\n            echo \"\
    false\"\n            return\n        fi\n        if [ $value -eq -$test_value\
    \ ]; then\n            echo \"true\"\n            return\n        fi\n       \
    \ if [ $value -gt -$test_value ]; then\n            ((right--))\n        else\n\
    \            ((left++))\n        fi\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: '/tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 28: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 32: [: -eq: unary operator expected

    /tmp/tmptglja2up.sh: line 36: [: -gt: unary operator expected

    /tmp/tmptglja2up.sh: line 24: [: -eq: unary operator expected

    /t'
  stdout: ''
  timestamp: 1660023799

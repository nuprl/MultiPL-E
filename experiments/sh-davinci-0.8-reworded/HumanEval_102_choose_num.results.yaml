language: sh
name: HumanEval_102_choose_num
results:
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    ans=0\n\
    \    for ((i=$1; i<=$2; i++)); do\n        if [ $((i%2)) -eq 0 ]; then\n     \
    \       ans=$i\n        fi\n    done\n    if [ $ans -eq 0 ]; then\n        echo\
    \ \"-1\"\n    else\n        echo $ans\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -lt $2 ]]; then\n        if [[ $(($1 % 2)) -eq 0 ]]; then\n          \
    \  echo $1\n        else\n            echo $(($1 + 1))\n        fi\n    else\n\
    \        echo '-1'\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ even_num\n    for i in $(seq $1 $2); do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            even_num=$i\n        fi\n    done\n    if [ -z $even_num ]; then\n\
    \        echo \"-1\"\n    else\n        echo $even_num\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ enter your code here\n    if [[ $1 -lt 0 || $2 -lt 0 ]]; then\n        echo\
    \ \"-1\"\n    elif [ $1 -gt $2 ]; then\n        echo \"-1\"\n    elif [ $1 -eq\
    \ $2 ]; then\n        if [[ $1 -eq 0 || $2 -eq 0 ]]; then\n            echo \"\
    0\"\n        elif [[ $1 -eq 1 || $2 -eq 1 ]]; then\n            echo \"-1\"\n\
    \        elif [[ $1 -eq 2 || $2 -eq 2 ]]; then\n            echo \"2\"\n     \
    \   elif [[ $1 -eq 3 || $2 -eq 3 ]]; then\n            echo \"-1\"\n        elif\
    \ [[ $1 -eq 4 || $2 -eq 4 ]]; then\n            echo \"4\"\n        elif [[ $1\
    \ -eq 5 || $2 -eq 5 ]]; then\n            echo \"-1\"\n        elif [[ $1 -eq\
    \ 6 || $2 -eq 6 ]]; then\n            echo \"6\"\n        elif [[ $1 -eq 7 ||\
    \ $2 -eq 7 ]]; then\n            echo \"-1\"\n        elif [[ $1 -eq 8 || $2 -eq\
    \ 8 ]]; then\n            echo \"8\"\n        elif [[ $1 -eq 9 || $2 -eq 9 ]];\
    \ then\n            echo \"-1\"\n        else\n            echo \"$1\"\n     \
    \   fi\n    else\n        for i in `seq $1 $2`; do\n            if [[ $i -eq 0\
    \ || $i -eq 2 || $i -eq 4 || $i -eq 6 || $i -eq 8 ]]; then\n                echo\
    \ \"$i\"\n            fi\n        done\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  for\
    \ i in $(seq $1 $2); do\n    if [[ $(($i % 2)) -eq 0 ]]; then\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ integer=$1\n    local integer2=$2\n    local max\n    local check=0\n    if\
    \ [[ $integer -lt $integer2 ]]; then\n\twhile [[ $integer -le $integer2 ]]; do\n\
    \t    if [[ $integer -ge $check ]]; then\n\t\tcheck=$integer\n\t    fi\n\t   \
    \ ((integer++))\n\tdone\n\tmax=$check\n    else\n\twhile [[ $integer2 -le $integer\
    \ ]]; do\n\t    if [[ $integer2 -ge $check ]]; then\n\t\tcheck=$integer2\n\t \
    \   fi\n\t    ((integer2++))\n\tdone\n\tmax=$check\n    fi\n    if [[ $max%2 -eq\
    \ 0 ]]; then\n\techo $max\n    else\n\techo \"-1\"\n    fi\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    b=$1\n\
    \    e=$2\n    if [ $1 -gt $2 ]; then\n        return -1\n    fi\n    for i in\
    \ $(seq $b $e); do\n        if [ $(($i % 2)) -eq 0 ]; then\n            echo $i\n\
    \            return\n        fi\n    done\n    echo -1\n}\n\ncandidate() {\n \
    \   choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tlargest_even=-1\n\
    \n\tfor i in $(seq $1 $2); do\n\t\tif [ $(expr $i % 2) -eq 0 ]; then\n\t\t\tif\
    \ [ $i -gt $largest_even ]; then\n\t\t\t\tlargest_even=$i\n\t\t\tfi\n\t\tfi\n\t\
    done\n\n\techo $largest_even\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660021109
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    else\n        for (( i=$1; i<=$2;\
    \ i++ )); do\n            if [[ $(( i % 2 )) -eq 0 ]]; then\n                echo\
    \ \"$i\"\n                return 0\n            fi\n        done\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    if [ $x -gt $y ]; then\n        echo \"-1\"\
    \n    else\n        local count=$((x % 2))\n        local num=$x\n        while\
    \ [ $count -eq 1 ]; do\n            num=$((num + 1))\n            count=$((num\
    \ % 2))\n        done\n        echo $num\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Your code here.\n    if [ $1 -lt $2 ]; then\n        low=$1\n        high=$2\n\
    \    else\n        low=$2\n        high=$1\n    fi\n    for ((i=$low; i<=$high;\
    \ i++)); do\n        if [ $((i%2)) -eq 0 ]; then\n            echo $i\n      \
    \      return\n        fi\n    done\n    echo -1\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ \"$1\" -lt \"$2\" ]]; then\n        echo \"$2\"\n    elif [[ \"$1\" -gt \"\
    $2\" ]]; then\n        echo \"$1\"\n    else\n        echo \"$1\"\n    fi\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Don't touch this line!\n    declare -i x=\"$1\"\n    declare -i y=\"$2\"\n \
    \   ############## Your code goes here ################\n    if [ $x -gt $y ];\
    \ then\n        echo -1\n    elif [ $x -eq $y ]; then\n        if [[ $x%2 -eq\
    \ 0 ]]; then\n            echo $x\n        else\n            echo -1\n       \
    \ fi\n    else\n        for ((i = $x; i <= $y; i++)); do\n            if [[ $i%2\
    \ -eq 0 ]]; then\n                echo $i\n                break\n           \
    \ fi\n        done\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ num_list\n  local x=$1\n  local y=$2\n  local i\n  if [ $x -gt $y ]; then\n\
    \    return -1\n  fi\n  for ((i=$x; i<=$y; i++)); do\n    if [ $((i%2)) -eq 0\
    \ ]; then\n      num_list=\"$num_list $i\"\n    fi\n  done\n  # Sort the num_list\
    \ numerically and output the last element\n  echo \"$num_list\" | xargs -n1 |\
    \ sort -n | tail -n1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [[\
    \ \"$1\" -ge \"$2\" ]]; then\n    echo \"-1\"\n  else\n    if [[ \"$2\" -eq \"\
    $(($2/2*2))\" ]]; then\n      echo \"$2\"\n    else\n      choose_num \"$1\" \"\
    $(($2-1))\"\n    fi\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    # TODO: choose the biggest even number in [x, y]\n\
    \    # If there's no such number, return -1.\n    # You may assume that x <= y\n\
    \    echo $x\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [\
    \ \"$#\" -ne 2 ]; then\n    echo \"$2\"\n    return\n  fi\n  if [ \"$1\" -ge \"\
    $2\" ]; then\n    echo \"$2\"\n    return\n  fi\n  if [ \"$1\" -gt \"$2\" ]; then\n\
    \    echo \"-1\"\n    return\n  fi\n  echo \"$1\"\n  return\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ num1=$1\n    local num2=$2\n    if [[ $num1 -gt $num2 ]]; then\n        for\
    \ ((i = $num1; i >= $num2; i--)); do\n            if [[ $((i % 2)) -eq 0 ]]; then\n\
    \                echo $i\n                break\n            fi\n        done\n\
    \    else\n        for ((i = $num2; i >= $num1; i--)); do\n            if [[ $((i\
    \ % 2)) -eq 0 ]]; then\n                echo $i\n                break\n     \
    \       fi\n        done\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ \"$1\" -gt \"$2\" ]]; then\n        echo -1\n    else\n        for i in $(seq\
    \ \"$1\" \"$2\"); do\n            if [[ \"$i\" -gt \"$2\" ]]; then\n         \
    \       break\n            elif [[ \"$i\"%2 -eq 0 ]]; then\n                echo\
    \ \"$i\"\n            fi\n        done\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    echo \" $(for i in $(seq $x $y); do [[ $((i%2))\
    \ == 0 ]] && echo $i; done) \" | sed 's/ /\\n/g' | tail -n 1\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -gt $2 ]; then\n        echo -1\n    elif [ $1 -eq $2 ]; then\n       \
    \ if [ $1 -eq 0 ]; then\n            echo 0\n        elif [ $(( $1 % 2 )) -eq\
    \ 0 ]; then\n            echo $1\n        else\n            echo -1\n        fi\n\
    \    else\n        y=$(( $2 % 2 ))\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n\
    \            if [ $y -eq 0 ]; then\n                echo $2\n            else\n\
    \                echo $(( $2 - 1 ))\n            fi\n        else\n          \
    \  if [ $y -eq 0 ]; then\n                echo $2\n            else\n        \
    \        echo $(( $2 - 2 ))\n            fi\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ max_even=-1\n  for (( i=$1; i<=$2; i++ ))\n  do\n    if [ $(( i % 2 )) -eq 0\
    \ ] && [ $i -gt $max_even ]\n    then\n      max_even=$i\n    fi\n  done\n  echo\
    \ $max_even\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  i=$1\n\
    \  while [[ $i -le $2 ]]; do\n    if [[ $(($i % 2)) == 0 ]]; then\n      echo\
    \ $i\n      return\n    fi\n    i=$(($i + 1))\n  done\n  echo -1\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $# -ne 2 ]]; then\n        echo \"Please provide exactly two numbers!\"\n\
    \        return 1\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $1%2 -eq\
    \ 0 ]]; then\n            echo $1\n        else\n            echo \"-1\"\n   \
    \     fi\n    elif [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    else\n    \
    \    for ((i=$2; i>=$1; i--)); do\n            if [[ $i%2 -eq 0 ]]; then\n   \
    \             echo $i\n                return 0\n            fi\n        done\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ X=\"$1\"\n    local Y=\"$2\"\n    local MAX=\"-1\"\n    local CURRENT\n    while\
    \ [[ \"$X\" -le \"$Y\" ]]; do\n        CURRENT=\"$X\"\n        if [[ $((CURRENT\
    \ % 2)) == 0 ]] && [[ \"$CURRENT\" -gt \"$MAX\" ]]; then\n            MAX=\"$CURRENT\"\
    \n        fi\n        X=$((X + 1))\n    done\n    echo \"$MAX\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if !\
    \ [[ \"$1\" =~ ^-?[0-9]+$ ]]; then\n    echo \"The first argument should be an\
    \ integer.\" >&2\n    exit 1\n  fi\n  if ! [[ \"$2\" =~ ^-?[0-9]+$ ]]; then\n\
    \    echo \"The second argument should be an integer.\" >&2\n    exit 1\n  fi\n\
    \  # Your solution goes here\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -ge $2 ]; then\n        echo \"-1\"\n    elif [ $(($1 % 2)) -eq 0 ]; then\n\
    \        echo $1\n    else\n        echo $(($1 + 1))\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -ge $2 ]]; then\n        return -1\n    fi\n    for (( number=$1; number<=$2;\
    \ number++ ))\n    do\n        if [[ $(( number % 2 )) -eq 0 ]]; then\n      \
    \      echo $number\n            return\n        fi\n    done\n    echo -1\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [\
    \ $1 -lt $2 ]; then\n\t\t\n\t\tif [ $1 -eq $2 ]; then\n\t\t\tif [[ $1%2 -eq 0\
    \ ]]; then\n\t\t\t\techo $1\n\t\t\telse\n\t\t\t\techo -1\n\t\t\tfi\n\t\telse\n\
    \t\t\ti=$1\n\t\t\twhile [ $i -lt $2 ]; do\n\t\t\t\ti=$((i+1))\n\t\t\t\tif [[ $i%2\
    \ -eq 0 ]]; then\n\t\t\t\t\tflag=1\n\t\t\t\t\tnum=$i\n\t\t\t\tfi\n\t\t\tdone\n\
    \t\t\tif [ $flag -eq 1 ]; then\n\t\t\t\techo $num\n\t\t\telse\n\t\t\t\techo -1\n\
    \t\t\tfi\n\t\tfi\n\telse\n\t\ti=$2\n\t\twhile [ $i -lt $1 ]; do\n\t\t\ti=$((i+1))\n\
    \t\t\tif [[ $i%2 -eq 0 ]]; then\n\t\t\t\tflag=1\n\t\t\t\tnum=$i\n\t\t\tfi\n\t\t\
    done\n\t\tif [ $flag -eq 1 ]; then\n\t\t\techo $num\n\t\telse\n\t\t\techo -1\n\
    \t\tfi\n\tfi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpre73wsya.sh: line 46: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    [\
    \ -z \"$1\" ] && echo \"Invalid input\" && return 1\n    [ -z \"$2\" ] && echo\
    \ \"Invalid input\" && return 1\n    [ $1 -gt $2 ] && return -1\n    for i in\
    \ $(seq $1 $2); do\n        if [ $(($i % 2)) -eq 0 ]; then\n            echo $i\n\
    \            return\n        fi\n    done\n    echo -1\n}\n\ncandidate() {\n \
    \   choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tfor\
    \ i in $(seq $1 $2); do\n\t\tif [ $((i % 2)) -eq 0 ]; then\n\t\t\techo $i\n\t\t\
    \tbreak\n\t\tfi\n\tdone\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # Start\
    \ to define your function here\n  #\n  for i in $(seq $1 $2);\n  do\n    if [[\
    \ $(($i % 2)) -eq 0 ]];\n    then\n      echo $i\n      break\n    fi\n  done\n\
    \  #\n  # End of function definition\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    declare\
    \ -i x\n    declare -i y\n    declare -i n\n    declare -i max\n    declare -i\
    \ max_even\n\n    x=\"$1\"\n    y=\"$2\"\n    max_even=-1\n\n    for (( n = x;\
    \ n <= y; n++ )); do\n        # check if even\n        if (( n % 2 == 0 )); then\n\
    \            if (( n > max_even )); then\n                max_even=\"$n\"\n  \
    \          fi\n        fi\n    done\n\n    echo \"$max_even\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -lt $2 ]; then\n        min=$1\n        max=$2\n    else\n        min=$2\n\
    \        max=$1\n    fi\n    for n in $(seq $min $max); do\n        if [ $(( $n\
    \ % 2 )) -eq 0 ]; then\n            echo $n\n            return\n        fi\n\
    \    done\n    echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ i=$1;\n  while [ $i -le $2 ]; do\n    if [ $(is_even $i) -eq 1 ]; then\n   \
    \   echo $i;\n      return 0;\n    fi\n    i=$(($i+1));\n  done\n  echo \"-1\"\
    ;\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcnf5azky.sh: line 16: is_even: command not found

    /tmp/tmpcnf5azky.sh: line 16: [: -eq: unary operator expected

    /tmp/tmpcnf5azky.sh: line 16: is_even: command not found

    /tmp/tmpcnf5azky.sh: line 16: [: -eq: unary operator expected

    /tmp/tmpcnf5azky.sh: line 16: is_even: command not found

    /tmp/tmpcnf5azky.sh: line 16: [: -eq: unary operator expected

    /tmp/tmpcnf5azky.sh: line 16: is_even: command not found

    /tmp/tmpcnf5azky.sh: line 16: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local i\n    for i in $(seq $x $y); do\n        if\
    \ [ $(($i % 2)) == 0 ]; then\n            echo \"$i\"\n            return\n  \
    \      fi\n    done\n    echo \"-1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  declare\
    \ -i x\n  declare -i y\n  x=$1\n  y=$2\n  # Your solution here\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=$1\n  local y=$2\n  if ((x > y)) || ((x < 0)) || ((y < 0)); then\n    echo\
    \ -1\n    return\n  fi\n  if (((x % 2) != 0)); then\n    let x+=1\n  fi\n  if\
    \ (((y % 2) != 0)); then\n    let y-=1\n  fi\n  if ((x > y)); then\n    echo -1\n\
    \    return\n  fi\n  echo $y\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    if (( x < 0 || y < 0 )); then\n        echo -1\n \
    \       return\n    fi\n    if (( x > y )); then\n        x=$y\n    fi\n    while\
    \ (( x <= y )); do\n        if (( x % 2 == 0 )); then\n            echo $x\n \
    \           return\n        fi\n        (( x++ ))\n    done\n    echo -1\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # Call\
    \ the new script to do this\n  python3 -c \"from choose_num import choose_num;\
    \ print(choose_num($1, $2))\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n\
    ModuleNotFoundError: No module named 'choose_num'\n"
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local max=-1\n    local i\n    for ((i=$x; i<=$y;\
    \ i++)); do\n        if [ $((i%2)) == 0 ] && [ $i -gt $max ]; then\n         \
    \   max=$i\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    x=$1\n\
    \    y=$2\n    if [[ $x -gt $y ]]; then\n        tmp=$x\n        x=$y\n      \
    \  y=$tmp\n    fi\n    count=$x\n    max=-1\n    while [[ $count -le $y ]]; do\n\
    \        # check if even\n        if [[ $(($count % 2)) -eq 0 ]]; then\n     \
    \       max=$count\n        fi\n        count=$(($count + 1))\n    done\n    echo\
    \ $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ result=-1\n    if (($1 < $2)); then\n        for i in $(seq $1 $2); do\n   \
    \         if ((i % 2 == 0)); then\n                result=$i\n            fi\n\
    \        done\n    fi\n    echo $result\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  first=$1\n\
    \  second=$2\n  if [ $first -gt $second ]; then\n    tmp=$first\n    first=$second\n\
    \    second=$tmp\n  fi\n  if [ $((first % 2)) -ne 0 ]; then\n    first=$((first\
    \ + 1))\n  fi\n  while [ $first -le $second ]; do\n    if [ $((first % 2)) -eq\
    \ 0 ]; then\n      echo $first\n      break\n    fi\n    first=$((first + 1))\n\
    \  done\n  if [ $first -gt $second ]; then\n    echo \"-1\"\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y i\n  x=$1\n  y=$2\n  i=$x\n  while [ $i -le $y ]; do\n    if [ $(($i % 2))\
    \ -eq 0 ]; then\n      echo $i\n      return\n    fi\n    i=$(($i + 1))\n  done\n\
    \  echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [[\
    \ \"$1\" -lt \"$2\" ]]; then\n    eval \"$(seq $1 $2 | awk '{if ($1 % 2 == 0)\
    \ { print \"ans=\"$1\" \"; exit }}')\"\n  else\n    eval \"$(seq $2 $1 | awk '{if\
    \ ($1 % 2 == 0) { print \"ans=\"$1\" \"; exit }}')\"\n  fi\n  echo \"$ans\"\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # find\
    \ the biggest even number and return it.\n  # if none is found, return -1\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxplodmdy.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpxplodmdy.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\t# start\
    \ with the first number in the range\n\tbiggest=$1\n\n\t# iterate through every\
    \ number in the range\n\tfor i in $(seq $1 $2); do\n\t\t# if the number is even,\
    \ and bigger than the current biggest, \n\t\t# we've found a new biggest number\n\
    \t\tif (($i % 2 == 0)) && (($i > $biggest)); then\n\t\t\tbiggest=$i\n\t\tfi\n\t\
    done\n\n\t# if the biggest number is the first number in the range, then \n\t\
    # there are no even numbers in the range, so return -1\n\tif [ $biggest -eq $1\
    \ ]; then\n\t\techo \"-1\"\n\telse\n\t\techo $biggest\n\tfi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local result=\"\"\n  if [[ \"$x\" -gt \"$y\" ]];\
    \ then\n    result=\"-1\"\n  elif [[ \"$x\" -eq \"$y\" ]]; then\n    if [[ \"\
    $((x % 2))\" -eq 0 ]]; then\n      result=\"$x\"\n    else\n      result=\"-1\"\
    \n    fi\n  else\n    local diff=\"$((y - x))\"\n    local mid=\"$(((x + y) /\
    \ 2))\"\n    if [[ \"$((mid % 2))\" -eq 0 ]]; then\n      result=\"$mid\"\n  \
    \  elif [[ \"$((diff % 2))\" -eq 0 ]]; then\n      result=\"$((mid + 1))\"\n \
    \   else\n      result=\"$((mid - 1))\"\n    fi\n  fi\n  echo \"$result\"\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ \"$1\" -lt \"$2\" ]]; then\n        for x in $(seq \"$1\" \"$2\"); do\n \
    \           if [[ $((x % 2)) -eq 0 ]]; then\n                echo \"$x\"\n   \
    \             return\n            fi\n        done\n    fi\n    echo \"-1\"\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [[\
    \ \"$1\" =~ ^[0-9]+$ ]] && [[ \"$2\" =~ ^[0-9]+$ ]]; then\n\t\tif [ \"$1\" -gt\
    \ \"$2\" ]; then\n\t\t\techo \"$1 - $2\"\n\t\t\tfor i in $(seq $2 $1); do\n\t\t\
    \t\tif [ $((i%2)) -eq 0 ]; then\n\t\t\t\t\techo $i\n\t\t\t\t\texit 0\n\t\t\t\t\
    fi\n\t\t\tdone\n\t\t\techo \"-1\"\n\t\telse\n\t\t\techo \"$2 - $1\"\n\t\t\tfor\
    \ i in $(seq $1 $2); do\n\t\t\t\tif [ $((i%2)) -eq 0 ]; then\n\t\t\t\t\techo $i\n\
    \t\t\t\t\texit 0\n\t\t\t\tfi\n\t\t\tdone\n\t\t\techo \"-1\"\n\t\tfi\n\telse\n\t\
    \techo \"-1\"\n\tfi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # TODO:\
    \ write code here\n  if [[ $1 -lt $2 ]]; then\n    larger=$2\n    smaller=$1\n\
    \  else\n    larger=$1\n    smaller=$2\n  fi\n  for ((i=$larger; i>=$smaller;\
    \ i--)); do\n    if [[ $((i%2)) -eq 0 ]]; then\n      echo $i\n      return\n\
    \    fi\n  done\n  echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ ! \"$1\" =~ ^[0-9]+$ ]] || [[ ! \"$2\" =~ ^[0-9]+$ ]]; then\n        return\
    \ 1;\n    fi\n    for ((i=$1; i<=$2; i++)); do\n        if [[ $((i%2)) == 0 ]];\
    \ then\n            echo \"$i\";\n            return 0;\n        fi\n    done\n\
    \    echo \"-1\";\n    return 0;\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Error checking\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"First\
    \ argument must be an integer!\"\n        return -1\n    fi\n    if ! [[ \"$2\"\
    \ =~ ^[0-9]+$ ]]; then\n        echo \"Second argument must be an integer!\"\n\
    \        return -1\n    fi\n    if [ \"$1\" -gt \"$2\" ]; then\n        echo \"\
    Second argument must be greater than or equal to the first!\"\n        return\
    \ -1\n    fi\n\n    # Implementation\n    highest_even=-1\n    for (( i=$1; i<=$2;\
    \ i++ )); do\n        if (( $i % 2 == 0 )); then\n            highest_even=$i\n\
    \        fi\n    done\n    echo \"$highest_even\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021104
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # Fill\
    \ this in\n  return \"1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -le $2 ]]; then\n        # add one to the end of the range\n        for\
    \ ((i=$1; i<=$2+1; i++)); do\n            # if number is even, return it\n   \
    \         if [[ $((i%2)) -eq 0 ]]; then\n                echo $i\n           \
    \     break\n            fi\n        done\n    else\n        echo \"-1\"\n   \
    \ fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=$1\n  local y=$2\n  if [[ $x -ge $y ]]; then\n    echo -1\n  elif [[ $x%2\
    \ -eq 0 ]]; then\n    echo $x\n  else\n    echo $((x+1))\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  echo\
    \ $1 $2 | awk '\n  {\n    if ($1 > $2) {\n      print -1\n    } else {\n     \
    \ for (i = $1; i <= $2; i++) {\n        if (i % 2 == 0) {\n          print i\n\
    \          break\n        }\n      }\n    }\n  }'\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Your code here\n    # ...\n    if [ $1 -gt $2 ]; then\n        echo \"-1\"\n\
    \    else\n        for i in $(seq $1 $2); do\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                echo $i\n                break\n            fi\n\
    \        done\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Optional: you might find a use for the modulo operator\n    # (%, see the following\
    \ link for a description:\n    # https://www.computerhope.com/unix/bash/mod.htm)\n\
    \    # Feel free to delete these lines if you don't use it.\n    if [ $1 -gt $2\
    \ ]; then\n        echo \"-1\"\n    else\n        for num in $(seq $1 $2); do\n\
    \            if [[ $num % 2 -eq 0 ]]; then\n                echo $num\n      \
    \          return\n            fi\n        done\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6cxdr3wz.sh: line 22: conditional binary operator expected

    /tmp/tmp6cxdr3wz.sh: line 22: syntax error near `%''

    /tmp/tmp6cxdr3wz.sh: line 22: `            if [[ $num % 2 -eq 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -le $2 ]; then\n        for n in $(seq $1 $2); do\n            if [ $((n\
    \ % 2)) -eq 0 ]; then\n                echo $n\n                return 0\n   \
    \         fi\n        done\n    fi\n    echo -1\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ a b\n    a=$1\n    b=$2\n    for i in $(seq $a $b); do\n        if [ $((i %\
    \ 2)) == 0 ]; then\n            echo $i\n            return\n        fi\n    done\n\
    \    echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ -i x y ret\n    x=$1\n    y=$2\n    if [ $x -gt $y ]; then\n        ret=-1\n\
    \    else\n        for i in $(seq $x $y); do\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                ret=$i\n            fi\n        done\n    fi\n  \
    \  echo $ret\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ TODO: Implement this function\n    if [[ $1 == $2 ]]; then\n        if [[ $1%2\
    \ -eq 0 ]]; then\n            echo $1\n        else\n            echo -1\n   \
    \     fi\n    else\n        if [[ $1 -lt $2 ]]; then\n            for ((i=$1;\
    \ i<=$2; i++)); do\n                if [[ $i%2 -eq 0 ]]; then\n              \
    \      echo $i\n                    break\n                fi\n            done\n\
    \        else\n            for ((i=$1; i>=$2; i--)); do\n                if [[\
    \ $i%2 -eq 0 ]]; then\n                    echo $i\n                    break\n\
    \                fi\n            done\n        fi\n    fi\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ num1=$1\n  local num2=$2\n  local result\n  if [ $num1 -gt $num2 ]; then\n \
    \   echo \"-1\"\n  else\n    result=$(($num1 % 2))\n    if [ $result -eq 0 ];\
    \ then\n      echo \"$num1\"\n    else\n      echo \"$(($num1 + 1))\"\n    fi\n\
    \  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  x=$1\n\
    \  y=$2\n  if [[ $x -le $y ]]; then\n    # The number in the range [x, y] that\
    \ is the biggest\n    # even integer\n    biggest_even_int=-1\n    # Use the while\
    \ loop to find the biggest even integer.\n    # The loop should stop if we have\
    \ found an even number.\n    while [[ $x -le $y ]]; do\n      # if the number\
    \ is even, then assign x to biggest_even_int,\n      # otherwise, assign 0 to\
    \ biggest_even_int.\n      if [[ $((x % 2)) -eq 0 ]]; then\n        biggest_even_int=$x\n\
    \        break\n      else\n        biggest_even_int=0\n      fi\n      x=$((x\
    \ + 1))\n    done\n    echo $biggest_even_int\n  else\n    echo \"-1\"\n  fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Hint: use a loop (while or for)\n    # Hint: use a counter\n    # Hint: use\
    \ modulus (%) operator\n    # Hint: use -gt and -lt operators\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnqyll_si.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmpnqyll_si.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  echo\
    \ \"Not yet implemented\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ If one of the numbers is not an integer, return -1\n    if [[ $1 != [0-9]* ]]\
    \ || [[ $2 != [0-9]* ]]; then\n        echo \"-1\"\n        return\n    fi\n\n\
    \    # If x > y, return -1\n    if [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n\
    \        return\n    fi\n\n    # Iterate from x to y, and return the biggest even\
    \ integer\n    for i in $(seq $1 $2); do\n        if [[ $((i % 2)) -eq 0 ]]; then\n\
    \            echo $i\n            return\n        fi\n    done\n\n    # If there's\
    \ no even number, return -1\n    echo \"-1\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    x=\"\
    $1\"\n    y=\"$2\"\n    if [ \"$x\" -lt \"$y\" ]; then\n        for (( i=\"$x\"\
    ; i<=\"$y\"; i++ )); do\n            if [ \"$((i%2))\" -eq 0 ]; then\n       \
    \         echo \"$i\"\n                return 0\n            fi\n        done\n\
    \    fi\n    echo \"-1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [\
    \ \"$1\" -gt \"$2\" ]; then\n    return -1\n  fi\n  answer=\"$1\"\n  for i in\
    \ $(seq \"$1\" \"$2\"); do\n    if [ $((i % 2)) -eq 0 ] && [ \"$i\" -gt \"$answer\"\
    \ ]; then\n      answer=\"$i\"\n    fi\n  done\n  if [ \"$answer\" -eq \"$1\"\
    \ ]; then\n    return -1\n  fi\n  echo \"$answer\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    num1=$1\n\
    \    num2=$2\n    if ((num1%2 == 0))\n    then\n        max=num1\n    elif ((num2%2\
    \ == 0))\n    then\n        max=num2\n    else\n        echo \"-1\"\n        return\n\
    \    fi\n    if ((num1%2 != 0))\n    then\n        num1=$((num1-1))\n    fi\n\
    \    if ((num2%2 != 0))\n    then\n        num2=$((num2-1))\n    fi\n    for i\
    \ in $(seq $num1 $num2)\n    do\n        if ((i > max))\n        then\n      \
    \      max=$i\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=$1\n  local y=$2\n  local i=$x\n  local max=0\n  for (( i; i <= y; i++ ));\
    \ do\n    if [[ $(is_even $i) ]]; then\n      if [[ $i -gt $max ]]; then\n   \
    \     max=$i\n      fi\n    fi\n  done\n  if [[ $max -eq 0 ]]; then\n    echo\
    \ -1\n  else\n    echo $max\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphb_3giia.sh: line 19: is_even: command not found

    /tmp/tmphb_3giia.sh: line 19: is_even: command not found

    /tmp/tmphb_3giia.sh: line 19: is_even: command not found

    /tmp/tmphb_3giia.sh: line 19: is_even: command not found

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tlocal\
    \ x=$1\n\tlocal y=$2\n\tlocal i=$x\n\tlocal ans=$x\n\tfor ((i=x; i<=y; i++));\
    \ do\n\t\tif [[ i%2 -eq 0 ]]; then\n\t\t\tans=$i\n\t\tfi\n\tdone\n\tif [[ ans\
    \ -eq x ]]; then\n\t\techo -1\n\telse\n\t\techo $ans\n\tfi\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -lt $2 ]; then\n        low=$1\n        high=$2\n    else\n        low=$2\n\
    \        high=$1\n    fi\n    for x in $(seq $low $high); do\n        if [ $((x\
    \ % 2)) -eq 0 ]; then\n            echo $x\n            return\n        fi\n \
    \   done\n    echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tlocal\
    \ num_array=()\n\tlocal i\n\tlocal j=0\n\tfor ((i=$1; i<=$2; i++)); do\n\t\tif\
    \ [ $((i%2)) -eq 0 ]; then\n\t\t\tnum_array[$j]=$i\n\t\t\tj=$((j+1))\n\t\tfi\n\
    \tdone\n\tlocal max_num=-1\n\tfor ((i=0; i<${#num_array[@]}; i++)); do\n\t\tif\
    \ [ ${num_array[$i]} -gt $max_num ]; then\n\t\t\tmax_num=${num_array[$i]}\n\t\t\
    fi\n\tdone\n\techo $max_num\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    elif [[ $1 -eq $2 ]]; then\n\
    \        if [[ $1 -lt 2 ]]; then\n            echo \"-1\"\n        elif [[ $1\
    \ -lt 4 ]]; then\n            echo \"2\"\n        elif [[ $1 -lt 6 ]]; then\n\
    \            echo \"4\"\n        elif [[ $1 -lt 8 ]]; then\n            echo \"\
    6\"\n        elif [[ $1 -lt 10 ]]; then\n            echo \"8\"\n        elif\
    \ [[ $1 -lt 12 ]]; then\n            echo \"10\"\n        elif [[ $1 -lt 14 ]];\
    \ then\n            echo \"12\"\n        elif [[ $1 -lt 16 ]]; then\n        \
    \    echo \"14\"\n        elif [[ $1 -lt 18 ]]; then\n            echo \"16\"\n\
    \        elif [[ $1 -lt 20 ]]; then\n            echo \"18\"\n        elif [[\
    \ $1 -lt 22 ]]; then\n            echo \"20\"\n        elif [[ $1 -lt 24 ]]; then\n\
    \            echo \"22\"\n        elif [[ $1 -lt 26 ]]; then\n            echo\
    \ \"24\"\n        elif [[ $1 -lt 28 ]]; then\n            echo \"26\"\n      \
    \  elif [[ $1 -lt 30 ]]; then\n            echo \"28\"\n        elif [[ $1 -lt\
    \ 32 ]]; then\n            echo \"30\"\n        elif [[ $1 -lt 34 ]]; then\n \
    \           echo \"32\"\n        elif [[ $1 -lt 36 ]]; then\n            echo\
    \ \"34\"\n        elif [[ $1 -lt 38 ]]; then\n            echo \"36\"\n      \
    \  elif [[ $1 -lt 40 ]]; then\n            echo \"38\"\n        elif [[ $1 -lt\
    \ 42 ]]; then\n            echo \"40\"\n        elif [[ $1 -lt 44 ]]; then\n \
    \           echo \"42\"\n        elif [[ $1 -lt 46 ]]; then\n            echo\
    \ \"44\"\n        elif [[ $1 -lt 48 ]]; then\n            echo \"46\"\n      \
    \  elif [[ $1 -lt 50 ]]; then\n            echo \"48\"\n        elif [[\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq5r0nisl.sh: line 68: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpq5r0nisl.sh: line 68: syntax error near `}''

    /tmp/tmpq5r0nisl.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ TODO: your code here\n    echo \"$1\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\t# TODO:\
    \ Write a solution for this function.\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpamogemr3.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmpamogemr3.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tmin=$1\n\
    \tmax=$2\n\tif [[ $min -gt $max ]]; then\n\t\ttemp=$min\n\t\tmin=$max\n\t\tmax=$temp\n\
    \tfi\n\tfor (( i = max; i >= min; i-- )); do\n\t\tif [[ $((i % 2)) -eq 0 ]]; then\n\
    \t\t\techo $i\n\t\t\treturn\n\t\tfi\n\tdone\n\techo -1\n}\n\ncandidate() {\n \
    \   choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    if [[ $x -le $y ]]; then\n        for i in $(seq $x\
    \ $y); do\n            if [[ $((i % 2)) -eq 0 ]]; then\n                echo $i\n\
    \                return\n            fi\n        done\n    fi\n    echo -1\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [[\
    \ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n    (( $1 > $2 )) && echo $1\
    \ || echo $2\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  # Your code here\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [[\
    \ $1 -lt 0 || $2 -lt 0 ]]; then\n    echo \"Positive numbers only\"\n    return\
    \ 1\n  fi\n  for (( i = $1; i <= $2; i++ )); do\n    if (( i % 2 == 0 )); then\n\
    \      echo $i\n      return 0\n    fi\n  done\n  echo \"-1\"\n  return 0\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [[\
    \ $1 == $2 ]]; then\n\t\tif [[ $1%2 -eq 0 ]]; then\n\t\t\techo $1\n\t\telse\n\t\
    \t\techo -1\n\t\tfi\n\telif [[ $1 -gt $2 ]]; then\n\t\tif [[ $2%2 -eq 0 ]]; then\n\
    \t\t\techo $2\n\t\telse\n\t\t\techo -1\n\t\tfi\n\telse\n\t\tfor i in $(seq $1\
    \ $2); do\n\t\t\tif [[ $i%2 -eq 0 ]]; then\n\t\t\t\techo $i\n\t\t\t\tbreak\n\t\
    \t\tfi\n\t\tdone\n\tfi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [\
    \ $1 -gt $2 ]; then\n    echo \"-1\"\n  else\n    remainder_1=$(($1 % 2))\n  \
    \  remainder_2=$(($2 % 2))\n    if [ $remainder_1 -eq $remainder_2 ]; then\n \
    \     if [ $remainder_1 -eq 0 ]; then\n        echo \"$2\"\n      else\n     \
    \   if [ $2 -ge 2 ]; then\n          echo \"$(($2 - 1))\"\n        else\n    \
    \      echo \"-1\"\n        fi\n      fi\n    else\n      if [ $remainder_1 -eq\
    \ 0 ]; then\n        echo \"$1\"\n      else\n        if [ $1 -ge 2 ]; then\n\
    \          echo \"$(($1 + 1))\"\n        else\n          echo \"-1\"\n       \
    \ fi\n      fi\n    fi\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"-1\"\n\
    \        return 1\n    fi\n    if [ $1 -gt $2 ]; then\n        echo \"-1\"\n \
    \       return 0\n    fi\n    for i in $(seq $1 $2); do\n        if [ $((i % 2))\
    \ -eq 0 ]; then\n            echo $i\n            return 0\n        fi\n    done\n\
    \    echo \"-1\"\n    return 0\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ -i num_x num_y\n  num_x=$1\n  num_y=$2\n  # This is the best way I could come\
    \ up with, let me know if you have a \n  # better way\n  for ((i=$num_x; i<=$num_y;\
    \ i++)); do\n    if [ $((i%2)) -eq 0 ]; then\n      echo $i\n      return\n  \
    \  fi\n  done\n  echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tlocal\
    \ result=$(eval \"for i in \\$(seq $1 $2); do if [[ \\$i%2 -eq 0 ]]; then echo\
    \ \\$i; fi; done\")\n\techo \"$result\" | tail -n 1\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    range=$(seq\
    \ $1 $2)\n    for i in $range; do\n        if [ $(($i % 2)) -eq 0 ]; then\n  \
    \          ret=$i\n        fi\n    done\n    if [ $ret -eq 0 ]; then\n       \
    \ echo \"-1\"\n    else\n        echo $ret\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz_lmyrsq.sh: line 20: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # if\
    \ the first number is bigger than the second or either one of them is not\n  #\
    \ integer return -1\n  if [ \"$1\" -gt \"$2\" ] || ! [ \"$1\" -eq \"$1\" ] 2>\
    \ /dev/null || ! [ \"$2\" -eq \"$2\" ] 2> /dev/null; then\n    echo \"-1\"\n \
    \ else\n    # otherwise we iterate through the range\n    for ((i=$1; i<=$2; i++));\
    \ do\n      # if the number is even, then print it\n      if [ $((i%2)) -eq 0\
    \ ]; then\n        echo \"$i\"\n        return 0\n      fi\n    done\n    # if\
    \ we didn't find any even number, then print -1\n    echo \"-1\"\n  fi\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local max_even=-1\n    if [[ $x -ge $y ]]; then\n\
    \        return -1\n    fi\n    for (( i=$x; i<=$y; i++ )); do\n        if [[\
    \ $((i%2)) -eq 0 ]]; then\n            max_even=$i\n        fi\n    done\n   \
    \ echo $max_even\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1 y=$2\n    local max=-1\n    if (( $x > $y )); then\n        return $max\n\
    \    fi\n    for (( number=$x; number<=$y; number++ )); do\n        (( number\
    \ % 2 == 0 )) && max=$number\n    done\n    echo $max\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ first, sort the command line arguments in reverse order\n    local args=\"$(echo\
    \ \"$1 $2\" | awk '{ print $1 \" \" $2 }')\"\n    # second, calculate the result\
    \ using a for loop\n    for x in $args; do\n        # if x is even and in the\
    \ range [x, y] inclusive\n        if [[ $x%2 -eq 0 && $x -ge $1 && $x -le $2 ]];\
    \ then\n            # then, break the loop and return x\n            echo $x\n\
    \            break\n        # if the above condition is not true\n        else\n\
    \            # then, set x = -1 and break the loop\n            x=-1\n       \
    \     break\n        fi\n    done\n    # third, return the result\n    echo $x\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    max=$2\n\
    \    for i in $(seq $1 $2); do\n        if (( $i % 2 == 0 )); then\n         \
    \   if (( $i > $max )); then\n                max=$i\n            fi\n       \
    \ fi\n    done\n    echo $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  printf\
    \ \"%d\" $(( $1 + $2 - ( ( $1 + $2 ) % 2 ) ))\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [\
    \ \"$1\" -gt \"$2\" ]; then\n\t\techo \"-1\"\n\t\treturn\n\tfi\n\tlocal counter=\"\
    $1\"\n\twhile [ \"$counter\" -le \"$2\" ]; do\n\t\tif [ \"$(($counter % 2))\"\
    \ -eq 0 ]; then\n\t\t\techo \"$counter\"\n\t\t\treturn\n\t\tfi\n\t\tcounter=$(($counter\
    \ + 1))\n\tdone\n\techo \"-1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    min=$1\n\
    \    max=$2\n    if [[ $min -gt $max ]]; then\n        min=$2\n        max=$1\n\
    \    fi\n    for i in $(seq $min $max); do\n        if [[ $((i % 2)) -eq 0 ]];\
    \ then\n            echo \"$i\"\n            break\n        fi\n    done\n   \
    \ if [[ $((max % 2)) -ne 0 ]]; then\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y max\n    x=$1\n    y=$2\n    # Set max to x\n    max=$x\n    # Loop over\
    \ numbers in [x, y] inclusive\n    while [ $x -le $y ]; do\n        # Is x an\
    \ even number?\n        if [ $((x % 2)) -eq 0 ]; then\n            # Is x bigger\
    \ than max?\n            if [ $x -gt $max ]; then\n                # Set max to\
    \ x\n                max=$x\n            fi\n        fi\n        # Update x\n\
    \        x=$((x + 1))\n    done\n    # Is max bigger than y?\n    if [ $max -gt\
    \ $y ]; then\n        # Return -1\n        echo \"-1\"\n    else\n        # Return\
    \ max\n        echo $max\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ X=$1\n    local Y=$2\n    # Modify this code to make it work\n    echo \"TODO\"\
    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=-1\n    local i\n\n    for ((i = x; i <= y;\
    \ i++)); do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            z=$i\n     \
    \   fi\n    done\n\n    echo $z\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ TODO: complete this function\n    #echo \"$1\"\n    #echo \"$2\"\n    #echo\
    \ \"$1\"\n    #echo \"$2\"\n    if [[ $1 -gt $2 ]]; then\n\ttemp=$1\n\tset -f\n\
    \tA=(`echo \"$temp/2\" | bc` `echo \"$2/2\" | bc`)\n\tfor n in \"${A[@]}\"; do\n\
    \t    if [[ $n -eq 0 ]]; then\n\t\techo \"-1\"\n\t\treturn\n\t    elif [[ $n -eq\
    \ 1 ]]; then\n\t\techo \"$2\"\n\t\treturn\n\t    elif [[ $n -eq 2 ]]; then\n\t\
    \techo \"$(($2-1))\"\n\t\treturn\n\t    fi\n\tdone\n    elif [[ $1 -lt $2 ]];\
    \ then\n\ttemp=$2\n\tset -f\n\tA=(`echo \"$temp/2\" | bc` `echo \"$1/2\" | bc`)\n\
    \tfor n in \"${A[@]}\"; do\n\t    if [[ $n -eq 0 ]]; then\n\t\techo \"-1\"\n\t\
    \treturn\n\t    elif [[ $n -eq 1 ]]; then\n\t\techo \"$1\"\n\t\treturn\n\t   \
    \ elif [[ $n -eq 2 ]]; then\n\t\techo \"$(($1-1))\"\n\t\treturn\n\t    fi\n\t\
    done\n    else\n\tif [[ $1 -eq 0 ]]; then\n\t    echo \"-1\"\n\t    return\n\t\
    elif [[ $1 -eq 1 ]]; then\n\t    echo \"$1\"\n\t    return\n\telif [[ $1 -eq 2\
    \ ]]; then\n\t    echo \"$(($1-1))\"\n\t    return\n\tfi\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    result=$(seq \"$x\" \"$y\" | grep -P \"^[02468]$\"\
    )\n    if [ -z \"$result\" ]; then\n        echo \"-1\"\n    else\n        echo\
    \ \"$result\" | tail -n 1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    max=-1\n\
    \    for (( i = $1; i <= $2; i++ )); do\n        if [[ $((i % 2)) -eq 0 ]] &&\
    \ [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo\
    \ $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tlocal\
    \ lower_bound=${1:-0}\n\tlocal upper_bound=${2:-1}\n\tlocal num=-1\n\tlocal cnt=$((upper_bound\
    \ - lower_bound))\n\t\n\t[ $cnt -lt 0 ] && { echo -1; return; }\n\twhile [ $cnt\
    \ -ge 0 ]; do\n\t\tlocal num=$((upper_bound - cnt))\n\t\t[ $((num % 2)) -eq 0\
    \ ] && { echo $num; return; }\n\t\tcnt=$((cnt - 1))\n\tdone\n\techo $num\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # iterate\
    \ through numbers in range $1 to $2 and find the biggest even\n  # number using\
    \ modulo\n  # if there are no even numbers, then return -1\n  isEven=0\n  result=-1\n\
    \  for i in $(seq $1 $2); do\n    let isEven=$i%2\n    if [ $isEven -eq 0 ]; then\n\
    \      result=$i\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  x=$1\n\
    \  y=$2\n  if [ $x -gt $y ]; then\n    echo -1\n  else\n    max=$x\n    while\
    \ [ $x -le $y ]; do\n      if [ $((x % 2)) -eq 0 ]; then\n        if [ $x -gt\
    \ $max ]; then\n          max=$x\n        fi\n      fi\n      x=$((x + 1))\n \
    \   done\n    echo $max\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\t# TODO:\
    \ write code in this function to get the result.\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp658g_z_j.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmp658g_z_j.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    if [[ \"$x\" -lt \"$y\" ]]; then\n       \
    \ for i in $(seq \"$x\" \"$y\"); do\n            if [[ $(( $i % 2 )) -eq 0 ]];\
    \ then\n                echo \"$i\"\n                return\n            fi\n\
    \        done\n    else\n        for i in $(seq \"$y\" \"$x\"); do\n         \
    \   if [[ $(( $i % 2 )) -eq 0 ]]; then\n                echo \"$i\"\n        \
    \        return\n            fi\n        done\n    fi\n    echo \"-1\"\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    x=$1\n\
    \    y=$2\n    if [ $x -gt $y ]; then\n        x=$2\n        y=$1\n    fi\n  \
    \  if [ $x -le 0 ] || [ $y -le 0 ]; then\n        echo \"-1\"\n        return\n\
    \    fi\n    if [ $x -eq $y ]; then\n        if [ $((x % 2)) -eq 0 ]; then\n \
    \           echo \"$x\"\n        else\n            echo \"-1\"\n        fi\n \
    \       return\n    fi\n    z=$((x % 2))\n    if [ $z -eq 0 ]; then\n        echo\
    \ \"$x\"\n        return\n    fi\n    choose_num $((x + 1)) $y\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    for\
    \ number in $(seq $1 $2); do\n        if [ $(($number % 2)) -eq 0 ]; then\n  \
    \          echo \"$number\"\n            return\n        fi\n    done\n    echo\
    \ \"-1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -gt $2 ]; then\n        echo \"-1\"\n    elif [ $1 -le $2 ]; then\n   \
    \     if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1\"\n        else\n\
    \            echo \"$(($1 + 1))\"\n        fi\n    fi\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -lt $2 ]; then\n        x=$1\n        y=$2\n    else\n        x=$2\n  \
    \      y=$1\n    fi\n    #echo \"choose_num:  $x $y\"\n    for i in $(seq $x $y);\
    \ do\n        if [[ \"$i\" =~ ^[0-9]+$ ]]; then\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                echo $i\n                return\n            fi\n\
    \        fi\n    done\n    echo \"-1\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $# -ne 2 ]; then\n        echo \"usage: choose_num x y\"\n        return 1\n\
    \    fi\n    # if x is greater than y, swap x and y\n    if (( $1 > $2 )); then\n\
    \        temp=$1\n        x=$2\n        y=$temp\n    else\n        x=$1\n    \
    \    y=$2\n    fi\n    for (( i=$y; i>=$x; i-- )); do\n        if (( $i % 2 ==\
    \ 0 )); then\n            echo $i\n            return 0\n        fi\n    done\n\
    \    echo \"-1\"\n    return 0\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  numbers=$(seq\
    \ -f \"%g\" $1 $2)\n  for number in $numbers; do\n    if [ $(($number % 2)) -eq\
    \ 0 ]; then\n      echo $number\n      return\n    fi\n  done\n  echo -1\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $# -ne 2 ]]; then\n        echo -1\n        return\n    fi\n    if [[ ! $1\
    \ =~ ^[0-9]+$ ]]; then\n        echo -1\n        return\n    fi\n    if [[ ! $2\
    \ =~ ^[0-9]+$ ]]; then\n        echo -1\n        return\n    fi\n    if [[ $1\
    \ -gt $2 ]]; then\n        echo -1\n        return\n    fi\n    for ((x=$2; x>=$1;\
    \ x--)); do\n        if [[ $(($x % 2)) -eq 0 ]]; then\n            echo $x\n \
    \           return\n        fi\n    done\n    echo -1\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ ! [[ \"$1\" =~ ^[0-9]+$ ]] ; then\n        echo \"Error: Argument 1 must be\
    \ an integer\" >&2; exit 1\n    fi\n    if ! [[ \"$2\" =~ ^[0-9]+$ ]] ; then\n\
    \        echo \"Error: Argument 2 must be an integer\" >&2; exit 1\n    fi\n \
    \   if [[ \"$1\" -gt \"$2\" ]] ; then\n        echo \"-1\"\n    else\n       \
    \ for number in $(seq \"$1\" \"$2\") ; do\n            if [[ \"$number\"%2 -eq\
    \ 0 ]] ; then\n                echo \"$number\"\n                break\n     \
    \       fi\n        done\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n   # TODO\
    \ fill me in\n   \n  if [[ $1 -eq $2 ]]; then\n    if [[ $1 -eq 0 ]]; then\n \
    \     echo $1\n    elif [[ $1 -eq 1 ]]; then\n      echo \"-1\"\n    elif [[ $1\
    \ -eq 2 ]]; then\n      echo $1\n    elif [[ $1 -ge 3 ]]; then\n      if [[ $1\
    \ -eq $(( $1 / 2 ))*2 ]]; then\n        echo $1\n      else\n        echo $((\
    \ $1 - 1 ))\n      fi\n    fi\n    \n  elif [[ $1 -gt $2 ]]; then\n    echo \"\
    -1\"\n  else\n    if [[ $1 -eq 0 ]]; then\n      if [[ $2 -eq 1 ]]; then\n   \
    \     echo \"-1\"\n      elif [[ $2 -eq 2 ]]; then\n        echo $2\n      elif\
    \ [[ $2 -ge 3 ]]; then\n        if [[ $2 -eq $(( $2 / 2 ))*2 ]]; then\n      \
    \    echo $2\n        else\n          echo $(( $2 - 1 ))\n        fi\n      fi\n\
    \      \n    elif [[ $1 -eq 1 ]]; then\n      if [[ $2 -eq 2 ]]; then\n      \
    \  echo $2\n      elif [[ $2 -ge 3 ]]; then\n        if [[ $2 -eq $(( $2 / 2 ))*2\
    \ ]]; then\n          echo $2\n        else\n          echo $(( $2 - 1 ))\n  \
    \      fi\n      fi\n      \n    elif [[ $1 -eq 2 ]]; then\n      if [[ $2 -eq\
    \ 2 ]]; then\n        echo $2\n      elif [[ $2 -ge 3 ]]; then\n        if [[\
    \ $2 -eq $(( $2 / 2 ))*2 ]]; then\n          echo $2\n        else\n         \
    \ echo $(( $2 - 1 ))\n        fi\n      fi\n      \n    elif [[ $1 -ge 3 ]]; then\n\
    \      if [[ $1 -eq $(( $1 / 2 ))*2 ]]; then\n        if [[ $2 -eq $(( $2 / 2\
    \ ))*2 ]]; then\n          echo $2\n        else\n          echo $(( $2\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppdui5frs.sh: line 74: unexpected EOF while looking for matching
    `)''

    /tmp/tmppdui5frs.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    else\n        while [[ $1 -le\
    \ $2 ]]; do\n            if [[ $1%2 -eq 0 ]]; then\n                echo $1\n\
    \                break\n            fi\n            (($1++))\n        done\n \
    \   fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n        for (( number=$1;\
    \ number<=$2; number++ )); do\n            if (( number % 2 == 0 )); then\n  \
    \              echo $number\n                return\n            fi\n        done\n\
    \    fi\n    echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Insert your code here to fill in the correct return value.\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4fbu215z.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmp4fbu215z.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [[\
    \ -z \"$1\" || -z \"$2\" ]]; then\n\t\techo \"One or both of the arguments are\
    \ empty.\"\n\t\texit 1\n\tfi\n\t# check if both args are positive numbers\n\t\
    if [[ $1 -lt 0 || $2 -lt 0 ]]; then\n\t\techo \"One or both of the arguments are\
    \ not positive numbers.\"\n\t\texit 1\n\tfi\n\tlocal num\n\tfor num in $(seq $1\
    \ $2); do\n\t\t# check if number is even\n\t\tif [[ $(( num % 2 )) -eq 0 ]]; then\n\
    \t\t\techo $num\n\t\t\treturn\n\t\tfi\n\tdone\n\techo \"-1\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=${1}\n    local y=${2}\n    local r=$(( $y%2 ))\n    if [ \"$r\" -eq \"0\"\
    \ ]; then\n        local result=$y\n    else\n        local result=$(( $y-1 ))\n\
    \    fi\n    while [ \"$result\" -ge \"$x\" ]; do\n        if [ \"$result\" -ge\
    \ \"$x\" ]; then\n            break\n        fi\n        result=$(( $result-2\
    \ ))\n    done\n    if [ \"$result\" -lt \"$x\" ]; then\n        result=-1\n \
    \   fi\n    echo $result\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ number1=$1\n    local number2=$2\n    while [ $number1 -le $number2 ]; do\n\
    \        if [ $((number1 % 2)) -eq 0 ]; then\n            result=$number1\n  \
    \      fi\n        number1=$((number1 + 1))\n    done\n    if [ -z $result ];\
    \ then\n        echo \"-1\"\n    else\n        echo $result\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tbiggest=$1\n\
    \t\n\tfor number in $@\n\tdo\n\t\tif [ \"$number\" -gt \"$biggest\" ]\n\t\tthen\n\
    \t\t\tbiggest=$number\n\t\tfi\n\tdone\n\tfor num in $(seq $1 $biggest)\n\tdo\n\
    \t\tif [ $(($num % 2)) -eq 0 ]\n\t\tthen\n\t\t\techo $num\n\t\t\treturn\n\t\t\
    fi\n\tdone\n\techo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  for((i=$1;\
    \ i<=$2; i++)); do\n    if [ $(($i % 2)) -eq 0 ]; then\n      echo $i\n      break\n\
    \    fi\n  done\n  if [ $i -eq $2 ]; then\n    echo -1\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # Write\
    \ your code here\n  if [[ $1 -gt $2 ]]; then\n    echo \"-1\"\n  else\n    for\
    \ i in $(seq $1 $2); do\n      if [[ $(($i % 2)) -eq 0 ]]; then\n        echo\
    \ $i\n        break\n      fi\n    done\n  fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\t# Check\
    \ if args are numbers\n\tif ! [[ \"$1\" =~ ^[0-9]+$ ]] || ! [[ \"$2\" =~ ^[0-9]+$\
    \ ]]; then\n\t\techo \"No even numbers in the range\" >&2\n\t\treturn 1\n\tfi\n\
    \n\t# Check if x <= y\n\tif [ \"$1\" -gt \"$2\" ]; then\n\t\ttmp=\"$1\"\n\t\t\
    set -- \"$2\" \"$tmp\"\n\tfi\n\n\t# Go through the range, if even number is found,\
    \ return it\n\tfor i in $(seq \"$1\" \"$2\"); do\n\t\tif [ $(( i % 2 )) -eq 0\
    \ ]; then\n\t\t\techo \"$i\"\n\t\t\treturn 0\n\t\tfi\n\tdone\n\n\t# No even numbers\
    \ in the range\n\techo \"-1\"\n\treturn 0\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    declare\
    \ -i num1=\"$1\"\n    declare -i num2=\"$2\"\n    declare -i even_num\n\n    if\
    \ [ $# -ne 2 ]; then\n        printf \"Error: Wrong number of arguments\\n\"\n\
    \        exit 1\n    fi\n\n    if [ \"$num1\" -lt 0 -o \"$num2\" -lt 0 ]; then\n\
    \        printf \"Error: Only positive numbers are allowed\\n\"\n        exit\
    \ 1\n    fi\n\n    if [ \"$num1\" -gt \"$num2\" ]; then\n        printf \"Error:\
    \ The first argument should be greater than the second argument\\n\"\n       \
    \ exit 1\n    fi\n\n    even_num=\"$num2\"\n    while [ \"$even_num\" -ge \"$num1\"\
    \ -a \"$even_num\" -gt 0 ]; do\n        if [ $((even_num % 2)) -eq 0 ]; then\n\
    \            printf \"$even_num\"\n            exit 0\n        fi\n        ((even_num\
    \ -= 1))\n    done\n\n    even_num=\"-1\"\n    printf \"$even_num\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    ((\
    \ $1 > $2 )) && return -1\n    while (( $1 <= $2 )); do\n        (( $1 % 2 ==\
    \ 0 )) && echo \"$1\" && return\n        (( $1++ ))\n    done\n    echo \"-1\"\
    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [\
    \ \"$1\" -lt \"$2\" ]; then\n    if [ \"$(($1 % 2))\" -eq \"0\" ]; then\n    \
    \  echo \"$1\"\n    else\n      echo \"$(($1 + 1))\"\n    fi\n  else\n    echo\
    \ \"-1\"\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [[\
    \ $1 -gt $2 ]]; then\n\t\tif (( $1 % 2 == 0 )); then\n\t\t\techo $1\n\t\telif\
    \ (( $1 % 2 == 1 )); then\n\t\t\techo $(( $1 - 1 ))\n\t\tfi\n\telif [[ $1 -lt\
    \ $2 ]]; then\n\t\tif (( $2 % 2 == 0 )); then\n\t\t\techo $2\n\t\telif (( $2 %\
    \ 2 == 1 )); then\n\t\t\techo $(( $2 - 1 ))\n\t\tfi\n\telse\n\t\tif (( $1 % 2\
    \ == 0 )); then\n\t\t\techo $1\n\t\telif (( $1 % 2 == 1 )); then\n\t\t\techo \"\
    -1\"\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    num=$1\n\
    \    low=$1\n    high=$2\n    if [ $high -lt $low ]; then\n        low=$2\n  \
    \      high=$1\n    fi\n    while [ $num -le $high ]; do\n        if [ $((num\
    \ % 2)) -eq 0 ]; then\n            break\n        fi\n        ((num++))\n    done\n\
    \    if [ $num -gt $high ]; then\n        echo \"-1\"\n    else\n        echo\
    \ \"$num\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tnum=0\n\
    \tfor ((i=$1; i<=$2; i++)); do\n\t\tif (( $(($i % 2)) == 0 )); then\n\t\t\tnum=$i\n\
    \t\tfi\n\tdone\n\techo \"$num\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    num1=$1\n\
    \    num2=$2\n    biggest=-1\n    for i in $(seq $num1 $num2); do\n        if\
    \ [[ $i%2 -eq 0 ]]; then\n            if [[ $i -gt $biggest ]]; then\n       \
    \         biggest=$i\n            fi\n        fi\n    done\n    echo $biggest\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # TODO\n\
    \  # This is not a full solution.\n  if [ $1 -eq $2 ]; then\n    if [ $(($1 %\
    \ 2)) -eq 0 ]; then\n      echo $1\n    else\n      echo -1\n    fi\n  else\n\
    \    if [ $1 -gt $2 ]; then\n      choose_num $2 $1\n    else\n      if [ $(($1\
    \ % 2)) -eq 0 ]; then\n        choose_num $(($1 + 2)) $2\n      else\n       \
    \ choose_num $(($1 + 1)) $2\n      fi\n    fi\n  fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ -i x=$1\n  local -i y=$2\n  local result=-1\n  local -i i=$x\n  while [ $i -le\
    \ $y ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n      result=$i\n    fi\n    i+=1\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  max_so_far=-1\n\
    \  for i in $(seq $1 $2); do\n    if [ $((i % 2)) -eq 0 ] && [ $i -gt $max_so_far\
    \ ]; then\n      max_so_far=$i\n    fi\n  done\n  echo $max_so_far\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -lt $2 ]]; then\n        lower=$1\n        upper=$2\n    else\n      \
    \  lower=$2\n        upper=$1\n    fi\n    for i in $(seq $lower $upper); do\n\
    \        if (( $i % 2 == 0 )); then\n            echo $i\n            return\n\
    \        fi\n    done\n    echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\t# TODO:\
    \ implement this function\n\tcounter=0\n\tif [ $1 -le $2 ]\n\tthen\n\t\tfor ((\
    \ i=$1; i<=$2; i++ ))\n\t\tdo\n\t\t\tif [ $((i%2)) -eq 0 ]\n\t\t\tthen\n\t\t\t\
    \tlet counter=counter+1\n\t\t\t\teven_num=$i\n\t\t\tfi\n\t\tdone\n\t\tif [ $counter\
    \ -eq 0 ]\n\t\tthen\n\t\t\techo \"-1\"\n\t\telse\n\t\t\techo $even_num\n\t\tfi\n\
    \telse\n\t\techo \"-1\"\n\tfi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [[\
    \ $(($1 % 2)) -eq 0 ]]; then\n    if [[ $(($2 % 2)) -eq 0 ]]; then\n      if [[\
    \ $1 -lt $2 ]]; then\n        echo $2\n      else\n        echo $1\n      fi\n\
    \    else\n      if [[ $1 -lt $2 ]]; then\n        echo $(($2 - 1))\n      else\n\
    \        echo $1\n      fi\n    fi\n  else\n    if [[ $(($2 % 2)) -eq 0 ]]; then\n\
    \      if [[ $1 -lt $2 ]]; then\n        echo $2\n      else\n        echo $(($1\
    \ + 1))\n      fi\n    else\n      if [[ $1 -lt $2 ]]; then\n        echo $(($2\
    \ - 1))\n      else\n        echo $(($1 + 1))\n      fi\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    for\
    \ num in $(seq $1 $2); do\n        if [[ $((num % 2)) == 0 ]]; then\n        \
    \    echo $num\n            break\n        fi\n    done\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ -z \"$1\" || -z \"$2\" ]]; then\n        echo -1\n        return\n    fi\n\
    \    local num1=\"$1\"\n    local num2=\"$2\"\n    local nums=()\n    local i=0\n\
    \    if [[ $num1 -gt $num2 ]]; then\n        nums[$i]=$num1\n        ((i++))\n\
    \        nums[$i]=$num2\n    else\n        nums[$i]=$num2\n        ((i++))\n \
    \       nums[$i]=$num1\n    fi\n    i=0\n    while [ $i -lt ${#nums[@]} ]; do\n\
    \        local num=${nums[$i]}\n        if [[ $num%2 -eq 0 ]]; then\n        \
    \    echo $num\n            return\n        fi\n        ((i++))\n    done\n  \
    \  echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ \"$1\" -lt \"$2\" ]; then\n        if [ \"$2\" -lt 0 ]; then\n           \
    \ echo \"-1\"\n        elif [ \"$2\" -eq 0 ]; then\n            echo \"0\"\n \
    \       elif [ \"$2\" -eq 1 ]; then\n            echo \"-1\"\n        elif [ \"\
    $2\" -eq 2 ]; then\n            echo \"2\"\n        elif [ \"$2\" -eq 3 ]; then\n\
    \            echo \"2\"\n        elif [ \"$2\" -eq 4 ]; then\n            echo\
    \ \"4\"\n        elif [ \"$2\" -eq 5 ]; then\n            echo \"4\"\n       \
    \ elif [ \"$2\" -eq 6 ]; then\n            echo \"6\"\n        elif [ \"$2\" -eq\
    \ 7 ]; then\n            echo \"6\"\n        elif [ \"$2\" -eq 8 ]; then\n   \
    \         echo \"8\"\n        elif [ \"$2\" -eq 9 ]; then\n            echo \"\
    8\"\n        elif [ \"$2\" -eq 10 ]; then\n            echo \"10\"\n        elif\
    \ [ \"$2\" -eq 11 ]; then\n            echo \"10\"\n        elif [ \"$2\" -eq\
    \ 12 ]; then\n            echo \"12\"\n        elif [ \"$2\" -eq 13 ]; then\n\
    \            echo \"12\"\n        elif [ \"$2\" -eq 14 ]; then\n            echo\
    \ \"14\"\n        elif [ \"$2\" -eq 15 ]; then\n            echo \"14\"\n    \
    \    elif [ \"$2\" -eq 16 ]; then\n            echo \"16\"\n        elif [ \"\
    $2\" -eq 17 ]; then\n            echo \"16\"\n        elif [ \"$2\" -eq 18 ];\
    \ then\n            echo \"18\"\n        elif [ \"$2\" -eq 19 ]; then\n      \
    \      echo \"18\"\n        elif [ \"$2\" -eq 20 ]; then\n            echo \"\
    20\"\n        elif [ \"$2\" -eq 21 ]; then\n            echo \"20\"\n        elif\
    \ [ \"$2\" -eq 22 ]; then\n            echo \"22\"\n        elif [ \"$2\" -eq\
    \ 23 ]; then\n            echo \"22\"\n        elif [ \"$2\" -eq 24 ]; then\n\
    \            echo \"24\"\n        elif [\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwgqrupso.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmpwgqrupso.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local max=\"-1\"\n    for n in $(seq $x $y); do\n\
    \        if [[ \"$(( n % 2 ))\" == \"0\" ]]; then\n            if [[ \"$n\" -gt\
    \ \"$max\" ]]; then\n                max=\"$n\"\n            fi\n        fi\n\
    \    done\n    echo \"$max\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # Write\
    \ your code here\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplrgfwkgc.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmplrgfwkgc.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    x=$1\n\
    \    y=$2\n    if [[ \"$x\" -ge \"$y\" ]]; then\n        echo -1\n    else\n \
    \       for (( i=x; i<=y; i++ )); do\n            if [[ \"$i\"%2 -eq 0 ]]; then\n\
    \                echo $i\n                return\n            fi\n        done\n\
    \        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ -i number=$1\n    local -i upper=$2\n    local -i current_number=$number\n \
    \   local -i largest_even_number=-1\n    # for loops are not exclusive for the\
    \ upper bound\n    # So we need to substract 1 before checking the loop\n    ((upper=upper-1))\n\
    \    while ((current_number <= upper)); do\n        if ((current_number % 2 ==\
    \ 0)); then\n            largest_even_number=$current_number\n        fi\n   \
    \     ((current_number=current_number+1))\n    done\n    echo $largest_even_number\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Fill in your code here. Use the \"return\" keyword to return the correct\n \
    \   # value.\n    # Examples of return statement:\n    # return \"HELLO\"\n  \
    \  # return 13\n    # return -1\n    if [ \"$1\" -lt \"$2\" ]; then\n        while\
    \ (( \"$1\" <= \"$2\" )); do\n            if [ $(( $1 % 2 )) -eq 0 ]; then\n \
    \               echo \"$1\"\n                break\n            fi\n         \
    \   let \"1++\"\n        done\n    else\n        while (( \"$2\" <= \"$1\" ));\
    \ do\n            if [ $(( $2 % 2 )) -eq 0 ]; then\n                echo \"$2\"\
    \n                break\n            fi\n            let \"2++\"\n        done\n\
    \    fi\n    if [ $(( $1 % 2 )) -ne 0 ] && [ $(( $2 % 2 )) -ne 0 ]; then\n   \
    \     echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\t# Check\
    \ that both parameters are integers\n\tif [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]]; then\n\t\t# Set x and y to input parameters\n\t\t# Find the largest even\
    \ number between x and y\n\t\t# If the number is zero or negative, return -1\n\
    \t\tx=$1\n\t\ty=$2\n\t\tfor (( i = y; i >= x; i-- )); do\n\t\t\tif (( $i % 2 ==\
    \ 0 )); then\n\t\t\t\techo $i\n\t\t\t\treturn\n\t\t\tfi\n\t\tdone\n\t\techo -1\n\
    \telse\n\t\techo \"Invalid input\"\n\tfi\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -ge 0 && $2 -ge 0 ]]; then\n        if [[ $1 -le $2 ]]; then\n       \
    \     if [[ $1%2 -eq 0 ]]; then\n                echo $1\n            elif [[\
    \ $2%2 -eq 0 ]]; then\n                echo $2\n            else\n           \
    \     echo -1\n            fi\n        else\n            if [[ $2%2 -eq 0 ]];\
    \ then\n                echo $2\n            elif [[ $1%2 -eq 0 ]]; then\n   \
    \             echo $1\n            else\n                echo -1\n           \
    \ fi\n        fi\n    else\n        echo \"Error: numbers must be non-negative\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  x=$1\n\
    \  y=$2\n  if [ -z \"$x\" ] || [ -z \"$y\" ]; then\n    return -1\n  fi\n  if\
    \ ! [[ \"$x\" =~ ^[0-9]+$ ]]; then\n    return -1\n  fi\n  if ! [[ \"$y\" =~ ^[0-9]+$\
    \ ]]; then\n    return -1\n  fi\n  if (( $x > $y )); then\n    x=${y}\n    y=${x}\n\
    \  fi\n  num=$((x+x%2))\n  for i in $(seq ${num} 2 ${y}); do\n    result=$i\n\
    \  done\n  if [ -z \"$result\" ]; then\n    echo \"-1\"\n  else\n    echo \"$result\"\
    \n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    i=$1\n\
    \    j=$2\n    if [ \"$i\" -gt \"$j\" ]; then\n        n=$((i % 2))\n        m=$((j\
    \ % 2))\n        if [ \"$n\" -eq 0 ]; then\n            echo \"$i\"\n        elif\
    \ [ \"$m\" -eq 0 ]; then\n            echo \"$j\"\n        else\n            echo\
    \ \"-1\"\n        fi\n    else\n        n=$((i % 2))\n        m=$((j % 2))\n \
    \       if [ \"$n\" -eq 0 ]; then\n            echo \"$i\"\n        elif [ \"\
    $m\" -eq 0 ]; then\n            echo \"$j\"\n        else\n            echo \"\
    -1\"\n        fi\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  x=$1\n\
    \  y=$2\n  # The chose even number\n  choose=-1\n  # The biggest distance between\
    \ y and an even number from x to y\n  distance=-1\n  for (( i = x; i <= y; i++\
    \ ))\n  do\n    if [ $(($i % 2)) -eq 0 ]\n    then\n      current_distance=$(($y\
    \ - $i))\n      if [ $current_distance -ge $distance ]\n      then\n        distance=$current_distance\n\
    \        choose=$i\n      fi\n    fi\n  done\n  echo $choose\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Write your code here\n    if [[ $1 -ge $2 ]]; then\n        echo \"-1\"\n  \
    \  else\n        while true; do\n            let num=$1+1\n            if [[ $num\
    \ -gt $2 ]]; then\n                echo \"-1\"\n                break\n      \
    \      fi\n            if [[ $(($num%2)) -eq 0 ]]; then\n                echo\
    \ \"$num\"\n                break\n            fi\n            let num=$num+1\n\
    \        done\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=35 encoding='utf-8'>
  timestamp: 1660021110
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ If either of the numbers are not positive integers, return -1\n    if [[ $1\
    \ -lt 0 || $2 -lt 0 ]]; then\n        echo \"-1\"\n    else\n        # If $1 is\
    \ greater than $2, we have to swap the two numbers,\n        # that is, we need\
    \ to make sure that $1 is always smaller or\n        # equal to $2\n        if\
    \ [[ $1 -gt $2 ]]; then\n            num1=$2\n            num2=$1\n        else\n\
    \            num1=$1\n            num2=$2\n        fi\n        \n        # Check\
    \ if we have an even number in the interval [num1, num2].\n        # If we do,\
    \ return it. If not, return -1.\n        for (( i=$num1; i<=$num2; i++ )); do\n\
    \            if [[ $((i%2)) -eq 0 ]]; then\n                echo \"$i\"\n    \
    \            return\n            fi\n        done\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -gt $2 ]]; then\n        # switch the order\n        choose_num $2 $1\n\
    \    elif [[ $1 -lt 0 || $2 -lt 0 ]]; then\n        echo -1\n    else\n      \
    \  local cur\n        for cur in $(seq $1 $2); do\n            if [[ $((cur %\
    \ 2)) -eq 0 ]]; then\n                echo $cur\n                return\n    \
    \        fi\n        done\n        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ TODO: Complete this function\n    if [[ $1 -eq $2 ]]; then\n        if [[ $1%2\
    \ -eq 0 ]]; then\n            echo $1\n        else\n            echo -1\n   \
    \     fi\n    else\n        start=$1\n        end=$2\n        if [[ $start -gt\
    \ $end ]]; then\n            temp=$start\n            start=$end\n           \
    \ end=$temp\n        fi\n        while [ $start -le $end ]; do\n            if\
    \ [[ $start%2 -eq 0 ]]; then\n                max=$start\n            fi\n   \
    \         ((start++))\n        done\n        if [[ $max ]]; then\n           \
    \ echo $max\n        else\n            echo -1\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Fix the arguments\n    while [[ ! \"$1\" =~ ^[0-9]+$ ]]; do\n        read -p\
    \ \"Enter the first positive integer: \" num1\n        if [[ ! \"$num1\" =~ ^[0-9]+$\
    \ ]]; then\n            echo \"Please enter a positive integer\"\n        else\n\
    \            break\n        fi\n    done\n    while [[ ! \"$2\" =~ ^[0-9]+$ ]];\
    \ do\n        read -p \"Enter the second positive integer: \" num2\n        if\
    \ [[ ! \"$num2\" =~ ^[0-9]+$ ]]; then\n            echo \"Please enter a positive\
    \ integer\"\n        else\n            break\n        fi\n    done\n    while\
    \ [[ \"$num1\" -gt \"$num2\" ]]; do\n        read -p \"The first number is greater\
    \ than the second. Please enter a new second number: \" num2\n        if [[ !\
    \ \"$num2\" =~ ^[0-9]+$ ]]; then\n            echo \"Please enter a positive integer\"\
    \n        else\n            break\n        fi\n    done\n    local var=$num1\n\
    \    # Fix the bigger number to be even\n    if [[ $(($var % 2)) -ne 0 ]]; then\n\
    \        let var++\n    fi\n    # Check for the biggest even number\n    while\
    \ [[ \"$var\" -le \"$num2\" ]]; do\n        if [[ $(($var % 2)) -eq 0 ]]; then\n\
    \            echo \"$var\"\n            break\n        else\n            let var+=2\n\
    \        fi\n    done\n    # If no number was found\n    if [[ \"$var\" -gt \"\
    $num2\" ]]; then\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp13l0zer2.sh: line 41: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [\
    \ $1 -le $2 ]; then\n\t\tlocal min=$1\n\t\tlocal max=$2\n\telse\n\t\tlocal min=$2\n\
    \t\tlocal max=$1\n\tfi\n\t\n\tfor ((i=$max; i>=$min; i--)); do\n\t\tif [ $((i%2))\
    \ -eq 0 ]; then\n\t\t\techo \"$i\"\n\t\t\treturn\n\t\tfi\n\tdone\n\techo \"-1\"\
    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ largest_even\n    local count=$1\n    if [ \"$1\" -gt \"$2\" ]; then\n     \
    \   echo \"-1\"\n        return\n    fi\n    for count in $(seq $1 $2); do\n \
    \       if [ $(( count % 2 )) -eq 0 ]; then\n            largest_even=$count\n\
    \        fi\n    done\n    if [ -z \"$largest_even\" ]; then\n        echo \"\
    -1\"\n    else\n        echo \"$largest_even\"\n    fi\n}\n\ncandidate() {\n \
    \   choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # YOUR\
    \ CODE HERE\n\n  return\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  MIN=\"\
    $1\"\n  MAX=\"$2\"\n  if [[ $MIN -le $MAX ]]; then\n    for (( i=$MAX; i>=$MIN;\
    \ i-- )); do\n      if [[ $((i%2)) -eq 0 ]]; then\n        echo \"$i\"\n     \
    \   break\n      fi\n    done\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ num1=\"$1\"\n  local num2=\"$2\"\n  if [ \"$num1\" -lt \"$num2\" ]; then\n \
    \   if (( num1 % 2 == 0 )); then\n      echo \"$num1\"\n    elif (( num2 % 2 ==\
    \ 0 )); then\n      echo \"$num2\"\n    fi\n  else\n    echo \"-1\"\n  fi\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=$1\n  local y=$2\n  local value=\"-1\"\n  local i\n  for ((i=$x; i<=$y; i++));\
    \ do\n    if [[ \"$i\"%2 -eq 0 ]]; then\n      value=$i\n    fi\n  done\n  echo\
    \ \"$value\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Write your implementation here.\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpffh9xcpe.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmpffh9xcpe.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    for\
    \ number in $(seq $1 $2); do\n        if [[ $(($number % 2)) == 0 ]]; then\n \
    \           echo $number\n            return\n        fi\n    done\n    echo -1\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -gt $2 ]; then\n        echo -1\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n\
    \        echo $1\n    else\n        choose_num $(( $1 + 1 )) $2\n    fi\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  x=$1\n\
    \  y=$2\n  if [ \"$x\" -gt \"$y\" ]; then\n    # Error case: x > y\n    return\
    \ -1\n  fi\n  a=1\n  while [ \"$(( $x % 2 ))\" -ne 0 ] && [ \"$x\" -le \"$y\"\
    \ ]; do\n    # x is odd, increment x by 1\n    x=$(( $x + 1 ))\n  done\n  # x\
    \ is even\n  b=$x\n  while [ \"$x\" -le \"$y\" ]; do\n    if [ \"$(( $x % 2 ))\"\
    \ -eq 0 ]; then\n      # x is even, therefore assign the biggest even number in\
    \ range to b\n      b=$x\n    fi\n    x=$(( $x + 1 ))\n  done\n  if [ \"$b\" -le\
    \ \"$y\" ]; then\n    # b has been assigned the biggest even number in range\n\
    \    echo \"$b\"\n  else\n    # Error case: no even number in range\n    echo\
    \ \"-1\"\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ -z $1 || -z $2 ]]; then\n        echo -1\n        return\n    fi\n    if\
    \ [[ \"$1\" -eq \"$2\" ]]; then\n        if [[ \"$1\"%2 -eq 0 ]]; then\n     \
    \       echo \"$1\"\n        else\n            echo -1\n        fi\n        return\n\
    \    fi\n    # If the numbers are different then get the higher one.\n    local\
    \ higher_num=$(echo \"$1 $2\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    # Check\
    \ if the higher number is even, if so return it.\n    if [[ \"$higher_num\"%2\
    \ -eq 0 ]]; then\n        echo \"$higher_num\"\n        return\n    fi\n    #\
    \ Otherwise subtract one from it and try again.\n    # If the result is less than\
    \ the lower number return -1.\n    local new_num=$(( \"$higher_num\" - 1 ))\n\
    \    if [[ \"$new_num\" -lt \"$1\" ]]; then\n        echo -1\n        return\n\
    \    fi\n    choose_num \"$1\" \"$new_num\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -ge $2 ]; then\n        # $1 and $2 are not in the correct order\n    \
    \    echo \"-1\"\n    else\n        # $1 < $2, so increment $1 until $1 is greater\
    \ than $2\n        number=$1\n        while [ $number -le $2 ]; do\n         \
    \   # If number is even, it is the biggest even number in [$1, $2]\n         \
    \   if [ $((number % 2)) == 0 ]; then\n                echo \"$number\"\n    \
    \            return\n            fi\n            number=$((number + 1))\n    \
    \    done\n        # If we reach this point, then number is odd and $2 is even,\n\
    \        # so return $2\n        echo \"$2\"\n    fi\n}\n\ncandidate() {\n   \
    \ choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\"\
    ) = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ \"$2\" -le \"$1\" ]]; then\n        echo -1\n    else\n        for (( i=\"\
    $1\"; i<=\"$2\"; i++ )); do\n            if [[ $(( i % 2 )) -eq 0 ]]; then\n \
    \               echo $i\n                return\n            fi\n        done\n\
    \        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -le $2 ]; then\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo\
    \ $1\n        else\n            choose_num $(( $1 + 1 )) $2\n        fi\n    else\n\
    \        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ $1 -lt $2 ]; then\n        start=$1\n        end=$2\n    else\n        start=$2\n\
    \        end=$1\n    fi\n    output=$(seq -s \" \" $start $end | awk '{if ($1\
    \ % 2 == 0) {print $1; exit}}')\n    if [ -z \"$output\" ]; then\n        echo\
    \ \"-1\"\n    else\n        echo \"$output\"\n    fi\n}\n\ncandidate() {\n   \
    \ choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\"\
    ) = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [\
    \ $1 -gt $2 ]; then\n\t\techo \"-1\"\n\telif [ $1 -eq $2 ]; then\n\t\tif [ $1\
    \ -eq 0 ]; then\n\t\t\techo \"-1\"\n\t\telif [ $1 -ne 0 ] && [ $1%2 -eq 0 ]; then\n\
    \t\t\techo \"$1\"\n\t\telse\n\t\t\techo \"-1\"\n\t\tfi\n\telse\n\t\tcounter=$1\n\
    \t\twhile [ $counter -le $2 ]; do\n\t\t\tif [ $counter%2 -eq 0 ]; then\n\t\t\t\
    \tbreak\n\t\t\tfi\n\t\t\t((counter++))\n\t\tdone\n\t\tif [ $counter -gt $2 ];\
    \ then\n\t\t\techo \"-1\"\n\t\telse\n\t\t\techo \"$counter\"\n\t\tfi\n\tfi\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7g0tsaso.sh: line 27: [: 12%2: integer expression expected

    /tmp/tmp7g0tsaso.sh: line 27: [: 13%2: integer expression expected

    /tmp/tmp7g0tsaso.sh: line 27: [: 14%2: integer expression expected

    /tmp/tmp7g0tsaso.sh: line 27: [: 15%2: integer expression expected

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    #\
    \ Write your answer between the lines.\n    # --------------------------------------\n\
    \    # \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\
    \u2193\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpubcwrwmw.sh: line 17: syntax error near unexpected token `}''

    /tmp/tmpubcwrwmw.sh: line 17: `}''

    '
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [\
    \ $1 -ge $2 ]; then\n    echo \"-1\"\n  else\n    for i in $(seq $1 2 $2); do\n\
    \      echo $i\n    done | tail -n 1\n  fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    counter=$1\n\
    \    while [ $counter -le $2 ]; do\n        if [ $((counter % 2)) -eq 0 ]; then\n\
    \            echo $counter\n            break\n        fi\n        counter=$((counter\
    \ + 1))\n    done\n    if [ $counter -gt $2 ]; then\n        echo \"-1\"\n   \
    \ fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ $1 -le $2 ]]; then\n        for i in $(seq $1 $2); do\n            if [[\
    \ $((i % 2)) -eq 0 ]]; then\n                echo $i\n                return\n\
    \            fi\n        done\n    fi\n    echo -1\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tif [\
    \ $1 -le $2 ]; then\n\t\tif (( $1 % 2 == 0 )); then\n\t\t\tif (( $2 % 2 == 0 ));\
    \ then\n\t\t\t\techo $2\n\t\t\telse\n\t\t\t\techo $(( $2 - 1 ))\n\t\t\tfi\n\t\t\
    else\n\t\t\tif (( $2 % 2 == 0 )); then\n\t\t\t\techo $2\n\t\t\telse\n\t\t\t\t\
    echo $(( $2 - 1 ))\n\t\t\tfi\n\t\tfi\n\telse\n\t\techo \"-1\"\n\tfi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    while\
    \ [ $1 -le $2 ]; do\n        if [ $(($1 % 2)) -eq 0 ]; then\n            result=$1\n\
    \        fi\n        let \"1++\"\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=27 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660021110
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # initialise\
    \ output to -1, will be overwritten if there's any even int.\n  output=-1\n\n\
    \  # if $1 is even, and is > $2, then it is output\n  if [[ $(($1 % 2)) -eq 0\
    \ ]] && [[ $1 -gt $2 ]]; then\n    output=$1\n  fi\n\n  # if $2 is even, and is\
    \ > $1, then it is output\n  if [[ $(($2 % 2)) -eq 0 ]] && [[ $2 -gt $1 ]]; then\n\
    \    output=$2\n  fi\n\n  # iterate from $1 (x) to $2 (y) in steps of 1, checking\
    \ if there's an even\n  # number, and outputting it if it's greater than the last\
    \ even number found\n  for (( i=$1; i<=$2; i++ )); do\n    if [[ $(($i % 2)) -eq\
    \ 0 ]] && [[ $i -gt $output ]]; then\n      output=$i\n    fi\n  done\n\n  echo\
    \ $output\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [ -z \"$1\" ] || [ -z \"$2\" ]; then\n        echo \"Undefined\"\n    elif [\
    \ $1 -gt $2 ]; then\n        echo \"-1\"\n    else\n        for i in $(seq $1\
    \ $2); do\n            if [ $(($i % 2)) -eq 0 ]; then\n                echo $i\n\
    \                break\n            fi\n        done\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  start=$1\n\
    \  end=$2\n  if [ $start -le $end ]; then\n    for n in $(seq $start $end); do\n\
    \      if [ $((n % 2)) -eq 0 ]; then\n        echo \"$n\"\n        return 0\n\
    \      fi\n    done\n  fi\n  echo \"-1\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ result=-1\n\n  for number in $(seq $1 $2); do\n    if [ $(($number % 2)) -eq\
    \ 0 ]; then\n      result=$number\n    fi\n  done\n\n  echo $result\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    [\
    \ $1 -ge $2 ] && return -1\n    local i\n    for ((i = $1; i <= $2; i++)); do\n\
    \        [ $((i % 2)) -eq 0 ] && echo \"$i\" && return\n    done\n    echo \"\
    -1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local i\n    if [ $x -lt $y ]; then\n        for\
    \ ((i=$x; i<=$y; i++)); do\n            if [ $((i%2)) -eq 0 ]; then\n        \
    \        echo $i\n                return\n            fi\n        done\n    elif\
    \ [ $x -gt $y ]; then\n        for ((i=$x; i>=$y; i--)); do\n            if [\
    \ $((i%2)) -eq 0 ]; then\n                echo $i\n                return\n  \
    \          fi\n        done\n    else\n        if [ $((x%2)) -eq 0 ]; then\n \
    \           echo $x\n            return\n        fi\n    fi\n    echo -1\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    [\
    \ \"$1\" -gt \"$2\" ] && return 1\n    if [ \"$(($1 % 2))\" -eq 0 ]; then\n  \
    \      echo \"$1\"\n    else\n        echo \"$(($1 + 1))\"\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    if [[ $x -gt $y ]]; then\n        echo \"-1\"\n  \
    \  elif [[ $x -eq $y ]]; then\n        if [[ $x%2 -eq 0 ]]; then\n           \
    \ echo \"$x\"\n        else\n            echo \"-1\"\n        fi\n    else\n \
    \       local z=$x\n        while [[ $z -le $y ]]; do\n            if [[ $z%2\
    \ -eq 0 ]]; then\n                echo \"$z\"\n                break\n       \
    \     fi\n            ((z++))\n        done\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n\tlocal\
    \ x=$1\n\tlocal y=$2\n\tlocal ret=-1\n\twhile ((x <= y)); do\n\t\tif (((x % 2)\
    \ == 0)); then\n\t\t\tret=$x\n\t\tfi\n\t\tx=$((x + 1))\n\tdone\n\techo $ret\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=$1\n  local y=$2\n  local res=$(echo $((($x+$y)/2)))\n  if [ $(($res % 2))\
    \ -eq 0 ]; then\n    if [ $res -lt $x ]; then\n      echo -1\n    else\n     \
    \ echo $res\n    fi\n  else\n    local res=$(echo $((($x+$y)/2)))\n    if [ $(($res\
    \ % 2)) -eq 0 ]; then\n      if [ $res -gt $y ]; then\n        echo -1\n     \
    \ else\n        echo $res\n      fi\n    else\n      echo -1\n    fi\n  fi\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  for\
    \ i in $(seq $1 $2); do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  number=$(echo\
    \ $(($1+1)) | awk '{print $1%2}')\n  if [ $number -eq 0 ]; then\n    #Both numbers\
    \ are even\n    if [ $1 -gt $2 ]; then\n      echo $2\n    else\n      echo $1\n\
    \    fi\n  else\n    #First number is odd\n    if [ $1 -gt $2 ]; then\n      echo\
    \ $(echo $(($2-1)) | awk '{print $1%2}')\n      if [ $? -eq 0 ]; then\n      \
    \  echo $2-1\n      else\n        echo $2\n      fi\n    else\n      echo $(echo\
    \ $(($1+1)) | awk '{print $1%2}')\n      if [ $? -eq 0 ]; then\n        echo $1+1\n\
    \      else\n        echo $1\n      fi\n    fi\n  fi\n}\n\ncandidate() {\n   \
    \ choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\"\
    ) = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    if\
    \ [[ ! \"$1\" =~ ^[0-9]+$ ]]\n    then\n        echo \"Argument 1, $1, is not\
    \ an integer\"\n        return 1\n    fi\n    if [[ ! \"$2\" =~ ^[0-9]+$ ]]\n\
    \    then\n        echo \"Argument 2, $2, is not an integer\"\n        return\
    \ 1\n    fi\n    if [[ $1 -gt $2 ]]\n    then\n        echo \"Argument 1, $1,\
    \ is greater than Argument 2, $2\"\n        return 1\n    fi\n    for i in $(seq\
    \ $1 $2)\n    do\n        if [[ $(expr $i % 2) -eq 0 ]]\n        then\n      \
    \      echo $i\n            return 0\n        fi\n    done\n    echo \"-1\"\n\
    \    return 0\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  # Function\
    \ goes here\n  return $(( ($1 + $2 - 1) / 2 ))\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [[\
    \ $1 -lt $2 ]]; then\n    # -i flag casts to integer\n    for (( i=$1; i<=$2;\
    \ i++ )); do\n      if [[ $((i%2)) -eq 0 ]]; then\n        echo \"$i\"\n     \
    \   return\n      fi\n    done\n  fi\n  echo \"-1\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  if [\
    \ \"$1\" -gt \"$2\" ]; then\n    echo \"-1\"\n  elif [ $(($1 % 2)) -ne 0 ]; then\n\
    \    choose_num $(($1 + 1)) $2\n  else\n    echo \"$1\"\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 0
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ -i x=\"$1\" y=\"$2\" even_num\n  for (( i=x; i<=y; i++ ))\n  do\n    if (( i%2\
    \ == 0 ))\n    then\n      even_num=$i\n    fi\n  done\n  if [[ -z $even_num ]]\n\
    \  then\n    echo -1\n  else\n    echo $even_num\n  fi\n}\n\ncandidate() {\n \
    \   choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  declare\
    \ -i x\n  declare -i y\n  if [[ $1 -gt $2 ]]; then\n    x=$2\n    y=$1\n  else\n\
    \    x=$1\n    y=$2\n  fi\n  declare -i i\n  i=$x\n  while [[ $i -le $y ]]; do\n\
    \    if [[ $(( $i % 2 )) -eq 0 ]]; then\n      echo $i\n      return\n    fi\n\
    \    (( i++ ))\n  done\n  echo -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  count=0\n\
    \  if [ $1 -gt $2 ]; then\n    for i in $(seq $2 $1); do\n      if [ $((i%2))\
    \ -eq 0 ]; then\n        count=$((count+1))\n      fi\n    done\n  else\n    for\
    \ i in $(seq $1 $2); do\n      if [ $((i%2)) -eq 0 ]; then\n        count=$((count+1))\n\
    \      fi\n    done\n  fi\n  if [ $count -gt 0 ]; then\n    if [ $1 -gt $2 ];\
    \ then\n      for i in $(seq $2 $1); do\n        if [ $((i%2)) -eq 0 ]; then\n\
    \          echo $i\n          break\n        fi\n      done\n    else\n      for\
    \ i in $(seq $1 $2); do\n        if [ $((i%2)) -eq 0 ]; then\n          echo $i\n\
    \          break\n        fi\n      done\n    fi\n  else\n    echo \"-1\"\n  fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021105

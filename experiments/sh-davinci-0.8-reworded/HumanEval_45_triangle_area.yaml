name: HumanEval_45_triangle_area
language: sh
prompt: "#!/bin/bash\n# Given length of a side and high return area for a triangle.\n\
  # >>> $(triangle_area \"5\" \"3\")\n# \"7.5\"\n#\n# $1 is an integer\n# $2 is an\
  \ integer\ntriangle_area() {\n"
tests: "}\n\ncandidate() {\n    triangle_area \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5\" \"3\") = \"7.5\" ]]\n    [[ $(candidate \"2\" \"2\") =\
  \ \"2.0\" ]]\n    [[ $(candidate \"10\" \"8\") = \"40.0\" ]]\n}\n\nrun_test"
completions: ["    local side=\"$1\"\n    local high=\"$2\"\n    echo \"$(bc <<< \"\
    scale=3; $side * $high / 2\")\"", '    echo "$1 * $2 / 2" | bc -l', '    echo
    "$(($1 * $2)) / 2" | bc -l', '  printf "%.1f" $(echo "scale=10;($1 * $2) / 2"
    | bc)', '    echo "scale=2;$1 * $2 / 2" | bc', '  bc -l <<< "scale=2;($1*$2)/2"',
  '  echo "$(echo "($1*$2)/2" | bc -l)"', "    local A=$1\n    local H=$2\n    echo\
    \ \"$(echo \"$A * $H\" | bc -l) / 2\" | bc -l", "    # * Using bc command\n  \
    \  # r=`echo \"scale=1; (1/2)*$1*$2\" | bc`\n    # echo $r\n\n    # * Using awk\
    \ command\n    echo $(awk \"BEGIN {print (1/2)*$1*$2}\")", "  test $# -eq 2 ||\
    \ error \"triangle_area takes two arguments\" 1\n  local a=$1\n  local h=$2\n\
    \  echo \"scale=1; 0.5 * $a * $h\" | bc", "    # if we receive a negative number\n\
    \    if [ $1 -lt 0 ] || [ $2 -lt 0 ]; then\n        echo -1\n    else\n      \
    \  echo $(echo \"scale=3; $1 * $2 / 2\" | bc)\n    fi", '  echo "$(($1 * $2 /
    2))"', '    echo "scale=1;($1 * $2) / 2" | bc', "    if ! [[ $1 =~ ^[0-9]+$ ]];\
    \ then\n        echo \"error: not an integer\" >&2\n        return 1\n    fi\n\
    \    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"error: not an integer\" >&2\n\
    \        return 1\n    fi\n    echo $(echo \"$1*$2/2\" | bc -l)", "    let \"\
    area=($1*$2)/2\"\n    echo \"$area\"", '    echo "$(bc <<< "scale=2; (1/2) * $1
    * $2")"', "  local area\n  # Use shell's eval builtin to evaluate expression\n\
    \  # $(cmd) syntax is a command substitution\n  area=$(eval \"$1 * $2 / 2\")\n\
    \  echo \"$area\"", '  bc <<< "scale=2;($1 * $2)/2"', "  local triangle_side=$1\n\
    \  local triangle_high=$2\n  # float(string $s1)\n  # float(string $s2)\n  # float(string\
    \ $s3)\n  # float(string $s4)\n  local float_convertor='^[0-9]+([.][0-9]+)?$'\n\
    \  if ! [[ \"$triangle_side\" =~ $float_convertor ]]; then\n    return 1\n  fi\n\
    \  if ! [[ \"$triangle_high\" =~ $float_convertor ]]; then\n    return 1\n  fi\n\
    \  awk -v area_side=\"$triangle_side\" -v area_high=\"$triangle_high\" '\n   \
    \ BEGIN {\n      printf \"%.1f\", area_side * area_high / 2\n    }\n  '", "  local\
    \ side=$1\n  local high=$2\n  bc <<< \"scale=2; $side * $high / 2\""]
stop_tokens:
- "\n}"

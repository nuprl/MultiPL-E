name: HumanEval_51_remove_vowels
language: sh
prompt: "#!/bin/bash\n# remove_vowels is a function that takes string and returns\
  \ string without vowels.\n# >>> $(remove_vowels \"\")\n# \"\"\n# >>> $(remove_vowels\
  \ \"abcdef\")\n# \"bcdf\"\n# >>> $(remove_vowels \"aaaaa\")\n# \"\"\n# >>> $(remove_vowels\
  \ \"aaBAA\")\n# \"B\"\n# >>> $(remove_vowels \"zbcd\")\n# \"zbcd\"\n#\n# $1 is a\
  \ string\nremove_vowels() {\n"
tests: "}\n\ncandidate() {\n    remove_vowels \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"abcdef\\nghijklm\") =\
  \ \"bcdf\\nghjklm\" ]]\n    [[ $(candidate \"fedcba\") = \"fdcb\" ]]\n    [[ $(candidate\
  \ \"eeeee\") = \"\" ]]\n    [[ $(candidate \"acBAA\") = \"cB\" ]]\n    [[ $(candidate\
  \ \"EcBOO\") = \"cB\" ]]\n    [[ $(candidate \"ybcd\") = \"ybcd\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | tr -d '[aeiouAEIOU]'", "  echo $1 | sed 's/[aeiouAEIOU]//g'",
  "  echo $(echo \"$1\" | sed 's/[aeiouAEIOU]//g')", "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  '  echo "${1//[aeiou]}"', '    echo "$1" | tr -d "aeiouAEIOU"', "  local vowels=\"\
    aAeEiIoOuU\"\n  local input=\"$1\"\n  local output=\"\"\n  local index=0\n  while\
    \ [[ \"${input:$index:1}\" != \"\" ]]; do\n    char=\"${input:$index:1}\"\n  \
    \  if ! echo \"$vowels\" | grep -q \"$char\"; then\n      output=\"$output$char\"\
    \n    fi\n    index=$((index + 1))\n  done\n  echo \"$output\"", '  echo "${1//[aeiouAEIOU]/}"',
  "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    # Put your code here\n    # You\
    \ are not allowed to call any other external program, e.g. sed, awk or grep.\n\
    \    # To remove the vowels, replace all occurrences of vowels with \"\"\n   \
    \ # Make sure that the function returns the new string\n    # Since we are not\
    \ allowed to call any other external program, we need to come up with\n    # a\
    \ way to identify the vowels.\n    # Since strings are basically arrays of characters,\
    \ we can do an if statement to identify\n    # if a character is a vowel.\n  \
    \  # The vowels to look for are: a, e, i, o, u.\n    # According to the Bash Reference\
    \ Manual (https://www.gnu.org/software/bash/manual/bash.html),\n    # the following\
    \ is the syntax for an if statement:\n    # if list; then list; [ elif list; then\
    \ list; ] ... [ else list; ] fi\n    # So for example, if we want to output \"\
    Even\" if x is even and \"Odd\" if x is odd, we can use:\n    # x=5\n    # if\
    \ (( $x % 2 == 0 )); then\n    #     echo \"Even\"\n    # else\n    #     echo\
    \ \"Odd\"\n    # fi\n    # For the purposes of this assignment, do not worry about\
    \ the curly braces.\n    # Using the example above, modify the if statement to\
    \ identify the vowels.\n    # You can make use of the $1 variable.\n    # Hint:\
    \ You can use the -eq comparison operator to compare the ascii value of the two\
    \ characters.\n    # You will also need to use double parentheses (e.g. (( ))).\n\
    \    # Hint: For example, the following will convert a string to an array:\n \
    \   # ARRAY=($STRING)\n    # Hint: It may be a good idea to use a for loop to\
    \ loop through each character of the string.\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n        # If the character is a vowel, output the remaining string.\n  \
    \      # Else, output the same character\n        if (( ${1:$i:1} == 97 )) ||\
    \ (( ${1:$i:1} == 101 )) || (( ${1:$", "\techo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  '    echo "$1" | tr -d "[aeiouAEIOU]"', "    if [ $# -eq 0 ]; then\n        echo\
    \ \"usage: $0 <string>\"\n        return\n    fi\n    local vowels=(a e i o u)\n\
    \    local str=$1\n    local no_vowels=\"\"\n    for ((i=0; i<${#str}; i++));\
    \ do\n        local chr=${str:$i:1}\n        if [[ ! ${vowels[*]} =~ $chr ]];\
    \ then\n            no_vowels+=$chr\n        fi\n    done\n    echo $no_vowels",
  "    if [ $# -lt 1 ]; then\n        return\n    fi\n    echo $1 | sed 's/[aeiouAEIOU]//g'",
  '  echo "${1//[aeiouAEIOU]/}"', "  echo $1 | sed -E 's/[aeiouAEIOU]//g'", "\t# replace\
    \ vowels with ''\n\techo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "    echo \"$1\"\
    \ | sed -E 's/([aeiou])//g'", "  s=$1\n  echo \"$s\" | sed -e 's/[aoeiu]//gi'",
  "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "\techo \"$1\" | sed -E 's/[aeiou]//g'",
  "    echo \"$1\" | tr -d 'aeiouAEIOU'", "    if [[ \"$1\" == \"\" ]]; then\n   \
    \     # there is no input\n        echo \"\"\n    else\n        # there is input\n\
    \        echo \"$1\" | tr -d 'aAeEiIoOuU'\n    fi", "    echo $1 | sed 's/[aeiouAEIOU]//g'",
  "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "    echo $1 | sed -e 's/a//g' -e\
    \ 's/e//g' -e 's/i//g' -e 's/o//g' -e 's/u//g'", "  echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  '  echo $1 | tr -d aeiouAEIOU', "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  "  echo \"$1\" | sed -e 's/a//g' -e 's/e//g' -e 's/i//g' -e 's/o//g' -e 's/u//g'",
  "    echo $1 | sed -e 's/[aAeEiIoOuU]//g'", "\techo $1 | sed 's/[aeiouAEIOU]//g'",
  '    echo "${1//[aeiouAEIOU]}"', "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'", " \
    \ local str=\"$1\"\n  echo \"$str\" | sed 's/[aeiouAEIOU]//g'", '    echo "${1//[aeiouAEIOU]}"',
  "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "  # your code here\n  sed 's/[aeiouAEIOU]//g'<<<\
    \ $1", "  echo $(echo \"$1\" | sed 's/[aeiouAEIOU]//g')", "    echo \"$1\" | tr\
    \ -d 'aeiouAEIOU'", "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "  local result=$(echo\
    \ \"$1\" | sed -e 's/[aeiouAEIOU]//g')\n  echo \"$result\"", '  echo "${1//[aeiouAEIOU]/}"',
  "    echo $1 | tr -d 'aeiouAEIOU'", "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  '  echo "${1//[aeiou]}"', '    echo "$1" | tr -d "aeiouAEIOU"', "    echo \"$1\"\
    \ | sed -e 's/[aeiouAEIOU]//g'", "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", " \
    \   local result=\"$1\"\n    result=\"${result//[aA]}\"\n    result=\"${result//[eE]}\"\
    \n    result=\"${result//[iI]}\"\n    result=\"${result//[oO]}\"\n    result=\"\
    ${result//[uU]}\"\n    echo \"$result\"", "    echo $1 | sed -e 's/[aeiouAEIOU]//g'",
  '  echo "$1" | tr -d "aeiouAEIOU"', "    echo \"$1\" | sed -e 's/a//g' -e 's/e//g'\
    \ -e 's/i//g' -e 's/o//g' -e 's/u//g'", "  echo $1 | sed -e 's/[aeiouAEIOU]//g'",
  "    echo $1 | sed -e 's/[aeiouAEIOU]//g'", "  #!!! Do not change this code\n  echo\
    \ $1 | sed -e 's/[aeiouAEIOU]//g'", "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  "\techo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "  local str=\"$1\"\n  echo \"$str\"\
    \ | sed 's/[aeiouAEIOU]//g'", "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "  echo\
    \ \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo \"$1\" | tr -d 'aeiouAEIOU'", '    echo
    "${1//[aeiouAEIOU]/}"', "  # *** write your solution here ***\n  echo $1 | tr\
    \ -d \"[aeiouAEIOU]\"", "    local result=\"\"\n    for ((i=0; i<${#1}; i++));\
    \ do\n        [[ \"${1:$i:1}\" =~ [^aeiouAEIOU] ]] && result=\"$result${1:$i:1}\"\
    \n    done\n    echo \"$result\"", "  echo $1 | tr -d '[aeiou]'", "  echo \"$1\"\
    \ | sed 's/[aeiouAEIOU]//g'", "    echo $1 | sed 's/[aeiouAEIOU]//g'", "  s=$1\n\
    \  echo ${s//[aeiou]/}", "  _remove_vowels_REPLACEMENT_STRING=\"${1//[aeiouAEIOU]/}\"\
    \n  echo \"${_remove_vowels_REPLACEMENT_STRING}\"", "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  "  if [[ -z \"$1\" ]]; then\n    echo \"\"\n  else\n    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'\n\
    \  fi", '  echo "$1" | sed -E "s/([aeiou]|[AEIOU])//g"', "    echo $1 | sed -e\
    \ 's/[aeiouAEIOU]//g'", "  echo $1 | sed -E 's/[aeiou]//g'", "    local str=\"\
    $1\"\n    str=${str//[aeiouAEIOU]/}\n    echo $str", "    if [ -z \"$1\" ]; then\n\
    \        echo \"\"\n    elif [[ \"$1\" =~ ^[AaEeIiOoUu]$ ]]; then\n        echo\
    \ \"\"\n    else\n        echo \"${1:0:1}$(remove_vowels \"${1:1}\")\"\n    fi",
  "\techo \"${1//[aeiouAEIOU]/}\"", "\techo $1 | tr -d 'aeiouAEIOU'", "  if [[ $#\
    \ -ne 1 ]]; then\n    return 1\n  fi\n  if [[ $1 == \"\" ]]; then\n    echo \"\
    \"\n    return 0\n  fi\n  echo \"$1\" | tr -d \"[aeiouAEIOU]\"", "    local string=\"\
    $1\"\n    echo \"${string//[aeiou]/}\"", "    echo $1 | sed 's/[aeiouAEIOU]//g'",
  "  if [ $# -lt 1 ]; then\n    echo \"remove_vowels() requires 1 arguments: string\"\
    \n    return 1\n  fi\n  echo \"$1\" | tr -d 'aeiouAEIOU'", "    if [ $# -eq 0\
    \ ]; then\n        echo \"\"\n    else\n        echo $1 | sed 's/[aeiouAEIOU]//g'\n\
    \    fi", "  local vowels=\"aeiouAEIOU\"\n  local s=\"\"\n  local c=\"\"\n  local\
    \ j=\"\"\n  s=\"$1\"\n  for ((i=0; i<${#s}; i++)); do\n    c=\"${s:$i:1}\"\n \
    \   for ((j=0; j<${#vowels}; j++)); do\n      if [ \"$c\" == \"${vowels:$j:1}\"\
    \ ]; then\n        c=\"\"\n        break\n      fi\n    done\n    s=\"$s$c\"\n\
    \  done\n  s=\"${s:${#1}}\"\n  echo \"$s\"", "  sed -e 's/a//g' -e 's/e//g' -e\
    \ 's/i//g' -e 's/o//g' -e 's/u//g' -e 's/A//g' -e 's/E//g' -e 's/I//g' -e 's/O//g'\
    \ -e 's/U//g' <<< \"$1\"", '  echo "$1" | tr -d "aeiouAEIOU"', "  echo $1 | sed\
    \ -e 's/[aAeEiIoOuU]//g'", "  echo \"$1\" | sed -e 's/[aAeEiIoOuU]//g'", "   \
    \ echo $1 | tr -d '[aeiou]'", '  echo "${1//[aeiou]}"', '    echo "${1//[aeiou]}"',
  "    echo $1 | sed 's/[aeiouAEIOU]//g'", "  if [ -z \"$1\" ]; then\n    echo \"\"\
    \n  else\n    echo \"$1\" | sed 's/[aeiouAEIOU]//g'\n  fi", "    local string=$1\n\
    \    echo $string | sed -E \"s/[aeiouAEIOU]//g\"", "    tr -d 'aeiouAEIOU' <<<\
    \ $1", "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "  printf \"%s\" \"$1\" |\
    \ sed 's/\\(a\\|e\\|i\\|o\\|u\\)//g'", "\techo \"$1\" | sed 's/a//g' | sed 's/e//g'\
    \ | sed 's/i//g' | sed 's/o//g' | sed 's/u//g'", '    echo "${1//[aeiou]}"', " \
    \ echo $1 | sed -e 's/a//g' -e 's/e//g' -e 's/i//g' -e 's/o//g' -e 's/u//g'",
  "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "\techo $(echo $1 | sed 's/[aoeiuAOEIU]//g')",
  "    if [ -z \"$1\" ]; then\n        return\n    fi\n    # A list of vowels:\n \
    \   # http://www.macmillandictionary.com/thesaurus-category/british/a-list-of-vowels\n\
    \    echo \"$1\" | sed -e 's/a//g' -e 's/e//g' -e 's/i//g' -e 's/o//g' -e 's/u//g'\
    \ -e 's/A//g' -e 's/E//g' -e 's/I//g' -e 's/O//g' -e 's/U//g'", "    echo $1 |\
    \ tr -d '[aeiouAEIOU]'", "  echo \"$1\" | sed -e 's/a//g' -e 's/e//g' -e 's/i//g'\
    \ -e 's/o//g' -e 's/u//g'", "    local original_string=$1\n    local new_string=${original_string//[aeiouAEIOU]/}\n\
    \    echo $new_string", "  echo \"$1\" | sed 's/\\(a\\|e\\|i\\|o\\|u\\)//g'",
  "\techo \"$1\" | sed -E 's/[aeiouAEIOU]//g'", "  echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  "    echo $1 | sed 's/[aeiouAEIOU]//g'", "    echo $1 | tr -cd '[:alpha:]' | tr\
    \ -d '[aeiouAEIOU]'", "  # write your code here\n  echo $1 | tr -d 'aeiouAEIOU'",
  "  echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  "    echo $1 | tr -d 'aeiouAEIOU'", "  echo $1 | tr -d 'aeiouAEIOU'", "    echo\
    \ \"$1\" | tr -d '[aeiou]'", "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "\t\
    tr -d 'aeiouAEIOU' <<< $1", "  echo $1 | sed 's/[aeiouAEIOU]//g'", '    echo "${1//[aeiouAEIOU]/}"',
  "    local str=${1//[aeiou]/}\n    echo $str", '    echo $1 | tr -d aeiouAIEOU',
  '  echo "$1" | tr -d "aeiouAEIOU"', "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  '  echo "$1" | tr -d "aeiouAEIOU"', '  echo "${1//[aeiouAEIOU]/}"', "\tvowels=\"\
    aeiouAEIOU\"\n\tstring=$1\n\tfor v in $vowels; do\n\t\tstring=$(echo $string |\
    \ sed \"s/$v//g\")\n\tdone\n\techo $string", '    echo $1 | tr -d [aeiouAEIOU]',
  "    # Remove all vowels\n    echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "\techo \"\
    $1\" | sed 's/[aeiouAEIOU]//g'", '  echo "$1" | tr -d aeiouAEIOU;', "\techo $1\
    \ | sed -e 's/[aeiouAEIOU]//g'", "    # TODO:\n    return", "    local str=\"\
    $1\"\n    echo \"$str\" | sed 's/[aeiouAEIOU]//g'", "  sed 's/[aeiouAEIOU]//g'\
    \ <<< \"$1\"", "    echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo $1 | sed\
    \ 's/[aeiouAEIOU]//g'", "  echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "  local\
    \ ret=\"\"\n  local vowels=aeiouAEIOU\n  local i\n  for ((i=0; i<${#1}; i++));\
    \ do\n    if [[ $vowels != *${1:$i:1}* ]]; then\n      ret+=${1:$i:1}\n    fi\n\
    \  done\n  echo \"$ret\"", "\techo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo\
    \ \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "    echo \"$1\" | tr -d 'aeiouAEIOU'",
  "    local no_vowels=${1//[aeiou]/}\n    echo $no_vowels", "    echo \"$1\" | sed\
    \ 's/[aeiouAEIOU]//g'", "    echo \"$1\" | sed -E 's/([aeiou])//g'", "    if [[\
    \ -z \"$1\" ]]; then\n        echo \"\"\n    else\n        echo \"$1\" | sed -e\
    \ 's/[aeiouAEIOU]//g'\n    fi", "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  '  echo "${1//[aeiou]}"', "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo $1\
    \ | sed -e 's/[aeiouAEIOU]//g'", "  # TODO\n  echo \"$1\" | tr -d '[aeiouAEIOU]'",
  '  echo "${1//[aeiou]}"', "    echo $1 | sed 's/[aeiouAEIOU]//g'", "  echo \"$1\"\
    \ | sed -e 's/a//g' -e 's/e//g' -e 's/i//g' -e 's/o//g' -e 's/u//g'", "  local\
    \ str=\"$1\"\n  str=${str//[aeiouAEIOU]/}\n  echo \"$str\"", "  echo \"$1\" |\
    \ sed -e 's/a//g' -e 's/e//g' -e 's/i//g' -e 's/o//g' -e 's/u//g'", "    local\
    \ string=$1\n    if [[ -z \"$string\" ]]; then\n        echo \"\"\n    else\n\
    \        echo \"$string\" | tr -d \"aeiouAEIOU\"\n    fi", "    if [[ $# -ne 1\
    \ ]]; then\n        echo \"Usage: remove_vowels <string>\"\n        return 1\n\
    \    fi\n    local str=$1\n    echo \"${str//[aeiouAEIOU]/}\"", "    echo \"$1\"\
    \ | sed -e 's/[aeiouAEIOU]//g'", "\techo $1 | sed 's/[aeiouAEIOU]//g'", "    echo\
    \ \"$1\" | sed 's/[aeiouAEIOU]//g'", "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  '  echo "$1" | sed -E "s/[aeiouAEIOU]//g"', "    echo \"$1\" | sed -E 's/[aeiou]//g'",
  "    echo \"$1\" | tr -d 'aeiouAEIOU'", "    echo $1 | sed 's/[aeiouAEIOU]//g'",
  "    if [ $# -ne 1 ]; then\n        return 1\n    fi\n    local -r str=\"$1\"\n\
    \    echo \"$str\" | sed -e 's/[aeiouAEIOU]//g'", "\techo \"$1\" | tr -d \"[aeiouAEIOU]\"",
  "  if [ $# -eq 0 ]; then\n    echo \"Usage: $(basename \"$0\") STRING\"\n    return\n\
    \  fi\n  local -r string=\"$1\"\n  local s=\n  for ((i=0; i<${#string}; i++));\
    \ do\n    if [[ ! \"${string:$i:1}\" =~ [aeiouAEIOU] ]]; then\n      s=\"$s${string:$i:1}\"\
    \n    fi\n  done\n  echo \"$s\"", "\tlocal result=\"\"\n\tlocal string=$1\n\t\
    for ((i=0; i<${#string}; i++)); do\n\t\tlocal char=${string:$i:1}\n\t\tif [[ \"\
    $char\" != \"a\" && \"$char\" != \"e\" && \"$char\" != \"i\" && \"$char\" != \"\
    o\" && \"$char\" != \"u\" ]]; then\n\t\t\tresult+=$char\n\t\tfi\n\tdone\n\techo\
    \ $result", "    echo \"$1\" | tr -d 'aeiouAEIOU'", "\techo \"$1\" | tr -d \"\
    [aeiouAEIOU]\"", "  echo \"$1\" | tr -d '[aeiouAEIOU]'", "  echo $1 | tr -d 'aeiouAEIOU'",
  '    echo "$1" | tr -cd "[:alpha:]" | sed -e "s/[aeiouAEIOU]//g"', "    local str=$1\n\
    \    local regex=\"[aeiouAEIOU]\"\n    echo \"${str//$regex}\"", "\techo \"$1\"\
    \ | tr -d 'aeiouAEIOU'", "\techo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "\tif [[\
    \ $# -ne 1 ]]; then\n\t\techo \"Incorrect number of arguments for the remove_vowels\
    \ function\"\n\t\treturn 1\n\tfi\n\techo \"$1\" | tr -d \"aeiouAEIOU\"", "  echo\
    \ \"$1\" | tr -d 'aeiouAEIOU'", '    echo $1 | tr -d [aeiouAEIOU]', "    local\
    \ vowels=\"aeiouAEIOU\"\n    echo \"$1\" | tr -d \"$vowels\"", "  echo $1 | tr\
    \ -d 'aeiouAEIOU'", "    local str\n    str=$(tr -d 'aeiouAEIOU' <<< \"$1\")\n\
    \    echo \"$str\"", '  echo "${1//[aeiou]}"', "\t# your code here", "    echo\
    \ $1 | sed 's/[aeiouAEIOU]//g'", "  echo $1 | sed -e 's/[aeiouAEIOU]//g'", " \
    \ if [ -z \"$1\" ]; then\n    echo \"\"\n  else\n    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'\n\
    \  fi", "  echo $1 | sed -e 's/[aeiouAEIOU]//g'", '  echo "${1//[aeiou]}"', " \
    \ echo $1 | sed 's/[aeiouAEIOU]//g'", "    echo $(echo $1 | sed 's/[aeiouAEIOU]//g')",
  '  echo $1 | tr -d aeiou']
stop_tokens:
- "\n}"

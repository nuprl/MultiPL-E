name: HumanEval_51_remove_vowels
language: sh
prompt: "#!/bin/bash\n# remove_vowels is a function that takes string and returns\
  \ string without vowels.\n# >>> $(remove_vowels \"\")\n# \"\"\n# >>> $(remove_vowels\
  \ \"abcdef\")\n# \"bcdf\"\n# >>> $(remove_vowels \"aaaaa\")\n# \"\"\n# >>> $(remove_vowels\
  \ \"aaBAA\")\n# \"B\"\n# >>> $(remove_vowels \"zbcd\")\n# \"zbcd\"\n#\n# $1 is a\
  \ string\nremove_vowels() {\n"
tests: "}\n\ncandidate() {\n    remove_vowels \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"abcdef\\nghijklm\") =\
  \ \"bcdf\\nghjklm\" ]]\n    [[ $(candidate \"fedcba\") = \"fdcb\" ]]\n    [[ $(candidate\
  \ \"eeeee\") = \"\" ]]\n    [[ $(candidate \"acBAA\") = \"cB\" ]]\n    [[ $(candidate\
  \ \"EcBOO\") = \"cB\" ]]\n    [[ $(candidate \"ybcd\") = \"ybcd\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | tr -d '[aeiouAEIOU]'", "  echo $1 | sed 's/[aeiouAEIOU]//g'",
  "  echo $(echo \"$1\" | sed 's/[aeiouAEIOU]//g')", "    echo \"$1\" | sed -e 's/[aeiouAEIOU]//g'",
  '  echo "${1//[aeiou]}"', '    echo "$1" | tr -d "aeiouAEIOU"', "  local vowels=\"\
    aAeEiIoOuU\"\n  local input=\"$1\"\n  local output=\"\"\n  local index=0\n  while\
    \ [[ \"${input:$index:1}\" != \"\" ]]; do\n    char=\"${input:$index:1}\"\n  \
    \  if ! echo \"$vowels\" | grep -q \"$char\"; then\n      output=\"$output$char\"\
    \n    fi\n    index=$((index + 1))\n  done\n  echo \"$output\"", '  echo "${1//[aeiouAEIOU]/}"',
  "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'", "    # Put your code here\n    # You\
    \ are not allowed to call any other external program, e.g. sed, awk or grep.\n\
    \    # To remove the vowels, replace all occurrences of vowels with \"\"\n   \
    \ # Make sure that the function returns the new string\n    # Since we are not\
    \ allowed to call any other external program, we need to come up with\n    # a\
    \ way to identify the vowels.\n    # Since strings are basically arrays of characters,\
    \ we can do an if statement to identify\n    # if a character is a vowel.\n  \
    \  # The vowels to look for are: a, e, i, o, u.\n    # According to the Bash Reference\
    \ Manual (https://www.gnu.org/software/bash/manual/bash.html),\n    # the following\
    \ is the syntax for an if statement:\n    # if list; then list; [ elif list; then\
    \ list; ] ... [ else list; ] fi\n    # So for example, if we want to output \"\
    Even\" if x is even and \"Odd\" if x is odd, we can use:\n    # x=5\n    # if\
    \ (( $x % 2 == 0 )); then\n    #     echo \"Even\"\n    # else\n    #     echo\
    \ \"Odd\"\n    # fi\n    # For the purposes of this assignment, do not worry about\
    \ the curly braces.\n    # Using the example above, modify the if statement to\
    \ identify the vowels.\n    # You can make use of the $1 variable.\n    # Hint:\
    \ You can use the -eq comparison operator to compare the ascii value of the two\
    \ characters.\n    # You will also need to use double parentheses (e.g. (( ))).\n\
    \    # Hint: For example, the following will convert a string to an array:\n \
    \   # ARRAY=($STRING)\n    # Hint: It may be a good idea to use a for loop to\
    \ loop through each character of the string.\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n        # If the character is a vowel, output the remaining string.\n  \
    \      # Else, output the same character\n        if (( ${1:$i:1} == 97 )) ||\
    \ (( ${1:$i:1} == 101 )) || (( ${1:$", "\techo \"$1\" | sed 's/[aeiouAEIOU]//g'",
  '    echo "$1" | tr -d "[aeiouAEIOU]"', "    if [ $# -eq 0 ]; then\n        echo\
    \ \"usage: $0 <string>\"\n        return\n    fi\n    local vowels=(a e i o u)\n\
    \    local str=$1\n    local no_vowels=\"\"\n    for ((i=0; i<${#str}; i++));\
    \ do\n        local chr=${str:$i:1}\n        if [[ ! ${vowels[*]} =~ $chr ]];\
    \ then\n            no_vowels+=$chr\n        fi\n    done\n    echo $no_vowels",
  "    if [ $# -lt 1 ]; then\n        return\n    fi\n    echo $1 | sed 's/[aeiouAEIOU]//g'",
  '  echo "${1//[aeiouAEIOU]/}"', "  echo $1 | sed -E 's/[aeiouAEIOU]//g'", "\t# replace\
    \ vowels with ''\n\techo \"$1\" | sed -e 's/[aeiouAEIOU]//g'", "    echo \"$1\"\
    \ | sed -E 's/([aeiou])//g'", "  s=$1\n  echo \"$s\" | sed -e 's/[aoeiu]//gi'",
  "  echo \"$1\" | sed 's/[aeiouAEIOU]//g'"]
stop_tokens:
- "\n}"

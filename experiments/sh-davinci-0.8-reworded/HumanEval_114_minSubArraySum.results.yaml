language: sh
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  arr=($1)\n  min=0\n  for ((\
    \ i=0; i<${#arr[@]}; i++ )); do\n    for (( j=0; j<${#arr[@]}; j++ )); do\n  \
    \    (( j >= i )) && sub=$(printf '%s\\n' \"${arr[@]:i:j-i+1}\" | tr ' ' '+' |\
    \ bc)\n      (( min == 0 || (sub < min && sub != 0) )) && min=$sub\n    done\n\
    \  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_z7w510r.sh: line 17: ((: 2

    3: syntax error in expression (error token is "3")

    /tmp/tmp_z7w510r.sh: line 17: ((: 2

    3

    4: syntax error in expression (error token is "3

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 2

    3

    4

    1: syntax error in expression (error token is "3

    4

    1")

    /tmp/tmp_z7w510r.sh: line 17: ((: 2

    3

    4

    1

    2: syntax error in expression (error token is "3

    4

    1

    2")

    /tmp/tmp_z7w510r.sh: line 17: ((: 2

    3

    4

    1

    2

    4: syntax error in expression (error token is "3

    4

    1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 2

    3

    4

    1

    2

    4: syntax error in expression (error token is "3

    4

    1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 3

    4: syntax error in expression (error token is "4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 3

    4

    1: syntax error in expression (error token is "4

    1")

    /tmp/tmp_z7w510r.sh: line 17: ((: 3

    4

    1

    2: syntax error in expression (error token is "4

    1

    2")

    /tmp/tmp_z7w510r.sh: line 17: ((: 3

    4

    1

    2

    4: syntax error in expression (error token is "4

    1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 3

    4

    1

    2

    4: syntax error in expression (error token is "4

    1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 3

    4

    1

    2

    4: syntax error in expression (error token is "4

    1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 4

    1: syntax error in expression (error token is "1")

    /tmp/tmp_z7w510r.sh: line 17: ((: 4

    1

    2: syntax error in expression (error token is "1

    2")

    /tmp/tmp_z7w510r.sh: line 17: ((: 4

    1

    2

    4: syntax error in expression (error token is "1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 4

    1

    2

    4: syntax error in expression (error token is "1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 4

    1

    2

    4: syntax error in expression (error token is "1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 4

    1

    2

    4: syntax error in expression (error token is "1

    2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 1

    2: syntax error in expression (error token is "2")

    /tmp/tmp_z7w510r.sh: line 17: ((: 1

    2

    4: syntax error in expression (error token is "2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 1

    2

    4: syntax error in expression (error token is "2

    4")

    /tmp/tmp_z7w510r.sh: line 17: ((: 1

    2

    4: syntax error in expression (erro'
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=($1)\n    local\
    \ minSum=$nums\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=0\n   \
    \     for ((j=i; j<${#nums[@]}; j++)); do\n            ((sum+=nums[j]))\n    \
    \        ((sum<minSum)) && minSum=$sum\n        done\n    done\n\n    echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min_sum=0;\n    local\
    \ sum=0;\n    local num;\n    for num in $1; do\n        sum=$((sum + num));\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum;\n       \
    \ fi\n    done\n    echo $min_sum;\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    if [[ $# -eq 0 ]]; then\n\
    \        echo \"Array is empty\"\n        return 0\n    fi\n    local min_sum=0\n\
    \    local array=($1)\n    local sum=0\n    for ((i=0; i<${#array[@]}; i++));\
    \ do\n        sum=$(($sum + ${array[$i]}))\n        if [[ $sum -lt $min_sum ]];\
    \ then\n            min_sum=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n\
    \            sum=0\n        fi\n    done\n    echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -r nums=($1)\n  local\
    \ minSubArraySum=0\n  local currentSum=0\n  for (( i=0; i<${#nums[@]}; i++ ));\
    \ do\n    if (( nums[i] > currentSum + nums[i] )); then\n      currentSum=0\n\
    \    fi\n    currentSum=$(( currentSum + nums[i] ))\n    if (( currentSum < minSubArraySum\
    \ )); then\n      minSubArraySum=$currentSum\n    fi\n  done\n  echo $minSubArraySum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a A=($1)\n  local N=${#A[@]}\n\
    \  local S=$(IFS=+; echo \"${A[*]}\")\n  local minS=$S\n  for (( i=0; i<N; i++\
    \ )); do\n    (( N - i < 2 )) && break\n    for (( j=i+1; j<N; j++ )); do\n  \
    \    (( N - j < 2 )) && break\n      S=${S#${A[i]}+}\n      S=${S%+${A[j]}}\n\
    \      [[ $S -lt $minS ]] && minS=$S\n    done\n  done\n  echo $minS\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    IFS=' ' read -r -a n < <(echo\
    \ \"$1\")\n    a=0\n    b=0\n    while [ \"${n[$a]}\" -lt 0 ] && [ $a -lt ${#n[@]}\
    \ ]; do\n        let a++\n    done\n    m=${n[$a]}\n    while [ $a -lt ${#n[@]}\
    \ ]; do\n        let b++\n        while [ $b -lt ${#n[@]} ] && [ $((m + n[$b]))\
    \ -lt $m ]; do\n            let m+=n[$b]\n            let b++\n        done\n\
    \        let a++\n        while [ $a -lt ${#n[@]} ] && [ $((m + n[$a])) -lt $m\
    \ ]; do\n            let m+=n[$a]\n            let a++\n        done\n    done\n\
    \    echo \"$m\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local xs=(\"$@\")\n  # Return\
    \ 0 if the list is empty.\n  if [[ \"${#xs[@]}\" == 0 ]]; then\n    echo 0\n \
    \   return\n  fi\n  local curr_sum=0\n  local min_sum=0\n  for x in \"${xs[@]}\"\
    ; do\n    curr_sum=$((curr_sum + x))\n    if [[ curr_sum -lt min_sum ]]; then\n\
    \      min_sum=$curr_sum\n    fi\n    if [[ curr_sum -gt 0 ]]; then\n      curr_sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9hxginc3.sh: line 21: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array=($1)\n    local\
    \ minSum=0\n    local lastSum=0\n    local sum=0\n    # local i=0\n    for num\
    \ in \"${array[@]}\"; do\n        sum=$((sum + num))\n        if [ $sum -lt $minSum\
    \ ]; then\n            minSum=$sum\n        fi\n        if [ $sum -gt $lastSum\
    \ ]; then\n            lastSum=$sum\n        fi\n    done\n    if [ $lastSum -lt\
    \ 0 ]; then\n        echo $lastSum\n    else\n        echo $minSum\n    fi\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  INITIAL=0\n  SUM=0\n  MIN_SUM=0\n\
    \  for ((i=0; i<${#1}; i++)); do\n    INTEGER=$(echo \"${1:i:1}\")\n    if [ \"\
    $INTEGER\" = \" \" ]; then\n      if [ \"$SUM\" -lt \"$MIN_SUM\" ] || [ \"$MIN_SUM\"\
    \ -eq \"$INITIAL\" ]; then\n        MIN_SUM=$SUM\n      fi\n      SUM=$INITIAL\n\
    \    else\n      SUM=$((SUM+INTEGER))\n    fi\n  done\n  echo \"$MIN_SUM\"\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqqf63fva.sh: line 23: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    awk 'BEGIN {\n        a[\"\
    0\"] = 0\n        for (i = 1; i <= NF; i++) {\n            a[i] = a[i-1] + $i\n\
    \        }\n        min = a[NF]\n        for (i = 1; i <= NF; i++) {\n       \
    \     for (j = i; j <= NF; j++) {\n                b = a[j] - a[i-1]\n       \
    \         if (b < min) {\n                    min = b\n                }\n   \
    \         }\n        }\n        print min\n    }'\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums\n  local i\n\
    \  local sum=0\n  local minSum=0\n  local ans=0\n  read -r -a nums <<< \"$1\"\n\
    \  minSum=${nums[0]}\n  sum=${nums[0]}\n  for ((i=1; i<${#nums[@]}; i++)); do\n\
    \    sum=$((sum + nums[i]))\n    ((sum < 0)) && sum=0\n    ((sum < minSum)) &&\
    \ minSum=$sum\n  done\n  ans=$minSum\n  ((minSum > 0)) && ans=0\n  echo \"$ans\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a array\n  IFS=' ' read\
    \ -r -a array <<< \"$1\"\n  local min_sum=0\n  local min_sum_found=false\n  for\
    \ ((i=0; i<${#array[@]}; i++)); do\n    local sum=0\n    for ((j=i; j<${#array[@]};\
    \ j++)); do\n      local num=${array[j]}\n      ((sum+=num))\n      if ((min_sum_found));\
    \ then\n        if ((sum < min_sum)); then\n          min_sum=$sum\n        fi\n\
    \      else\n        if ((sum <= 0)); then\n          min_sum=$sum\n         \
    \ min_sum_found=true\n        fi\n      fi\n    done\n  done\n  echo \"$min_sum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums=($1)\n  local\
    \ min_sum=${nums[0]}\n  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n \
    \   sum=$(($sum + ${nums[$i]}))\n    ((min_sum > sum)) && min_sum=$sum\n    ((sum\
    \ < 0)) && sum=0\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a input=($1)\n  local\
    \ min=${input[0]}\n  local sum=0\n  for ((i=0; i<${#input[@]}; i++)); do\n   \
    \ sum+=${input[$i]}\n    ((sum<min)) && min=$sum\n    ((sum>0)) && sum=0\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    echo \"$1\" | tr \" \" \"\
    \\n\" | sort -g | head -n 1\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min_so_far min_ending_here\n\
    \    IFS=' ' read -r -a arr <<< \"$1\"\n    for num in \"${arr[@]}\"; do\n   \
    \     (( min_ending_here = min_ending_here + num ))\n        if [[ min_so_far\
    \ -eq 0 ]] || [[ min_so_far -gt min_ending_here ]]; then\n            min_so_far=${min_ending_here}\n\
    \        fi\n        if [[ min_ending_here -gt 0 ]]; then\n            min_ending_here=0\n\
    \        fi\n    done\n    echo ${min_so_far}\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # sum, minSum, start, end\n\
    \    res=$(echo \"$@\" | \\\n    sed 's/\\([^ ]*\\)/\\1 0/g' | \\\n    awk '\n\
    \        {\n            a[NR] = $0\n        }\n        END {\n            minSum\
    \ = a[1]\n            sum = 0\n            for (i = 1; i <= NR; i++) {\n     \
    \           sum += a[i]\n                sum > 0 ? sum : sum = 0\n           \
    \     if (sum < minSum) {\n                    minSum = sum\n                \
    \    end = i\n                }\n            }\n            sum = 0\n        \
    \    for (i = end; i >= 1; i--) {\n                sum += a[i]\n             \
    \   if (sum == minSum) {\n                    start = i\n                    break\n\
    \                }\n            }\n            print minSum, start, end\n    \
    \    }\n    ')\n    minSum=$(echo \"$res\" | awk '{print $1}')\n    start=$(echo\
    \ \"$res\" | awk '{print $2}')\n    end=$(echo \"$res\" | awk '{print $3}')\n\
    \    if [[ \"$minSum\" == \"0\" ]]; then\n        # all numbers are non-negative\n\
    \        minSum=$(echo \"$@\" | awk '{for (i = 1; i <= NF; i++) printf \"%s \"\
    , $i}' | \\\n            awk '{print $1}')\n    fi\n    echo \"$minSum\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # if the the minimum number\
    \ is negative, there is no point\n    # in adding it to any other number; simply\
    \ use it\n    local min=0\n    for i in $1; do\n        local sum=$(( $i + $min\
    \ ))\n        if (( $sum < $min )); then\n            min=$sum\n        fi\n \
    \   done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local currSum=0; local minSum=0\n\
    \  local -a arr=($@)\n  local arrLength=${#arr[@]}\n  local counter=0\n\n  while\
    \ [ $counter -lt $arrLength ]; do\n    currSum=$(($currSum + ${arr[$counter]}))\n\
    \    if [ $currSum -lt $minSum ]; then\n      minSum=$currSum\n    fi\n    counter=$(($counter\
    \ + 1))\n  done\n\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # Declare an array\n    arr=(\"\
    $@\")\n    # Store the size of the array\n    n=${#arr[@]}\n    # Minimum subarray\
    \ sum\n    min_sum=100000000\n    # Initialize min_ending_here with the first\
    \ value\n    min_ending_here=${arr[0]}\n    # Initialize max_ending_here with\
    \ the first value\n    max_ending_here=${arr[0]}\n    # Loop through the values\n\
    \    for ((i=1; i<n; i++)); do\n        # x is the current element\n        x=${arr[i]}\n\
    \        # Add the current element to min_ending_here\n        min_ending_here=$((min_ending_here\
    \ + x))\n        # Add the current element to max_ending_here\n        max_ending_here=$((max_ending_here\
    \ + x))\n        # If the current element is less than min_ending_here\n     \
    \   if ((x < min_ending_here)); then\n            # The current element is the\
    \ new min_ending_here\n            min_ending_here=$x\n        fi\n        # If\
    \ the current element is less than max_ending_here\n        if ((x > max_ending_here));\
    \ then\n            # The current element is the new max_ending_here\n       \
    \     max_ending_here=$x\n        fi\n        # If the max_ending_here is smaller\
    \ than min_sum\n        if ((max_ending_here < min_sum)); then\n            #\
    \ max_ending_here is the new min_sum\n            min_sum=$max_ending_here\n \
    \       fi\n    done\n    # Print the min_sum\n    echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local m=${1// /+}\n    local\
    \ seq=${m%+}\n    local result=${seq#+}\n    local min=${result:-0}\n    IFS=\"\
    +\" read -r -a arr <<< \"$m\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n      \
    \  for ((j=0; j<${#arr[@]}; j++)); do\n            if [[ $j -ge $i ]]; then\n\
    \                local sum=0\n                for ((k=$i; k<=$j; k++)); do\n \
    \                   sum=$((sum+arr[k]))\n                done\n              \
    \  if [[ $sum -lt $min ]]; then\n                    min=$sum\n              \
    \  fi\n            fi\n        done\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  arr=(\"$@\")\n  min=${arr[0]}\n\
    \  sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + arr[i]))\n  \
    \  if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0\
    \ ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqt5d0kaz.sh: line 16: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  awk '\n    # sum the first\
    \ n numbers, at the end of the input\n    # n is the smallest number of the array\n\
    \    function sum(n, a, i, s) {\n      s = 0\n      for (i = 1; i <= n; i++) {\n\
    \        s += a[i]\n      }\n      return s\n    }\n    # Create an array of numbers\n\
    \    # Take note of the smallest\n    BEGIN {\n      m = 10\n      split($0, a,\
    \ \" \")\n      for (i in a) {\n        if (a[i] < m) {\n          m = a[i]\n\
    \        }\n      }\n    }\n    # For all numbers that are smaller than the smallest\n\
    \    # Keep adding a[i] until there is a positive sum\n    # This is the first\
    \ sub-array\n    # Take note of the smallest\n    {\n      s = 0\n      for (i\
    \ in a) {\n        if (a[i] <= m) {\n          s += a[i]\n          if (s > 0)\
    \ {\n            m = s\n            break\n          }\n        }\n      }\n \
    \   }\n    # For all numbers that are smaller than the smallest\n    # Keep adding\
    \ a[i] until there is a positive sum\n    # This is the first sub-array\n    #\
    \ Take note of the smallest\n    {\n      for (i = 1; i <= NR; i++) {\n      \
    \  s = sum(i, a)\n        if (s < m) {\n          m = s\n        }\n      }\n\
    \    }\n    # Every time we add a new number to the array,\n    # we need to determine\
    \ the new value of the sum\n    # By subtracting one number and adding another\n\
    \    # We only need to determine the sum of the first n elements\n    # From the\
    \ previous n+1 elements\n    {\n      for (i = NR; i > 1; i--) {\n        s =\
    \ sum(i - 1, a)\n        s += a[NR] - a[NR - i + 1]\n        if (s < m) {\n  \
    \        m = s\n        }\n      }\n    }\n    END {\n      print m\n    }\n \n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0jmlbnjh.sh: line 12: unexpected EOF while looking for matching
    `''''

    /tmp/tmp0jmlbnjh.sh: line 102: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1 sum=0 min_sum=0\n\
    \    for i in $nums; do\n        ((sum+=i))\n        if ((sum < min_sum)); then\n\
    \            min_sum=$sum\n        fi\n    done\n    echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local n s=0 m=0\n    while\
    \ read n; do\n        s=$(( s + n ))\n        if [[ $s -lt $m ]]; then\n     \
    \       m=$s\n        fi\n    done <<< \"$1\"\n    echo $m\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpruww1x06.sh: line 14: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n _array=\"$1\"\n\
    \    local _min=${_array[0]}\n    local _sum=0\n    for element in \"${_array[@]}\"\
    ; do\n        _sum=$((_sum + element))\n        ((_sum < _min)) && _min=$_sum\n\
    \        ((_sum > 0)) && _sum=0\n    done\n    echo \"$_min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeee2s5vo.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    inp=$1\n    min=9999999999\n\
    \    sm=0\n    while read -r num; do\n        sm=$((sm+num))\n        if [[ $sm\
    \ -lt $min ]]; then\n            min=$sm\n        fi\n        if [[ $sm -gt 0\
    \ ]]; then\n            sm=0\n        fi\n    done <<< \"$inp\"\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbtj1gdcn.sh: line 16: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i subSum=0\n    for\
    \ i in $@; do\n        ((subSum += i))\n        if ((subSum < minSubSum)); then\n\
    \            minSubSum=$subSum\n        fi\n        if ((subSum > 0)); then\n\
    \            subSum=0\n        fi\n    done\n    echo $minSubSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=($1)\n  local len=${#nums[@]}\n\
    \  local ans=${nums[0]}\n  local curr=0\n  for ((i=0; i<len; i++)); do\n    curr+=${nums[i]}\n\
    \    if [[ $curr -lt $ans ]]; then\n      ans=$curr\n    fi\n    if [[ $curr -gt\
    \ 0 ]]; then\n      curr=0\n    fi\n  done\n  echo $ans\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local minVal=0\n  local maxVal=0\n\
    \  local tmpVal=0\n  for i in $1; do\n    ((tmpVal += i))\n    if ((tmpVal > maxVal));\
    \ then\n      maxVal=$tmpVal\n    fi\n    if ((tmpVal < minVal)); then\n     \
    \ minVal=$tmpVal\n    fi\n  done\n  echo $minVal\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local min_sum=$(echo \"$nums\" | tr ' ' '\\n' | head -n 1)\n    local\
    \ new_sum=0\n    for num in $(echo \"$nums\" | tr ' ' '\\n'); do\n        ((new_sum\
    \ = new_sum + num))\n        if [[ $new_sum -lt $min_sum ]]; then\n          \
    \  min_sum=$new_sum\n        fi\n        if [[ $new_sum -gt 0 ]]; then\n     \
    \       new_sum=0\n        fi\n    done\n    echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$*\"\n    local\
    \ numsArr=\"$(echo \"$nums\" | tr ' ' '\\n')\"\n    local minSum=0\n    local\
    \ currSum=0\n    for num in $numsArr; do\n        currSum=$((currSum + num))\n\
    \        if [ $currSum -lt $minSum ]; then\n            minSum=$currSum\n    \
    \    fi\n        if [ $currSum -gt 0 ]; then\n            currSum=0\n        fi\n\
    \    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local list=()\n    local\
    \ sum=0\n    local minSum=0\n    local num\n    for num in $@; do\n        # If\
    \ the current sum is less than the current element, reset the sum\n        if\
    \ ((num < sum)); then\n            sum=num\n        else\n            sum=$((sum\
    \ + num))\n        fi\n        # If the current sum is less than the current minimum\
    \ sum, update it\n        if ((sum < minSum)); then\n            minSum=sum\n\
    \        fi\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a nums\n  min=-1\n\
    \  sum=0\n  n=0\n  read -a nums <<< \"$1\"\n  for i in \"${nums[@]}\"; do\n  \
    \  n=$((n+1))\n    sum=$((sum+i))\n    if [[ $sum -lt $min || $min -eq -1 ]];\
    \ then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n \
    \   fi\n  done\n  if [[ $min -eq -1 ]]; then\n    min=$((sum / n))\n  fi\n  echo\
    \ \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    if [ $# -eq 0 ]; then\n \
    \       echo \"No argument was given. Please provide a space-separated list of\
    \ numbers.\"\n        return 1\n    fi\n    local nums=($@)\n    local min_so_far=${nums[0]}\n\
    \    local min_ending_here=${nums[0]}\n    for num in ${nums[@]:1}; do\n     \
    \   min_ending_here=$((min_ending_here + num))\n        if [ $min_ending_here\
    \ -lt $min_so_far ]; then\n            min_so_far=$min_ending_here\n        fi\n\
    \        if [ $min_ending_here -lt 0 ]; then\n            min_ending_here=0\n\
    \        fi\n    done\n    echo $min_so_far\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local minSum=0\n    local\
    \ tmp=0\n    for i in $@; do\n        tmp=$(($i + $tmp))\n        if [ $tmp -lt\
    \ $minSum ]; then\n            minSum=$tmp\n        fi\n    done\n    echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # On each iteration, if the\
    \ next number is greater than the sum of the previous\n    # numbers, then clear\
    \ the count and start over with the next number. If the sum\n    # is less than\
    \ current minimum sum, then update the minimum sum.\n    [ -z \"$1\" ] && echo\
    \ \"No input\" && return 1\n    minSum=0\n    arr=($(printf '%s\\n' \"$1\" | sort\
    \ -nr))\n    for n in \"${arr[@]}\"; do\n        [ $n -gt $minSum ] && minSum=0\n\
    \        ((minSum+=$n))\n    done\n    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a nums=($1)\n  local\
    \ min=0\n  local current=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    current+=${nums[$i]}\n\
    \    if [[ $current -lt $min ]]; then\n      min=$current\n    fi\n    if [[ $current\
    \ -gt 0 ]]; then\n      current=0\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -r input=\"$1\"\n  local\
    \ -r input=($input)\n  local result=0\n  local min=0\n  for ((i=0; i<${#input[@]};\
    \ i++)); do\n    (( result += input[i] ))\n    if [[ \"${result}\" -lt \"${min}\"\
    \ ]]; then\n      min=\"${result}\"\n    fi\n    if [[ \"${result}\" -gt 0 ]];\
    \ then\n      result=0\n    fi\n  done\n  echo \"${min}\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb2mk43ua.sh: line 13: input: readonly variable

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min_sum=0\n  local min_temp=0\n\
    \  local num\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for num in \"${arr[@]}\"\
    ; do\n    min_temp=$(( min_temp + num ))\n    if [[ $min_temp -lt $min_sum ]];\
    \ then\n      min_sum=$min_temp\n    fi\n    if [[ $min_temp -gt 0 ]]; then\n\
    \      min_temp=0\n    fi\n  done\n  echo \"$min_sum\"\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    declare -a input\n    input=($1)\n\
    \    sum=${input[0]}\n    min_sum=${input[0]}\n    min_prefix=${input[0]}\n  \
    \  for ((i=1; i<${#input[@]}; i++)); do\n        if ((sum > 0)); then\n      \
    \      sum=${input[i]}\n        else\n            sum=$((sum + input[i]))\n  \
    \      fi\n        if ((sum < min_sum)); then\n            min_sum=$sum\n    \
    \    fi\n        if ((input[i] < min_prefix)); then\n            min_prefix=${input[i]}\n\
    \        fi\n    done\n    if ((min_sum > 0)); then\n        echo $min_prefix\n\
    \    else\n        echo $min_sum\n    fi\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local list=()\n  for n in $1;\
    \ do\n    if [[ $n -lt 0 ]]; then\n      list+=(\"$n\")\n    else\n      list+=(\"\
    0\")\n    fi\n  done\n  printf \"%s\" \"${list[@]}\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local tmp=()\n  local min=0\n\
    \  for e in $(echo \"$1\" | sed 's/\\([[:digit:]]\\+\\)/ \\1 /g'); do\n    local\
    \ len=${#tmp[@]}\n    if [[ $len -eq 0 ]]; then\n      min=$e\n      tmp+=(\"\
    $e\")\n    else\n      local tmp_min=$min\n      local tmp_max=$min\n      for\
    \ (( i=0; i<$len; i++ )); do\n        tmp_max=$(( ${tmp[$i]} + $e ))\n       \
    \ if [[ $tmp_max -lt $tmp_min ]]; then\n          tmp_min=$tmp_max\n        fi\n\
    \      done\n      if [[ $tmp_min -lt $min ]]; then\n        min=$tmp_min\n  \
    \    fi\n      tmp+=(\"$tmp_min\")\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n __minSubArraySum_NUMS=$1\n\
    \  local m=0xffffffff\n  local s=0\n  for i in ${__minSubArraySum_NUMS[@]}; do\n\
    \    s=$((s+i))\n    if [[ $s -lt $m ]]; then\n      m=$s\n    fi\n    if [[ $s\
    \ -gt 0 ]]; then\n      s=0\n    fi\n  done\n  echo $m\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt3mby0a0.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  _check_num_args \"minSubArraySum\"\
    \ 1 $#\n  if [[ $1 == *' '* ]]; then\n    arr=()\n    for i in $1; do\n      arr+=($i)\n\
    \    done\n  else\n    arr=($1)\n  fi\n  local min_sum=${arr[0]}\n  local tmp_sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    tmp_sum=$((tmp_sum + i))\n    if [[ $tmp_sum\
    \ -lt $min_sum ]]; then\n      min_sum=$tmp_sum\n    fi\n    if [[ $tmp_sum -gt\
    \ 0 ]]; then\n      tmp_sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: '/tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    /tmp/tmpwcryr7dq.sh: line 12: _check_num_args: command not found

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local sum=0 min=0\n  for num\
    \ in ${@}; do\n    (( sum += num ))\n    if (( sum < min )); then\n      min=${sum}\n\
    \    fi\n  done\n  echo ${min}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  nums=(${1// / })\n  sum=0\n\
    \  min=0\n  for (( i=0; i<${#nums[@]}; i++ ))\n  do\n    sum+=${nums[$i]}\n  \
    \  if [ \"$sum\" -lt \"$min\" ]\n    then\n      min=$sum\n    fi\n  done\n  echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=(\"$@\")\n   \
    \ local len=${#nums[@]}\n    local min=0\n    local result=()\n    for (( i=0;\
    \ i<len; i++ )); do\n        min=${nums[$i]}\n        if (( min < 0 )); then\n\
    \            # min can be negitive\n            min=0\n        fi\n        result+=(\"\
    $min\")\n        for (( j=i+1; j<len; j++ )); do\n            min=$(( min + nums[j]\
    \ ))\n            if (( min < result[i] )); then\n                result[i]=$min\n\
    \            fi\n        done\n    done\n    local resultMin=${result[0]}\n  \
    \  for (( i=1; i<len; i++ )); do\n        if (( result[i] < resultMin )); then\n\
    \            resultMin=${result[i]}\n        fi\n    done\n    echo \"$resultMin\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyrqc8nts.sh: line 18: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=(\"$@\")\n  local\
    \ min=0\n  local sum=0\n  for i in \"${nums[@]}\"; do\n    sum=\"$(($sum + $i))\"\
    \n    if [[ $sum -lt $min ]]; then\n      min=\"$sum\"\n    fi\n  done\n  echo\
    \ \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpil3p_407.sh: line 16: 0 + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  res=0\n  sum=0\n  for i in\
    \ $1; do\n    if [[ $sum -gt 0 ]]; then\n      sum=$((sum + i))\n    else\n  \
    \    sum=$i\n    fi\n    if [[ $sum -lt $res ]]; then\n      res=$sum\n    fi\n\
    \  done\n  echo $res\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # $1 is a space-separated list\n\
    \  local inputArray=\"$@\"\n  local minSum=$(echo \"$inputArray\" | awk '{print\
    \ $1}')\n  local currentSum=$minSum\n  # Iterate over the array, starting at the\
    \ second element (index 1)\n  for index in $(seq 1 $(($# - 1))); do\n    currentSum=$(($currentSum\
    \ + $(echo \"$inputArray\" | awk \"{print \\$$((index + 1))}\")))\n    # If the\
    \ current sum is less than the minimum sum, set the minimum sum to the\n    #\
    \ current sum\n    if [[ \"$currentSum\" -lt \"$minSum\" ]]; then\n      minSum=$currentSum\n\
    \    fi\n  done\n  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # Get the length of $1 and\
    \ construct array of the same length with\n    # zeros as the default value\n\
    \    local nums=()\n    local numsLen=$(echo \"$1\" | wc -w)\n    for ((i=0; i<$numsLen;\
    \ i++)); do\n        nums+=(0)\n    done\n\n    # Convert $1 to an array of integers\n\
    \    local i=0\n    for n in $1; do\n        nums[$i]=$n\n        ((i++))\n  \
    \  done\n\n    # 1. Determine the minimum value in nums array\n    local min=${nums[0]}\n\
    \    for ((i=1; i<$numsLen; i++)); do\n        if [[ ${nums[$i]} -lt $min ]];\
    \ then\n            min=${nums[$i]}\n        fi\n    done\n\n    # 2. The minimum\
    \ sum is the minimum value multiplied by the length of array\n    echo \"$((min\
    \ * numsLen))\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n nums=${1}\n    local\
    \ min_sum=0\n    local curr_sum=0\n    for i in ${nums[@]}; do\n        curr_sum=$((curr_sum\
    \ + i))\n        if ((curr_sum < min_sum)); then\n            min_sum=${curr_sum}\n\
    \        fi\n        if ((curr_sum > 0)); then\n            curr_sum=0\n     \
    \   fi\n    done\n    echo ${min_sum}\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3lajnkfj.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=($1)\n  local min=0\
    \ # min sum\n  local current_sum=0 # current_sum\n  for num in \"${nums[@]}\"\
    ; do\n    ((current_sum = current_sum + num))\n    if ((current_sum < min)); then\n\
    \      min=current_sum\n    fi\n    if ((current_sum > 0)); then\n      current_sum=0\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=(\"$@\")\n   \
    \ local len=${#nums[@]}\n    local minSum=$(( ${nums[0]} + ${nums[1]} ))\n   \
    \ local minIndex=0\n    local sum=0\n    for (( i=0; i<len; i++ )); do\n     \
    \   sum=$(( sum + ${nums[i]} ))\n        for (( j=i+1; j<len; j++ )); do\n   \
    \         sum=$(( sum + ${nums[j]} ))\n            if (( sum < minSum )); then\n\
    \                minSum=$sum\n                minIndex=$i\n            fi\n  \
    \      done\n        sum=0\n    done\n    echo \"$minSum\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt8y1rwfo.sh: line 14: 2 3 4 1 2 4 +  : syntax error in expression
    (error token is "3 4 1 2 4 +  ")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local IFS=\" \"\n    read\
    \ -ra NUM <<< \"$1\"\n    local MIN=0\n    local SUM=0\n    for VAL in \"${NUM[@]}\"\
    ; do\n        SUM=$((SUM + VAL))\n        [[ $SUM -lt $MIN ]] && MIN=$SUM\n  \
    \  done\n    echo \"$MIN\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ $# -eq 0 ]]; then\n \
    \   echo \"No argument provided\"\n    return 1\n  fi\n  local min_so_far=0\n\
    \  local min_ending_here=0\n  for i in $@; do\n    # If the current element is\
    \ less than zero, then min_ending_here is\n    # the current element. Otherwise,\
    \ it is the sum of the current element\n    # and the current min_ending_here.\n\
    \    if [[ $i -lt 0 ]]; then\n      min_ending_here=$i\n    else\n      min_ending_here=$((\
    \ $i + $min_ending_here ))\n    fi\n    # If the current min_ending_here is less\
    \ than the current min_so_far,\n    # then the current min_ending_here is now\
    \ the current min_so_far.\n    if [[ $min_ending_here -lt $min_so_far ]]; then\n\
    \      min_so_far=$min_ending_here\n    fi\n  done\n  echo $min_so_far\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local arr=(\"$@\")\n    local\
    \ min_sum=0\n    local sub_sum=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n   \
    \     sub_sum=$((sub_sum + arr[i]))\n        if [[ ${arr[i]} -le 0 ]]; then\n\
    \            continue\n        elif [[ $sub_sum -le 0 ]]; then\n            sub_sum=0\n\
    \        fi\n        if [[ $sub_sum -eq 0 ]]; then\n            min_sum=${arr[i]}\n\
    \        elif [[ $sub_sum -lt $min_sum ]]; then\n            min_sum=$sub_sum\n\
    \        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5xrbl79l.sh: line 16: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  str_array=(${1// / })\n  sums=()\n\
    \  for (( i=0; i<\"${#str_array[@]}\"; i++ )); do\n    for (( j=0; j<=\"${#str_array[@]}\"\
    -i; j++ )); do\n      sums+=($(sum \"${str_array[@]:$i:$j}\"))\n    done\n  done\n\
    \  echo \"${sums[@]}\" | sort -g | head -n 1\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=10 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660021986
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Write your code here\n  echo\
    \ 1\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=${1// /}\n  local\
    \ min=100000\n  local sum=0\n  for ((i=0; i<${#nums}; i++)); do\n    sum=0\n \
    \   for ((j=i; j<${#nums}; j++)); do\n      sum=$((sum + ${nums:j:1}))\n     \
    \ if ((sum < min)); then\n        min=$sum\n      fi\n    done\n  done\n  echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0j9e0tuv.sh: line 18: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=($1)\n  local length=${#arr[@]}\n\
    \  local min=${arr[0]}\n  local min_sum=${arr[0]}\n  local cur_sum=${arr[0]}\n\
    \  for (( i=1; i<${length}; i++ )); do\n    cur_sum=$((${cur_sum} + ${arr[$i]}))\n\
    \    if ((${cur_sum} < ${min_sum})); then\n      min_sum=${cur_sum}\n    fi\n\
    \    if ((${cur_sum} > 0)); then\n      cur_sum=0\n    fi\n  done\n  echo ${min_sum}\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min=$1\n  local sum=0\n\
    \  shift\n  for num in $@; do\n    if (( num < min )); then\n      min=$num\n\
    \    fi\n    (( sum += num ))\n    if (( sum < min )); then\n      min=$sum\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    (\n        min=1000000000\n\
    \        sum=0\n        for n in $@; do\n            sum=$((sum + n))\n      \
    \      if (( sum < min )); then\n                min=$sum\n            fi\n  \
    \          if (( sum > 0 )); then\n                sum=0\n            fi\n   \
    \     done\n        echo $min\n    )\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  local min\n\
    \  local sum\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    for (( j=i; j<${#arr[@]};\
    \ j++ )); do\n      ((sum=sum+arr[j]))\n      [[ -z $min || $sum -lt $min ]] &&\
    \ min=$sum\n    done\n    sum=0\n  done\n  echo $min\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpaoymhf9v.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local min_sum=0\n\
    \  local current_sum=0\n  for num in $nums; do\n    let current_sum+=num\n   \
    \ if [[ $current_sum -lt $min_sum ]]; then\n      min_sum=$current_sum\n    fi\n\
    \    if [[ $current_sum -gt 0 ]]; then\n      current_sum=0\n    fi\n  done\n\
    \  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -i i j k\n    local\
    \ sum minSum\n    minSum=2147483647\n    for ((i=0; i<${#1}; i++)); do\n     \
    \   sum=0\n        for ((j=i; j<${#1}; j++)); do\n            sum=$(($sum + ${1:j:1}))\n\
    \            if ((sum < minSum)); then\n                minSum=$sum\n        \
    \    fi\n        done\n    done\n    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpznh66qcx.sh: line 18: 2 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=(\"$@\")\n   \
    \ local min=${nums[0]}\n    local sub_sum=0\n    local i=0\n    while [ $i -lt\
    \ ${#nums[@]} ]; do\n        if [ $sub_sum -gt 0 ]; then\n            sub_sum=$((\
    \ $sub_sum + ${nums[$i]} ))\n        else\n            sub_sum=${nums[$i]}\n \
    \       fi\n        if [ $sub_sum -lt $min ]; then\n            min=$sub_sum\n\
    \        fi\n        i=$(( $i + 1 ))\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_soz57vg.sh: line 22: [: too many arguments

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a nums\n    nums=(${1//\
    \ / })\n    # local -a nums=(${1// / })\n    local sum\n    local min_sum\n  \
    \  local min_sum_ending_at_i\n    local nums_len=${#nums[@]}\n    for ((i=0; i<nums_len;\
    \ i++)); do\n        if (($i==0)); then\n            min_sum=${nums[i]}\n    \
    \        min_sum_ending_at_i=${nums[i]}\n        else\n            min_sum_ending_at_i=$((${nums[i]}\
    \ + $(min $min_sum_ending_at_i 0)))\n            min_sum=$(min $min_sum $min_sum_ending_at_i)\n\
    \        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeh5fe1hi.sh: line 24: min: command not found

    /tmp/tmpeh5fe1hi.sh: line 24: 3 + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a nums=($1)\n    local\
    \ min=${nums[0]}\n    local sum=0\n    for num in ${nums[@]}; do\n        sum=$((sum\
    \ + num))\n        min=$((sum < min ? sum : min))\n        sum=$((sum < 0 ? 0\
    \ : sum))\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=($1)\n  local sum=0\n\
    \  local minSum=0\n  for((i=0; i<${#arr[@]}; i++)); do\n    sum+=${arr[$i]}\n\
    \    if ((sum < minSum)); then\n      minSum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min=0x7fffffff\n  \
    \  local len=0\n    local sum=0\n    local num=0\n    local idx=0\n    for num\
    \ in $1; do\n        ((sum+=num))\n        ((len++))\n        if ((sum < min));\
    \ then\n            min=sum\n        fi\n        if ((sum > 0)); then\n      \
    \      sum=0\n        fi\n    done\n    if ((min > 0)); then\n        min=0\n\
    \    fi\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -r -a nums <<< \"$1\"\n\
    \  # Create an array of prefix sums\n  for ((i=0; i<${#nums[@]}; i++)); do\n \
    \   (( i == 0 )) && prefix[$i]=${nums[$i]} || prefix[$i]=$((prefix[$((i-1))]+nums[$i]))\n\
    \  done\n  # The minimum sum of a sub-array is equal to the minimum prefix sum\
    \ minus\n  # the maximum prefix sum of a previous sub-array.\n  # Note: This can\
    \ be solved in O(n) time using Kadane's algorithm, but this is\n  # simple to\
    \ write and is O(n*logn) time.\n  min=-9999999999\n  # NOTE: The following loop\
    \ can be written as `for p in \"${prefix[@]}\"; do`\n  # in bash 4.\n  for ((i=0;\
    \ i<${#prefix[@]}; i++)); do\n    if ((${prefix[$i]} < min)); then\n      min=${prefix[$i]}\n\
    \    fi\n  done\n  max=-9999999999\n  for ((i=0; i<${#prefix[@]}; i++)); do\n\
    \    if ((${prefix[$i]} > max)); then\n      max=${prefix[$i]}\n    fi\n  done\n\
    \  echo $((min-max))\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # echo $1 | tr ' ' '\\n' |\
    \ head -n -1 | paste -sd+ - | bc\n  local curr_sum\n  local min_sum\n  for n in\
    \ $1; do\n    if [[ $curr_sum ]]; then\n      curr_sum=$((curr_sum + n))\n   \
    \ else\n      curr_sum=$n\n    fi\n    if [[ $min_sum ]]; then\n      if [[ $curr_sum\
    \ -lt $min_sum ]]; then\n        min_sum=$curr_sum\n      fi\n    else\n     \
    \ min_sum=$curr_sum\n    fi\n    if [[ $curr_sum -lt 0 ]]; then\n      curr_sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min=0\n  for n in ${1};\
    \ do\n    if (( n < min )); then\n      min=$n\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ -z \"$1\" ]]; then\n\
    \    echo \"usage: minSubArraySum <space-separated list>\"\n    return 1\n  fi\n\
    \  local -a nums=($1)\n  local minSum=\"${nums[0]}\"\n  local sum=0\n  for((i=0;\
    \ i<${#nums[@]}; i++)); do\n    if [[ \"${nums[i]}\" -gt \"$sum\" ]]; then\n \
    \     sum=\"${nums[i]}\"\n    else\n      sum=$(( \"$sum\" + \"${nums[i]}\" ))\n\
    \    fi\n    if [[ \"$sum\" -lt \"$minSum\" ]]; then\n      minSum=\"$sum\"\n\
    \    fi\n  done\n  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min=0\n  local sum=0\n\
    \  for i in ${1[@]}; do\n    [[ $i -lt $min ]] && min=$i\n    let sum+=$i\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhzxbdn3.sh: line 14: ${1[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  # your code\
    \ here\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=($1) i j minSubSum\
    \ minSum sum\n    minSum=${nums[0]}\n    for ((i=0; i<${#nums[@]}; i++)); do\n\
    \        sum=0\n        for ((j=i; j<${#nums[@]}; j++)); do\n            sum=$((sum\
    \ + nums[j]))\n            if ((sum <= minSum)); then\n                minSum=$sum\n\
    \            fi\n        done\n    done\n    echo $minSum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n _A=$1\n  local min=${_A[0]}\n\
    \  local current=0\n  for i in \"${_A[@]}\"; do\n    current=$((current + i))\n\
    \    if [[ $current -lt $min ]]; then\n      min=$current\n    fi\n    if [[ $current\
    \ -gt 0 ]]; then\n      current=0\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwh29j0v_.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  ary=()\n  for i in $1; do\n\
    \    ary+=(\"$i\")\n  done\n  i=0\n  len=${#ary[@]}\n  min=0\n  while ((i < len));\
    \ do\n    sum=0\n    for ((j = i; j < len; j++)); do\n      sum=$((sum + ary[j]))\n\
    \      if ((j == i)); then\n        min=sum\n      elif ((sum < min)); then\n\
    \        min=sum\n      fi\n    done\n    ((i++))\n  done\n  echo \"$min\"\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min=$(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -g | head -n 1)\n  local sum=$(echo \"$1\" | tr ' ' '\\n' |\
    \ paste -sd+ - | bc)\n  if [ \"$min\" -le 0 ]; then\n    echo \"$min\"\n  else\n\
    \    echo \"$sum\"\n  fi\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=($1)\n  local min=${nums[0]}\n\
    \  local sum=0\n  for i in ${nums[@]}; do\n    sum=${sum}${i}\n    if [[ $sum\
    \ -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n \
    \     sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=($1)\n  local min=${arr[0]}\n\
    \  local max=${arr[0]}\n  local sum=0\n  local minSum=0\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $i -lt $min ]]; then\n      min=$i\n   \
    \ fi\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n    if [[ $sum -lt\
    \ $minSum ]]; then\n      minSum=$sum\n    fi\n  done\n  if [[ $min -gt 0 ]];\
    \ then\n    echo \"$min\"\n  elif [[ $max -lt 0 ]]; then\n    echo \"$max\"\n\
    \  else\n    echo \"$minSum\"\n  fi\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local input=(${@})\n    local\
    \ min=${input[0]}\n    local sum=0\n    for n in ${input[@]}; do\n        sum=$((sum\
    \ + n))\n        min=$(((sum < min) ? sum : min))\n        [[ $sum -lt 0 ]] &&\
    \ sum=0\n    done\n    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  echo \"$1\" | tr ' ' '\\n'\
    \ | sed -e 's/^-/0-/' | awk '{SUM+=$1} END {print SUM-min}'\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # If there is only one input,\
    \ return it\n  if [[ \"$(echo $1 | wc -w)\" -eq 1 ]]; then\n    echo $1\n    return\n\
    \  fi\n\n  arr=($1)\n  # Initialize the subarray to sum to the first element\n\
    \  subArray=\"${arr[0]}\"\n  sum=${arr[0]}\n  minSum=${arr[0]}\n\n  # Start from\
    \ the second element\n  for ((i=1; i<${#arr[@]}; i++)); do\n    # If the current\
    \ element is greater than the sum of the current subarray\n    # and the current\
    \ element, then restart the subarray with the current element\n    if [[ ${arr[i]}\
    \ -gt $((sum + ${arr[i]})) ]]; then\n      subArray=\"${arr[i]}\"\n      sum=${arr[i]}\n\
    \    else\n      # Otherwise, simply append the current element to the subarray\n\
    \      subArray=\"$subArray ${arr[i]}\"\n      sum=$((sum + ${arr[i]}))\n    fi\n\
    \n    # If the sum is less than the current minimum, reset it\n    if [[ $sum\
    \ -lt $minSum ]]; then\n      minSum=$sum\n    fi\n  done\n\n  echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=( $1 )\n  local n=${#arr[@]}\n\
    \  local i=0\n  local min=0\n  local current=0\n  while [ $i -lt $n ]; do\n  \
    \  current=$(( current + arr[i] ))\n    if [ $current -ge $min ]; then\n     \
    \ i=$(( i + 1 ))\n      continue\n    fi\n    min=$current\n    current=0\n  \
    \  i=$(( i + 1 ))\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local inputArr=($@)\n  # Write\
    \ your code here\n  local result\n  local sum\n  for ((i=0; i<${#inputArr[@]};\
    \ i++)); do\n    sum=0\n    for ((j=i; j<${#inputArr[@]}; j++)); do\n      sum=$((\
    \ sum + inputArr[j] ))\n      if [[ ( -z $result ) || ( $sum -lt $result ) ]];\
    \ then\n        result=$sum\n      fi\n    done\n  done\n  echo $result\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min=0 sum=0\n  for x\
    \ in $1; do\n    sum=$((sum + x))\n    if ((sum < min)); then\n      min=$sum\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # initialize the minimum\
    \ sum to an arbitrarily large number\n    min=9999999999999999999\n    # loop\
    \ through the length of the list of numbers\n    for (( i=0; i<$((${#1}+1)); i++\
    \ )); do\n        # loop through a range of values from i to the length of the\
    \ list\n        for (( j=i; j<$((${#1}+1)); j++ )); do\n            # get the\
    \ sum of the sub-array\n            sum=$(sumArray ${1:$i:$(($j-$i))})\n     \
    \       # check if the sum is less than the current minimum sum\n            if\
    \ [[ $sum -lt $min ]]; then\n                # if so, update the minimum sum\n\
    \                min=$sum\n            fi\n        done\n    done\n    # return\
    \ the minimum sum\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.sh: line 19: sumArray: command not found

    /tmp/tmptcdq38yi.s'
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array=(${1// / })\n \
    \ local length=${#array[@]}\n  local minSum=${array[0]}\n  local currSum=0\n \
    \ for (( i=0; i<$length; i++ )); do\n    local num=${array[$i]}\n    currSum=$((\
    \ $currSum + $num ))\n    if [[ $currSum -lt $minSum ]]; then\n      minSum=$currSum\n\
    \    fi\n    if [[ $currSum -gt 0 ]]; then\n      currSum=0\n    fi\n  done\n\
    \  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local arr=(\"$@\")\n    local\
    \ min=${arr[0]}\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb3iile5j.sh: line 16: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local\
    \ min_sum=${nums[0]}\n  local curr_sum=0\n  for (( i=0; i<${#nums[@]}; i++ ));\
    \ do\n    if (( curr_sum + nums[i] > nums[i] )); then\n      curr_sum+=${nums[i]}\n\
    \    else\n      curr_sum=${nums[i]}\n    fi\n    (( min_sum > curr_sum )) &&\
    \ min_sum=$curr_sum\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiahlb33u.sh: line 16: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmpiahlb33u.sh: line 21: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n nums=$1\n  local min=${nums[0]}\n\
    \  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    ((sum += nums[i]))\n\
    \    if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpaoe1z2lg.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ \"$#\" -ne 1 ]]; then\n\
    \    echo \"Illegal number of parameters\"\n    return\n  fi\n\n  local -a nums\n\
    \  local minSum=0\n  local sum=0\n  local numsLen=0\n\n  read -a nums <<<\"$1\"\
    \n  numsLen=${#nums[@]}\n  for ((i=0; i<numsLen; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if [[ \"$sum\" -lt \"$minSum\" ]]; then\n      minSum=\"$sum\"\n    fi\n\
    \    if [[ \"$sum\" -gt 0 ]]; then\n      sum=0\n    fi\n  done\n\n  echo \"$minSum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # Write your code here.\n\
    \    local sum=0\n    local minsum=0\n    local i=0\n    local nums=($1)\n   \
    \ while ((i < ${#nums[@]})); do\n        sum=$((sum + nums[i]))\n        if ((sum\
    \ < minsum)); then\n            minsum=$sum\n        fi\n        if ((sum > 0));\
    \ then\n            sum=0\n        fi\n        ((i++))\n    done\n    echo $minsum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  minSum=`echo \"$1\" | sed 's/-/\
    \ -/g' | tr \" \" \"\n\" | sort -n | head -n 1`\n  minSum=${minSum##-}\n  echo\
    \ $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a nums\n  nums=($1)\n\
    \  min_sum=${nums[0]}\n  current_sum=${nums[0]}\n  for ((i=1; i<${#nums[@]}; i++));\
    \ do\n    current_sum=$(($current_sum + ${nums[$i]}))\n    if (( $(echo \"$current_sum\
    \ < $min_sum\" | bc -l) )); then\n      min_sum=$current_sum\n    fi\n    if ((\
    \ $(echo \"$current_sum < 0\" | bc -l) )); then\n      current_sum=0\n    fi\n\
    \  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  minVal=${arr[0]}\n\
    \  minValSoFar=${arr[0]}\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    minValSoFar=$((\
    \ minValSoFar + arr[i] ))\n    if (( minValSoFar > arr[i] )); then\n      minValSoFar=${arr[i]}\n\
    \    fi\n    if (( minValSoFar < minVal )); then\n      minVal=${minValSoFar}\n\
    \    fi\n  done\n  echo $minVal\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5z8wguyf.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a arr\n    arr=(${1//\
    \ / })\n    local min=0\n    local n=${#arr[@]}\n    local cur_sum=0\n    local\
    \ i=0\n    while [[ $i -lt $n ]]; do\n        if [[ cur_sum -le 0 ]]; then\n \
    \           cur_sum=${arr[$i]}\n        else\n            ((cur_sum+=${arr[$i]}))\n\
    \        fi\n        if [[ $cur_sum -lt $min ]]; then\n            min=$cur_sum\n\
    \        fi\n        ((i++))\n    done\n    echo $min\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a input\n  local -i\
    \ sum\n  local -i i\n  local -i newSum\n  local -i minSum\n  IFS=\" \" read -r\
    \ -a input <<< \"$1\"\n  sum=0\n  for ((i=0; i<${#input[@]}; i++)); do\n    if\
    \ ((input[i] < 0)); then\n      sum+=input[i]\n    fi\n  done\n  if ((sum<0));\
    \ then\n    echo \"$sum\"\n    return\n  fi\n  sum=0\n  minSum=${input[0]}\n \
    \ for ((i=0; i<${#input[@]}; i++)); do\n    sum+=input[i]\n    if ((sum<minSum));\
    \ then\n      minSum=sum\n    fi\n    if ((sum>0)); then\n      sum=0\n    fi\n\
    \  done\n  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    read -r -a nums <<< \"$1\"\
    \n    minSum=${nums[0]}\n    for (( i=0; i<${#nums[@]}; i++ )); do\n        local\
    \ currentSum=0\n        for (( j=i; j<${#nums[@]}; j++ )); do\n            currentSum=$((\
    \ currentSum + nums[j] ))\n            if (( currentSum < minSum )); then\n  \
    \              minSum=$currentSum\n            fi\n        done\n    done\n  \
    \  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local inputArr=($@)\n  local\
    \ N=${#inputArr[@]}\n  local min_sum=${inputArr[0]}\n  local sum=0\n  for ((i=0;\
    \ i<N; i++)); do\n    if ((sum > 0)); then\n      sum=0\n    fi\n    for ((j=i;\
    \ j<N; j++)); do\n      sum=$((sum + inputArr[j]))\n      if ((sum < min_sum));\
    \ then\n        min_sum=$sum\n      fi\n    done\n  done\n  echo $min_sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a nums=(${1})\n  \
    \  local min_sum=0\n    local curr_sum=0\n    for num in \"${nums[@]}\"; do\n\
    \        curr_sum=$(( curr_sum + num ))\n        if (( curr_sum < min_sum ));\
    \ then\n            min_sum=$curr_sum\n        fi\n        if (( curr_sum > 0\
    \ )); then\n            curr_sum=0\n        fi\n    done\n    echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Write your code here.\n \
    \ local nums=(${1// / })\n  local min_sum=${nums[0]}\n  local prev_min_sum=${nums[0]}\n\
    \  local curr_min_sum=${nums[0]}\n  for ((i=1; i<${#nums[@]}; i++)); do\n    local\
    \ curr_num=${nums[$i]}\n    curr_min_sum=$((prev_min_sum+curr_num))\n    if [[\
    \ $curr_min_sum -lt $min_sum ]]; then\n      min_sum=$curr_min_sum\n    fi\n \
    \   if [[ $curr_min_sum -gt $curr_num ]]; then\n      curr_min_sum=$curr_num\n\
    \    fi\n    prev_min_sum=$curr_min_sum\n  done\n  echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local __max=0\n    local\
    \ __max_idx=0\n    local __sum=0\n    local __sum_idx=0\n    local __min=0\n \
    \   local __min_idx=0\n    local __arr=$(echo \"$1\" | tr ' ' '\\n' | grep -n\
    \ -v \"^-\\?[0-9]*$\" -B1 | grep -v -- -)\n    local __arr=($__arr)\n    local\
    \ __sorted=($(echo \"${__arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local __len=${#__arr[@]}\n\
    \    if [[ $__len -eq 0 ]]; then\n        echo \"0\"\n        return\n    fi\n\
    \    if [[ $__len -eq 1 ]]; then\n        echo \"${__arr[0]}\"\n        return\n\
    \    fi\n    __min=${__sorted[0]}\n    __min_idx=$(echo \"$1\" | grep -n -B1 \"\
    $__min\" | grep -v -- - | tr -d -c 0-9)\n    for ((i=0; i<$__len; i++)); do\n\
    \        __sum=$(echo \"$__sum + ${__arr[$i]}\" | bc)\n        __sum_idx=$(echo\
    \ \"$i + 1\" | bc)\n        if [[ $(echo \"$__sum < $__min\" | bc) -eq 1 ]]; then\n\
    \            __min=$__sum\n            __min_idx=$__sum_idx\n        fi\n    \
    \    if [[ $(echo \"$__sum - ${__arr[$__max_idx]} > $__max\" | bc) -eq 1 ]]; then\n\
    \            __max=$(echo \"$__sum - ${__arr[$__max_idx]}\" | bc)\n          \
    \  __max_idx=$__sum_idx\n        fi\n        if [[ $(echo \"$__max + $__min >\
    \ 0\" | bc) -eq 1 ]]; then\n            local __arr2=(${__arr[@]:$__max_idx:$__min_idx})\n\
    \            local __ret=$(minSubArraySum \"${__arr2[@]}\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfdjviqf2.sh: line 65: unexpected EOF while looking for matching
    `"''

    /tmp/tmpfdjviqf2.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=($1)\n  local min=0\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    let \"sum += i\"\n    if [ $sum\
    \ -lt $min ]; then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # Remove leading -\n    read\
    \ -r sum_temp sign <<<\"$(IFS=\"+\"; echo \"$*\")\"\n    if [[ \"$sign\" = \"\
    -\" ]]; then\n        sum_temp=\"-$sum_temp\"\n    fi\n    # Read numbers into\
    \ an array\n    IFS=\" \" read -r -a numbers <<<\"$sum_temp\"\n    local min=0\n\
    \    local min_idx=0\n    local max=0\n    local max_idx=0\n    for i in \"${!numbers[@]}\"\
    ; do\n        if [[ ${numbers[$i]} -lt $min ]]; then\n            min=${numbers[$i]}\n\
    \            min_idx=$i\n        fi\n        if [[ ${numbers[$i]} -gt $max ]];\
    \ then\n            max=${numbers[$i]}\n            max_idx=$i\n        fi\n \
    \   done\n    if [[ $min_idx -lt $max_idx ]]; then\n        # min first, max second\n\
    \        numbers=(\"${numbers[@]:0:$min_idx}\" \"${numbers[@]:$min_idx+1:$max_idx-$min_idx-1}\"\
    \ \"${numbers[@]:$max_idx+1}\")\n    else\n        # max first, min second\n \
    \       numbers=(\"${numbers[@]:0:$max_idx}\" \"${numbers[@]:$max_idx+1:$min_idx-$max_idx-1}\"\
    \ \"${numbers[@]:$min_idx+1}\")\n    fi\n    # Rebuild the string and return\n\
    \    if [[ \"$sign\" = \"-\" ]]; then\n        echo \"${numbers[*]}\" | sed 's/\
    \ /-/g'\n    else\n        echo \"${numbers[*]}\"\n    fi\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Write your code here\n  declare\
    \ -i i j k sum min=($1)\n  arr=($1)\n  max=$((${#arr[@]}-1))\n  for i in $(seq\
    \ $max); do\n    sum=0\n    for j in $(seq $i); do\n      sum=$(($sum+${arr[$j]}))\n\
    \    done\n    min=($(seq $min $sum | head -n1))\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a arr=()\n    for\
    \ i in $1; do\n        arr+=(\"$i\")\n    done\n    # set initail sum to first\
    \ element\n    local sum=\"${arr[0]}\"\n    # iterate through remaining\n    for\
    \ ((i=1; i<${#arr[@]}; i++)); do\n        # check if element is less than 0\n\
    \        if (( arr[i] < 0 )); then\n            # if so check if element is less\
    \ than sum\n            if (( arr[i] < sum )); then\n                # if so check\
    \ if sum will be greater than 0\n                if (( arr[i] + sum > 0 )); then\n\
    \                    # if so reset sum to negative of the current element\n  \
    \                  sum=\"${arr[i]}\"\n                else\n                 \
    \   # if not then reset sum to zero\n                    sum=0\n             \
    \   fi\n            else\n                # if not then add element to sum\n \
    \               (( sum += arr[i] ))\n            fi\n        else\n          \
    \  # if not then add element to sum\n            (( sum += arr[i] ))\n       \
    \ fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=($@)\n  local min=$arr\n\
    \  local sum=0\n  for num in \"${arr[@]}\"; do\n    sum=$((sum + num))\n    if\
    \ ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n    \
    \  sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    if [[ $# == 0 ]]; then\n\
    \        return 0\n    fi\n    # first use the \"array\" data type\n    declare\
    \ -a arr=(\"$@\")\n    local sum=0\n    local min_sum=$sum\n    for num in \"\
    ${arr[@]}\"; do\n        sum=$((sum + num))\n        min_sum=$((min_sum < sum\
    \ ? min_sum : sum))\n        if [[ sum -lt 0 ]]; then\n            sum=0\n   \
    \     fi\n    done\n    echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjt3dn513.sh: line 20: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Write your code here\n  local\
    \ nums=\"$1\"\n  local len=$(wc -w <<< \"$nums\")\n  local start=0\n  local end=0\n\
    \  local min=0\n  local sum=0\n  while [ $end -lt $len ]; do\n    while [ $end\
    \ -lt $len ] && [ $sum -ge 0 ]; do\n      ((sum += ${nums%% *}))\n      [ $sum\
    \ -lt $min ] && min=$sum\n      nums=${nums#* }\n      ((end++))\n    done\n \
    \   if [ $sum -ge 0 ]; then\n      ((start++))\n      end=$start\n      ((sum\
    \ = 0))\n    else\n      nums=${nums#* }\n      ((end++))\n      ((sum += ${nums%%\
    \ *}))\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a numbers=(${1//[^0-9-]/\
    \ })\n  local min=0\n  local sum=0\n  local i=0\n  local n=${#numbers[@]}\n  while\
    \ (( i < n )); do\n    (( sum += numbers[i] ))\n    if (( sum < min )); then\n\
    \      min=$sum\n    fi\n    (( i++ ))\n  done\n  echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    nums=($@)\n    min=0x7fffffff\n\
    \    for((i=0;i<${#nums[@]};i++)); do\n        sum=0\n        for((j=i;j<${#nums[@]};j++));\
    \ do\n            sum=$((sum+nums[j]))\n            if [[ $sum -lt $min ]]; then\n\
    \                min=$sum\n            fi\n        done\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local localArray=($1)\n  local\
    \ minSum=${localArray[0]}\n  local currSum=0\n  for element in ${localArray[@]};\
    \ do\n    currSum=$((currSum + element))\n    ((minSum > currSum)) && minSum=$currSum\n\
    \    ((currSum < 0)) && currSum=0\n  done\n  echo $minSum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a array=()\n  minSum=0\n\
    \  minSumList=()\n  minSumListLen=0\n  for str in $1; do\n    array+=($str)\n\
    \  done\n  arrayLen=${#array[@]}\n  for (( i=0; i<arrayLen; i++ )); do\n    sum=0\n\
    \    sumList=\"\"\n    sumListLen=0\n    for (( j=i; j<arrayLen; j++ )); do\n\
    \      (( sum += array[j] ))\n      sumList=\"$sumList ${array[j]}\"\n      ((\
    \ sumListLen += 1 ))\n      if [[ $sum -lt $minSum || $minSumListLen -eq 0 ]];\
    \ then\n        minSum=$sum\n        minSumList=$sumList\n        minSumListLen=$sumListLen\n\
    \      fi\n    done\n  done\n  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min_sum=0\n  for num\
    \ in $1; do\n    if [ $num -lt $min_sum ]; then\n      min_sum=$num\n    fi\n\
    \  done\n  printf '%s' \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -r nums=$1\n  local minSum=$(echo\
    \ $nums | cut -d' ' -f1)\n  local sum=0\n  for n in $nums; do\n    sum=$((sum\
    \ + n))\n    if ((sum < minSum)); then\n      minSum=$sum\n    fi\n    if ((sum\
    \ > 0)); then\n      sum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    IFS=' ' read -ra nums <<<\
    \ $1\n\n    minSum=${nums[0]}\n    currSum=0\n\n    for num in \"${nums[@]}\"\
    ; do\n        currSum=$(($currSum + $num))\n        if [ $currSum -lt $minSum\
    \ ]; then\n            minSum=$currSum\n        fi\n        if [ $currSum -gt\
    \ 0 ]; then\n            currSum=0\n        fi\n    done\n\n    echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ $# == 0 ]]; then\n  \
    \  printf ''\n    return 0\n  fi\n  local list=(\"$@\")\n  local min=${list[0]}\n\
    \  local sum=0\n  for i in \"${list[@]}\"; do\n    ((sum+=i))\n    if ((sum<min));\
    \ then\n      min=$sum\n    fi\n    if ((sum>0)); then\n      sum=0\n    fi\n\
    \  done\n  printf '%s' \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5h90kphl.sh: line 20: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmp5h90kphl.sh: line 21: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    [[ $# -eq 0 ]] && echo \"\
    No arguments passed to function\" && return 1\n    declare -a arr\n    arr=($1)\n\
    \    declare -i minSum=0\n    declare -i maxSum=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        maxSum=maxSum+${arr[$i]}\n        [[ $maxSum -lt 0 ]] &&\
    \ maxSum=0\n        [[ $maxSum -gt $minSum ]] && minSum=$maxSum\n    done\n  \
    \  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  args=($@)\n  current=0\n  min=0\n\
    \  for ((i=0; i<${#args[@]}; i++)); do\n    current=$(( $current + ${args[$i]}\
    \ ))\n    if (( $current > $min )); then\n      min=$current\n    fi\n    if ((\
    \ $current < 0 )); then\n      current=0\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=()\n  for num in\
    \ $1; do\n    nums+=(\"$num\")\n  done\n  local min_sum=0\n  local sum=0\n  for\
    \ num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    ((sum < min_sum)) &&\
    \ min_sum=$sum\n    ((sum > 0)) && sum=0\n  done\n  echo \"$min_sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  for (( i=1; i<${#1}; i++ ));\
    \ do\n    (( sum<${1:i} )) && sum=${1:i}\n    for (( j=i+1; j<=${#1}; j++ ));\
    \ do\n      (( sum<${1:i:j-i} )) && sum=${1:i:j-i}\n    done\n  done\n  echo \"\
    $sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf31nkjdy.sh: line 13: ((: sum< 3 4 1 2 4 : syntax error in expression
    (error token is "4 1 2 4 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4 : syntax error in expression (error
    token is "4 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4  : syntax error in expression (error
    token is "4  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4 1 : syntax error in expression (error
    token is "4 1 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4 1  : syntax error in expression (error
    token is "4 1  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4 1 2 : syntax error in expression (error
    token is "4 1 2 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4 1 2  : syntax error in expression (error
    token is "4 1 2  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 3 4 1 2 4 : syntax error in expression
    (error token is "4 1 2 4 ")

    /tmp/tmpf31nkjdy.sh: line 13: ((: sum<3 4 1 2 4 : syntax error in expression (error
    token is "4 1 2 4 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4 : syntax error in expression (error
    token is "4 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4  : syntax error in expression (error
    token is "4  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4 1 : syntax error in expression (error
    token is "4 1 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4 1  : syntax error in expression (error
    token is "4 1  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4 1 2 : syntax error in expression (error
    token is "4 1 2 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4 1 2  : syntax error in expression (error
    token is "4 1 2  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<3 4 1 2 4 : syntax error in expression (error
    token is "4 1 2 4 ")

    /tmp/tmpf31nkjdy.sh: line 13: ((: sum< 4 1 2 4 : syntax error in expression (error
    token is "1 2 4 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum<  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 4 1 : syntax error in expression (error
    token is "1 ")

    /tmp/tmpf31nkjdy.sh: line 15: ((: sum< 4 1  : syntax err'
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    ans=$1\n    shift\n    for\
    \ var in \"$@\"\n    do\n        (( var < ans )) && ans=$var\n    done\n    echo\
    \ $ans\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local input=(${@})\n    local\
    \ min=0\n    local sum=0\n    for n in \"${input[@]}\"; do\n        sum=$((sum\
    \ + n))\n        if ((sum < min)); then\n            min=${sum}\n        fi\n\
    \    done\n    echo \"${min}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min_sum=$1\n    shift\n\
    \    local sum=$1\n    shift\n    for i in $@; do\n        if [ $sum -gt 0 ];\
    \ then\n            sum=$(($sum + $i))\n        else\n            sum=$i\n   \
    \     fi\n        if [ $sum -lt $min_sum ]; then\n            min_sum=$sum\n \
    \       fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -ra xs <<< \"$1\"\n  local\
    \ min=0xFFFFFFFF\n  local sum=0\n  for x in \"${xs[@]}\"; do\n    sum=$((sum +\
    \ x))\n    if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n\
    \    local min_sum=\"${nums[0]}\"\n    local current_sum=\"${nums[0]}\"\n    local\
    \ i\n\n    # Why start at 1?\n    # Because you can't compare the first number\
    \ to itself\n    for ((i=1; i<${#nums[@]}; i++)); do\n        (( current_sum <\
    \ 0 )) && current_sum=\"${nums[i]}\"\n        (( current_sum += nums[i] ))\n \
    \       (( current_sum < min_sum )) && min_sum=\"$current_sum\"\n    done\n\n\
    \    echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local subArrayMin=0\n   \
    \ local min=0\n    local num\n    local array=(\"$@\")\n    local len=${#array[@]}\n\
    \    for (( i=0; i<len; i++ )); do\n        num=${array[$i]}\n        (( subArrayMin\
    \ = ${subArrayMin:=0} + num ))\n        (( subArrayMin < min )) && min=$subArrayMin\n\
    \        (( subArrayMin > 0 )) && subArrayMin=0\n    done\n    echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa1jyplgg.sh: line 19: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=(\"$@\")\n   \
    \ local result=${nums[0]}\n    local current=${nums[0]}\n    for num in \"${nums[@]:1}\"\
    ; do\n        (( num < current + num )) && current=${num}\n        (( result >\
    \ current )) && result=${current}\n    done\n    echo ${result}\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ foundSum=false\n  local previousSum=0\n  local previousMinSum=0\n  local currentSum=0\n\
    \  local currentMinSum=0\n  local minSum=0\n  local sum=0\n  for num in $nums;\
    \ do\n    sum=$((sum + num))\n    if [ \"$sum\" -lt \"$minSum\" ] || ! $foundSum;\
    \ then\n      minSum=$sum\n      foundSum=true\n    fi\n    if [ \"$sum\" -gt\
    \ \"$minSum\" ]; then\n      sum=$((sum - minSum))\n    fi\n  done\n  echo \"\
    $minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # parse the input and store\
    \ it into an array\n  declare -a nums\n  OLD_IFS=$IFS\n  IFS=' '\n  nums=( $*\
    \ )\n  IFS=$OLD_IFS\n\n  min_sum=${nums[0]}\n  curr_sum=${nums[0]}\n\n  # the\
    \ current sum cannot be less than the current element\n  # if it is then it means\
    \ the elements before the current element should not be\n  # included in the subarray\
    \ and the current sum should be set to the current\n  # element\n  for i in \"\
    ${nums[@]:1}\"; do\n    curr_sum=$(( curr_sum + i ))\n    if [[ curr_sum -lt $i\
    \ ]]; then\n      curr_sum=$i\n    fi\n    if [[ curr_sum -lt $min_sum ]]; then\n\
    \      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=(${1})\n  # the minimum\
    \ sum will be equal to the minimum element in the given array\n  # if all elements\
    \ are positive\n  local min=${arr[0]}\n  # the minimum sum will be equal to the\
    \ sum of all elements if all elements\n  # are negative\n  local total=${arr[0]}\n\
    \  for ((i=1; i<${#arr[@]}; i++)); do\n    ((total += arr[i]))\n    ((arr[i] <\
    \ min)) && min=${arr[i]}\n  done\n  # if all elements are negative, return the\
    \ smallest\n  ((total > 0)) && echo $min || echo $total\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Run the mininum sum in a\
    \ subshell\n  result=$(while read -r num; do\n    # Run the minimum sum in a subshell\n\
    \    min_sum=$( while read -r num; do\n      sum_so_far=$((sum_so_far + num))\n\
    \      if [[ -z $min_sum || $sum_so_far -lt $min_sum ]]; then\n        min_sum=$sum_so_far\n\
    \      fi\n    done < <( echo \"$1\" | grep -o -E '[0-9-]+' ) )\n    # Print it\
    \ out once the subshell is finished\n    echo \"$min_sum\"\n  done)\n  # Print\
    \ the minimum sum\n  echo \"$result\" | sort -n | head -n 1\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660021986
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a ary\n    for item\
    \ in ${1}\n    do\n        ary+=(${item})\n    done\n    local i1\n    local i2\n\
    \    local min=${ary[0]}\n    local sum=${ary[0]}\n    local len=${#ary[@]}\n\
    \    for ((i1=0; i1<len; i1++))\n    do\n        sum=${ary[i1]}\n        for ((i2=i1+1;\
    \ i2<len; i2++))\n        do\n            sum=$((sum + ary[i2]))\n           \
    \ if [[ ${sum} -lt ${min} ]]\n            then\n                min=${sum}\n \
    \           fi\n        done\n    done\n    echo ${min}\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    declare -a nums=${1// / }\n\
    \    max=${nums[0]}\n    min=${nums[0]}\n    sum=0\n    prevSum=0\n    minSum=0\n\
    \    for n in ${nums[@]}; do\n        # Keep track of max and min values.\n  \
    \      # We can then determine what is the minimum\n        # sum of the subarray\
    \ by adding the max and min\n        # values and subtracting the current number.\n\
    \        if (( n > max )); then\n            max=$n\n        fi\n        if ((\
    \ n < min )); then\n            min=$n\n        fi\n        sum=$((sum + n))\n\
    \        # If the current sum is less than the previous\n        # sum, then we\
    \ want to keep that value as our\n        # minimum sum.\n        if (( sum <\
    \ prevSum )); then\n            minSum=$sum\n        fi\n        prevSum=$sum\n\
    \    done\n    echo $((max + min - minSum))\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplcfpjvhg.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 26: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 26: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 26: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 26: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 26: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 26: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmplcfpjvhg.sh: line 38: 2 3 4 1 2 4: syntax error in expression (error token
    is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    list=$1\n    min=-1\n   \
    \ for i in $(seq 1 $((${#list} + 1))); do\n        for j in $(seq 1 $((${#list}\
    \ + 1))); do\n            if [ $j -ge $i ]; then\n                arr=(${list:$(($i\
    \ - 1)):$(($j - $i + 1))})\n                sum=$(echo ${arr[@]} | tr ' ' '+'\
    \ | bc)\n                if [ $min -eq -1 ] || [ $sum -lt $min ]; then\n     \
    \               min=$sum\n                fi\n            fi\n        done\n \
    \   done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe1i31b82.sh: line 19: [: -lt: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -lt: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -lt: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -lt: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -lt: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -lt: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -1: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -1: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -3: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -3: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -6: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -6: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: 1: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: 1: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -1: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -1: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operator expected

    /tmp/tmpe1i31b82.sh: line 19: [: -eq: unary operat'
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min=${1%% *}\n    local\
    \ curr=0\n    while read -r num; do\n        if [[ $curr -lt 0 ]]; then\n    \
    \        curr=$num\n        else\n            curr=$((curr + num))\n        fi\n\
    \        if [[ $curr -lt $min ]]; then\n            min=$curr\n        fi\n  \
    \  done <<< \"${@:2}\"\n    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    nums=(${1// / })\n    minSum=${nums[0]}\n\
    \    currentSum=0\n    for i in \"${nums[@]}\"; do\n        currentSum=$((currentSum\
    \ + i))\n        if [[ $currentSum -lt $minSum ]]; then\n            minSum=$currentSum\n\
    \        fi\n        if [[ $currentSum -gt 0 ]]; then\n            currentSum=0\n\
    \        fi\n    done\n    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local sum=0\n  local min=0\n\
    \  for x in $1; do\n    sum=$((sum + x))\n    if [[ $min -gt $sum ]]; then\n \
    \     min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    array=\"$@\"\n    arr=($array)\n\
    \    # Sort array elements in ascending order.\n    IFS=$'\\n' sorted=($(sort\
    \ <<<\"${arr[*]}\"))\n    unset IFS\n    echo ${sorted[0]}\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -ra nums <<< \"$1\"\n\
    \  min=0\n  for (( i=0; i<${#nums[@]}; i++ )); do\n    min=$(( ${nums[i]} < $min\
    \ ? ${nums[i]} : $min ))\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a arr=($1)\n    local\
    \ -i curr=0\n    local -i min=0\n    local -i max=-$((1 << 64))\n    for i in\
    \ \"${arr[@]}\"; do\n        let curr+=i\n        min=${min:-$curr}\n        if\
    \ (( curr < min )); then\n            min=$curr\n        fi\n        if (( curr-min\
    \ > max )); then\n            max=$curr-min\n        fi\n    done\n    echo $max\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # Assert that the number\
    \ of arguments is at least 1\n    if [ $# -lt 1 ]; then\n        echo \"1\"\n\
    \        return 1\n    fi\n\n    local min_sum=0\n    local sum=0\n    for num\
    \ in $@; do\n        sum=$(( $sum + $num ))\n        if [ $sum -lt $min_sum ];\
    \ then\n            min_sum=$sum\n        fi\n    done\n    echo \"$min_sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local SORTED_LIST\n  local\
    \ MIN_SUM_ELEMENT\n  SORTED_LIST=($(echo \"$1\" | tr ' ' '\\n' | sort -n))\n \
    \ MIN_SUM_ELEMENT=${SORTED_LIST[0]}\n  echo \"$MIN_SUM_ELEMENT\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local n\n  local minSum\n \
    \ local newSum\n  for n in $1; do\n    if [[ -z \"${minSum}\" ]]; then\n     \
    \ minSum=${n}\n    else\n      newSum=$((${minSum} + ${n}))\n      if [[ $(echo\
    \ \"${newSum} < ${minSum}\" | bc -l) -eq 1 ]]; then\n        minSum=${newSum}\n\
    \      fi\n    fi\n  done\n  echo ${minSum}\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # Find the minimum sum of\
    \ any non-empty sub-array of the given array\n    #   ${#array[@]} is the number\
    \ of elements in the array\n    #   ${array[*]} is the space-separated string\
    \ of all elements in the array\n    #   For example, min $(minSubArraySum \"2\
    \ 3 4 1 2 4\") is 2+3+4+1+2+4 = 16\n    #   i.e. minSubArraySum \"2 3 4 1 2 4\"\
    \ = 16\n    min=${#1}\n    for ((i=0; i<min; i++)); do\n        for ((j=1; j<min;\
    \ j++)); do\n            # j is the length of the sub-array\n            # array[@:i:j]\
    \ returns a sub-array of length j starting at index i\n            # $(($i+$j))\
    \ is the last index of the sub-array\n            # ${array[@:i:j]} is the space-separated\
    \ list of the elements in the sub-array\n            # num=`awk '{print $1+$2+$3}'\
    \ <<< ${array[@:i:j]}`\n            # sum=`awk '{print $1+$2+$3}' <<< ${array[@:i:j]}`\n\
    \            # echo \"i=$i j=$j array[@:i:j]=${array[@:i:j]} num=$num sum=$sum\"\
    \n            # num=$((${array[@:i:j]}))\n            # sum=$((${array[@:i:j]}))\n\
    \            # sum=`awk '{print $1+$2+$3}' <<< ${array[@:i:j]}`\n            #\
    \ echo \"i=$i j=$j sum=$sum\"\n            # sum=`awk '{print sum+=$1}' <<< ${array[@:i:j]}`\n\
    \            # sum=`awk '{sum+=$1} END {print sum}' <<< ${array[@:i:j]}`\n   \
    \         # echo \"i=$i j=$j array[@:i:j]=${array[@:i:j]} sum=$sum\"\n       \
    \     sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuwtk57zf.sh: line 35: syntax error near unexpected token `}''

    /tmp/tmpuwtk57zf.sh: line 35: `}''

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    IFS=' ' read -r -a nums <<<\
    \ \"$1\"\n    let sum=0\n    let min_sum=0\n    let min_sum_i=0\n    for i in\
    \ \"${!nums[@]}\"; do\n        sum=$((sum + nums[i]))\n        if (( i > 0 ));\
    \ then\n            if ((sum < min_sum)); then\n                min_sum=$sum\n\
    \                min_sum_i=$i\n            fi\n        fi\n    done\n    let sum=0\n\
    \    for (( i=min_sum_i; i >= 0; i-- )); do\n        sum=$((sum + nums[i]))\n\
    \        if (( sum > min_sum )); then\n            break\n        fi\n    done\n\
    \    echo \"$min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    declare -a a=($1)\n    declare\
    \ min=${a[0]}\n    declare sum=0\n    for n in \"${a[@]}\"; do\n        let sum+=$n\n\
    \        if [[ $sum -lt $min ]]; then\n            let min=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            let sum=0\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Input:\n  # -1 -2 -3\n  #\n\
    \  # Output:\n  # -6\n  local IFS=\" \"\n  read -ra ARR <<<\"$1\"\n  local MIN=${ARR[0]}\n\
    \  local SUM=0\n  for n in \"${ARR[@]}\"; do\n    SUM=$((SUM + n))\n    SUM=$((SUM\
    \ < 0 ? 0 : SUM))\n    MIN=$((SUM < MIN ? SUM : MIN))\n  done\n  echo \"$MIN\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # From https://stackoverflow.com/a/35451548/4183498\n\
    \  # Bash doesn't support floating point arithmetic.\n  declare -a a=(\"$@\")\n\
    \n  # get the size of the array\n  local -i n=${#a[@]}\n\n  # init min sum and\
    \ min subarray boundaries\n  local -i minSum=999999999\n  local -i subArrMin=0\n\
    \  local -i subArrMax=0\n\n  # iterate through array\n  for ((i=0; i<n; i++));\
    \ do\n    # init local sum\n    local -i sum=0\n\n    # iterate through subarrays\
    \ starting at i\n    for ((j=i; j<n; j++)); do\n      # add next item to sum\n\
    \      sum+=${a[j]}\n\n      # update min sum and boundaries if necessary\n  \
    \    if [[ sum -lt minSum ]]; then\n        minSum=sum\n        subArrMin=i\n\
    \        subArrMax=j\n      fi\n    done\n  done\n\n  # return the minimum sum\n\
    \  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxpg7m60_.sh: line 32: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -i min\n    min=0\n\
    \    local -i sum\n    sum=0\n    for i in $@; do\n        (( sum += i ))\n  \
    \      if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local min_sum=$(echo \"$1\"\
    \ | awk '{print $1}')\n  local current_sum=$min_sum\n  local num\n\n  for num\
    \ in $1; do\n    current_sum=$((current_sum + num))\n    if [[ $current_sum -lt\
    \ $min_sum ]]; then\n      min_sum=$current_sum\n    fi\n    if [[ $current_sum\
    \ -gt 0 ]]; then\n      current_sum=0\n    fi\n  done\n\n  echo $min_sum\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local sum=0\n  local minSum=0\n\
    \  for num in $1; do\n    sum=$((sum + num))\n    if [[ $sum -lt $minSum ]]; then\n\
    \      minSum=$sum\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    arr=($1)\n    minSum=0\n\
    \    sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n       \
    \ if [ $sum -lt $minSum ]; then\n            minSum=$sum\n        fi\n    done\n\
    \    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local input=(\"$@\")\n  local\
    \ min_sum=${input[0]}\n  local sum=0\n  for (( i=0; i<${#input[@]}; i++ )); do\n\
    \    sum=0\n    for (( j=i; j<${#input[@]}; j++ )); do\n      sum=$(( sum + input[j]\
    \ ))\n      if [[ $sum -lt $min_sum ]]; then\n        min_sum=$sum\n      fi\n\
    \    done\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe0iowg_y.sh: line 18: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min=${1%% *}\n    for\
    \ num in $1; do\n        ((min > num)) && min=$num\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # This is the first solution\
    \ that came to mind, it's not the most elegant one\n  # and probably not the most\
    \ efficient one, but it works for now\n  (\n    local IFS=\" \"\n    local array=($1)\n\
    \    local len=${#array[@]}\n    local sum=0\n    local min_sum=0\n    local i=0\n\
    \    while [ $i -lt $len ]; do\n      sum=$(($sum + ${array[$i]}))\n      if [\
    \ $sum -lt $min_sum ]; then\n        min_sum=$sum\n      fi\n      if [ $sum -gt\
    \ 0 ]; then\n        sum=0\n      fi\n      i=$(($i + 1))\n    done\n    echo\
    \ $min_sum\n  )\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    nums=($1)\n    sum=0\n  \
    \  min=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum+=${nums[$i]}\n\
    \        if [ $sum -lt $min ]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  echo \"$1\" | awk '{ \n   \
    \ # a subarray must be of length 1 or greater\n    min = $1\n    sum = $1\n  \
    \  for (i = 2; i <= NF; i++) {\n      # update min\n      if (sum < 0) {\n   \
    \     min = sum\n      } else if (sum < min) {\n        min = sum\n      }\n \
    \     # update sum\n      sum += $i\n    }\n    # check the last sum again\n \
    \   if (sum < 0) {\n      min = sum\n    } else if (sum < min) {\n      min =\
    \ sum\n    }\n    print min\n  }'\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local total_min=0\n    local\
    \ min=0\n    for num in $@; do\n        min+=${num}\n        if [[ ${min} -lt\
    \ ${total_min} ]]; then\n            total_min=${min}\n        fi\n        if\
    \ [[ ${min} -gt 0 ]]; then\n            min=0\n        fi\n    done\n    echo\
    \ ${total_min}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local result=\"$1\"\n  local\
    \ -a nums=($result)\n  local length=${#nums[@]}\n  local min_result=$result\n\
    \  local i\n  local j\n  local tmp\n  for ((i=0; i<length; i++)); do\n    tmp=${nums[$i]}\n\
    \    for ((j=i+1; j<length; j++)); do\n      tmp=$(($tmp + ${nums[$j]}))\n   \
    \   min_result=$(($min_result < $tmp ? $min_result : $tmp))\n    done\n  done\n\
    \  echo $min_result\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5fpm_xrp.sh: line 23: 2 3 4 1 2 4 < 5 ? 2 3 4 1 2 4 : 5: syntax
    error in expression (error token is "3 4 1 2 4 < 5 ? 2 3 4 1 2 4 : 5")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local i j k=0 sum subarr curr_min\n\
    \  arr=($1)\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    subarr=\"\"\n    for\
    \ ((j=i; j<${#arr[@]}; j++)); do\n      subarr+=${arr[j]}\n      subarr+=\" \"\
    \n      sum=$(bc <<< \"$(echo $subarr)\")\n      if (( i == 0 && j == 0 )); then\n\
    \        curr_min=$sum\n      elif (( sum < curr_min )); then\n        curr_min=$sum\n\
    \      fi\n    done\n  done\n  echo $curr_min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a array=()\n  local\
    \ result=0\n  local lowest=0\n  read -a array <<< \"${1// /$'\\n'}\"\n  lowest=${array[0]}\n\
    \  for (( i=0; i<${#array[@]}; i++ )); do\n    result=$(( result + ${array[$i]}\
    \ ))\n    if [[ $result -lt $lowest ]]; then\n      lowest=$result\n    fi\n \
    \   if [[ $result -gt 0 ]]; then\n      result=0\n    fi\n  done\n  echo $lowest\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local ret=$(echo \"$@\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n    echo \"$ret\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local arr=( $1 )\n\n    #\
    \ Use a sliding window to find every sub-array\n    local min=${arr[0]}\n    local\
    \ head=0\n    local tail=0\n    local sum=0\n    while true; do\n        # The\
    \ window is at the end of the list, so there are no other\n        # sub-arrays\
    \ to consider.\n        if [ $tail -eq ${#arr[@]} ]; then\n            break\n\
    \        fi\n\n        # Expand the sliding window\n        local num=${arr[$tail]}\n\
    \        sum=$((sum + num))\n        min=$((min < sum ? min : sum))\n\n      \
    \  # If the sum is negative, the window can be shrunk from the front\n       \
    \ if [ $sum -lt 0 ]; then\n            head=$((head + 1))\n            tail=$head\n\
    \            sum=0\n        else\n            tail=$((tail + 1))\n        fi\n\
    \    done\n\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array=($1)\n    local\
    \ m_sum=${array[0]}\n    local s_sum=${array[0]}\n    for i in ${array[@]:1}\n\
    \    do\n        s_sum=$(($s_sum+$i))\n        [ $s_sum -lt $m_sum ] && m_sum=$s_sum\n\
    \        [ $s_sum -gt 0 ] && s_sum=0\n    done\n    echo $m_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local n=${#1}\n  local dp=()\
    \ # dp[i] is the min sum up to index i\n  local min=0\n\n  for ((i=0; i<n; i++));\
    \ do\n    local num=${1[i]}\n    if ((i == 0)); then\n      dp[i]=$num\n    else\n\
    \      dp[i]=$((dp[i-1] < 0 ? num : dp[i-1] + num))\n    fi\n    if ((i == 0 ||\
    \ dp[i] < min)); then\n      min=${dp[i]}\n    fi\n  done\n\n  echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplhua6y0r.sh: line 17: num=${1[i]}: bad substitution

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Write your code here\n  local\
    \ minSum=0\n  for num in $@; do\n    minSum=$(( $minSum + $num ))\n  done\n  for\
    \ (( i=0; i<$#; i++ )); do\n    local sum=0\n    for (( j=i; j<$#; j++ )); do\n\
    \      sum=$(( $sum + ${@:j+1:1} ))\n      if (( $sum < $minSum )); then\n   \
    \     minSum=$sum\n      fi\n    done\n  done\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp42swk9_5.sh: line 20: 0 + 2 3 4 1 2 4 : syntax error in expression
    (error token is "3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=(${1// / })\n  local\
    \ minimum=${nums[0]}\n  local i=0\n\n  while [ $i -lt ${#nums[@]} ]; do\n    local\
    \ sum=0\n    for j in \"${nums[@]:$i}\"; do\n      sum=$((sum + j))\n      if\
    \ [ $sum -lt $minimum ]; then\n        minimum=$sum\n      fi\n    done\n    ((i++))\n\
    \  done\n\n  echo $minimum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a _list=(\"$@\")\n \
    \ local -a sum\n  local _min=${_list[0]}\n  local _max=${_list[0]}\n  local _currentSum=0\n\
    \  for ((i=0; i<${#_list[@]}; i++)); do\n    if [[ ${_list[$i]} -lt $_min ]];\
    \ then\n      _min=${_list[$i]}\n    fi\n    if [[ ${_list[$i]} -gt $_max ]];\
    \ then\n      _max=${_list[$i]}\n    fi\n    _currentSum=$((_currentSum + ${_list[$i]}))\n\
    \    if [[ $_currentSum -lt $_min ]]; then\n      _min=$_currentSum\n    fi\n\
    \    if [[ $_currentSum -gt $_max ]]; then\n      _max=$_currentSum\n    fi\n\
    \    sum[$i]=$_currentSum\n  done\n  for ((i=0; i<${#sum[@]}; i++)); do\n    for\
    \ ((j=0; j<${#sum[@]}; j++)); do\n      local _diff=$((sum[$j] - sum[$i]))\n \
    \     if [[ $_diff -lt $_min ]]; then\n        _min=$_diff\n      fi\n    done\n\
    \  done\n  echo $_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps32vtagb.sh: line 18: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmps32vtagb.sh: line 21: [[: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmps32vtagb.sh: line 24: _currentSum + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    # your code goes here\n \
    \   local nums=(${1// / })\n    local len=${#nums[@]}\n    local min_sum=${nums[0]}\n\
    \    local prev_sum=0\n    local curr_sum=0\n    for ((i=0; i<len; i++)); do\n\
    \        curr_sum=$((prev_sum + nums[i]))\n        if ((curr_sum > 0)); then\n\
    \            prev_sum=$curr_sum\n        else\n            prev_sum=0\n      \
    \  fi\n        if ((curr_sum < min_sum)); then\n            min_sum=$curr_sum\n\
    \        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  printf \"%s\\n\" \"$1\" | \\\
    \n    awk 'BEGIN {min=999} {if ($1<min) min=$1} END {print min}'\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr=($1)\n  local min\
    \ sum\n  min=${arr[0]}\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=0\n    for\
    \ ((j=i; j<${#arr[@]}; j++)); do\n      sum=$((sum + arr[j]))\n      if ((sum\
    \ < min)); then\n        min=$sum\n      fi\n    done\n  done\n  echo $min\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  s=($1)\n  min_sum=${s[0]}\n\
    \  curr_sum=${s[0]}\n  for x in ${s[@]:1}; do\n    ((curr_sum+=x))\n    if ((x<curr_sum));\
    \ then\n      curr_sum=x\n    fi\n    if ((curr_sum<min_sum)); then\n      min_sum=curr_sum\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array=($1)\n  local min=${array[0]}\n\
    \  local sum=0\n  for (( i=0; i<${#array[@]}; i++ )); do\n    sum=$(($sum + ${array[$i]}))\n\
    \    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt\
    \ 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arr\n  # Convert string\
    \ to array\n  read -a arr <<< \"$1\"\n  local n\n  n=${#arr[@]}\n  if (( n ==\
    \ 0 )); then\n    echo 0\n    return\n  fi\n  local min=0\n  local s=0\n  local\
    \ i\n  for (( i = 0; i < n; i++ )); do\n    (( s += arr[i] ))\n    (( s < min\
    \ )) && min=$s\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -r nums=$1\n  local min_sum=0\n\
    \  local curr_sum=0\n  for num in $nums; do\n    curr_sum=$(( $curr_sum + $num\
    \ ))\n    if [[ $curr_sum -lt $min_sum ]]; then\n      min_sum=$curr_sum\n   \
    \ fi\n    if [[ $curr_sum -gt 0 ]]; then\n      curr_sum=0\n    fi\n  done\n \
    \ echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min=$1\n    shift\n\
    \    for n in $@; do\n        (( min > n && (min=n) ))\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums=($1)\n  local\
    \ smallest_sum=0\n  local current_sum=0\n  local sum=0\n  local temp_min\n  local\
    \ temp_sum\n  for i in ${nums[@]}; do\n    current_sum=$((i+current_sum))\n  \
    \  if [[ current_sum -lt 0 ]]; then\n      current_sum=0\n    fi\n    if [[ smallest_sum\
    \ -eq 0 || current_sum -lt smallest_sum ]]; then\n      smallest_sum=$current_sum\n\
    \    fi\n    if [[ i -lt 0 ]]; then\n      sum=$((sum+i))\n    fi\n  done\n  if\
    \ [[ smallest_sum -eq 0 ]]; then\n    echo \"$sum\"\n  else\n    echo \"$smallest_sum\"\
    \n  fi\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local input=$1\n    local\
    \ -a split=(${input// / })\n    local -a sums=()\n    sums[0]=$((${split[0]}))\n\
    \    local min=${sums[0]}\n    for ((i=1; i<${#split[@]}; i++)); do\n        sums[i]=$((${sums[i-1]}\
    \ + ${split[i]}))\n        if [[ ${sums[i]} -lt $min ]]; then\n            min=${sums[i]}\n\
    \        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -r -a a <<<\"$1\"\n\n\
    \  for (( i=0; i<${#a[@]}; i++ )); do\n    [[ ${a[$i]} -lt 0 ]] && min=${a[$i]}\
    \ || min=0\n    sub_sum=0\n    for (( j=i; j<${#a[@]}; j++ )); do\n      sub_sum=$((\
    \ sub_sum + ${a[$j]} ))\n      [[ $sub_sum -lt $min ]] && min=$sub_sum\n    done\n\
    \  done\n\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  IFS=' ' read -r -a array <<<\
    \ \"$1\"\n  min=0\n  max=0\n  for element in \"${array[@]}\"; do\n    max=$((\
    \ max + element ))\n    if [[ $max -lt $min ]]; then\n      min=$max\n    fi\n\
    \    if [[ $max -gt 0 ]]; then\n      max=0\n    fi\n  done\n  echo \"$min\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums=($@)\n  if [[\
    \ ${#nums[@]} -eq 0 ]]; then\n    echo 0\n    return\n  fi\n  local minSum=${nums[0]}\n\
    \  local currSum=${nums[0]}\n  for ((i=1; i<${#nums[@]}; i++)); do\n    currSum=$((\
    \ currSum + nums[i] ))\n    if [[ currSum -lt minSum ]]; then\n      minSum=$currSum\n\
    \    fi\n    if [[ currSum -gt 0 ]]; then\n      currSum=0\n    fi\n  done\n \
    \ echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -A a\n  local sum=0\
    \ count=$#\n  while (( $# > 0 )); do\n    a[\"$sum\"]=\"$1\"\n    ((sum += $1))\n\
    \    shift\n  done\n  local min=$sum\n  for ((i=0; i < count; i++)); do\n    local\
    \ tmp=\"${a[$i]}\"\n    for ((j=i+1; j < count; j++)); do\n      local tmp=\"\
    $tmp ${a[$j]}\"\n      if (( tmp < min )); then\n        min=$tmp\n      fi\n\
    \    done\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwk3al7nf.sh: line 16: ((: sum += 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  min=\"${1}\"\n  for n in ${@:2};\
    \ do\n    if (( n < min )); then\n      min=${n}\n    fi\n  done\n  echo \"${min}\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array\n  array=($@)\n\
    \  local n\n  local i\n  local curSum\n  local minSum\n  n=${#array[@]}\n  if\
    \ (( n < 1 )); then\n    echo \"0\"\n    return\n  fi\n  curSum=0\n  minSum=${array[0]}\n\
    \  for (( i=0; i<n; i++ )); do\n    curSum=${array[i]}\n    if (( curSum < minSum\
    \ )); then\n      minSum=$curSum\n    fi\n    for (( j=i+1; j<n; j++ )); do\n\
    \      curSum=$(( curSum + array[j] ))\n      if (( curSum < minSum )); then\n\
    \        minSum=$curSum\n      fi\n    done\n  done\n  echo \"$minSum\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=($1)\n  local len=${#nums[@]}\n\
    \  local currentSum=0\n  local minimumSum=0\n  for ((i=0; i<len; i++)); do\n \
    \   ((currentSum += nums[i]))\n    if [[ $currentSum -lt $minimumSum ]]; then\n\
    \      minimumSum=$currentSum\n    fi\n    if [[ $currentSum -gt 0 ]]; then\n\
    \      currentSum=0\n    fi\n  done\n  echo $minimumSum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local n=($1)\n    local min=0\n\
    \    local sum=0\n    for ((i=0; i<${#n[@]}; i++)); do\n        sum=$(($sum +\
    \ ${n[$i]}))\n        if (($sum < $min)); then\n            min=$sum\n       \
    \ fi\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  readarray -t arr < <(echo \"\
    $1\")\n  min=0\n  sum=0\n  for((i=0;i<${#arr[@]};i++)); do\n    sum=$((sum+arr[i]))\n\
    \    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb39gc10l.sh: line 16: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a arr=(\"$@\")\n \
    \   local min=${arr[0]}\n    local curr=$min\n    local n=${#arr[@]}\n    for\
    \ ((i=1; i<n; i++)); do\n        if [[ $curr -gt 0 ]]; then\n            curr=${arr[i]}\n\
    \        else\n            curr=$((curr + ${arr[i]}))\n        fi\n        if\
    \ [[ $curr -lt $min ]]; then\n            min=$curr\n        fi\n    done\n  \
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=($1)\n    local\
    \ ans=$(echo \"${nums[@]}\" | tr ' ' '\\n' | sort -n)\n    local min=$(echo \"\
    $ans\" | head -n 1)\n    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read\
    \ -r -a nums <<< \"$1\"\n  # min_sum[i] stores the minimum sum from 0 to index\
    \ i.\n  local -a min_sum=(0)\n  # min_so_far is the minimum sum of any sub-array\
    \ ending at index i.\n  local min_so_far=0\n  for ((i=0; i<${#nums[@]}; i++));\
    \ do\n    # The sum of any sub-array ending at index i.\n    local sum_i=$((min_sum[i]\
    \ + nums[i]))\n    # The minimum of the sum of any sub-array ending at index i\
    \ and the minimum\n    # sum of any sub-array ending at index i-1.\n    min_so_far=$((sum_i\
    \ < min_so_far ? sum_i : min_so_far))\n    # The minimum sum of any sub-array\
    \ ending at index i.\n    min_sum[i+1]=$((sum_i < 0 ? 0 : sum_i))\n  done\n  echo\
    \ \"$min_so_far\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  local min_so_far\
    \ curr_min=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    # If we want the\
    \ min of the first n elements, find the min of first n-1\n    # elements and the\
    \ nth element.\n    #   a[0:n] = min(a[0:n-1], a[n])\n    # If we want the min\
    \ of first n+1 elements, find the min of first n elements\n    # and the sum of\
    \ the nth and n+1st elements.\n    #   a[0:n+1] = min(a[0:n], a[n]+a[n+1])\n \
    \   # If we want the min of first n+k elements, find the min of first n elements\n\
    \    # and the sum of the nth through n+kth elements.\n    #   a[0:n+k] = min(a[0:n],\
    \ a[n]+a[n+1]+...+a[n+k])\n    # Assume we have a partial sum s[i] = a[0]+a[1]+...+a[i].\n\
    \    #   s[i] = s[i-1] + a[i]\n    #   a[0:n+k] = min(a[0:n], s[n+k]-s[n-1])\n\
    \    curr_min=$((arr[i]<curr_min?arr[i]:curr_min))\n    min_so_far=$((min_so_far<curr_min?min_so_far:curr_min))\n\
    \  done\n  echo $min_so_far\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprn4tv_yx.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    nums=($1)\n    len=${#nums[@]}\n\
    \    min_sum=0\n    if [ ${nums[0]} -lt $min_sum ]; then\n        min_sum=${nums[0]}\n\
    \    fi\n    current_sum=0\n    for (( i=0; i<$len; i++ )); do\n        if [ $(($current_sum\
    \ + ${nums[$i]})) -lt 0 ]; then\n            current_sum=0\n        else\n   \
    \         current_sum=$(($current_sum + ${nums[$i]}))\n            if [ $current_sum\
    \ -lt $min_sum ]; then\n                min_sum=$current_sum\n            fi\n\
    \        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021981
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    declare -a list\n    # Turn\
    \ argument string into an array\n    IFS=' ' read -r -a list <<< \"$1\"\n    #\
    \ Accumulate at index 0\n    declare -i a=0\n    # Accumulate at index 1\n   \
    \ declare -i b=0\n    for i in \"${list[@]}\"; do\n        # Accumulate in reverse\
    \ if negative\n        if [[ $i -lt 0 ]]; then\n            if [[ $b -lt $a ]];\
    \ then\n                a=$a+$i\n            else\n                b=$b+$i\n \
    \           fi\n        else\n            # Accumulate in forward if positive\n\
    \            if [[ $a -lt $b ]]; then\n                a=$a+$i\n            else\n\
    \                b=$b+$i\n            fi\n        fi\n    done\n    # For an odd\
    \ length, the last element is not accumulated\n    if [[ ${#list[@]}%2 -ne 0 ]];\
    \ then\n        if [[ $a -lt $b ]]; then\n            a=$a+${list[-1]}\n     \
    \   else\n            b=$b+${list[-1]}\n        fi\n    fi\n    # The accumulation\
    \ is almost the same as the array sum\n    declare -i sum=$(printf \"%s\\n\" \"\
    ${list[@]}\" | tr ' ' '+' | bc)\n    # The minSubArraySum will be the difference\
    \ of the accumulate and the sum\n    if [[ $a -lt $b ]]; then\n        echo $((sum-a))\n\
    \    else\n        echo $((sum-b))\n    fi\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6tcmfid1.sh: line 45: declare: 2

    3

    4

    1

    2

    4: syntax error in expression (error token is "3

    4

    1

    2

    4")

    '
  stdout: ''
  timestamp: 1660021981

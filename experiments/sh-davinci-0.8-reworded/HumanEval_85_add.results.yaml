language: sh
name: HumanEval_85_add
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local out=\"\
    \"\n    local len=${#lst[@]}\n    local e\n    for ((i=1; i<$len; i+=2)); do\n\
    \        e=${lst[$i]}\n        if [ $(($e % 2)) -eq 0 ]; then\n            out=\"\
    $out $e\"\n        fi\n    done\n    echo $out\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=$1\n    res=0\n    for i in\
    \ $lst; do\n        res=$((res + $i))\n    done\n    echo $res\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  local i=0\n  while [ $i -lt ${#lst[@]} ]; do\n    if [[ $((i % 2)) -eq 1 &&\
    \ $((lst[i] % 2)) -eq 0 ]]; then\n      ((sum += lst[i]))\n    fi\n    ((i++))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  for v in $1; do\n    if [ $(( v\
    \ % 2 )) -eq 0 ] && [ $(( $c % 2 )) -ne 0 ]; then\n      echo -n \"$v \"\n   \
    \ fi\n    c=$((c+1))\n  done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptvrx01dr.sh: line 10: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local o=\"\
    \"\n    local i=0\n    for l in $lst; do\n        if [ $(($i % 2)) -eq 1 ] &&\
    \ [ $(($l % 2)) -eq 0 ]; then\n            o=\"$o$l \"\n        fi\n        i=$(($i\
    \ + 1))\n    done\n    echo \"$o\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local sum=0\n  local lst=($1)\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    ((i%2==1)) && ((sum+=lst[i]))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # TODO: implement\n    echo $@\
    \ | sed -r 's/\\S+/\\L&/g'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local result=()\n    local array=(\"\
    $@\")\n\n    for i in \"${!array[@]}\"; do\n        (( i % 2 == 0 )) && (( array[i]\
    \ % 2 == 0 )) && result+=(\"${array[i]}\")\n    done\n\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp6pedur9.sh: line 13: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo $1 | awk '{for(i=1;i<=NF;i+=2)\
    \ print $i}'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  if [[ -z $1 ]]; then\n    echo \"\
    error: first argument is a space-separated list of integers\"\n    return 1\n\
    \  fi\n\n  local arr=($1)\n  local i=0\n  local sum=0\n  for num in \"${arr[@]}\"\
    ; do\n    if [[ $((i % 2)) -eq 1 && $((num % 2)) -eq 0 ]]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    for i in $1; do\n        if [\
    \ $(( $i % 2 )) -eq 0 ]; then\n            echo $i\n        fi\n    done\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  #your code here\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmptd6_abos.sh: line 10: syntax error near unexpected token `}''

    /tmp/tmptd6_abos.sh: line 10: `}''

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n   local lst=\"$@\"\n   local evenOdd=\"\
    \"\n   local i=0\n   for e in ${lst[@]}; do\n      if ((e % 2 == 0)); then\n \
    \        evenOdd+=\" $e\"\n      fi\n      ((i++))\n   done\n   echo $evenOdd\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local result=$(paste -sd '+' <<<\
    \ $1)\n  local nums_list=$(sed 's/[+0-9]//g' <<< $result)\n  local sum=$(eval\
    \ \"echo $result\")\n  local remainder=$(($sum % 2))\n  if [[ $remainder -eq 0\
    \ ]]; then\n    echo $(sed 's/[^+]*//g' <<< $result)\n  else\n    echo $nums_list\n\
    \  fi\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdpzxl6vx.sh: line 12: 4 88 % 2: syntax error in expression (error
    token is "88 % 2")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($@)\n  local _sum=0\n\
    \  local _i=0\n  while [ $_i -lt ${#lst[@]} ]; do\n    (( ${lst[$_i]} % 2 == 0\
    \ )) && (( $_i % 2 == 1 )) && (( _sum += ${lst[$_i]} ))\n    (( _i++ ))\n  done\n\
    \  echo $_sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq\
    \ 1 ${#1})\n    do\n        local num=$(echo \"$1\" | cut -d ' ' -f $i)\n    \
    \    local even=$(($num % 2))\n        if [[ $even -eq 0 ]] && [[ $(($i % 2))\
    \ -ne 0 ]]\n        then\n            sum=$(($sum + $num))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5oaj_lgi.sh: line 13: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  s=()\n  for i in $1; do\n    ((i\
    \ % 2)) && s+=(\"$i\")\n  done\n  echo \"${s[@]}\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # store the list of arguments in\
    \ a variable called args\n  args=$1\n  # stores the output for the function\n\
    \  res=\"\"\n  # index for the loop below\n  index=0\n  # iterate over every element\
    \ in the list\n  for i in $args; do\n    # if the index is odd and the number\
    \ is even\n    if [ $(($index % 2)) -ne 0 ] && [ $(($i % 2)) -eq 0 ]; then\n \
    \     # append to res\n      res=$(($res + $i))\n    fi\n    # increment the index\n\
    \    index=$(($index + 1))\n  done\n  # return the output\n  echo $res\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # Modify the string to generate\
    \ a new array\n    local result=\"$(echo $1 | sed 's/[0-9]*/\\0-/g')\"\n    for\
    \ ((i=0; i<${#result}; i++)); do\n        if [ \"${result:$i:1}\" = \"-\" ]; then\n\
    \            # slice into two variables\n            left=$(echo $result | cut\
    \ -c 1-$i)\n            right=$(echo $result | cut -c $((i+1))-)\n           \
    \ break\n        fi\n    done\n    echo $left$right\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($1)\n    for i in `seq 0\
    \ $((${#lst[@]} - 1))`; do\n        if [ $(($i % 2)) -eq 1 ] && [ $((${lst[$i]}\
    \ % 2)) -eq 0 ]; then\n            echo \"${lst[$i]}\"\n        fi\n    done\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    s=$(echo $1 | tr \" \" \"\\n\"\
    )\n    even=\"\"\n    for e in $s; do\n        if ((e % 2 == 0)); then\n     \
    \       even=\"$even $e\"\n        fi\n    done\n    echo $even\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlocal -a numbers=($1)\n\techo ${numbers[@]:1:$((${#numbers[@]}\
    \ - 1)):2} | (tr ' ' '+' | bc)\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpncwbnnfs.sh: line 10: numbers[@]: 1:2: syntax error in expression
    (error token is ":2")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local x=0\n    local i=0\n   \
    \ local ret=\"\"\n    for x in $1; do\n        if [ $i -eq 1 ]; then\n       \
    \     ret=\"$ret $x\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $ret\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local IFS=$'\\n'\n    local arr=($(echo\
    \ $1 | tr \" \" \"\\n\"))\n    local n=$(( ${#arr[@]} - 1 ))\n    local sum=0\n\
    \    for i in `seq 0 $n`; do\n        if [ $(( i % 2 )) -ne 0 ] && [ $(( arr[i]\
    \ % 2 )) -eq 0 ]; then\n            sum=$(( sum + arr[i] ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    i=0\n    # 1. split the space-separated\
    \ list\n    # 2. iterate over it\n    # 3. check if the number is even, and if\
    \ it is at an odd index\n    # 4. sum it if (3) is true\n    # 5. print the sum\n\
    \    for num in $(echo $1); do\n        if [[ $(expr $i % 2) -eq 1 && $(expr $num\
    \ % 2) -eq 0 ]]; then\n            if [[ -z $sum ]]; then\n                sum=0\n\
    \            fi\n            sum=$(expr $sum + $num)\n        fi\n        i=$(expr\
    \ $i + 1)\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlocal sum=0\n\tfor i in $(echo $1\
    \ | tr \" \" \"\\n\"); do\n\t\tif [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ];\
    \ then\n\t\t\tsum=$((sum + i))\n\t\tfi\n\tdone\n\techo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    #if the list is empty or first\
    \ element is empty\n    if [ -z \"$1\" ] || [ -z \"$(echo $1 | cut -d \" \" -f\
    \ 1)\" ]; then\n        echo 0\n    else\n        sum=0\n        list=($1)\n \
    \       for (( i=0; i<${#list[@]}; i++ )); do\n            #if the ith element\
    \ is even\n            if (( ${list[$i]} % 2 == 0 )); then\n                #if\
    \ the index is odd\n                if (( $i % 2 != 0 )); then\n             \
    \       sum=$(( $sum + ${list[$i]} ))\n                fi\n            fi\n  \
    \      done\n        echo $sum\n    fi\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local IFS=\" \"\n    local x y\n\
    \    local result=0\n    for x in $1; do\n        for y in $1; do\n          \
    \  if [ $x -eq $y ]; then\n                result=$((result + x))\n          \
    \  fi\n        done\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    for i in $(seq\
    \ 0 ${#lst[@]}); do\n        if (( (i+1) % 2 != 0 )); then\n            if ((\
    \ lst[i] % 2 == 0 )); then\n                echo ${lst[i]}\n            fi\n \
    \       fi\n    done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$@\" | awk '{\n       \
    \ for (i = 1; i <= NF; i++) {\n            if ((i % 2) && ($i % 2 == 0)) {\n \
    \               if (sum) {\n                    sum = sum \" + \" $i\n       \
    \         } else {\n                    sum = $i\n                }\n        \
    \    }\n        }\n        print sum\n    }'\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local i=0\n  while read -r e; do\n\
    \    if [[ $(($i%2)) == 1 && $(($e%2)) == 0 ]]; then\n      echo -n $e\n    fi\n\
    \    i=$(($i+1))\n  done <<< \"$1\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -n lst=$1\n    local sum=0\n\
    \    for i in $(seq 1 2 ${#lst[@]}); do\n        sum=$((sum + lst[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpupc0zqsh.sh: line 9: local: `4 88'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  if [ $# -eq 0 ]; then\n    return\
    \ 0\n  fi\n  res=\"\"\n  # split space-separated list in array\n  arr=($1)\n \
    \ for (( i=1; i<${#arr[@]}; i+=2 )); do\n    if [ $((${arr[$i]} % 2)) -eq 0 ];\
    \ then\n      res=$(($res + ${arr[$i]}))\n    fi\n  done\n  echo $res\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    sum=0\n    for i in $(echo $1\
    \ | tr \" \" \"\\n\")\n    do\n        sum=$((sum + i))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # your code here\n  lst=($1)\n \
    \ sum=0\n  for (( i=1; i<${#lst[@]}; i+=2)); do\n    if [[ $((${lst[$i]} % 2))\
    \ -eq 0 ]]; then\n      sum=$(($sum + ${lst[$i]}))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=$(echo $1 | tr ' ' '\\n')\n\
    \    for ((i=0; i<$(echo $lst | wc -w); i++)); do\n        if [[ $(($i % 2)) ==\
    \ 1 ]]; then\n            num=$(echo $lst | cut -d' ' -f$(($i+1)))\n         \
    \   if [[ $(($num % 2)) == 0 ]]; then\n                echo -n $num\n        \
    \    fi\n        fi\n    done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  IFS=' ' read -ra nums <<< \"$1\"\
    \n\n  result=()\n  for i in \"${!nums[@]}\"; do\n    if (( (i % 2) != 0 )); then\n\
    \      result+=(${nums[$i]})\n    fi\n  done\n\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  declare -a arr\n  arr=($1)\n  sum=0\n\
    \  for((i=1;i<${#arr[@]};i+=2)); do\n    if [[ $((arr[i] % 2)) -eq 0 ]]; then\n\
    \      sum=$((sum + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  eval printf %.1f \"$(echo \"$1\"\
    \ | awk '{for(i=1;i<=NF;i+=2) print $i}' | grep '^[0-9\\.]*$' | awk '{a+=$1}END{print\
    \ a}')\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local a=''\n  local b=''\n  for\
    \ i in $1; do\n    (( ${i} % 2 == 0 )) && {\n      # even number\n      (( ${i}\
    \ % 4 == 0 )) && a+=\"${i} \"\n    } || {\n      # odd number\n      (( ${i} %\
    \ 3 == 0 )) && b+=\"${i} \"\n    }\n  done\n  echo \"${a}${b}\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  counter=0\n  for i in $1\n  do\n\
    \    let counter=counter+1\n    if [ $counter -gt 1 ]; then\n      if [ $(expr\
    \ $counter % 2) -eq 1 ]; then\n        if [ $(expr $i % 2) -eq 0 ]; then\n   \
    \       sum=$(expr $sum + $i)\n        fi\n      fi\n    fi\n  done\n  echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local temp=0\n    local out=0\n\
    \    for i in $1\n    do\n        if [ $((temp%2)) -eq 1 ] && [ $((i%2)) -eq 0\
    \ ]\n        then\n            out=$((out+i))\n        fi\n        temp=$((temp+1))\n\
    \    done\n    echo $out\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  echo \"$lst\"\
    \ | sed -r 's/([0-9]+)/ \\1\\n/g' | awk 'NR%2==0{print $1}' | sed -r 's/ /+/g'\
    \ | bc\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for index in ${!lst[@]}; do\n        if [ $(($index % 2)) -ne 0 ] && [ $((${lst[$index]}\
    \ % 2)) -eq 0 ]; then\n            sum=$(($sum + ${lst[$index]}))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    output=\"\"\n    while read -r\
    \ line; do\n        if [ $((line % 2)) -eq 0 ]; then\n            output+=\"${line}\
    \ \"\n        fi\n    done <<< $1\n    echo $output\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd0_4wnc8.sh: line 11: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    s=$(echo $1 | sed 's/ /+/g')\n\
    \    c=$(echo \"$s\" | bc)\n    echo $c\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  lst=$(echo $1 | sed 's/ /,/g')\n\
    \  lst=(${lst//,/ })\n  length=${#lst[@]}\n  sum=0\n  # [array] https://stackoverflow.com/questions/13648437/how-to-print-an-array-in-bash\n\
    \  # [index] https://stackoverflow.com/questions/35156838/getting-index-of-array-item-with-bash\n\
    \  for i in \"${!lst[@]}\"; do\n    x=${lst[$i]}\n    if (( $(echo \"$x % 2 ==\
    \ 0\" | bc -l) )) && ((i % 2 == 1)); then\n      sum=$(echo \"$sum + $x\" | bc\
    \ -l)\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local -a a\n  local len i t\n  IFS='\
    \ ' read -ra a <<< \"$1\"\n  len=${#a[@]}\n  for ((i=1; i<len; i+=2)); do\n  \
    \  t=$((a[i] + t))\n  done\n  echo \"$t\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlocal list=$1\n\tlocal result=\"\
    \"\n\tfor ((i=0; i<${#list}; i++)); do\n\t\tif (($((i % 2)) != 0)); then\n\t\t\
    \tif (($((list[i] % 2)) == 0)); then\n\t\t\t\tresult=$result+$((list[i]))\n\t\t\
    \tfi\n\t\tfi\n\tdone\n\techo \"$result\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local input=($1)\n  local length=${#input[@]}\n\
    \  local output\n  for i in $(seq 0 $((length-1))); do\n    if [[ $((i%2)) -eq\
    \ 1 ]] && [[ $((input[i]%2)) -eq 0 ]]; then\n      output=$((output+input[i]))\n\
    \    fi\n  done\n  echo $output\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use print_generic / print_integer\
    \ / print_string\n    a=\"$1\"\n    l=${#a}\n    sum=0\n    for (( i=0; i<$l;\
    \ i++ ));\n    do\n        (( i%2 == 0 && a[i]%2 != 0 )) && sum=$((sum+a[i]))\n\
    \    done\n    print_integer $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzca6xzg6.sh: line 16: ((: 4 88: syntax error in expression (error
    token is "88")

    /tmp/tmpzca6xzg6.sh: line 18: print_integer: command not found

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    for (( i=1; i<$#; i+=2 )); do\n\
    \        if (( ${@:$i:1} % 2 == 0 )); then\n            echo -n \"${@:$i:1} \"\
    \n        fi\n    done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo $1 | tr ' ' '\\n' | awk 'NR\
    \ % 2 == 0' | awk '$1 % 2 == 0' | tr '\\n' '+' | head -c -1 | bc\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local array\n    array=( $1 )\n\
    \    local result=\"0\"\n    for (( i=1; i<${#array[@]}; i+=2 )); do\n       \
    \ result=$(( result + array[i] ))\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    declare -i\
    \ sum=0\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        # all the odd indices\n\
    \        if (( i % 2 != 0 )) ; then\n            if (( lst[i] % 2 == 0 )) ; then\n\
    \                sum+=lst[i]\n            fi\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local input=($@)\n    local result=0\n\
    \    for (( i=1; i<${#input[@]}; i+=2 )); do\n        (( result += input[i] %\
    \ 2 == 0 ? input[i] : 0 ))\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    sum=0\n    i=0\n    for number\
    \ in $1; do\n        ((i=i+1))\n        if [ $((i%2)) -eq 1 ] && [ $((number%2))\
    \ -eq 0 ]; then\n            ((sum=sum+number))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a list=(\"$@\")\n    local\
    \ -i i=0\n    local -i sum=0\n    for ((i=1; i<${#list[@]}; i+=2)); do\n     \
    \   if [[ ${list[$i]}%2 -eq 0 ]]; then\n            ((sum+=${list[$i]}))\n   \
    \     fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlocal list\n\tIFS=' ' read -r -a\
    \ list <<< \"$1\"\n\tlocal sum=0\n\n\tfor i in \"${!list[@]}\"; do\n\t\tif ((i\
    \ % 2 == 1)) && ((list[i] % 2 == 0)); then\n\t\t\t((sum+=list[i]))\n\t\tfi\n\t\
    done\n\n\techo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local list=\"$1\"\n    local list_len=$(echo\
    \ $list | wc -w)\n    local sum=0\n    for (( i=1; i<=$list_len; i++ )); do\n\
    \        local n=$(echo $list | cut -d' ' -f$i)\n        if (( $(($i % 2)) ==\
    \ 1 )) && (( $(($n % 2)) == 0 )); then\n            (( sum += n ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local list_in=$1\n    local list_out=\"\
    \"\n    local i=0\n    for elem in $list_in; do\n        if [ $((i%2)) -eq 1 ]\
    \ && [ $((elem%2)) -eq 0 ]; then\n            list_out=\"$list_out $elem\"\n \
    \       fi\n        ((i++))\n    done\n    echo $list_out\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # your solution here\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpfe2330ub.sh: line 10: syntax error near unexpected token `}''

    /tmp/tmpfe2330ub.sh: line 10: `}''

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=( $1 )\n  local i=0\n\
    \  while [ $i -lt ${#lst[@]} ]; do\n    if [ $(( i % 2 )) -eq 1 ] && [ $(( lst[i]\
    \ % 2 )) -eq 0 ]; then\n      echo -n \"${lst[i]} \"\n    fi\n    i=$(( i + 1\
    \ ))\n  done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    IFS=\" \" read -r -a arr <<< \"\
    $1\"\n    out=\"\"\n    i=0\n    while [[ $i -lt ${#arr[@]} ]]; do\n        if\
    \ [[ $((i % 2)) -eq 1 ]] && [[ $((arr[i] % 2)) -eq 0 ]]; then\n            out=\"\
    $out ${arr[i]}\"\n        fi\n        ((i++))\n    done\n    echo $out\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  declare -a lst=($1)\n  declare -i\
    \ sum=0\n  for ((i=1; i<${#lst[@]}; i+=2)); do\n    (( ${lst[$i]} % 2 == 0 ))\
    \ && (( sum += ${lst[$i]} ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  temp=$(echo \"$1\" | tr ' ' '\\\
    n')\n  count=0\n  sum=0\n  for i in $temp; do\n    if ((count % 2 == 1)) && ((i\
    \ % 2 == 0)); then\n      sum=$((sum + i))\n    fi\n    count=$((count + 1))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$1\" | awk '{for(i=1;i<=NF;i++)\
    \ if(i%2 && !(i%2)) print $i}'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlst=($1)\n\tsum=0\n\tfor i in `seq\
    \ 0 $(( ${#lst[@]} - 1 ))`; do\n\t\tif [ $((i % 2)) -ne 0 ]; then\n\t\t\tif [\
    \ $(( ${lst[$i]} % 2 )) -eq 0 ]; then\n\t\t\t\tsum=$((sum + ${lst[$i]}))\n\t\t\
    \tfi\n\t\tfi\n\tdone\n\techo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    sum=0\n    # iterate over space-separated\
    \ arguments\n    for i in $@; do\n        (( sum+=$i ))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    local counter=0\n\
    \    for x in $1; do\n        if [ $((counter%2)) -eq 1 ]; then\n            sum=$((sum+x))\n\
    \        fi\n        counter=$((counter+1))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    IFS=\" \"\n    read -a lst <<<\
    \ \"$1\"\n    result=0\n    i=0\n    for e in \"${lst[@]}\"; do\n        if ((\
    \ $e % 2 == 0 )) && (( $i % 2 == 1 )); then\n            result=$((result + e))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local acc=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    ((acc+=lst[i]))\n  done\n  echo \"\
    $acc\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=$1\n    even=($(echo $lst\
    \ | tr ' ' '\\n' | awk 'NR % 2 != 0'))\n    #echo \"${even[@]}\"\n    res=($(echo\
    \ ${even[@]} | tr ' ' '\\n' | awk '$1 % 2 == 0'))\n    res=$(echo ${res[@]} |\
    \ tr ' ' '+')\n    echo \"scale=2; $res\" | bc\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  let result=0\n  declare -a list\n\
    \  list=(${1// / })\n  for i in \"${!list[@]}\"; do\n    if (( $i % 2 != 0 &&\
    \ ${list[$i]} % 2 == 0)); then\n      let result+=$i\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local result=\"\"\n  local a b c\n\
    \  for a in $1\n  do\n    for b in $1\n    do\n      if [[ $(( $a % 2 )) -eq 0\
    \ ]] && [[ $(( $b % 2 )) -ne 0 ]] && [[ $a -eq $b ]]\n      then\n        result+=\"\
    $a \"\n      fi\n    done\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tprintf \"%s\" \"$1\" | awk '{\n\t\
    \tn=split($0, arr)\n\t\tfor (i=1; i<=n; i++) {\n\t\t\tif (i % 2 == 0 && arr[i]\
    \ % 2 == 0)\n\t\t\t\tsum += arr[i]\n\t\t}\n\t\tprint sum\n\t}'\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local res=\"\"\n    local arr=(\"\
    $@\")\n    for (( i=1; i<${#arr[@]}; i+=2 )); do\n        [[ ${arr[$i]}%2 -eq\
    \ 0 ]] && res+=\"${arr[$i]} \"\n    done\n    echo \"$res\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo $1 | tr \" \" \"\\n\" | awk\
    \ '{if(NR%2==0 && $1%2==0) {sum+=$1;}} END {print sum}'\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  even=$(echo \"$1\" | grep -nE \"\
    [02468]\" | cut -d: -f1)\n  odd=$(echo \"$1\" | grep -nE \"[13579]\" | cut -d:\
    \ -f1)\n  even=$(echo \"$even\" | grep -E \"^[13579]\")\n  echo \"$1\" | cut -d'\
    \ ' -f$even | awk '{s+=$1} END {print s}'\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # TODO: add an even number of\
    \ arguments,\n    # each an even number\n    echo \"2\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  [[ -z \"$1\" ]] && exit 1\n\n  #\
    \ local array\n  declare -a arr=($@)\n  local res=()\n\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    [[ $((arr[i]%2)) -eq 0 ]] && res+=(${arr[i]})\n  done\n\n  echo\
    \ \"${res[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo $1 | tr ' ' '\\n' | awk 'NR\
    \ % 2 == 0 && $1 % 2 == 0 {sum += $1} END {print sum}'\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo $1 | tr \" \" \"\\n\" | awk\
    \ \"NR % 2 == 0 && NR % 4 != 0\" | paste -sd+ - | bc\n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    [[ $# -eq 0 ]] && echo \"\" &&\
    \ return\n    local evenOdd=()\n    for n in $@; do\n        if (( n % 2 == 0\
    \ && ${#evenOdd[@]} % 2 == 1)); then\n            evenOdd+=( $n )\n        fi\n\
    \    done\n    echo \"${evenOdd[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n   local lst=\"$@\"\n   local sum=0\n\
    \   for (( i=1; i<${#lst}; i+=2 )); do\n      (( $(( lst[i]%2 )) == 0 )) && ((\
    \ sum += lst[i] ))\n   done\n   echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    ##########\n    # your code here\n\
    \    ##########\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpprqgiiac.sh: line 12: syntax error near unexpected token `}''

    /tmp/tmpprqgiiac.sh: line 12: `}''

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # write your solution here\n \
    \   arr=($1)\n    count=0\n    res=0\n    while [ $count -lt ${#arr[@]} ]\n  \
    \  do\n\tif [ $count -gt 0 ] && [ $((count%2)) -eq 1 ] && [ $((arr[$count]%2))\
    \ -eq 0 ]\n\tthen\n\t    res=$((res+arr[$count]))\n\tfi\n\tcount=$((count+1))\n\
    \    done\n    echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local list=($1)\n  local index=0\n\
    \  local total=0\n  while [ $index -lt ${#list[@]} ]; do\n    if [ $[$index %\
    \ 2] -ne 0 ] && [ $[${list[$index]} % 2] -eq 0 ]; then\n      total=$((total +\
    \ ${list[$index]}))\n    fi\n    index=$((index + 1))\n  done\n  echo $total\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # Add here your code. You can add\
    \ only up to 5 lines.\n  # You can use only the following variables:\n  # $1,\
    \ $2, $3, $4 and $5.\n  if [ ! -z \"$1\" ]; then\n    echo \"$1\" | cut -d \"\
    \ \" -f 2- --output-delimiter=\"+\" | bc | sed 's/+$//'\n  fi\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )) ; do\n        sum=$(( sum + lst[i] ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"${1}\" | awk '{\n     \
    \   c = 0\n        while (c <= NF) {\n            if (c % 2 != 0 && $c % 2 ==\
    \ 0) {\n                printf \"%s\", $c\n            }\n            c++\n  \
    \      }\n    }'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\t_result=\"\"\n\tfor _i in $@; do\n\
    \t\tif [ $(( $_i % 2 )) -eq 0 ]; then\n\t\t\t_result=\"$_result $_i\"\n\t\tfi\n\
    \tdone\n\techo \"$_result\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    p=$1\n    sum=0\n    for x in\
    \ $p;\n    do\n        if [[ $(($x % 2)) -eq 0 ]] && [[ $(($x % 2)) -eq 0 ]];\n\
    \        then\n            sum=$(($sum + $x))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local sum=0\n  local lst=($1)\n\
    \  local len=${#lst[@]}\n  local i=0\n  while [ $i -lt $len ]; do\n    if [ $(($i\
    \ % 2)) -ne 0 ] && [ $((${lst[$i]} % 2)) -eq 0 ]; then\n      sum=$(($sum + ${lst[$i]}))\n\
    \    fi\n    i=$(($i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    res=''\n    for i in $1; do\n\
    \        if (( $res+$i )); then\n            res=$(expr $res + $i)\n        fi\n\
    \    done\n    echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    local count=0\n\
    \    for i in $1; do\n        if [ $(($count % 2)) -eq 1 ] && [ $(($i % 2)) -eq\
    \ 0 ]; then\n            sum=$(($sum + $i))\n        fi\n        count=$(($count\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local result=\"\"\n  IFS=' ' read\
    \ -r -a list <<< \"$1\"\n  for ((i=1; i<${#list[@]}; i+=2)); do\n    [[ \"${list[$i]}\"\
    \ =~ ^[0-9]+$ ]] && ((${list[$i]}%2==0)) && result+=\"${list[$i]} \"\n  done\n\
    \  echo \"$result\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo $1 | awk '{for(i=1;i<=NF;i+=2)\
    \ print $i}'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($1)\n    for i in \"${!lst[@]}\"\
    ; do\n        if [ $((i%2)) -ne 0 ] && [ $((lst[i]%2)) -eq 0 ]; then\n       \
    \     echo -n \"${lst[i]} \"\n        fi\n    done\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    arr=( $1 )\n    res=\"\"\n   \
    \ for i in `seq 0 $((${#arr[@]}-1))`; do\n        if [[ $(($i%2)) -eq 1 && $((${arr[$i]}%2))\
    \ -eq 0 ]]; then\n            res=\"$res ${arr[$i]}\"\n        fi\n    done\n\
    \    echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlocal inp=\"$1\"\n\tlocal out=\"\
    \"\n\tlocal n=1\n\tfor i in $inp; do\n\t\tif (( n % 2 == 1 )) && (( i % 2 == 0\
    \ )); then\n\t\t\tout+=\"$i \"\n\t\tfi\n\t\t((n++))\n\tdone\n\techo \"$out\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local sum=0\n  for (( i=1; i<$#;\
    \ i+=2 )); do\n    (( sum+=$2 ))\n    shift 2\n  done\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($1)\n    j=0\n    for i in\
    \ ${lst[@]}; do\n        if [ $((j%2)) -ne 0 ] && [ $((i%2)) -eq 0 ]; then\n \
    \           echo -n \"$i \"\n        fi\n        j=$((j+1))\n    done\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    declare -a arr=($@)\n    for i\
    \ in ${!arr[@]}; do\n        (( i%2 == 0 )) && (( arr[i]%2 == 0 )) && echo -n\
    \ \"${arr[i]} \"\n    done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local -n a=$1\n  local total=0\n\
    \  local count=0\n  for element in $a\n  do\n    (( count % 2 == 1 )) && (( element\
    \ % 2 == 0 )) && (( total += element ))\n    (( count++ ))\n  done\n  echo $total\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl4hrqjd3.sh: line 9: local: `4 88'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local list=( $1 )\n  local evens=()\n\
    \  for i in $(seq 0 ${#list[@]}); do\n    if [ $(( $i % 2 )) -eq 1 ]; then\n \
    \     if [ $(( ${list[$i]} % 2 )) -eq 0 ]; then\n        evens+=( ${list[$i]}\
    \ )\n      fi\n    fi\n  done\n  echo ${evens[@]}\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($@)\n    lst_even=()\n  \
    \  lst_even_odd=()\n    for i in \"${lst[@]}\"; do\n        # check even\n   \
    \     if [[ $(($i % 2)) == 0 ]]; then\n            lst_even+=(\"$i\")\n      \
    \  fi\n    done\n    for i in \"${!lst_even[@]}\"; do\n        # check odd\n \
    \       if [[ $(($i % 2)) != 0 ]]; then\n            lst_even_odd+=(\"${lst_even[$i]}\"\
    )\n        fi\n    done\n    # https://stackoverflow.com/a/14824754\n    arr=(\"\
    ${lst_even_odd[@]}\")\n    arr_size=${#arr[@]}\n    sum=0\n    # use for loop\
    \ to read all values and calculate sum\n    for (( i=0; i<${arr_size}; i++ ));\n\
    \    do\n        sum=$(( ${sum} + ${arr[$i]} ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local first=true\n    local output=\"\
    \"\n    for number in $1; do\n        if ((number % 2 == 0)) && ((!$first)); then\n\
    \            output=\"$output $number\"\n        fi\n        first=false\n   \
    \ done\n    echo \"$output\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  result=0\n  for index in \"$@\"\n  do\n    #[ $index == $1 ] && continue\n\
    \    if [ $index -gt 0 ] && [ $(($index % 2)) -eq 0 ]\n    then\n      result=$(($result\
    \ + $index))\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi1ucxy9f.sh: line 16: [: too many arguments

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # Arithmetic expansion can be used\
    \ to iterate over a list of integers\n  # as shown below.\n  res=0\n  for i in\
    \ $(seq 0 2 $((${#1} - 1))); do\n    int=${1:$i:1}\n    if [ $((int % 2)) -eq\
    \ 0 ]; then\n      res=$((res + int))\n    fi\n  done\n  echo $res\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo \"$1\" | awk '{for(i=1;i<=NF;i++)\
    \ if(i%2==0) sum+=$i; print sum}'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\techo $1 | sed -r 's/([0-9]+) ([0-9]+)\
    \ ([0-9]+) ([0-9]+)/\\1 \\3/' | tr ' ' '+' | bc\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  lst=($1)\n  for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n    if [ $(( ${lst[$i]} % 2 )) -eq 0 ]; then\n      echo -n \"${lst[$i]}\
    \ \"\n    fi\n  done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n   local result=\"\"\n   for (( i=1;\
    \ i<=$#; i+=2 )); do\n      if [ $((${!i} % 2)) -eq 0 ]; then\n         result=$(($result\
    \ + ${!i}))\n      fi\n   done\n   echo $result\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpji1s6ou7.sh: line 11: 4 88 % 2: syntax error in expression (error
    token is "88 % 2")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    eval \"lst=($1)\"\n    res=\"\"\
    \n    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        (( lst[i] % 2 == 0 )) &&\
    \ res+=\"${lst[i]} \"\n    done\n    echo \"$res\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        result=$((result + lst[i]))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    local lst=$1\n\
    \    local i=0\n    for el in $lst; do\n        let i++\n        if (( (i % 2\
    \ == 1) && (el % 2 == 0) )); then\n            let sum+=el\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # TODO: complete this function\n\
    \  local list=$1\n  local sum=0\n  local i=0\n  for n in $list; do\n    if [ $((i%2))\
    \ -eq 1 ]; then\n      if [ $((n%2)) -eq 0 ]; then\n        sum=$((sum+n))\n \
    \     fi\n    fi\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  local out=\"\
    \"\n  local count=0\n  for i in $lst; do\n    if [[ $(($count % 2)) -eq 1 ]];\
    \ then\n      if [[ $(($i % 2)) -eq 0 ]]; then\n        out=\"$out $i\"\n    \
    \  fi\n    fi\n    count=$(($count + 1))\n  done\n  echo \"$out\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    for i in $1; do\n        echo\
    \ $i\n    done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local list=($1)\n    local i=0\n\
    \    local sum=0\n    for num in ${list[@]}; do\n        if [ $((i%2)) -eq 1 ]\
    \ && [ $((num%2)) -eq 0 ]; then\n            sum=$((sum+num))\n        fi\n  \
    \      i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  lst=($1)\n  for i in $(seq 1 2 $((\
    \ ${#lst[@]} - 1))); do\n    if [ $(( ${lst[$i]} % 2 )) -eq 0 ]; then\n      echo\
    \ -n \"${lst[$i]} \"\n    fi\n  done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  lst=($1)\n  n=${#lst[@]}\n  s=0\n\
    \  for ((i=1; i<$n; i+=2)); do\n    if [ $((${lst[$i]} % 2)) -eq 0 ]; then\n \
    \     s=$(($s + ${lst[$i]}))\n    fi\n  done\n  echo $s\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for item in $lst; do\n        if ! [[ $item =~ [^0-9] ]]; then\n        \
    \    (( item % 2 == 0 )) && sum=$(( $sum + $item ))\n        fi\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    awk '\n        BEGIN {\n     \
    \       array_even = 0\n            array_odd = 0\n        }\n        {\n    \
    \        if (NR % 2) {\n                array_odd[++i] = $1\n            } else\
    \ {\n                array_even[++j] = $1\n            }\n        }\n        END\
    \ {\n            ret = 0\n            for (i in array_even) {\n              \
    \  ret += array_even[i]\n            }\n            for (i in array_odd) {\n \
    \               ret += array_odd[i]\n            }\n            print ret\n  \
    \      }\n    '\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=38 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=25 encoding='utf-8'>
  timestamp: 1660020793
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($1)\n    printf \"%s\\n\"\
    \ \"${lst[@]}\" | awk 'NR%2==0{s+=$1}END{print s}'\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local result\n    for ((i=1; i\
    \ < $(echo $1 | wc -w); i+=2)); do\n        result+=\"$(echo $1 | cut -d' ' -f$i)\
    \ \"\n    done\n    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local total=0\n  local count=0\n\
    \  for element in $1\n  do\n    count=$((count+1))\n    if [ $(($count % 2)) -eq\
    \ 1 ]\n    then\n      if [ $(($element % 2)) -eq 0 ]\n      then\n        total=$((total+element))\n\
    \      fi\n    fi\n  done\n  echo \"$total\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  s=0\n  for i in $(seq 1 ${#1});\
    \ do\n    e=$(echo $1 | cut -d \" \" -f $i)\n    if (( $((i%2)) != 0 )); then\n\
    \      s=$((s+e))\n    fi\n  done\n  echo $s\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # Modify this line\n  echo\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    return_result=()\n    for ((i=1;\
    \ i<${#1}; i+=2)); do\n        return_result+=($(echo ${1} | cut -d ' ' -f $i))\n\
    \    done\n    echo ${return_result[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    declare -a\
    \ res=()\n    for i in $(seq 0 $((${#lst[@]} - 1))); do\n        if [[ $((i %\
    \ 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]]; then\n            res+=(\"${lst[i]}\"\
    )\n        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($1)\n    total=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        [[ ${lst[$i]}%2 -eq 0 ]] && total=$((total+lst[$i]))\n\
    \    done\n    echo $total\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    sum=0\n    for number in $1\n\
    \    do\n        if [ $(($number % 2)) -eq 0 ] && [ $(($sum % 2)) -eq 1 ]\n  \
    \      then\n            sum=$(($sum + $number))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    if [[ -z $1 ]]; then\n       \
    \ echo \"Usage: add \\\"[NUMBERS]\\\"\"\n        return\n    fi\n\n    declare\
    \ -a arr=(\"$@\")\n    res=0\n    counter=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ $((counter % 2)) -ne 0 ] && [ $((i % 2)) -eq 0 ]; then\n       \
    \     res=$((res + i))\n        fi\n        counter=$((counter + 1))\n    done\n\
    \    echo \"$res\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo $1 | awk '{\n    for (i = 1;\
    \ i <= NF; i++)\n      if (i % 2 == 0)\n        printf \"%s \", $i\n  }'\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    res=0\n    for num in $1\n   \
    \ do\n        if [ $((num % 2)) -eq 0 ] && [ $((i % 2)) -ne 0 ]\n        then\n\
    \            ((res+=num))\n        fi\n        ((i++))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # Copy this to get an array with\
    \ spaces in it\n    arr=($1)\n    ((arr[2] + arr[6]))\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # start with an empty string\n \
    \ local sum=\"\"\n  # loop over each integer in the list\n  for i in $1; do\n\
    \    # if the integer is even and the index is odd\n    if [ $((i % 2)) -eq 0\
    \ ] && [ $((sum + 1)) -eq 1 ]; then\n      # add it to the sum\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  # print the sum\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=$1\n    n=$(echo \"$lst\"\
    \ | wc -w)\n    ret=\"\"\n    for i in $(seq 0 $((n-1))); do\n        x=$(echo\
    \ \"$lst\" | cut -d' ' -f $((i+1)))\n        if [ $(($x % 2)) -eq 0 ] && [ $(($i\
    \ % 2)) -eq 1 ]; then\n            ret=$(($ret + $x))\n        fi\n    done\n\
    \    echo \"$ret\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    numbers=($1)\n    sum=0\n    for\
    \ i in `seq 0 $(( ${#numbers[@]} - 1 ))`; do\n        if [ $(( ${numbers[$i]}\
    \ % 2 )) == 0 ]; then\n            sum=$(( $sum + ${numbers[$i]} ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local out=\"\"\n    local counter=0\n\
    \    for x in $1; do\n        if ((x % 2 == 0)) && ((counter % 2 == 1)); then\n\
    \            out=\"$out $x\"\n        fi\n        counter=$((counter + 1))\n \
    \   done\n    echo $out\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local -n lst=$1\n  [[ -z $lst ]]\
    \ && echo \"\" && return 0\n  [[ -z $2 ]] && echo ${lst[@]:0:1} && return 0\n\
    \  echo $((${lst[$2]} + $(add \"$1\" $((2+$2)))))\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmut0xo23.sh: line 9: local: `4 88'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  sum=0\n  for i in $(echo $1 | tr\
    \ \" \" \"\\n\")\n  do\n    if [ $(($(echo $i | tr \" \" \"\\n\") % 2)) -eq 0\
    \ ]; then\n      sum=$(($sum + $(echo $i | tr \" \" \"\\n\")))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local res=\"\"\n    local lst=($1)\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        if [ $((lst[i] % 2)) -eq 0\
    \ ]; then\n            res+=\"${lst[i]} \"\n        fi\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # lst is a list of numbers\n \
    \   lst=\"$(echo $1 | tr \" \" \"\\n\")\"\n    # lst1 is a list of even numbers\n\
    \    lst1=$(echo \"$lst\" | grep \"[02468]\")\n    # lst2 is a list of even numbers\
    \ at odd indices\n    lst2=$(echo \"$lst1\" | awk 'NR % 2 == 1')\n    # sum is\
    \ the sum of elements in lst2\n    sum=$(echo \"$lst2\" | awk '{s+=$1} END {print\
    \ s}')\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    result=()\n    for i in $1; do\n\
    \        if [ $(($i % 2)) -eq 0 ] && [ $(($result_len % 2)) -ne 0 ]; then\n  \
    \          result+=(\"$i\")\n        fi\n        result_len=$(($result_len + 1))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptgpad3ct.sh: line 11: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  res=()\n  for i in $1; do\n    if\
    \ [ $(($i % 2)) -eq 0 ] && [ $(($i % 2)) -eq 0 ]; then\n      res+=$i\n    fi\n\
    \  done\n  echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  for ((i=1; i<=$#; i+=2)); do\n \
    \   if [ $(( $i % 2 )) -eq 0 ]; then\n      echo -n \"${!i} \"\n    fi\n  done\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local res=\"\"\n  local idx=0\n\
    \  for x in $1; do\n    if [ $(expr $idx % 2) -eq 1 ] && [ $(expr $x % 2) -eq\
    \ 0 ]; then\n      res=$(expr $res + $x)\n    fi\n    idx=$(expr $idx + 1)\n \
    \ done\n  echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local values=( $1 )\n    local\
    \ sum=0\n    for (( i=0; i<${#values[@]}; i++ )); do\n        if (( i % 2 == 1\
    \ && values[i] % 2 == 0 )); then\n            (( sum += values[i] ))\n       \
    \ fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n   local -i i=0\n   echo $1 | tr '\
    \ ' '\\n' | while read n; do\n      if (( (i%2) && (n%2 == 0) )); then\n     \
    \    echo $n\n      fi\n      ((i++))\n   done\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local sum=0\n  local array=($1)\n\
    \  local len=${#array[@]}\n  for (( i=1; i<$len; i+=2 )); do\n    sum=$((sum +\
    \ array[i]))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo $1 | tr \" \" \"\\n\" | awk\
    \ 'BEGIN {RS = FS} NR % 2 == 0 && NR % 4 != 0 {print $1}'\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$1\" | awk '{\n       \
    \ for (i = 1; i <= NF; i++) {\n            if (i % 2 == 0 && $i % 2 == 0) {\n\
    \                print $i\n            }\n        }\n    }'\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\t#echo $1\n\t#echo $2\n\t#echo $3\n\
    \t#echo $4\n\t#echo $5\n\t#echo $6\n\t#echo $7\n\t#echo $8\n\t#echo $9\n\t#echo\
    \ $10\n\t#echo $11\n\t#echo $12\n\t#echo $13\n\t#echo $14\n\t#echo $15\n\t#echo\
    \ $16\n\t#echo $17\n\t#echo $18\n\t#echo $19\n\t#echo $20\n\t#echo $21\n\t#echo\
    \ $22\n\t#echo $23\n\t#echo $24\n\t#echo $25\n\t#echo $26\n\t#echo $27\n\t#echo\
    \ $28\n\t#echo $29\n\t#echo $30\n\t#echo $31\n\t#echo $32\n\t#echo $33\n\t#echo\
    \ $34\n\t#echo $35\n\t#echo $36\n\t#echo $37\n\t#echo $38\n\t#echo $39\n\t#echo\
    \ $40\n\t#echo $41\n\t#echo $42\n\t#echo $43\n\t#echo $44\n\t#echo $45\n\t#echo\
    \ $46\n\t#echo $47\n\t#echo $48\n\t#echo $49\n\t#echo $50\n\t#echo $51\n\t#echo\
    \ $52\n\t#echo $53\n\t#echo $54\n\t#echo $55\n\t#echo $56\n\t#echo $57\n\t#echo\
    \ $58\n\t#echo $59\n\t#echo $60\n\t#echo $61\n\t#echo $62\n\t#echo $63\n\t#echo\
    \ $64\n\t#echo $65\n\t#echo $66\n\t#echo $67\n\t#echo $68\n\t#echo $69\n\t#echo\
    \ $70\n\t#echo $71\n\t#echo $72\n\t#echo $73\n\t#echo $74\n\t#echo $75\n\t#echo\
    \ $76\n\t#echo $77\n\t#echo $78\n\t#echo $79\n\t#echo $80\n\t#echo $81\n\t#echo\
    \ $82\n\t#echo $83\n\t#echo $84\n\t#echo $85\n\t\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0tc473mt.sh: line 95: syntax error near unexpected token `}''

    /tmp/tmp0tc473mt.sh: line 95: `}''

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -n lst=$1\n    local sum=0\n\
    \    for (( i=0; i<${#lst[@]}; i++ )); do\n        if [ $(($i % 2)) -eq 1 ] &&\
    \ [ $((${lst[$i]} % 2)) -eq 0 ]; then\n            sum=$(($sum + ${lst[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkr5g0uak.sh: line 9: local: `4 88'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    for i in ${@}; do\n        echo\
    \ ${i}\n    done\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local sum=0\n  for ((i=1; i<${#1};\
    \ i+=2)); do\n    (($(is_even ${1:i:1}) && (sum += ${1:i:1})))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6iperz_p.sh: line 11: is_even: command not found

    /tmp/tmp6iperz_p.sh: line 11: ((: && (sum +=  ): syntax error: operand expected
    (error token is "&& (sum +=  )")

    /tmp/tmp6iperz_p.sh: line 11: is_even: command not found

    /tmp/tmp6iperz_p.sh: line 11: ((: && (sum += 8): syntax error: operand expected
    (error token is "&& (sum += 8)")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # SOLUTION:\n    # Python\n  \
    \  python -c \"a = $1; print(a[::2][1::2])\"\n    # Bash\n    # a=\"$1\"\n   \
    \ # IFS=\" \"\n    # read -ra nums <<< \"$a\"\n    # for i in `seq 0 $((${#nums[@]}-1))`;\
    \ do\n    #     if [ $((i%2)) -eq 1 ]; then\n    #         if [ $((nums[i]%2))\
    \ -eq 0 ]; then\n    #             echo -n \"${nums[i]} \"\n    #         fi\n\
    \    #     fi\n    # done\n    # echo\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "  File \"<string>\", line 1\n    a = 4 88; print(a[::2][1::2])\n      \
    \     ^\nSyntaxError: invalid syntax\n"
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($@)\n    lst2=()\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        j=$(( i+1 ))\n        if (( j % 2\
    \ == 0 )); then\n            lst2[$i]=${lst[$i]}\n        fi\n    done\n    nlst=()\n\
    \    for n in ${lst2[@]}; do\n        if (( n % 2 == 0 )); then\n            nlst+=(\"\
    $n\")\n        fi\n    done\n    echo \"${nlst[@]}\"\n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  lst=$1\n  res=0\n  for i in $(seq\
    \ 0 2 $((${#lst} / 2)))\n  do\n    res=$(($res + $(echo $lst | cut -d \" \" -f\
    \ $(( $i + 1 )))))\n  done\n  echo $res\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv65xaxy8.sh: line 13: 4 + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    local list=($1)\n\
    \    for ((i=1; i<${#list[@]}; i=i+2)); do\n        if [ $((${list[$i]} % 2))\
    \ -eq 0 ]; then\n            sum=$(($sum + ${list[$i]}))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local list=\"$1\"\n    local sum=0\n\
    \    local num\n    local i=0\n    for num in $list; do\n        if [ $((i % 2))\
    \ -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n  \
    \      fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local even_odd_sum=0\n  local even_odd_count=0\n\
    \  for i in $1; do\n    (( even_odd_count % 2 == 0 )) && (( i % 2 == 0 )) && ((\
    \ even_odd_sum += i ))\n    (( even_odd_count++ ))\n  done\n  echo $even_odd_sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo $1 | tr ' ' '\\n' | gawk '{\n\
    \    if(NR % 2 != 0 && $1 % 2 == 0) {sum+=$1};\n  } END {\n    print sum;\n  }'\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    l=()\n    for n in $1; do\n  \
    \      (( ${#l[@]} % 2 == 1 )) && (( n % 2 == 0 )) && l+=($n)\n    done\n    echo\
    \ ${l[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\")\
    \ = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    read -a arr <<< $1\n    #echo ${arr[*]}\n    #echo \"${#arr[@]}\"\
    \n    res=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [ $(( $i % 2\
    \ )) -ne 0 ] && [ $(( ${arr[$i]} % 2 )) -eq 0 ]; then\n            res+=( ${arr[$i]}\
    \ )\n        fi\n    done\n    if [ ${#res[@]} -eq 0 ]; then\n        echo \"\"\
    \n    else\n        echo \"${res[*]}\"\n    fi\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local s=\"$1\"\n    local ar=($s)\n\
    \    local odd_elems=(${ar[*]:1:${#ar[@]}:2})\n    local sum=0\n    for i in ${odd_elems[@]};\
    \ do\n        let sum+=$i\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptfde_t7j.sh: line 11: ar[*]: 2:2: syntax error in expression (error
    token is ":2")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\tlocal sum=0\n\tfor i in $@; do\n\
    \t\t(( ($i % 2 == 0) && (($sum % 2) != 0) )) && sum=$(($sum + $i))\n\tdone\n\t\
    printf \"%s\\n\" \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    even=()\n    for i in $1; do\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            even=(\"${even[@]}\" $i)\n\
    \        fi\n    done\n    echo \"${even[@]}\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  echo \"$1\" | tr ' ' '\\n' | awk\
    \ 'BEGIN {sum=0} NR%2==0 {sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  declare -a indexes\n\
    \  for i in ${!lst[@]}; do\n    if [ $((i%2)) -ne 0 ] && [ $((lst[i]%2)) -eq 0\
    \ ]; then\n      indexes+=($i)\n    fi\n  done\n  [ ${#indexes[@]} -eq 0 ] &&\
    \ echo \"None\" && return\n  local sum=0\n  for i in ${indexes[@]}; do\n    sum=$((sum+lst[i]))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # Write your code here\n    local\
    \ s=$1\n    local d=0\n    local t=0\n    local ret=\"\"\n    local len=${#s}\n\
    \    for(( i=0; i<len; i++ )); do\n        d=${s:$i:1}\n        if [ $(( $i%2\
    \ )) -eq 0 ]; then\n            if [ $(( $d%2 )) -eq 0 ]; then\n             \
    \   ret=$ret$d\n            fi\n        fi\n    done\n    echo $ret\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    set -f # Disable glob\n    IFS='\
    \ ' read -r -a arr <<< \"$1\" # Create array\n    # Even indices are left-shifted\
    \ by one\n    # - 0 2 4 6 8 10 ...\n    # Odd indices are simply x+1\n    # -\
    \ 1 3 5 7 9 11 ...\n    local sum\n    for i in $(seq 0 2 ${#arr[@]}); do\n  \
    \      if [ $(( ${arr[$i]} % 2 )) -eq 0 ]; then\n            sum=$(( $sum + ${arr[$i]}\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw6bcsxlr.sh: line 17: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local ans=\"\
    \"\n    for word in $lst; do\n        if [[ \"$word\" =~ ^[0-9]+$ ]]; then\n \
    \           if [[ $((word % 2)) -eq 0 ]] && [[ $((word % 2)) -eq $((i % 2)) ]];\
    \ then\n                ans=$((ans + word))\n            fi\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo \"$ans\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    even_odd_int_list=($1)\n    even_odd_int_list=(${even_odd_int_list[@]})\n\
    \    even_int_list=\"\"\n    for index in $(seq 1 ${#even_odd_int_list[@]}); do\n\
    \        if [[ $((index % 2)) == 1 ]]; then\n            even_int_list=\"$even_int_list\
    \ ${even_odd_int_list[$((index - 1))]}\"\n        fi\n    done\n    echo $even_int_list\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  # your code here\n  echo \"$@\"\
    \ | awk 'BEGIN{FS=\" \";OFS=\" \"} {\n    for(i=1;i<=NF;i++){\n        if(i%2==1\
    \ && $i%2==0){\n            print $i;\n        }\n    }\n  }'\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$1\" | tr \" \" \"\\n\"\
    \ | awk '\n    BEGIN {\n        i = 0;\n    }\n    {\n        if (i % 2 == 1 &&\
    \ $1 % 2 == 0) {\n            printf $1;\n        }\n        i++;\n    }'\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=$1\n    # Fill in the code\
    \ below\n\n    # Type your solution here\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  for ((i=1; i<=$#; i+=2)); do\n \
    \   if [ $(( $i % 2 )) -eq 0 ]; then\n      a=\"$a $i\"\n    fi\n  done\n  echo\
    \ \"$a\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local -a lst=(\"$@\")\n  local -i\
    \ i\n  local -i t\n  local -i sum=0\n  for ((i=0; i<${#lst[@]}; i++)); do\n  \
    \  t=${lst[$i]}\n    if ((i%2==1)) && ((t%2==0)); then\n      ((sum+=t))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr0csmv8v.sh: line 14: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local n\n    for n in \"$@\";\
    \ do\n        ((n & 1)) && ((n % 2)) && printf \"${n} \"\n    done\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp6fqvkwr9.sh: line 11: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # replace \"a\" by \"1\"\n   \
    \ local lst=$(echo $1 | sed 's/a/1/g')\n    # replace \" \" by \",\" and enclose\
    \ by \"[]\"\n    local lst=$(echo \"[\"$(echo $lst | sed 's/ /,/g')\"]\")\n  \
    \  local result=$(jq -n --argjson lst \"$lst\" '$lst | map(select(. % 2 == 0))\
    \ | map(select(. != 0)) | map(select(. % 2 == 1)) | .[]')\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvukv_aq4.sh: line 13: jq: command not found

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    declare -a lst=($1)\n    even_odd_indices_sum=0\n\
    \    for (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ $(( i % 2 )) -eq 1 ]]\
    \ && [[ $(( lst[i] % 2 )) -eq 0 ]]; then\n            even_odd_indices_sum=$((\
    \ even_odd_indices_sum + lst[i] ))\n        fi\n    done\n    echo $even_odd_indices_sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum\n    for i in $1; do\n\
    \        ((i%2 == 0)) && ((i%4 == 0)) && let sum+=$i\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local arr=($1)\n    local i=0\n\
    \    local total=0\n    local len=${#arr[@]}\n    while [ $i -lt $len ]; do\n\
    \        if [[ $(($i%2)) -ne 0 ]] && [[ $((${arr[$i]}%2)) -eq 0 ]]; then\n   \
    \         total=$(($total+${arr[$i]}))\n        fi\n        i=$(($i+1))\n    done\n\
    \    echo $total\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  if [ \"$1\" == \"\" ]; then\n  \
    \  echo \" \"\n  else\n    echo \"$1\" | sed 's/ /\\n/g' | awk '{ if ((NR-1) %\
    \ 2 == 0 && $1 % 2 == 0) print $1 }' | tr '\\n' ' '\n  fi\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # read space-separated list into\
    \ array\n    IFS=' ' read -r -a nums <<< \"$1\"\n    # iterate over array\n  \
    \  for ((i=0; i<${#nums[@]}; i+=2)); do\n        # check for even\n        if\
    \ [[ $((nums[i] % 2)) -eq 0 ]]; then\n            # add to the total\n       \
    \     ((total+=nums[i]))\n        fi\n    done\n    # print total\n    echo \"\
    $total\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($@)\n    local len=${#lst[@]}\n\
    \    local x\n    local result=0\n    for ((x=1; x<len; x+=2)); do\n        result=$((result\
    \ + lst[x]))\n    done\n    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n\t# # Strip leading space\n\t# lst=\"\
    ${1#\"${1%%[![:space:]]*}\"}\"\n\n\t# Strip trailing space\n\t# lst=\"${lst%\"\
    ${lst##*[![:space:]]}\"}\"\n\n\tlst=\"$1\"\n\n\t# Save old Internal Field Separator\
    \ (IFS)\n\tOIFS=\"$IFS\"\n\n\t# Change IFS to new line.\n\tIFS=$'\\n'\n\n\t# Read\
    \ the lst as an array\n\tread -r -a lst <<< \"$lst\"\n\n\t# Get the length of\
    \ the lst\n\tlength=\"${#lst[@]}\"\n\n\t# Initialize the result\n\tresult=0\n\n\
    \t# Iterate over all the elements of the lst\n\tfor ((i=0; i<$length; i+=2));\
    \ do\n\t\t# Check if lst[i] is even\n\t\tif [ $((lst[i]%2)) -eq 0 ]; then\n\t\t\
    \t# Add lst[i] to result\n\t\t\tresult=$((result+lst[i]))\n\t\tfi\n\tdone\n\n\t\
    # Restore IFS\n\tIFS=\"$OIFS\"\n\n\t# Print the result\n\techo \"$result\"\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxjcjprzc.sh: line 35: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  if [ -z \"$1\" ]; then\n    return\
    \ 0\n  fi\n  declare -a arr\n  arr=($1)\n  declare -a res\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [ $((i%2)) -ne 0 ] && [ $((arr[i]%2)) -eq 0 ]; then\n    \
    \  res+=(${arr[i]})\n    fi\n  done\n  echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    i=0\n    for j in $1\n    do\n\
    \        if [[ $(($i % 2)) == 1 ]] && [[ $(($j % 2)) == 0 ]]\n        then\n \
    \           echo -n \"$j \"\n        fi\n        ((i++))\n    done\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local index=0\n  local sum=0\n \
    \ for i in $1; do\n    if [ $(( index % 2 )) -eq 1 ] && [ $(( i % 2 )) -eq 0 ];\
    \ then\n      sum=$(( sum + i ))\n    fi\n    index=$(( index + 1 ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local i=0\n    local sum=0\n \
    \   for n in $1; do\n        if (( i % 2 == 1 && n % 2 == 0 )); then\n       \
    \     (( sum += n ))\n        fi\n        (( i++ ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local n=\"\"\n  for i in $1; do\n\
    \    if [ $((i % 2)) == 0 ] && [ $((i % 2)) != 0 ]; then\n      n=$((n + i))\n\
    \    fi\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n   # Add your solution here\n   echo\
    \ \"NOT IMPLEMENTED\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  sum=0\n  for i in $(seq 0 2 $((\
    \ $(wc -w <<< \"$1\") - 1 ))); do\n    number=$(echo \"$1\" | cut -d ' ' -f $((\
    \ i + 1 )))\n    sum=$(( sum + number ))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    lst=($1)\n    sum=0\n    for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n        if [ $((${lst[$i]} % 2)) -eq 0 ]; then\n \
    \           sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local n=0\n\
    \    local total=0\n    for i in $lst; do\n        if [ $((n % 2)) -eq 1 ] &&\
    \ [ $((i % 2)) -eq 0 ]; then\n            total=$((total + i))\n        fi\n \
    \       n=$((n + 1))\n    done\n    echo \"$total\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020788

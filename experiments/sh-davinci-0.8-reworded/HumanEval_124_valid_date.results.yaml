language: sh
name: HumanEval_124_valid_date
results:
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Write your solution here\n    if\
    \ [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n        # check year\n     \
    \   # year =~ ^[0-9]{4}$\n        # check month\n        # month =~ ^[0-9]{2}$\n\
    \        # check day\n        # day =~ ^[0-9]{2}$\n        # parse $1\n      \
    \  month=${1:0:2}\n        day=${1:3:2}\n        year=${1:6:4}\n        if [[\
    \ $year =~ ^[0-9]{4}$ ]]; then\n            if [[ $month =~ ^[0-9]{2}$ ]]; then\n\
    \                if [[ $day =~ ^[0-9]{2}$ ]]; then\n                    # check\
    \ year\n                    if [ $year -ge 2000 -a $year -le 2040 ]; then\n  \
    \                      # check month\n                        if [ $month -ge\
    \ 1 -a $month -le 12 ]; then\n                            # check day\n      \
    \                      if [ $month -eq 1 -o $month -eq 3 -o $month -eq 5 -o $month\
    \ -eq 7 -o $month -eq 8 -o $month -eq 10 -o $month -eq 12 ]; then\n          \
    \                      if [ $day -ge 1 -a $day -le 31 ]; then\n              \
    \                      echo \"true\"\n                                else\n \
    \                                   echo \"false\"\n                         \
    \       fi\n                            elif [ $month -eq 4 -o $month -eq 6 -o\
    \ $month -eq 9 -o $month -eq 11 ]; then\n                                if [\
    \ $day -ge 1 -a $day -le 30 ]; then\n                                    echo\
    \ \"true\"\n                                else\n                           \
    \         echo \"false\"\n                                fi\n               \
    \             elif [ $month -eq 2 ]; then\n                                if\
    \ [ $day -ge 1 -a $day -le 29 ]; then\n                                    echo\
    \ \"true\"\n                                else\n                           \
    \         echo \"false\"\n                                fi\n               \
    \             else\n                                echo \"false\"\n         \
    \                   fi\n                        else\n                       \
    \     echo \"false\"\n\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxv8ylrul.sh: line 66: syntax error near unexpected token `}''

    /tmp/tmpxv8ylrul.sh: line 66: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your answer inside the function\
    \ body\n  # You can modify the function signature if needed\n  #\n  # DO NOT MODIFY\
    \ ANYTHING OUTSIDE THE FUNCTION BODY\n  if [ $# -eq 0 ]; then\n    echo \"false\"\
    \n    return\n  fi\n  set -f\n  array=(${1//-/ })\n  set +f\n  if [ ${#array[@]}\
    \ -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ ${array[0]} -gt\
    \ 12 ] || [ ${array[0]} -lt 1 ]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [ ${array[0]} -eq 2 ]; then\n    if [ ${array[1]} -gt 29 ] || [ ${array[1]}\
    \ -lt 1 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ ${array[0]}\
    \ -eq 4 ] || [ ${array[0]} -eq 6 ] || [ ${array[0]} -eq 9 ] || [ ${array[0]} -eq\
    \ 11 ]; then\n    if [ ${array[1]} -gt 30 ] || [ ${array[1]} -lt 1 ]; then\n \
    \     echo \"false\"\n      return\n    fi\n  else\n    if [ ${array[1]} -gt 31\
    \ ] || [ ${array[1]} -lt 1 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\tyear=$(echo $1 | awk -F- '{print $3}')\n\
    \tmonth=$(echo $1 | awk -F- '{print $1}')\n\tday=$(echo $1 | awk -F- '{print $2}')\n\
    \tis_leap=$(is_leap_year $year)\n\tif [ $( echo \"$day < 1\" | bc ) -eq 1 ] ||\
    \ [ $( echo \"$day > 31\" | bc ) -eq 1 ] || [ $( echo \"$month < 1\" | bc ) -eq\
    \ 1 ] || [ $( echo \"$month > 12\" | bc ) -eq 1 ] || [ $( echo \"$year < 1000\"\
    \ | bc ) -eq 1 ] || [ $( echo \"$year > 3000\" | bc ) -eq 1 ]; then\n\t\techo\
    \ \"false\"\n\telif [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month -eq 5 ] ||\
    \ [ $month -eq 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month -eq 12\
    \ ]; then\n\t\tif [ $day -le 31 ]; then\n\t\t\techo \"true\"\n\t\telse\n\t\t\t\
    echo \"false\"\n\t\tfi\n\telif [ $month -eq 4 ] || [ $month -eq 6 ] || [ $month\
    \ -eq 9 ] || [ $month -eq 11 ]; then\n\t\tif [ $day -le 30 ]; then\n\t\t\techo\
    \ \"true\"\n\t\telse\n\t\t\techo \"false\"\n\t\tfi\n\telif [ $month -eq 2 ]; then\n\
    \t\tif [ $is_leap -eq 1 ]; then\n\t\t\tif [ $day -le 29 ]; then\n\t\t\t\techo\
    \ \"true\"\n\t\t\telse\n\t\t\t\techo \"false\"\n\t\t\tfi\n\t\telse\n\t\t\tif [\
    \ $day -le 28 ]; then\n\t\t\t\techo \"true\"\n\t\t\telse\n\t\t\t\techo \"false\"\
    \n\t\t\tfi\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    /tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    /tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    /tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    /tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    /tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    /tmp/tmpg7df70op.sh: line 25: is_leap_year: command not found

    (standard_in) 1: syntax error

    /tmp/tmpg7df70op.sh: line 26: [: -eq: unary operator expected

    (standard_in) 1: syntax error

    /tmp/tmpg7df70op.sh: line 26: [: -eq: unary operator expected

    (standard_in) 1: syntax error

    /tmp/tmpg7df70op.sh: line 26: [: -eq: unary operator expected

    (standard_in) 1: syntax error

    /tmp/tmpg7df70op.sh: line 26: [: -eq: unary operator expected

    (standard_in) 1: syntax error

    /tmp/tmpg7df70op.sh: line 26: [: -eq: unary operator expected

    (standard_in) 1: syntax error

    /tmp/tmpg7df70op.sh: line 26: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 28: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 34: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 34: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 34: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 34: [: -eq: unary operator expected

    /tmp/tmpg7df70op.sh: line 40: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [[ $1 =~ (^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$)\
    \ ]] && date --date=\"$1\" > /dev/null 2>&1\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    d=`echo $1 | tr -d ' '`\n    if [[\
    \ $d =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n        d1=`echo $d | cut -d'-'\
    \ -f1`\n        d2=`echo $d | cut -d'-' -f2`\n        d3=`echo $d | cut -d'-'\
    \ -f3`\n        case $d1 in\n            01|03|05|07|08|10|12)\n             \
    \   if [[ $d2 -lt 1 || $d2 -gt 31 ]]; then\n                    echo false\n \
    \                   return\n                fi\n                ;;\n         \
    \   04|06|09|11)\n                if [[ $d2 -lt 1 || $d2 -gt 30 ]]; then\n   \
    \                 echo false\n                    return\n                fi\n\
    \                ;;\n            02)\n                if [[ $d2 -lt 1 || $d2 -gt\
    \ 29 ]]; then\n                    echo false\n                    return\n  \
    \              fi\n                ;;\n            *)\n                echo false\n\
    \                return\n                ;;\n        esac\n        echo true\n\
    \    else\n        echo false\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # your code here\n  return 1\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [[ $1 =~ ^(0[1-9]|1[0-2])-[0-3][0-9]-[0-9]{4}$\
    \ ]] && {\n    d=${1##*-}\n    y=${d:0:4}\n    d=${d:4}\n    m=${1%%-*}\n    ((\
    \ d <= 31 && m <= 12 && (d <= 30 || m == 1 || m == 3 || m == 5 || m == 7 || m\
    \ == 8 || m == 10 || m == 12) && (d <= 29 || m != 2 || (y % 4 == 0 && y % 100\
    \ != 0) || y % 400 == 0) ))\n  }\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [ -z \"$1\" ] && return 1 || date_arr=(${1//-/\
    \ })\n  [ ${#date_arr[@]} -ne 3 ] && return 1\n  [ ${date_arr[0]} -gt 12 ] &&\
    \ return 1\n  [ ${date_arr[0]} -eq 2 ] && [ ${date_arr[1]} -gt 29 ] && return\
    \ 1\n  [ ${date_arr[0]} -eq 2 ] && [ ${date_arr[1]} -eq 29 ] && [ $((${date_arr[2]}\
    \ % 4)) -ne 0 ] && return 1\n  [ ${date_arr[0]} -in {4,6,9,11} ] && [ ${date_arr[1]}\
    \ -gt 30 ] && return 1\n  [ ${date_arr[0]} -in {1,3,5,7,8,10,12} ] && [ ${date_arr[1]}\
    \ -gt 31 ] && return 1\n  return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvvusk7rw.sh: line 27: [: too many arguments

    /tmp/tmpvvusk7rw.sh: line 28: [: too many arguments

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [[ \"$1\" =~ ^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})$\
    \ ]] &&\n  [[ $2 -le 31 && $2 -ge 1 ]] &&\n  [[ \"$1\" =~ (^(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})$)|(^(0[469]|11)-(0[1-9]|[12][0-9]|30)-([0-9]{4})$)|(^02-(0[1-9]|1[0-9]|2[0-8])-([0-9]{4})$)|(^(02-29)-([02468][048]|[13579][26])-([0-9]{4})$)|(^(02-29)-([0-9][0-9][0][48])-([0-9]{4})$)|(^(02-29)-([0-9][0-9][2468][048])-([0-9]{4})$)|(^(02-29)-([0-9][0-9][13579][26])-([0-9]{4})$)\
    \ ]]\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    echo \"$1\" | grep -E '^(((0[1-9]|[12]\\\
    d|3[01])-(0[13578]|1[02])-[12]\\d{3})|((0[1-9]|[12]\\d|30)-(0[469]|11)-[12]\\\
    d{3})|((0[1-9]|1\\d|2[0-8])-02-[12]\\d{3})|(29-02-[12](0[48]|[2468][048]|[13579][26])))$'\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local input=$1\n  if [ -z \"$input\"\
    \ ]; then\n    echo \"false\"\n    return\n  fi\n  if [[ $input =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    local mm=${BASH_REMATCH[1]}\n    local dd=${BASH_REMATCH[2]}\n\
    \    local yyyy=${BASH_REMATCH[3]}\n    if [ $mm -eq 2 ]; then\n      if [ $((yyyy\
    \ % 4)) -eq 0 ]; then\n        if [ $dd -le 29 ]; then\n          echo \"true\"\
    \n          return\n        fi\n      else\n        if [ $dd -le 28 ]; then\n\
    \          echo \"true\"\n          return\n        fi\n      fi\n    elif [ $mm\
    \ -eq 4 ] || [ $mm -eq 6 ] || [ $mm -eq 9 ] || [ $mm -eq 11 ]; then\n      if\
    \ [ $dd -le 30 ]; then\n        echo \"true\"\n        return\n      fi\n    else\n\
    \      if [ $dd -le 31 ]; then\n        echo \"true\"\n        return\n      fi\n\
    \    fi\n  fi\n  echo \"false\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$ ]]; then\n    echo \"false\"\n    return\n  fi\n  month=$(echo \"\
    $1\" | cut -d- -f1)\n  day=$(echo \"$1\" | cut -d- -f2)\n  if [ \"$month\" -eq\
    \ 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ]\
    \ || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] ||\
    \ [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1\
    \ ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  elif [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt\
    \ 29 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Test for empty\n  [ -z \"$1\" ] &&\
    \ return 1\n  local DATE_TO_VALIDATE=\"$1\"\n  local DAY=\"${DATE_TO_VALIDATE:0:2}\"\
    \n  local MONTH=\"${DATE_TO_VALIDATE:3:2}\"\n  local YEAR=\"${DATE_TO_VALIDATE:6:4}\"\
    \n  local LEN_DAY=${#DAY}\n  local LEN_MONTH=${#MONTH}\n  local LEN_YEAR=${#YEAR}\n\
    \  local LEN_DATE=${#DATE_TO_VALIDATE}\n  local LEN_NUM=`echo $DATE_TO_VALIDATE\
    \ | grep -o '-' | wc -l`\n  local LEN_SLASH=`echo $DATE_TO_VALIDATE | grep -o\
    \ '/' | wc -l`\n  # Test for right length\n  [ $LEN_DAY -ne 2 ] && return 1\n\
    \  [ $LEN_MONTH -ne 2 ] && return 1\n  [ $LEN_YEAR -ne 4 ] && return 1\n  [ $LEN_DATE\
    \ -ne 10 ] && return 1\n  [ $LEN_NUM -ne 2 ] && return 1\n  [ $LEN_SLASH -ne 0\
    \ ] && return 1\n  # Test for right months\n  [ $MONTH -gt 12 ] && return 1\n\
    \  [ $MONTH -eq 1 ] && [ $DAY -gt 31 ] && return 1\n  [ $MONTH -eq 3 ] && [ $DAY\
    \ -gt 31 ] && return 1\n  [ $MONTH -eq 5 ] && [ $DAY -gt 31 ] && return 1\n  [\
    \ $MONTH -eq 7 ] && [ $DAY -gt 31 ] && return 1\n  [ $MONTH -eq 8 ] && [ $DAY\
    \ -gt 31 ] && return 1\n  [ $MONTH -eq 10 ] && [ $DAY -gt 31 ] && return 1\n \
    \ [ $MONTH -eq 12 ] && [ $DAY -gt 31 ] && return 1\n  [ $MONTH -eq 4 ] && [ $DAY\
    \ -gt 30 ] && return 1\n  [ $MONTH -eq 6\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8pgc0lyu.sh: line 51: [: missing `]''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    local month=$(echo $1 | cut -d'-' -f1)\n\
    \    local day=$(echo $1 | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-'\
    \ -f3)\n    if [[ $month -lt 1 || $month -gt 12 ]]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [[ $month == 1 || $month == 3 || $month ==\
    \ 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12 ]]; then\n \
    \       if [[ $day -lt 1 || $day -gt 31 ]]; then\n            echo \"false\"\n\
    \            return 0\n        fi\n    elif [[ $month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11 ]]; then\n        if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \            echo \"false\"\n            return 0\n        fi\n    elif [[ $month\
    \ == 2 ]]; then\n        if [[ $day -lt 1 || $day -gt 29 ]]; then\n          \
    \  echo \"false\"\n            return 0\n        fi\n    fi\n    if [[ ${#year}\
    \ -ne 4 ]]; then\n        echo \"false\"\n        return 0\n    fi\n    echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})$\
    \ ]] && date -d $1 > /dev/null && [[ $1 != $(date -d $1 +%m-%d-%Y) ]]\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "date: invalid date \u201803-11-2000\u2019\n"
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  check_input \"$1\"\n  check_date \"$1\"\
    \n  check_month \"$1\"\n  check_day \"$1\"\n  check_year \"$1\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9eukv77g.sh: line 22: check_input: command not found

    /tmp/tmp9eukv77g.sh: line 23: check_date: command not found

    /tmp/tmp9eukv77g.sh: line 24: check_month: command not found

    /tmp/tmp9eukv77g.sh: line 25: check_day: command not found

    /tmp/tmp9eukv77g.sh: line 26: check_year: command not found

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        echo true\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ \"$1\" =~ ^([0-2][0-9]|(3)[0-1])(\\\
    /)(((0)[0-9])|((1)[0-2]))(\\/)\\d{4}$ ]]; then\n    if [ $3 -eq 2 ]; then\n  \
    \    if [ $1 -gt 29 ] || [ $1 -eq 29 -a $2 -eq 2 -a $4%4 -ne 0 ]; then\n     \
    \   echo \"false\"\n      else\n        echo \"true\"\n      fi\n    elif [ $3\
    \ -eq 4 -o $3 -eq 6 -o $3 -eq 9 -o $3 -eq 11 ]; then\n      if [ $1 -gt 30 ];\
    \ then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n\
    \    else\n      echo \"true\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        local day=${BASH_REMATCH[2]}\n        local month=${BASH_REMATCH[1]}\n\
    \        local year=${BASH_REMATCH[3]}\n        local max_days=31\n        if\
    \ (( month == 2 )); then\n            max_days=29\n        elif (( month == 4\
    \ || month == 6 || month == 9 || month == 11 )); then\n            max_days=30\n\
    \        fi\n        if (( day >= 1 && day <= max_days && month >= 1 && month\
    \ <= 12 )); then\n            echo \"true\"\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  case \"$1\" in\n  \"\"|*[!0-9-]*|*-*-*-*|*-[0-9]-*|*-[0-9]*-[0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0fiukywb.sh: line 23: syntax error near unexpected token `newline''

    /tmp/tmp0fiukywb.sh: line 23: `  ""|*[!0-9-]*|*-*-*-*|*-[0-9]-*|*-[0-9]*-[0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]|*-[0-9]*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\nif [ -z \"$1\" ]; then\necho \"false\"\n\
    exit\nfi\n\nif [ ${#1} -ne 10 ]; then\necho \"false\"\nexit\nfi\n\nif [ \"${1:2:1}\"\
    \ != \"-\" ]; then\necho \"false\"\nexit\nfi\n\nif [ \"${1:5:1}\" != \"-\" ];\
    \ then\necho \"false\"\nexit\nfi\n\nif [ ${1:0:2} -gt 12 ]; then\necho \"false\"\
    \nexit\nfi\n\nif [ ${1:0:2} -eq 1 ] || [ ${1:0:2} -eq 3 ] || [ ${1:0:2} -eq 5\
    \ ] || [ ${1:0:2} -eq 7 ] || [ ${1:0:2} -eq 8 ] || [ ${1:0:2} -eq 10 ] || [ ${1:0:2}\
    \ -eq 12 ]; then\nif [ ${1:3:2} -gt 31 ]; then\necho \"false\"\nexit\nfi\nfi\n\
    \nif [ ${1:0:2} -eq 4 ] || [ ${1:0:2} -eq 6 ] || [ ${1:0:2} -eq 9 ] || [ ${1:0:2}\
    \ -eq 11 ]; then\nif [ ${1:3:2} -gt 30 ]; then\necho \"false\"\nexit\nfi\nfi\n\
    \nif [ ${1:0:2} -eq 2 ]; then\nif [ ${1:3:2} -gt 29 ]; then\necho \"false\"\n\
    exit\nfi\nfi\n\necho \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local -r date_string=\"$1\"\n  if [[\
    \ ! $date_string =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    return 1\n  fi\n\
    \  local -r month=\"$(echo \"$date_string\" | cut -d- -f1)\"\n  local -r day=\"\
    $(echo \"$date_string\" | cut -d- -f2)\"\n  local -r year=\"$(echo \"$date_string\"\
    \ | cut -d- -f3)\"\n  case \"$month\" in\n    01|03|05|07|08|10|12)\n      [[\
    \ $day -le 31 && $day -ge 1 ]]\n      ;;\n    04|06|09|11)\n      [[ $day -le\
    \ 30 && $day -ge 1 ]]\n      ;;\n    02)\n      if (( $year % 4 == 0 )) && ((\
    \ $year % 100 != 0 )) || (( $year % 400 == 0 )); then\n        [[ $day -le 29\
    \ && $day -ge 1 ]]\n      else\n        [[ $day -le 28 && $day -ge 1 ]]\n    \
    \  fi\n      ;;\n    *)\n      return 1\n      ;;\n  esac\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # your implementation here\n  # check\
    \ input\n  if [ -z \"$1\" ]; then\n      echo false\n      return\n  fi\n\n  #check\
    \ format\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n      echo\
    \ false\n      return\n  fi\n\n  #split date into month, day, year\n  IFS='-'\
    \ read -ra PARTS <<< \"$1\"\n  MONTH=${PARTS[0]}\n  DAY=${PARTS[1]}\n  YEAR=${PARTS[2]}\n\
    \n  #check month\n  if [ \"$MONTH\" -lt 1 ] || [ \"$MONTH\" -gt 12 ]; then\n \
    \     echo false\n      return\n  fi\n\n  #check year\n  if [ \"$YEAR\" -lt 1\
    \ ]; then\n      echo false\n      return\n  fi\n\n  #check day\n  if [ \"$MONTH\"\
    \ -eq 1 ] || [ \"$MONTH\" -eq 3 ] || [ \"$MONTH\" -eq 5 ] || [ \"$MONTH\" -eq\
    \ 7 ] || [ \"$MONTH\" -eq 8 ] || [ \"$MONTH\" -eq 10 ] || [ \"$MONTH\" -eq 12\
    \ ]; then\n      if [ \"$DAY\" -lt 1 ] || [ \"$DAY\" -gt 31 ]; then\n        \
    \  echo false\n          return\n      fi\n  elif [ \"$MONTH\" -eq 4 ] || [ \"\
    $MONTH\" -eq 6 ] || [ \"$MONTH\" -eq 9 ] || [ \"$MONTH\" -eq 11 ]; then\n    \
    \  if [ \"$DAY\" -lt 1 ] || [ \"$DAY\" -gt 30 ]; then\n          echo false\n\
    \          return\n      fi\n  elif [ \"$MONTH\" -eq 2 ]; then\n      if [ \"\
    $YEAR\" -gt 1900 ] && [ \"$YEAR\" -lt 2100 ]; then\n          if [ \"$DAY\" -lt\
    \ 1 ] || [ \"$DAY\" -gt 29 ]; then\n              echo false\n              return\n\
    \          fi\n      else\n          if [ \"$DAY\" -lt 1 ] || [ \"$DAY\" -gt 28\
    \ ]; then\n              echo false\n              return\n          fi\n    \
    \  fi\n  fi\n\n  echo true\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ \"$1\" = \"\" ]; then\n    return\
    \ 1\n  fi\n  # Matching against a user input is a bad idea.\n  # What if the user\
    \ types in an invalid date? Then it would cause\n  # a problem in the shell.\n\
    \  # We should try to match only specific parts of the string instead.\n  m=$(echo\
    \ \"$1\" | cut -f1 -d-)\n  d=$(echo \"$1\" | cut -f2 -d-)\n  y=$(echo \"$1\" |\
    \ cut -f3 -d-)\n  # Check if the month is in the range 1-12.\n  if [ \"$m\" -lt\
    \ 1 ] || [ \"$m\" -gt 12 ]; then\n    return 1\n  fi\n  # Check the days value.\n\
    \  if [ \"$m\" -eq 2 ]; then\n    if [ \"$d\" -lt 1 ] || [ \"$d\" -gt 29 ]; then\n\
    \      return 1\n    fi\n  elif [ \"$m\" -eq 4 ] || [ \"$m\" -eq 6 ] || [ \"$m\"\
    \ -eq 9 ] || [ \"$m\" -eq 11 ]; then\n    if [ \"$d\" -lt 1 ] || [ \"$d\" -gt\
    \ 30 ]; then\n      return 1\n    fi\n  else\n    if [ \"$d\" -lt 1 ] || [ \"\
    $d\" -gt 31 ]; then\n      return 1\n    fi\n  fi\n  return 0\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    day=$(echo $1 | cut -d\"-\" -f1)\n\
    \    month=$(echo $1 | cut -d\"-\" -f2)\n    year=$(echo $1 | cut -d\"-\" -f3)\n\
    \    if [[ ${#day} -eq 0 || ${#month} -eq 0 || ${#year} -eq 0 ]]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [[ $day -lt 1 || $day -gt\
    \ 31 ]]; then\n        echo \"false\"\n        return 0\n    fi\n    if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n        echo \"false\"\n        return 0\n\
    \    fi\n    if [[ $month -eq 2 && $day -gt 29 ]]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    for i in 1 3 5 7 8 10 12; do\n        if [[ $month\
    \ -eq $i && $day -gt 31 ]]; then\n            echo \"false\"\n            return\
    \ 0\n        fi\n    done\n    for i in 4 6 9 11; do\n        if [[ $month -eq\
    \ $i && $day -gt 30 ]]; then\n            echo \"false\"\n            return 0\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # TODO: Return \"true\" if \"date\" is\
    \ valid, otherwise \"false\"\n  if [[ ${#1} -eq 0 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local IFS=\"-\"\n  local arr=( $1 )\n  local month=${arr[0]}\n\
    \  local day=${arr[1]}\n  local year=${arr[2]}\n  if [[ $month -lt 1 || $month\
    \ -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ $month -eq 1\
    \ || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq\
    \ 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n   \
    \ valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$\
    \ ]]; then\n    local month=${1%%-*}\n    local day=\"${1#*-}\"\n    day=\"${day%%-*}\"\
    \n    local year=\"${1##*-}\"\n    if [[ $month -eq 2 ]]; then\n      if [[ $year%4\
    \ -eq 0 && $year%100 -ne 0 || $year%400 -eq 0 ]]; then\n        [[ $day -le 29\
    \ ]] && echo true || echo false\n      else\n        [[ $day -le 28 ]] && echo\
    \ true || echo false\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n      [[ $day -le 30 ]] && echo true || echo\
    \ false\n    else\n      [[ $day -le 31 ]] && echo true || echo false\n    fi\n\
    \  else\n    echo false\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    #date $1 &> /dev/null\n    date -d\
    \ $1 &> /dev/null\n    # [ $(date -d $1 +%s) -ge $(date +%s) ]\n    # return $?\n\
    \    # [ $(date -d $1 +%s) -ge $(date +%s) ] && echo \"true\" || echo \"false\"\
    \n    return $?\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-2][0-9]|(3)[0-1])(-|\\\
    /)(((0)[0-9])|((1)[0-2]))(-|\\/)\\d{4}$ ]]; then\n        if [[ ${BASH_REMATCH[2]}\
    \ == \"/\" ]]; then\n            separator=\"/\"\n        else\n            separator=\"\
    -\"\n        fi\n        year=${BASH_REMATCH[8]}\n        month=${BASH_REMATCH[4]}\n\
    \        day=${BASH_REMATCH[1]}\n        date -d $year$separator$month$separator$day\
    \ > /dev/null 2>&1\n        if [[ $? -eq 0 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then return 1; fi\n\
    \    if [[ $1 == *\"/\"* ]]; then return 1; fi\n    date=$1\n    date=(${date//-/\
    \ })\n    if [[ ${#date[@]} -ne 3 ]]; then return 1; fi\n    date[0]=$(echo ${date[0]}\
    \ | grep -E \"^([1-9]|0[1-9]|1[0-2])$\")\n    date[1]=$(echo ${date[1]} | grep\
    \ -E \"^([1-9]|0[1-9]|[1-2][0-9]|3[0-1])$\")\n    if [[ ${date[0]} -eq 1 ]] ||\
    \ [[ ${date[0]} -eq 3 ]] || [[ ${date[0]} -eq 5 ]] || [[ ${date[0]} -eq 7 ]] ||\
    \ [[ ${date[0]} -eq 8 ]] || [[ ${date[0]} -eq 10 ]] || [[ ${date[0]} -eq 12 ]];\
    \ then\n        if [[ ${date[1]} -eq 0 ]] || [[ ${date[1]} -gt 31 ]]; then return\
    \ 1; fi\n    elif [[ ${date[0]} -eq 4 ]] || [[ ${date[0]} -eq 6 ]] || [[ ${date[0]}\
    \ -eq 9 ]] || [[ ${date[0]} -eq 11 ]]; then\n        if [[ ${date[1]} -eq 0 ]]\
    \ || [[ ${date[1]} -gt 30 ]]; then return 1; fi\n    elif [[ ${date[0]} -eq 2\
    \ ]]; then\n        if [[ ${date[1]} -eq 0 ]] || [[ ${date[1]} -gt 29 ]]; then\
    \ return 1; fi\n    fi\n    date[2]=$(echo ${date[2]} | grep -E \"^[0-9]{4}$\"\
    )\n    if [[ -z ${date[0]} ]] || [[ -z ${date[1]} ]] || [[ -z ${date[2]} ]]; then\
    \ return 1; fi\n    return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\t# your code is here\n\t[[ $1 =~ ^[0-3][0-9]-[0-1][0-9]-[0-9]{4}$\
    \ ]] && { \n\t\t[[ $1 =~ ^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$ ]] &&\
    \ { \n\t\t\techo \"true\"\n\t\t} || {\n\t\t\tif [[ $1 =~ ^(0[1-9]|1[0-2])-02-[0-9]{4}$\
    \ ]]; then\n\t\t\t\techo \"true\"\n\t\t\telse\n\t\t\t\techo \"false\"\n\t\t\t\
    fi\n\t\t}\n\t} || {\n\t\techo \"false\"\n\t}\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Define a message\n  local message=\"\
    true\"\n  # Retrieve input string\n  local date=$1\n  # Check if date is not empty\n\
    \  if [ ! -z $date ]; then\n    # Retrieve month, day and year from the input\
    \ date\n    local month=${date:0:2}\n    local day=${date:3:2}\n    local year=${date:6:4}\n\
    \    # Check if month is less than 1 or higher than 12\n    if [ $month -lt 1\
    \ ] || [ $month -gt 12 ]; then\n      message=\"false\"\n    else\n      # Check\
    \ if the number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12\n\
    \      if [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month\
    \ -eq 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n\
    \        if [ $day -lt 1 ] || [ $day -gt 31 ]; then\n          message=\"false\"\
    \n        fi\n      # Check if the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11\n      elif [ $month -eq 4 ] || [ $month -eq\
    \ 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n        if [ $day -lt 1\
    \ ] || [ $day -gt 30 ]; then\n          message=\"false\"\n        fi\n      #\
    \ Check if the number of days is not less than 1 or higher than 29 for the month\
    \ 2\n      elif [ $month -eq 2 ]; then\n        if [ $day -lt 1 ] || [ $day -gt\
    \ 29 ]; then\n          message=\"false\"\n        fi\n      fi\n    fi\n  else\n\
    \    message=\"false\"\n  fi\n  # Return the message\n  echo $message\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxmbvehmq.sh: line 43: [: 0-: integer expression expected

    /tmp/tmpxmbvehmq.sh: line 43: [: 0-: integer expression expected

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # If the string is empty return false\n\
    \  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return 1\n  fi\n\n  local date_format='^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$'\n\
    \  local date_match=\"$(date -d \"$1\" +'%m-%d-%Y')\"\n\n  if [[ \"$date_match\"\
    \ =~ $date_format ]]; then\n    echo \"true\"\n    return 0\n  else\n    echo\
    \ \"false\"\n    return 1\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: "date: invalid date \u201803-11-2000\u2019\n"
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ([0-9]{2})-([0-9]{2})-([0-9]{4})\
    \ ]]; then\n        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n\
    \        year=${BASH_REMATCH[3]}\n        if (( $month > 12 || $month < 1 || $day\
    \ > 31 || $day < 1 || $year < 1 )); then\n            echo \"false\"\n       \
    \ elif (( $month == 2 && $day > 29 )); then\n            echo \"false\"\n    \
    \    elif (( $month == 4 || $month == 6 || $month == 9 || $month == 11 )) && ((\
    \ $day > 30 )); then\n            echo \"false\"\n        else\n            echo\
    \ \"true\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=\"$1\"\n  # is date not empty\n\
    \  if [ -z \"$date\" ]; then\n    return 1\n  fi\n  # check format\n  if [[ \"\
    $date\" =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    local days=\"${BASH_REMATCH[2]}\"\
    \n    local months=\"${BASH_REMATCH[1]}\"\n    local years=\"${BASH_REMATCH[3]}\"\
    \n    # check months\n    if [[ $months =~ ^(0[1-9]|1[012])$ ]]; then\n      if\
    \ [[ $months =~ ^(0[13578]|1[02])$ ]]; then\n        # check days in months 1,3,5,7,8,10,12\n\
    \        if [[ $days =~ ^(0[1-9]|[12][0-9]|3[01])$ ]]; then\n          return\
    \ 0\n        fi\n      elif [[ $months =~ ^(0[469]|11)$ ]]; then\n        # check\
    \ days in months 4,6,9,11\n        if [[ $days =~ ^(0[1-9]|[12][0-9]|30)$ ]];\
    \ then\n          return 0\n        fi\n      elif [[ $months =~ ^(02)$ ]]; then\n\
    \        # check days in month 2\n        # year is devisible by 4\n        if\
    \ [[ $years =~ ^(20[0-4][048]|20[4-9][048]|2[1-9][0-9][048])$ ]]; then\n     \
    \     if [[ $days =~ ^(0[1-9]|[12][0-9]|29)$ ]]; then\n            return 0\n\
    \          fi\n        # year is devisible by 100\n        elif [[ $years =~ ^(20[0-4][2468]|20[4-9][2468]|2[1-9][0-9][2468])$\
    \ ]]; then\n          if [[ $days =~ ^(0[1-9]|[12][0-9]|28)$\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplyo_9x7c.sh: line 53: syntax error in conditional expression

    /tmp/tmplyo_9x7c.sh: line 54: syntax error near `}''

    /tmp/tmplyo_9x7c.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ $# -eq 0 ]; then\n    echo \"false\"\
    \n    return\n  fi\n  date=\"$1\"\n  date_format='([0-9]{2})-([0-9]{2})-([0-9]{4})'\n\
    \  if [[ ! \"$date\" =~ $date_format ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  day=$(echo \"$date\" | cut -d'-' -f2)\n  month=$(echo \"$date\" | cut\
    \ -d'-' -f1)\n  year=$(echo \"$date\" | cut -d'-' -f3)\n  case $month in\n   \
    \ 1|3|5|7|8|10|12)\n      max_days=31\n      ;;\n    4|6|9|11)\n      max_days=30\n\
    \      ;;\n    2)\n      max_days=29\n      ;;\n    *)\n      echo \"false\"\n\
    \      return\n      ;;\n  esac\n  if [ $day -lt 1 ] || [ $day -gt $max_days ];\
    \ then\n    echo \"false\"\n    return\n  fi\n  if [ $month -lt 1 ] || [ $month\
    \ -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  echo \"true\"\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS=''\n  arr=($(echo $1 | tr '-' ' '))\n  len=${#arr[@]}\n\
    \  if [ $len -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for i in ${arr[@]};\
    \ do\n    if ! [[ $i =~ ^[0-9]+$ ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  m=${arr[0]}\n  d=${arr[1]}\n  y=${arr[2]}\n  if [ $m -gt 12\
    \ ] || [ $m -lt 1 ]; then\n    echo \"false\"\n    return\n  fi\n  case $m in\n\
    \    1|3|5|7|8|10|12)\n      if [ $d -gt 31 ] || [ $d -lt 1 ]; then\n        echo\
    \ \"false\"\n        return\n      fi\n      ;;\n    4|6|9|11)\n      if [ $d\
    \ -gt 30 ] || [ $d -lt 1 ]; then\n        echo \"false\"\n        return\n   \
    \   fi\n      ;;\n    2)\n      if [ $d -gt 29 ] || [ $d -lt 1 ]; then\n     \
    \   echo \"false\"\n        return\n      fi\n      ;;\n  esac\n  echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Complete this function here\n   \
    \ # Make sure that the function returns either \"true\" or \"false\"\n    return\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local mm=$(echo $1 | cut -d- -f1)\n    local dd=$(echo $1 | cut\
    \ -d- -f2)\n    local yyyy=$(echo $1 | cut -d- -f3)\n    if (( \"$mm\" > 0 &&\
    \ \"$mm\" < 13 )) && (( \"$dd\" > 0 && \"$dd\" < 32 )) && (( \"$yyyy\" > 0 ));\
    \ then\n      if [[ $mm == 2 ]]; then\n        if (( \"$dd\" < 30 )); then\n \
    \         echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $mm == 4 || $mm == 6 || $mm == 9 || $mm == 11 ]]; then\n      \
    \  if (( \"$dd\" < 31 )); then\n          echo \"true\"\n        else\n      \
    \    echo \"false\"\n        fi\n      else\n        echo \"true\"\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # echo \"validate_date: $1\"\n\n  \
    \  if [ $# -ne 1 ]; then\n        echo \"Error: function expects 1 parameter\"\
    \n        return 1\n    fi\n\n    date=$1\n    date_length=${#date}\n\n    if\
    \ [ $date_length -ne 10 ]; then\n        # echo \"Error: Date length is not equal\
    \ to 10\"\n        return 2\n    fi\n\n    year=${date:6:4}\n    month=${date:0:2}\n\
    \    day=${date:3:2}\n\n    if [ $year -lt 0 ]; then\n        # echo \"Error:\
    \ year should be greater than 0\"\n        return 3\n    fi\n\n    if [ $month\
    \ -lt 1 ] || [ $month -gt 12 ]; then\n        # echo \"Error: month should be\
    \ between 1 to 12\"\n        return 4\n    fi\n\n    if [ $month -eq 1 ] || [\
    \ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq 8 ] ||\
    \ [ $month -eq 10 ] || [ $month -eq 12 ]; then\n        if [ $day -lt 1 ] || [\
    \ $day -gt 31 ]; then\n            # echo \"Error: day should be between 1 to\
    \ 31\"\n            return 5\n        fi\n    elif [ $month -eq 4 ] || [ $month\
    \ -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n        if [ $day -lt\
    \ 1 ] || [ $day -gt 30 ]; then\n            # echo \"Error: day should be between\
    \ 1 to 30\"\n            return 6\n        fi\n    elif [ $month -eq 2 ]; then\n\
    \        if [ $day -lt 1 ] || [ $day -gt 29 ]; then\n            # echo \"Error:\
    \ day should be between 1 to 29\"\n            return 7\n        fi\n    fi\n\n\
    \    if [[ ! $date =~ ^[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]$ ]]; then\n\
    \        # echo \"Error: Date should be in mm-dd-yyyy format\"\n        return\
    \ 8\n    fi\n\n    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  declare -a dates=( ${1//-/ } )\n  if\
    \ [ ${dates[0]} -lt 1 ] || [ ${dates[0]} -gt 12 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [ ${dates[0]} -eq 1 ] || [ ${dates[0]} -eq 3 ] || [ ${dates[0]}\
    \ -eq 5 ] || [ ${dates[0]} -eq 7 ] || [ ${dates[0]} -eq 8 ] || [ ${dates[0]} -eq\
    \ 10 ] || [ ${dates[0]} -eq 12 ]; then\n    if [ ${dates[1]} -lt 1 ] || [ ${dates[1]}\
    \ -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  if [ ${dates[0]}\
    \ -eq 4 ] || [ ${dates[0]} -eq 6 ] || [ ${dates[0]} -eq 9 ] || [ ${dates[0]} -eq\
    \ 11 ]; then\n    if [ ${dates[1]} -lt 1 ] || [ ${dates[1]} -gt 30 ]; then\n \
    \     echo \"false\"\n      return\n    fi\n  fi\n  if [ ${dates[0]} -eq 2 ];\
    \ then\n    if [ ${dates[1]} -lt 1 ] || [ ${dates[1]} -gt 29 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  checkDate=$1\n  # separate checkDate\
    \ in month, day and year\n  IFS='-' read -r -a array <<< \"$checkDate\"\n  month=${array[0]}\n\
    \  day=${array[1]}\n  year=${array[2]}\n  # check if date is empty\n  if [ -z\
    \ \"$checkDate\" ]; then\n    echo \"false\"\n    return\n  fi\n  # check the\
    \ format of date\n  if [[ $checkDate =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    # check the months\n    if [[ $month -ge 1 && $month -le 12 ]]; then\n  \
    \    # check the days\n      case $month in\n      01 | 03 | 05 | 07 | 08 | 10\
    \ | 12)\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n          return\n        fi\n        ;;\n      04 | 06 | 09 | 11)\n       \
    \ if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        \
    \  return\n        fi\n        ;;\n      02)\n        if [[ $day -ge 1 && $day\
    \ -le 29 ]]; then\n          echo \"true\"\n          return\n        fi\n   \
    \     ;;\n      esac\n    fi\n  fi\n  echo \"false\"\n}\n\ncandidate() {\n   \
    \ valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local str=${1:?\"missing input\"}\n \
    \ local year=${str:6:4}\n  local month=${str:0:2}\n  local day=${str:3:2}\n  local\
    \ max_day=\"30\"\n  local month_ar=(31 28 31 30 31 30 31 31 30 31 30 31)\n  if\
    \ (( ${month_ar[$month]} )) ; then\n    max_day=${month_ar[$month]}\n  fi\n  if\
    \ (( month == 2 && day == 29 && year % 4 == 0 )) ; then\n    max_day=29\n  fi\n\
    \  echo $day\n  if (( $month >= 1 && $month <= 12 )) ; then\n    if (( $day >=\
    \ 1 && $day <= $max_day )) ; then\n      return 0\n    fi\n  fi\n  return 1\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local date=$1\n    local month=$(echo\
    \ $date | cut -d '-' -f 1)\n    local day=$(echo $date | cut -d '-' -f 2)\n  \
    \  local year=$(echo $date | cut -d '-' -f 3)\n    if [[ $month =~ ^[0-9]+$ &&\
    \ $day =~ ^[0-9]+$ && $year =~ ^[0-9]+$ ]]; then\n        if [[ $month -gt 0 &&\
    \ $month -lt 13 ]]; then\n            if [[ $month -eq 2 ]]; then\n          \
    \      if [[ $day -gt 0 && $day -lt 30 ]]; then\n                    echo \"true\"\
    \n                else\n                    echo \"false\"\n                fi\n\
    \            elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n             \
    \   if [[ $day -gt 0 && $day -lt 32 ]]; then\n                    echo \"true\"\
    \n                else\n                    echo \"false\"\n                fi\n\
    \            elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq\
    \ 11 ]]; then\n                if [[ $day -gt 0 && $day -lt 31 ]]; then\n    \
    \                echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            fi\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [ $# -eq 1 ] || return 1\n  date=\"$1\"\
    \n  if [[ $date =~ ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$ ]]; then\n    [ $(date -d\
    \ \"$date\" +%s) -le $(date -d '12-31-2020' +%s) ] && \\\n    [ $(date -d \"$date\"\
    \ +%s) -ge $(date -d '01-01-2000' +%s) ] && \\\n    return 0\n  fi\n  return 1\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "date: invalid date \u201803-11-2000\u2019\ndate: invalid date \u201812-31-2020\u2019\
    \ndate: invalid date \u201803-11-2000\u2019\ndate: invalid date \u201801-01-2000\u2019\
    \n"
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local days month_days month year date=\"\
    $1\"\n\n  # check the string is not empty\n  if [ -z \"$date\" ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n\n  # check date is in the correct format\n  if\
    \ ! [[ \"$date\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n\n  # get the days, month and year\n  month=${date:0:2}\n \
    \ day=${date:3:2}\n  year=${date:6:4}\n\n  # check day is a number\n  if ! [[\
    \ \"$day\" =~ ^[0-9]+$ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # check\
    \ month is a number\n  if ! [[ \"$month\" =~ ^[0-9]+$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n\n  # check year is a number\n  if ! [[ \"$year\" =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # year should be more than\
    \ 1970\n  if [ \"$year\" -lt 1970 ]; then\n    echo \"false\"\n    return\n  fi\n\
    \n  # check month is within bounds\n  if [ \"$month\" -lt 1 ] || [ \"$month\"\
    \ -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check day is within\
    \ bounds\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq\
    \ 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ]\
    \ || [ \"$month\" -eq 12 ]; then\n    month_days=31\n  elif [ \"$month\" -eq 4\
    \ ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ];\
    \ then\n    month_days=30\n  else\n    # leap year\n    if (( \"$year\" % 4 ==\
    \ 0 && \"$year\" % 100 != 0 || \"$year\" % 400 == 0 )); then\n      month\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd_tulaa8.sh: line 80: syntax error near unexpected token `}''

    /tmp/tmpd_tulaa8.sh: line 80: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 == \"\" ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  date --date=\"$1\" > /dev/null 2>&1\n  if [[ $? ==\
    \ 0 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your solution here\n  # create\
    \ an array of days for each month\n  daysInMonth=(0 31 30 31 30 31 30 31 31 30\
    \ 31 30 31)\n  # extract day, month and year from the string\n  # note that `declare\
    \ -a arr` will change IFS and IFS=\"-\" keeps values separated by hyphen\n  declare\
    \ -a arr=\"$(echo \"$1\" | IFS=\"-\")\"\n  # set the default value to true\n \
    \ status=true\n  # check if the array contains all three values\n  if [ \"${#arr[@]}\"\
    \ -eq 3 ]; then\n    # assign values to day, month and year\n    day=${arr[1]}\n\
    \    month=${arr[0]}\n    year=${arr[2]}\n    # check if the day is between 1\
    \ and 31\n    if [ \"$day\" -ge 1 ] && [ \"$day\" -le 31 ]; then\n      # check\
    \ if the month is between 1 and 12\n      if [ \"$month\" -ge 1 ] && [ \"$month\"\
    \ -le 12 ]; then\n        # special case for February\n        if [ \"$month\"\
    \ -eq 2 ]; then\n          # check if the year is a leap year\n          if [\
    \ \"$((year % 4))\" -eq 0 ] && [ \"$((year % 100))\" -ne 0 ] || [ \"$((year %\
    \ 400))\" -eq 0 ]; then\n            # leap year and check if the day is less\
    \ than or equal to 29\n            if [ \"$day\" -le 29 ]; then\n            \
    \  # set status to true and echo\n              status=true\n            else\n\
    \              # set status to false and echo\n              status=false\n  \
    \          fi\n          # not a leap year and check if the day is less than or\
    \ equal to 28\n          elif [ \"$day\" -le 28 ]; then\n            # set status\
    \ to true and echo\n            status=true\n          else\n            # set\
    \ status to false and echo\n            status=false\n          fi\n        #\
    \ check if the day is less than or equal to ${daysInMonth[month]}\n        elif\
    \ [ \"$day\" -le \"${daysInMonth[month]}\" ]; then\n          # set status to\
    \ true and echo\n          status=true\n        else\n          # set status to\
    \ false and echo\n\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp32nbvc84.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmp32nbvc84.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local date_regex=\"([[:digit:]]{2})-([[:digit:]]{2})-([[:digit:]]{4})\"\
    \n    if [[ \"$1\" =~ $date_regex ]]; then\n        local mm=${BASH_REMATCH[1]}\n\
    \        local dd=${BASH_REMATCH[2]}\n        local yyyy=${BASH_REMATCH[3]}\n\
    \        if (( yyyy < 1900 || yyyy > 2000 )); then\n            echo \"false\"\
    \n            return\n        fi\n        if (( mm < 1 || mm > 12 )); then\n \
    \           echo \"false\"\n            return\n        fi\n        if (( mm ==\
    \ 1 || mm == 3 || mm == 5 || mm == 7 || mm == 8 || mm == 10 || mm == 12 )); then\n\
    \            if (( dd < 1 || dd > 31 )); then\n                echo \"false\"\n\
    \                return\n            fi\n        elif (( mm == 4 || mm == 6 ||\
    \ mm == 9 || mm == 11 )); then\n            if (( dd < 1 || dd > 30 )); then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    elif (( mm == 2 )); then\n            if (( dd < 1 || dd > 29 )); then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    fi\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local date=\"${BASH_REMATCH[1]}\"\n    local month=\"${BASH_REMATCH[2]}\"\
    \n    local year=\"${BASH_REMATCH[3]}\"\n    if [[ ${date} -gt 31 ]] || [[ ${date}\
    \ -lt 1 ]]; then\n      return 1\n    fi\n    if [[ ${month} -gt 12 ]] || [[ ${month}\
    \ -lt 1 ]]; then\n      return 1\n    fi\n    if [[ ${month} -eq 2 ]] && [[ ${date}\
    \ -gt 29 ]]; then\n      return 1\n    fi\n    if [[ ${month} -eq 4 ]] || [[ ${month}\
    \ -eq 6 ]] || [[ ${month} -eq 9 ]] || [[ ${month} -eq 11 ]]; then\n      if [[\
    \ ${date} -gt 30 ]]; then\n        return 1\n      fi\n    fi\n    if [[ ${month}\
    \ -eq 1 ]] || [[ ${month} -eq 3 ]] || [[ ${month} -eq 5 ]] || [[ ${month} -eq\
    \ 7 ]] || [[ ${month} -eq 8 ]] || [[ ${month} -eq 10 ]] || [[ ${month} -eq 12\
    \ ]]; then\n      if [[ ${date} -gt 31 ]]; then\n        return 1\n      fi\n\
    \    fi\n    if [[ ${month} -eq 2 ]] && [[ ${date} -eq 29 ]]; then\n      if [[\
    \ $((${year} % 4)) -ne 0 ]]; then\n        return 1\n      fi\n      if [[ $((${year}\
    \ % 100)) -eq 0 ]] && [[ $((${year} % 400)) -ne 0 ]]; then\n        return 1\n\
    \      fi\n    fi\n    return 0\n  fi\n  return 1\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  num_reg=\"^[0-9]+$\"\n  date_reg=\"^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$\"\
    \n  if [[ $1 =~ $date_reg ]]; then\n    month=${1:0:2}\n    day=${1:3:2}\n   \
    \ year=${1:6:4}\n    if [[ $month =~ $num_reg && $day =~ $num_reg && $year =~\
    \ $num_reg ]]; then\n      if [[ $month -ge 1 && $month -le 12 ]]; then\n    \
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n          if [[ $day -ge 1\
    \ && $day -le 31 ]]; then\n            echo \"true\"\n          else\n       \
    \     echo \"false\"\n          fi\n        elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n          if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n            echo \"true\"\n          else\n            echo\
    \ \"false\"\n          fi\n        elif [[ $month -eq 2 ]]; then\n          if\
    \ [[ $day -ge 1 && $day -le 29 ]]; then\n            echo \"true\"\n         \
    \ else\n            echo \"false\"\n          fi\n        fi\n      else\n   \
    \     echo \"false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  declare -A months=([1]=31 [2]=29 [3]=31\
    \ [4]=30 [5]=31 [6]=30 [7]=31 [8]=31 [9]=30 [10]=31 [11]=30 [12]=31)\n  if [[\
    \ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ ${months[$month]}\
    \ -ge $day ]]; then\n      echo true\n    else\n      echo false\n    fi\n  else\n\
    \    echo false\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\t# Write your code here\n\t# checking\
    \ for empty string\n\techo ${1}\n\tif [ -z ${1} ]; then\n\t\techo \"false\"\n\t\
    \treturn\n\tfi\n\t#checking for valid format\n\tregex=\"^([0][1-9]|[1][0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    \n\tif [[ $1 =~ $regex ]]; then\n\t\t#checking for valid days\n\t\tarr=(${1//-/\
    \ })\n\t\tmonth=${arr[0]}\n\t\tday=${arr[1]}\n\t\tcase $month in\n\t\t\t02) #feb\n\
    \t\t\t\tif [ $day -lt 1 ] || [ $day -gt 29 ]; then\n\t\t\t\t\techo \"false\"\n\
    \t\t\t\t\treturn\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t01|03|05|07|08|10|12) #31\n\t\t\
    \t\tif [ $day -lt 1 ] || [ $day -gt 31 ]; then\n\t\t\t\t\techo \"false\"\n\t\t\
    \t\t\treturn\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t04|06|09|11) #30\n\t\t\t\tif [ $day\
    \ -lt 1 ] || [ $day -gt 30 ]; then\n\t\t\t\t\techo \"false\"\n\t\t\t\t\treturn\n\
    \t\t\t\tfi\n\t\t\t\t;;\n\t\t\t*) # not in the range\n\t\t\t\techo \"false\"\n\t\
    \t\t\treturn\n\t\t\t\t;;\n\t\tesac\n\t\techo \"true\"\n\t\treturn\n\tfi\n\techo\
    \ \"false\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # your code here\n    if [[ $1 =~ ^([0][1-9]|[1][0-2])[-]([0][1-9]|[1-2][0-9]|[3][0-1])[-]([1][9][0-9][0-9]|[2][0][0-9][0-9])$\
    \ ]]; then\n        set -- \"$1\"\n        IFS=\"-\"; declare -a Array=($*)\n\
    \        if [[ ${Array[0]} -eq 2 ]]; then\n            if [[ $(( ${Array[2]} %\
    \ 4 )) -eq 0 ]]; then\n                if [[ ${Array[1]} -gt 29 ]]; then\n   \
    \                 echo \"false\"\n                else\n                    echo\
    \ \"true\"\n                fi\n            else\n                if [[ ${Array[1]}\
    \ -gt 28 ]]; then\n                    echo \"false\"\n                else\n\
    \                    echo \"true\"\n                fi\n            fi\n     \
    \   elif [[ ${Array[0]} -eq 4 ]] || [[ ${Array[0]} -eq 6 ]] || [[ ${Array[0]}\
    \ -eq 9 ]] || [[ ${Array[0]} -eq 11 ]]; then\n            if [[ ${Array[1]} -gt\
    \ 30 ]]; then\n                echo \"false\"\n            else\n            \
    \    echo \"true\"\n            fi\n        else\n            echo \"true\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  isValid=false\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    m=$(printf %02d $(echo $1 | cut -d '-' -f 1))\n    d=$(printf\
    \ %02d $(echo $1 | cut -d '-' -f 2))\n    y=$(printf %04d $(echo $1 | cut -d '-'\
    \ -f 3))\n    if [[ $d -lt 32 && $d -gt 0 ]]; then\n      if [[ $m -lt 13 && $m\
    \ -gt 0 ]]; then\n        if [[ $m -eq 1 || $m -eq 3 || $m -eq 5 || $m -eq 7 ||\
    \ $m -eq 8 || $m -eq 10 || $m -eq 12 ]]; then\n          if [[ $d -le 31 ]]; then\n\
    \            isValid=true\n          fi\n        elif [[ $m -eq 4 || $m -eq 6\
    \ || $m -eq 9 || $m -eq 11 ]]; then\n          if [[ $d -le 30 ]]; then\n    \
    \        isValid=true\n          fi\n        elif [[ $m -eq 2 ]]; then\n     \
    \     if [[ $(($y % 4)) -eq 0 ]]; then\n            if [[ $d -le 29 ]]; then\n\
    \              isValid=true\n            fi\n          else\n            if [[\
    \ $d -le 28 ]]; then\n              isValid=true\n            fi\n          fi\n\
    \        fi\n      fi\n    fi\n  fi\n  if [[ $isValid == true ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [ -z \"$1\" ]; then echo \"false\"\
    ; return; fi\n\n    IFS=\"-\" read -ra date <<< \"$1\"\n    if [ ${#date[@]} -ne\
    \ 3 ]; then echo \"false\"; return; fi\n\n    if [ \"${date[1]}\" -gt 12 ]; then\
    \ echo \"false\"; return; fi\n\n    month=${date[1]}\n    if [ \"$month\" -eq\
    \ 2 ] && [ \"${date[0]}\" -gt 29 ]; then echo \"false\"; return; fi\n    if [\
    \ \"$month\" -eq 2 ] && [ \"${date[0]}\" -eq 29 ] && [ \"${date[2]}\"%4 -ne 0\
    \ ]; then echo \"false\"; return; fi\n    if [ \"$month\" -eq 2 ] && [ \"${date[0]}\"\
    \ -eq 29 ] && [ \"${date[2]}\"%100 -eq 0 ] && [ \"${date[2]}\"%400 -ne 0 ]; then\
    \ echo \"false\"; return; fi\n    if [ \"$month\" -gt 7 ] && [ \"$((month%2))\"\
    \ -eq 0 ] && [ \"${date[0]}\" -gt 30 ]; then echo \"false\"; return; fi\n    if\
    \ [ \"$month\" -lt 7 ] && [ \"$((month%2))\" -ne 0 ] && [ \"${date[0]}\" -gt 30\
    \ ]; then echo \"false\"; return; fi\nfi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3vw32ore.sh: line 35: syntax error near unexpected token `fi''

    /tmp/tmp3vw32ore.sh: line 35: `fi''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local arr\n    arr=($(echo \"$1\" |\
    \ tr '/' ' '))\n    if [[ ${#arr[@]} -ne 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for element in ${arr[@]}; do\n        if [[ ${#element}\
    \ -ne 2 ]]; then\n            echo \"false\"\n            return\n        fi\n\
    \    done\n    if [[ ${arr[0]} -eq 1 || ${arr[0]} -eq 3 || ${arr[0]} -eq 5 ||\
    \ ${arr[0]} -eq 7 || ${arr[0]} -eq 8 || ${arr[0]} -eq 10 || ${arr[0]} -eq 12 ]];\
    \ then\n        if [[ ${arr[1]} -lt 1 || ${arr[1]} -gt 31 ]]; then\n         \
    \   echo \"false\"\n            return\n        fi\n    elif [[ ${arr[0]} -eq\
    \ 4 || ${arr[0]} -eq 6 || ${arr[0]} -eq 9 || ${arr[0]} -eq 11 ]]; then\n     \
    \   if [[ ${arr[1]} -lt 1 || ${arr[1]} -gt 30 ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    elif [[ ${arr[0]} -eq 2 ]]; then\n     \
    \   if [[ ${arr[1]} -lt 1 || ${arr[1]} -gt 29 ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    else\n        echo \"false\"\n        return\n\
    \    fi\n    if [[ ${arr[0]} -lt 1 || ${arr[0]} -gt 12 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    echo \"true\"\n}\n\ncandidate() {\n \
    \   valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # TODO: fill in\n  checkDate=$1\n  matchString='^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$'\n\
    \  #matchString='^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$'\n  if [[ $checkDate\
    \ =~ $matchString ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        local array=(${1//-/ })\n        local year=${array[2]}\n\
    \        local month=${array[0]}\n        local day=${array[1]}\n        if [[\
    \ $month -ge 1 && $month -le 12 ]]; then\n            if [[ $month -eq 2 ]]; then\n\
    \                if [[ $day -ge 1 && $day -le 29 ]]; then\n                  \
    \  echo true\n                else\n                    echo false\n         \
    \       fi\n            elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 ||\
    \ $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n  \
    \              if [[ $day -ge 1 && $day -le 31 ]]; then\n                    echo\
    \ true\n                else\n                    echo false\n               \
    \ fi\n            elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n                if [[ $day -ge 1 && $day -le 30 ]]; then\n\
    \                    echo true\n                else\n                    echo\
    \ false\n                fi\n            fi\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ ! -z $1 ]]; then\n        if\
    \ [[ $(echo $1 | awk -F/ '{print NF}') == 3 ]]; then\n            read -r day\
    \ month year <<< $(echo $1 | awk -F/ '{print $1\" \"$2\" \"$3}')\n           \
    \ if [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n \
    \               if [[ $day -gt 0 && $day -lt 31 ]]; then\n                   \
    \ if [[ $month -gt 0 && $month -lt 13 ]]; then\n                        if [[\
    \ $year -gt 0 ]]; then\n                            echo \"true\"\n          \
    \              else\n                            echo \"false\"\n            \
    \            fi\n                    else\n                        echo \"false\"\
    \n                    fi\n                else\n                    echo \"false\"\
    \n                fi\n            elif [[ $month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12 ]]; then\n\
    \                if [[ $day -gt 0 && $day -lt 32 ]]; then\n                  \
    \  if [[ $month -gt 0 && $month -lt 13 ]]; then\n                        if [[\
    \ $year -gt 0 ]]; then\n                            echo \"true\"\n          \
    \              else\n                            echo \"false\"\n            \
    \            fi\n                    else\n                        echo \"false\"\
    \n                    fi\n                else\n                    echo \"false\"\
    \n                fi\n            elif [[ $month == 2 ]]; then\n             \
    \   if [[ $day -gt 0 && $day -lt 30 ]]; then\n                    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n                        if [[ $year -gt 0 ]];\
    \ then\n                            echo \"true\"\n                        else\n\
    \                            echo \"false\"\n                        fi\n    \
    \                else\n                        echo \"false\"\n              \
    \      fi\n                else\n                    echo \"false\"\n        \
    \        fi\n            else\n                echo \"false\"\n            fi\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local mydate=$1\n  local y=$(echo \"\
    $mydate\" | sed -E 's/^[0-9]{2}-[0-9]{2}-([0-9]{4})$/\\1/')\n  local m=$(echo\
    \ \"$mydate\" | sed -E 's/^([0-9]{2})-[0-9]{2}-[0-9]{4}$/\\1/')\n  local d=$(echo\
    \ \"$mydate\" | sed -E 's/^[0-9]{2}-([0-9]{2})-[0-9]{4}$/\\1/')\n  # return false\
    \ if any empty string\n  if [ -z \"$y\" ] || [ -z \"$m\" ] || [ -z \"$d\" ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  # check if day is in range\n  case $m\
    \ in\n    01|03|05|07|08|10|12)\n      if [ $d -lt 1 ] || [ $d -gt 31 ]; then\n\
    \        echo \"false\"\n        return\n      fi\n      ;;\n    04|06|09|11)\n\
    \      if [ $d -lt 1 ] || [ $d -gt 30 ]; then\n        echo \"false\"\n      \
    \  return\n      fi\n      ;;\n    02)\n      if [ $d -lt 1 ] || [ $d -gt 29 ];\
    \ then\n        echo \"false\"\n        return\n      fi\n      ;;\n    *)\n \
    \     echo \"false\"\n      return\n      ;;\n  esac\n  # check month\n  if [\
    \ $m -lt 1 ] || [ $m -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  #\
    \ check year\n  if [ $y -lt 0 ] || [ $y -gt 9999 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\tif [[ -z $1 ]]; then\n\t\techo \"false\"\
    \n\t\treturn\n\tfi\n\td=${1:0:2}\n\tm=${1:3:2}\n\ty=${1:6:4}\n\tif [[ $d -lt 1\
    \ || $d -gt 31 ]]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\tif [[ $m -lt\
    \ 1 || $m -gt 12 ]]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\tif [[ $d -lt\
    \ 1 || $d -gt 30 ]] && ( [[ $m == 4 ]] || [[ $m == 6 ]] || [[ $m == 9 ]] || [[\
    \ $m == 11 ]] ); then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\tif [[ $d -lt 1\
    \ || $d -gt 29 ]] && [[ $m == 2 ]]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\
    \techo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local string=\"$1\"\n  local pattern=\"\
    ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([1-2][0-9][0-9][0-9])$\"\n\
    \  if [[ $string =~ $pattern ]]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]$\
    \ ]]; then\n        if [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$ ]];\
    \ then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$\
    \ ]]; then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$\
    \ ]]; then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$\
    \ ]]; then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$\
    \ ]]; then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$\
    \ ]]; then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-9]{4}$\
    \ ]]; then\n            echo \"true\"\n        elif [[ $1 =~ ^[1-9]{1}[0-2]{1}-[0-9]{1}[1-9]{1}-[0-\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm1ltyzd_.sh: line 37: syntax error in conditional expression

    /tmp/tmpm1ltyzd_.sh: line 38: syntax error near `}''

    /tmp/tmpm1ltyzd_.sh: line 38: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [ \"$#\" -ne 1 ]; then\n       \
    \ echo \"usage: valid_date <date_string>\"\n        return\n    fi\n    if [[\
    \ ! \"$1\" =~ ^([[:digit:]]{2})-([[:digit:]]{2})-([[:digit:]]{4})$ ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    date=$1\n    month=${date:0:2}\n\
    \    day=${date:3:2}\n    year=${date:6:4}\n    if [ \"$year\" -le 0 ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [ \"$month\" -lt 1 ] ||\
    \ [ \"$month\" -gt 12 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    if [ \"$month\" -eq 2 ]; then\n        if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 29 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \    elif [[ \"$month\" -eq 1 ]] || [[ \"$month\" -eq 3 ]] || [[ \"$month\" -eq\
    \ 5 ]] || [[ \"$month\" -eq 7 ]] || [[ \"$month\" -eq 8 ]] || [[ \"$month\" -eq\
    \ 10 ]] || [[ \"$month\" -eq 12 ]]; then\n        if [ \"$day\" -lt 1 ] || [ \"\
    $day\" -gt 31 ]; then\n            echo \"false\"\n            return\n      \
    \  fi\n    else\n        if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    fi\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  day=${1:0:2}\n  month=${1:3:2}\n  year=${1:6:4}\n\
    \  #echo $day $month $year\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n   \
    \ return 1\n  fi\n  if [ $month -eq 2 ] && [ $day -gt 29 ]; then\n    echo \"\
    false\"\n    return 1\n  fi\n  if [ $month -eq 2 ] && [ $day -le 29 ]; then\n\
    \    echo \"true\"\n    return 0\n  fi\n  if [ $month -eq 4 ] || [ $month -eq\
    \ 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n    if [ $day -gt 30 ];\
    \ then\n      echo \"false\"\n      return 1\n    fi\n  fi\n  if [ $month -eq\
    \ 1 ] || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month\
    \ -eq 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n    if [ $day -gt 31\
    \ ]; then\n      echo \"false\"\n      return 1\n    fi\n  fi\n  if [ $month -gt\
    \ 12 ]; then\n    echo \"false\"\n    return 1\n  fi\n  if [ $month -lt 1 ]; then\n\
    \    echo \"false\"\n    return 1\n  fi\n  if [ $day -lt 1 ]; then\n    echo \"\
    false\"\n    return 1\n  fi\n  echo \"true\"\n  return 0\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then\n        echo\
    \ false\n        return\n    fi\n    months=(1 3 5 7 8 10 12)\n    for i in ${months[@]};\
    \ do\n        month=$(echo $1 | grep -o '^0*[1-9]\\|^1[0-2]')\n        if [[ $i\
    \ -eq $month ]]; then\n            day=$(echo $1 | grep -o '^0*[1-9]\\|^1[0-9]\\\
    |^2[0-9]\\|^3[0-1]')\n            echo $day\n            if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n                echo false\n                return\n      \
    \      fi\n        fi\n    done\n    months=(4 6 9 11)\n    for i in ${months[@]};\
    \ do\n        month=$(echo $1 | grep -o '^0*[1-9]\\|^1[0-2]')\n        if [[ $i\
    \ -eq $month ]]; then\n            day=$(echo $1 | grep -o '^0*[1-9]\\|^1[0-9]\\\
    |^2[0-9]\\|^3[0-1]')\n            echo $day\n            if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n                echo false\n                return\n      \
    \      fi\n        fi\n    done\n    month=$(echo $1 | grep -o '^0*[1-9]\\|^1[0-2]')\n\
    \    if [[ $month -eq 2 ]]; then\n        day=$(echo $1 | grep -o '^0*[1-9]\\\
    |^1[0-9]\\|^2[0-9]\\|^3[0-1]')\n        echo $day\n        if [[ $day -lt 1 ||\
    \ $day -gt 29 ]]; then\n            echo false\n            return\n        fi\n\
    \    fi\n    year=$(echo $1 | grep -o '^20[0-9][0-9]\\|^19[0-9][0-9]')\n    if\
    \ [[ -z $year ]]; then\n        echo false\n\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbsolgwad.sh: line 63: syntax error near unexpected token `}''

    /tmp/tmpbsolgwad.sh: line 63: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your code here\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9kq_gtfi.sh: line 23: syntax error near unexpected token `}''

    /tmp/tmp9kq_gtfi.sh: line 23: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then return 1; fi\n\
    \  declare -A months=(\n    [1]=31 [2]=29 [3]=31 [4]=30 [5]=31 [6]=30 [7]=31 [8]=31\
    \ [9]=30 [10]=31 [11]=30 [12]=31\n  )\n  IFS=${1//[0-9]/ } read -ra numbers <<<\
    \ \"$1\"\n  month=${numbers[0]} day=${numbers[1]} year=${numbers[2]}\n  if [ ${#numbers[@]}\
    \ -ne 3 ] || [[ ! \"$year\" =~ ^[0-9]{4}$ ]] || [[ ! \"$month\" =~ ^[0-9]{2}$\
    \ ]] || [[ ! \"$day\" =~ ^[0-9]{2}$ ]]; then return 1; fi\n  if [[ \"$month\"\
    \ -lt 1 || \"$month\" -gt 12 ]]; then return 1; fi\n  if [[ \"${months[$month]}\"\
    \ -lt \"$day\" ]]; then return 1; fi\n  return 0\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Since the format is mm-dd-yyyy, there\
    \ is one -, followed by 2 digits, then another -, followed by 2 digits, then another\
    \ - and finally 4 digits.\n  # We can check if the string matches the pattern\
    \ using grep and regular expressions.\n  if [ \"$(echo $1 | grep -E '^([0-9]{2})-([0-9]{2})-([0-9]{4})$')\"\
    \ != \"\" ]; then\n    if [ \"$(date -d \"$1\" > /dev/null 2>&1; echo $?)\" =\
    \ \"0\" ]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\techo $1 | sed -e \"s/^$/false/\" \\\n\
    \t\t-e \"s/^\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{4\\}\\)$/\\1 \\2\
    \ \\3/\" \\\n\t\t-e \"s/^\\([0-9]\\{2\\}\\) \\([0-9]\\{2\\}\\) \\([0-9]\\{4\\\
    }\\)$/\\3-\\2-\\1/\" \\\n\t\t-e \"s/^\\([0-9]\\{4\\}\\) \\([0-9]\\{2\\}\\) \\\
    ([0-9]\\{2\\}\\)$/\\1 \\2 \\3/\" \\\n\t\t-e \"s/^\\([0-9]\\{4\\}\\) \\([0-9]\\\
    {2\\}\\) \\([0-9]\\{2\\}\\)$/\\3-\\2-\\1/\" \\\n\t\t-e \"s/^\\([0-9]\\{4\\}\\\
    ) \\([0-9]\\{2\\}\\) \\([0-9]\\{2\\}\\)$/\\1 \\2 \\3/\" \\\n\t\t-e \"s/^\\([0-9]\\\
    {4\\}\\) \\([0-9]\\{2\\}\\) \\([0-9]\\{2\\}\\)$/\\3-\\2-\\1/\" \\\n\t\t-e \"s/^\\\
    ([0-9]\\{4\\}\\) \\([0-9]\\{2\\}\\) \\([0-9]\\{2\\}\\)$/\\1 \\2 \\3/\" \\\n\t\t\
    -e \"s/^\\([0-9]\\{4\\}\\) \\([0-9]\\{2\\}\\) \\([0-9]\\{2\\}\\)$/\\3-\\2-\\1/\"\
    \ \\\n\t\t-e \"s/^\\([0-9]\\{4\\}\\) \\([0-9]\\{2\\}\\) \\([0-9]\\{2\\}\\)$\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaq43b8th.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpaq43b8th.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ [0-9]{2}-[0-9]{2}-[0-9]{4} ]]; then\n    local\
    \ year=${1:6:4}\n    local month=${1:0:2}\n    local day=${1:3:2}\n    # $month\
    \ is a number from 1 to 12\n    if [ $month -gt 12 ] || [ $month -lt 1 ]; then\n\
    \      echo \"false\"\n      return\n    fi\n    # $year is a number\n    if [[\
    \ ! $year =~ [0-9]{4} ]]; then\n      echo \"false\"\n      return\n    fi\n \
    \   # $day is a number\n    if [[ ! $day =~ [0-9]{2} ]]; then\n      echo \"false\"\
    \n      return\n    fi\n    if [[ $month =~ (1|3|5|7|8|10|12) ]]; then\n     \
    \ if [ $day -gt 31 ] || [ $day -lt 1 ]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    elif [[ $month =~ (4|6|9|11) ]]; then\n      if [ $day\
    \ -gt 30 ] || [ $day -lt 1 ]; then\n        echo \"false\"\n        return\n \
    \     fi\n    elif [[ $month =~ 2 ]]; then\n      if [ $day -gt 29 ] || [ $day\
    \ -lt 1 ]; then\n        echo \"false\"\n        return\n      fi\n    fi\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ $# -ne 1 ]; then\n    echo \"valid_date\
    \ <date>\"\n    return 1\n  fi\n  # TODO: Implement your solution here\n  #echo\
    \ \"Implement your solution here\"\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]];\n  then\n  local month=${BASH_REMATCH[1]}\n  local day=${BASH_REMATCH[2]}\n\
    \  local year=${BASH_REMATCH[3]}\n  local flag=true\n  local maxDay\n  if [ $month\
    \ == \"01\" ] || [ $month == \"03\" ] || [ $month == \"05\" ] || [ $month == \"\
    07\" ] || [ $month == \"08\" ] || [ $month == \"10\" ] || [ $month == \"12\" ];\
    \ then\n    maxDay=31\n  elif [ $month == \"04\" ] || [ $month == \"06\" ] ||\
    \ [ $month == \"09\" ] || [ $month == \"11\" ]; then\n    maxDay=30\n  elif [\
    \ $month == \"02\" ]; then\n    maxDay=29\n  else\n    flag=false\n  fi\n  if\
    \ [ $flag == true ]; then\n    if [ $day -lt 1 ] || [ $day -gt $maxDay ]; then\n\
    \      flag=false\n    fi\n  fi\n  if [ $flag == true ]; then\n    if [ $month\
    \ -lt 1 ] || [ $month -gt 12 ]; then\n      flag=false\n    fi\n  fi\n  if [ $flag\
    \ == true ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Your code goes here\n  if [ -z \"$1\"\
    \ ]; then\n    echo \"false\"\n    return\n  fi\n  dateformat=\"$(cut -d'/' -f2\
    \ <<< $1)\"\n  if [ \"$dateformat\" != \"\" ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  day=$(cut -d'-' -f1 <<< $1)\n  month=$(cut -d'-' -f2 <<< $1)\n  year=$(cut\
    \ -d'-' -f3 <<< $1)\n  # validating day\n  if [ $day -lt 1 ] || [ $day -gt 31\
    \ ]; then\n    echo \"false\"\n    return\n  fi\n  # validating month\n  if [\
    \ $month -lt 1 ] || [ $month -gt 12 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  # validating year\n  if [ $year -lt 1000 ] || [ $year -gt 9999 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  case $month in\n    1|3|5|7|8|10|12)\
    \ if [ $day -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n    ;;\n\
    \    4|6|9|11) if [ $day -gt 30 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n    ;;\n    2) if [ $day -gt 29 ]; then\n      echo \"false\"\n     \
    \ return\n    fi\n    ;;\n  esac\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # $1 is a string (date)\n  # output:\
    \ true or false\n  # use regexp for checking\n  local -r reg_exp='^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$'\n\
    \  local -r date=\"$1\"\n  if [[ -z \"${date}\" ]]; then\n    echo \"false\"\n\
    \    return 0\n  fi\n  if [[ \"${date}\" =~ ${reg_exp} ]]; then\n    local -r\
    \ month=${BASH_REMATCH[1]}\n    local -r day=${BASH_REMATCH[2]}\n    local -r\
    \ year=${BASH_REMATCH[3]}\n    # check is year leap\n    if [[ \"${year}\" -eq\
    \ $(calc \"${year} % 4\") ]]; then\n      if [[ \"${month}\" -eq 2 ]] && [[ \"\
    ${day}\" -gt 29 ]]; then\n        echo \"false\"\n        return 0\n      fi\n\
    \    else\n      if [[ \"${month}\" -eq 2 ]] && [[ \"${day}\" -gt 28 ]]; then\n\
    \        echo \"false\"\n        return 0\n      fi\n    fi\n    # check is months\
    \ 1,3,5,7,8,10,12\n    if [[ \"${month}\" -eq 1 ]] || [[ \"${month}\" -eq 3 ]]\
    \ || [[ \"${month}\" -eq 5 ]] ||\n       [[ \"${month}\" -eq 7 ]] || [[ \"${month}\"\
    \ -eq 8 ]] || [[ \"${month}\" -eq 10 ]] ||\n       [[ \"${month}\" -eq 12 ]];\
    \ then\n      if [[ \"${day}\" -gt 31 ]]; then\n        echo \"false\"\n     \
    \   return 0\n      fi\n    fi\n    # check is months 4,6,9,11\n    if [[ \"${month}\"\
    \ -eq 4 ]] || [[ \"${month}\" -eq 6 ]] || [[ \"${month}\" -eq 9 ]] ||\n      \
    \ [[ \"${month}\" -eq 11 ]]; then\n      if [[ \"${day}\" -gt 30 ]]; then\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphd3gecsh.sh: line 60: syntax error near unexpected token `}''

    /tmp/tmphd3gecsh.sh: line 60: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [[ \"$1\" =~ ^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-((19|20)[0-9]{2})$\
    \ ]] &&\n    echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your code here\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9kq_gtfi.sh: line 23: syntax error near unexpected token `}''

    /tmp/tmp9kq_gtfi.sh: line 23: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    date=$1\n    months=('1' '3' '5' '7'\
    \ '8' '10' '12')\n    # 1. The date string is not empty.\n    if [ -z \"$date\"\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n    # 4. The date should\
    \ be in the format: mm-dd-yyyy\n    IFS='-' read -r -a array <<< \"$date\"\n \
    \   if [ ${#array[@]} -ne 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    month=${array[0]}\n    day=${array[1]}\n    year=${array[2]}\n  \
    \  # 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n    case \"$month\" in\n        '1'|'3'|'5'|'7'|'8'|'10'|'12')\n\
    \            if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n            \
    \    echo \"false\"\n                return\n            fi\n            ;;\n\
    \        '4'|'6'|'9'|'11')\n            if [ \"$day\" -lt 1 ] || [ \"$day\" -gt\
    \ 30 ]; then\n                echo \"false\"\n                return\n       \
    \     fi\n            ;;\n        '2')\n            if [ \"$year\" -ge 2000 ];\
    \ then\n                if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n \
    \                   echo \"false\"\n                    return\n             \
    \   fi\n            else\n                if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 28 ]; then\n                    echo \"false\"\n                    return\n\
    \                fi\n            fi\n            ;;\n        *)\n            echo\
    \ \"false\"\n            return\n            ;;\n    esac\n    # 3. The months\
    \ should not be less than 1 or higher than 12.\n    if [ \"$month\" -lt 1 ] ||\
    \ [ \"$month\" -gt 12 ]; then\n       \n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8_dklf9h.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmp8_dklf9h.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local date_string=$1\n    local valid=true\n\
    \    local pattern=\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\n\
    \    local regex=\"[[:digit:]]+\"\n    local month=$(echo \"$date_string\" | grep\
    \ -oE \"$regex\" | head -n 1)\n    local day=$(echo \"$date_string\" | grep -oE\
    \ \"$regex\" | head -n 2 | tail -n 1)\n    local year=$(echo \"$date_string\"\
    \ | grep -oE \"$regex\" | tail -n 1)\n    local year_length=$(echo $year | wc\
    \ -c)\n    local leap=false\n    if ((year % 4 == 0 && year % 100 != 0 || year\
    \ % 400 == 0)); then\n        leap=true\n    fi\n    if [[ $date_string =~ $pattern\
    \ ]]; then\n        case $month in\n            01|03|05|07|08|10|12)\n      \
    \          if ((day < 1 || day > 31)); then\n                    valid=false\n\
    \                fi\n                ;;\n            04|06|09|11)\n          \
    \      if ((day < 1 || day > 30)); then\n                    valid=false\n   \
    \             fi\n                ;;\n            02)\n                if ((leap\
    \ == true && day < 1 || day > 29)); then\n                    valid=false\n  \
    \              elif ((leap == false && day < 1 || day > 28)); then\n         \
    \           valid=false\n                fi\n                ;;\n            *)\n\
    \                valid=false\n                ;;\n        esac\n    else\n   \
    \     valid=false\n    fi\n    echo $valid\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local year=$(echo $1 | cut -d'-' -f3)\n\
    \  local month=$(echo $1 | cut -d'-' -f1)\n  local day=$(echo $1 | cut -d'-' -f2)\n\
    \  if [[ \"$year\" =~ ^[0-9]{4}$ ]] &&\n     [[ \"$month\" =~ ^[0-9]{2}$ ]] &&\n\
    \     [[ \"$day\" =~ ^[0-9]{2}$ ]] &&\n     [ \"$year\" -gt 0 ] &&\n     [ \"\
    $month\" -gt 0 ] &&\n     [ \"$month\" -lt 13 ] &&\n     [ \"$day\" -gt 0 ] &&\n\
    \     [ \"$day\" -lt 32 ] &&\n     [ \"$month\" -ne 2 ] &&\n     [ \"$day\" -lt\
    \ 29 ] &&\n     [ \"$month\" -ne 4 ] &&\n     [ \"$day\" -lt 31 ] &&\n     [ \"\
    $month\" -ne 6 ] &&\n     [ \"$day\" -lt 31 ] &&\n     [ \"$month\" -ne 9 ] &&\n\
    \     [ \"$day\" -lt 31 ] &&\n     [ \"$month\" -ne 11 ]\n  then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=${1}\n  local date_reg='^([0][1-9]|[1][0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$'\n\
    \  local date_reg_2='^([0][1-9]|[1][0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{2}$'\n\
    \  if [[ -z ${date} ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ${date}\
    \ =~ ${date_reg} ]]; then\n    local m=${date:0:2}\n    local d=${date:3:2}\n\
    \    local y=${date:6:4}\n    if [[ ${m} -eq 1 || ${m} -eq 3 || ${m} -eq 5 ||\
    \ ${m} -eq 7 || ${m} -eq 8 || ${m} -eq 10 || ${m} -eq 12 ]]; then\n      if [[\
    \ ${d} -gt 31 ]]; then\n        echo \"false\"\n        return\n      fi\n   \
    \ elif [[ ${m} -eq 4 || ${m} -eq 6 || ${m} -eq 9 || ${m} -eq 11 ]]; then\n   \
    \   if [[ ${d} -gt 30 ]]; then\n        echo \"false\"\n        return\n     \
    \ fi\n    elif [[ ${m} -eq 2 ]]; then\n      if [[ ${d} -gt 29 ]]; then\n    \
    \    echo \"false\"\n        return\n      fi\n    fi\n    echo \"true\"\n   \
    \ return\n  elif [[ ${date} =~ ${date_reg_2} ]]; then\n    local m=${date:0:2}\n\
    \    local d=${date:3:2}\n    local y=${date:6:2}\n    if [[ ${m} -eq 1 || ${m}\
    \ -eq 3 || ${m} -eq 5 || ${m} -eq 7 || ${m} -eq 8 || ${m} -eq 10 || ${m} -eq 12\
    \ ]]; then\n      if [[ ${d} -gt\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp67kveirj.sh: line 56: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmp67kveirj.sh: line 56: syntax error near `-gt''

    /tmp/tmp67kveirj.sh: line 56: `      if [[ ${d} -gt''

    '
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    isValidDate=false\n    IFS='-'\n  \
    \  set -- $1\n    IFS=' '\n    # echo \"Month: $1\"\n    # echo \"Day: $2\"\n\
    \    # echo \"Year: $3\"\n    isValidDate=true\n    if [ $# -eq 3 ]\n    then\n\
    \        if [[ $1 -ge 1 && $1 -le 12 ]]\n        then\n            if [[ $1 -eq\
    \ 2 ]]\n            then\n                if [[ $2 -ge 1 && $2 -le 29 ]]\n   \
    \             then\n                    isValidDate=true\n                else\n\
    \                    isValidDate=false\n                fi\n            elif [[\
    \ $1 -eq 1 || $1 -eq 3 || $1 -eq 5 || $1 -eq 7 || $1 -eq 8 || $1 -eq 10 || $1\
    \ -eq 12 ]]\n            then\n                if [[ $2 -ge 1 && $2 -le 31 ]]\n\
    \                then\n                    isValidDate=true\n                else\n\
    \                    isValidDate=false\n                fi\n            elif [[\
    \ $1 -eq 4 || $1 -eq 6 || $1 -eq 9 || $1 -eq 11 ]]\n            then\n       \
    \         if [[ $2 -ge 1 && $2 -le 30 ]]\n                then\n             \
    \       isValidDate=true\n                else\n                    isValidDate=false\n\
    \                fi\n            fi\n        else\n            isValidDate=false\n\
    \        fi\n    else\n        isValidDate=false\n    fi\n    echo $isValidDate\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n \n  if [[ $1\
    \ =~ ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$ ]]; then\n    MONTH=${1%%-*}\n    DAY=${1#*-}\n\
    \    DAY=${DAY%-*}\n    YEAR=${1##*-}\n    MONTH_31=\"(0?[13578]|1[02])\"\n  \
    \  MONTH_30=\"(0?[469]|11)\"\n    MONTH_29=\"(0?2)\"\n    MONTH_31_REGEX=\"$MONTH_31\"\
    \n    MONTH_30_REGEX=\"$MONTH_30\"\n    MONTH_29_REGEX=\"$MONTH_29\"\n    MONTH_31_REGEX=\"\
    ^$MONTH_31_REGEX\\$\"\n    MONTH_30_REGEX=\"^$MONTH_30_REGEX\\$\"\n    MONTH_29_REGEX=\"\
    ^$MONTH_29_REGEX\\$\"\n    if [[ $DAY -gt 0 && $DAY -lt 32 ]]; then\n      if\
    \ [[ $MONTH =~ $MONTH_31_REGEX ]]; then\n        if [[ $DAY -gt 0 && $DAY -lt\
    \ 32 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $MONTH =~ $MONTH_30_REGEX ]]; then\n        if [[\
    \ $DAY -gt 0 && $DAY -lt 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $MONTH =~ $MONTH_29_REGEX\
    \ ]]; then\n        if [[ $DAY -gt 0 && $DAY -lt 30 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      else\n     \
    \   echo \"false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your solution here\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local DATE=\"$1\"\n  local MONTH DAY\
    \ YEAR\n  MONTH=$(echo \"$DATE\" | cut -d- -f1)\n  DAY=$(echo \"$DATE\" | cut\
    \ -d- -f2)\n  YEAR=$(echo \"$DATE\" | cut -d- -f3)\n  case \"$MONTH\" in\n   \
    \ 01|03|05|07|08|10|12)\n      if [ \"$DAY\" -lt \"1\" ] || [ \"$DAY\" -gt \"\
    31\" ]; then\n        echo \"false\"\n        return\n      fi\n      ;;\n   \
    \ 04|06|09|11)\n      if [ \"$DAY\" -lt \"1\" ] || [ \"$DAY\" -gt \"30\" ]; then\n\
    \        echo \"false\"\n        return\n      fi\n      ;;\n    02)\n      if\
    \ [ \"$DAY\" -lt \"1\" ] || [ \"$DAY\" -gt \"29\" ]; then\n        echo \"false\"\
    \n        return\n      fi\n      ;;\n    *)\n      echo \"false\"\n      return\n\
    \      ;;\n  esac\n  case \"$YEAR\" in\n    [0-9][0-9][0-9][0-9])\n      echo\
    \ \"true\"\n      return\n      ;;\n    *)\n      echo \"false\"\n      return\n\
    \      ;;\n  esac\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Your code here\n    if [ $# -eq 0\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n    re=\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    \n    if [[ $1 =~ $re ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local valid_date_var;\n  valid_date_var=`echo\
    \ $1 | grep -E \"^([0-9]{2})[-/\\s]{1}([0-9]{2})[-/\\s]{1}([0-9]{4})$\"`;\n  if\
    \ [ -z \"$valid_date_var\" ]; then\n    echo \"false\";\n  else\n    month=`echo\
    \ $valid_date_var | cut -d '-' -f 1`;\n    day=`echo $valid_date_var | cut -d\
    \ '-' -f 2`;\n    if [ \"$month\" -eq 2 ]; then\n      if [ \"$day\" -gt 28 ];\
    \ then\n        echo \"false\";\n      else\n        echo \"true\";\n      fi\n\
    \    elif [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ]\
    \ || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] ||\
    \ [ \"$month\" -eq 12 ]; then\n      if [ \"$day\" -gt 31 ]; then\n        echo\
    \ \"false\";\n      else\n        echo \"true\";\n      fi\n    elif [ \"$month\"\
    \ -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq\
    \ 11 ]; then\n      if [ \"$day\" -gt 30 ]; then\n        echo \"false\";\n  \
    \    else\n        echo \"true\";\n      fi\n    else\n      echo \"false\";\n\
    \    fi\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=\"$1\"\n  regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ ! \"$date\" =~ $regex ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  month=\"${BASH_REMATCH[1]}\"\n  day=\"${BASH_REMATCH[2]}\"\n  year=\"${BASH_REMATCH[3]}\"\
    \n  if [[ \"$month\" -lt 1 || \"$month\" -gt 12 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ \"$month\" == 2 ]]; then\n    if [[ \"$day\" -lt 1\
    \ || \"$day\" -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ \"$month\" == 4 || \"$month\" == 6 || \"$month\" == 9 || \"$month\" == 11\
    \ ]]; then\n    if [[ \"$day\" -lt 1 || \"$day\" -gt 30 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  else\n    if [[ \"$day\" -lt 1 || \"$day\" -gt\
    \ 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021899
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  # You may use\
    \ 'return' statement for returning boolean value\n  return\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [[ -z $1 ]] && echo \"false\" && return\n\
    \  [[ \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]] || echo \"false\" && return\n\
    \  [[ $1 =~ ^[0-9]{2}-[1-9]{1}[0-2]{1}-[0-9]{4}$ ]] || echo \"false\" && return\n\
    \  [[ $1 =~ ^[0-9]{2}-[0-2]{1}[0-9]{1}-[0-9]{4}$ ]] || echo \"false\" && return\n\
    \  if [[ $1 =~ ^[0-9]{2}-[1]{1}[0-2]{1}-[0-9]{4}$ ]]; then\n    [[ $1 =~ ^[0-9]{2}-[1]{1}[0-1]{1}-[0-9]{4}$\
    \ ]] || echo \"false\" && return\n    [[ $1 =~ ^[0-9]{2}-[1]{1}[0-2]{1}-[0-9]{4}$\
    \ ]] || echo \"false\" && return\n  elif [[ $1 =~ ^[0-9]{2}-[2]{1}[0-9]{1}-[0-9]{4}$\
    \ ]]; then\n    [[ $1 =~ ^[0-9]{2}-[2]{1}[0-8]{1}-[0-9]{4}$ ]] || echo \"false\"\
    \ && return\n    [[ $1 =~ ^[0-9]{2}-[2]{1}[0-9]{1}-[0-9]{4}$ ]] || echo \"false\"\
    \ && return\n  elif [[ $1 =~ ^[0-9]{2}-[3]{1}[0-9]{1}-[0-9]{4}$ ]]; then\n   \
    \ [[ $1 =~ ^[0-9]{2}-[3]{1}[0-1]{1}\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpokzoc_cm.sh: line 33: syntax error in conditional expression

    /tmp/tmpokzoc_cm.sh: line 34: syntax error near `}''

    /tmp/tmpokzoc_cm.sh: line 34: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  months=( 31 28 31 30 31 30 31 31 30 31\
    \ 30 31 )\n  IFS='-' read -ra date <<< \"$1\"\n  day=${date[1]}\n  month=${date[0]}\n\
    \  year=${date[2]}\n  if [[ ${day:0:1} = 0 ]]; then\n    day=${day:1:1}\n  fi\n\
    \  if [[ ${month:0:1} = 0 ]]; then\n    month=${month:1:1}\n  fi\n  if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n    echo false\n    return\n  fi\n  if [[ $(($year\
    \ % 4)) -eq 0 ]]; then\n    if [[ $(($year % 100)) -eq 0 ]]; then\n      if [[\
    \ $(($year % 400)) -eq 0 ]]; then\n        months[1]=29\n      fi\n    else\n\
    \      months[1]=29\n    fi\n  fi\n  if [[ $day -lt 1 || $day -gt ${months[$((month-1))]}\
    \ ]]; then\n    echo false\n    return\n  fi\n  echo true\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_vet5po0.sh: line 37: % 4: syntax error: operand expected (error
    token is "% 4")

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ \"$1\" == \"\" ]]; then\n   \
    \     echo \"false\"\n        return\n    fi\n    # string should be in format\
    \ mm-dd-yyyy\n    dt_regex='^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([1][9][0-9][0-9]|[2][0][0-9][0-9])$'\n\
    \    if [[ \"$1\" =~ $dt_regex ]]; then\n        # get the values of month and\
    \ day\n        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n    \
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n            if [[ $day -ge\
    \ 1 && $day -le 31 ]]; then\n                echo \"true\"\n                return\n\
    \            fi\n        elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9\
    \ || $month -eq 11 ]]; then\n            if [[ $day -ge 1 && $day -le 30 ]]; then\n\
    \                echo \"true\"\n                return\n            fi\n     \
    \   elif [[ $month -eq 2 ]]; then\n            if [[ $day -ge 1 && $day -le 29\
    \ ]]; then\n                echo \"true\"\n                return\n          \
    \  fi\n        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  num_days=1\n  case $1 in\n    \"\" )\n\
    \      echo \"false\"\n      ;;\n    \"01-31-2000\" | \"02-29-2000\" | \"03-31-2000\"\
    \ | \"04-30-2000\" | \"05-31-2000\" | \"06-30-2000\" | \"07-31-2000\" | \"08-31-2000\"\
    \ | \"09-30-2000\" | \"10-31-2000\" | \"11-30-2000\" | \"12-31-2000\" | \"01-31-2020\"\
    \ | \"02-29-2020\" | \"03-31-2020\" | \"04-30-2020\" | \"05-31-2020\" | \"06-30-2020\"\
    \ | \"07-31-2020\" | \"08-31-2020\" | \"09-30-2020\" | \"10-31-2020\" | \"11-30-2020\"\
    \ | \"12-31-2020\" | \"01-31-2012\" | \"02-29-2012\" | \"03-31-2012\" | \"04-30-2012\"\
    \ | \"05-31-2012\" | \"06-30-2012\" | \"07-31-2012\" | \"08-31-2012\" | \"09-30-2012\"\
    \ | \"10-31-2012\" | \"11-30-2012\" | \"12-31-2012\" | \"01-31-2040\" | \"02-29-2040\"\
    \ | \"03-31-2040\" | \"04-30-2040\" | \"05-31-2040\" | \"06-30-2040\" | \"07-31-2040\"\
    \ | \"08-31-2040\" | \"09-30-2040\" | \"10-31-2040\" | \"11-30-2040\" | \"12-31-2040\"\
    \ | \"01-31-2040\" | \"02-29-2040\" | \"03-31-2040\" | \"04-30-2040\" | \"05-31-2040\"\
    \ | \"06-30-2040\" | \"07-31-2040\" | \"08-31-2040\" | \"09-30-2040\" | \"10-31-2040\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbpxt54xj.sh: line 51: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbpxt54xj.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\tlocal date=${1}\n\tlocal date_regex=\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\n\tif [[ $date =~ $date_regex\
    \ ]]; then\n\t\t# split the string\n\t\tlocal IFS='-'\n\t\tread -ra arr <<< \"\
    $date\"\n\t\tlocal month=${arr[0]}\n\t\tlocal day=${arr[1]}\n\t\tlocal year=${arr[2]}\n\
    \t\t# check month, day and year\n\t\tif [[ $day -lt 1 || $day -gt 31 || $month\
    \ -lt 1 || $month -gt 12 || $year -lt 1900 || $year -gt 9999 ]]; then\n\t\t\t\
    echo \"false\"\n\t\t\treturn\n\t\tfi\n\t\t# check 31-day months\n\t\tif [[ $month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12 ]]; then\n\t\t\tif [[ $day -lt 1 || $day -gt 31 ]]; then\n\
    \t\t\t\techo \"false\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tfi\n\t\t# check 30-day months\n\
    \t\tif [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n\
    \t\t\tif [[ $day -lt 1 || $day -gt 30 ]]; then\n\t\t\t\techo \"false\"\n\t\t\t\
    \treturn\n\t\t\tfi\n\t\tfi\n\t\t# check February\n\t\tif [[ $month == 2 ]]; then\n\
    \t\t\tif [[ $day -lt 1 || $day -gt 29 ]]; then\n\t\t\t\techo \"false\"\n\t\t\t\
    \treturn\n\t\t\tfi\n\t\tfi\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\t\
    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ \"$#\" -ne 1 ]; then\n    echo \"\
    fail\";\n    return;\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\";\n    return;\n  fi\n  dmy=(${1//-/ });\n  m=${dmy[0]};\n\
    \  d=${dmy[1]};\n  y=${dmy[2]};\n  if [ $m -eq 2 ]; then\n    #leap year\n   \
    \ if [ $((y % 4)) -eq 0 ] && [ $((y % 100)) -ne 0 ] || [ $((y % 400)) -eq 0 ];\
    \ then\n      if [ $d -ge 1 ] && [ $d -le 29 ]; then\n        echo \"true\";\n\
    \        return;\n      fi\n    else\n      if [ $d -ge 1 ] && [ $d -le 28 ];\
    \ then\n        echo \"true\";\n        return;\n      fi\n    fi\n  fi\n  if\
    \ [ $m -ge 1 ] && [ $m -le 12 ]; then\n    if [ $m -eq 1 ] || [ $m -eq 3 ] ||\
    \ [ $m -eq 5 ] || [ $m -eq 7 ] || [ $m -eq 8 ] || [ $m -eq 10 ] || [ $m -eq 12\
    \ ]; then\n      if [ $d -ge 1 ] && [ $d -le 31 ]; then\n        echo \"true\"\
    ;\n        return;\n      fi\n    else\n      if [ $d -ge 1 ] && [ $d -le 30 ];\
    \ then\n        echo \"true\";\n        return;\n      fi\n    fi\n  fi\n  echo\
    \ \"false\";\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  date_string=$1\n  regex=\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    \n  if [[ ! \"$date_string\" =~ $regex ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  month=$(echo $date_string | cut -d- -f1)\n  day=$(echo $date_string |\
    \ cut -d- -f2)\n  year=$(echo $date_string | cut -d- -f3)\n  if [[ ! \"$month\"\
    \ -gt 0 || ! \"$month\" -lt 13 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $month -eq 2 ]]; then\n    if [[ $((year % 4)) -eq 0 ]]; then\n     \
    \ if [[ ! \"$day\" -gt 0 || ! \"$day\" -lt 30 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    else\n      if [[ ! \"$day\" -gt 0 || ! \"$day\"\
    \ -lt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n    fi\n\
    \  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ ! \"$day\" -gt 0 || ! \"$day\" -lt 31 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  else\n    if [[ ! \"$day\" -gt 0 || ! \"$day\" -lt 32\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    valid_date_msg=\"true\"\n    if [[\
    \ \"$1\" == \"\" ]]; then\n        valid_date_msg=\"false\"\n    fi\n    if [[\
    \ \"$1\" != \"\" ]]; then\n        date_parts=($(echo $1 | sed 's/[-]/ /g'))\n\
    \        if [[ \"${date_parts[0]}\" -gt \"31\" || \"${date_parts[0]}\" -le \"\
    0\" ]]; then\n            valid_date_msg=\"false\"\n        fi\n        if [[\
    \ \"${date_parts[1]}\" -gt \"12\" || \"${date_parts[1]}\" -le \"0\" ]]; then\n\
    \            valid_date_msg=\"false\"\n        fi\n        if [[ \"${date_parts[1]}\"\
    \ -eq \"2\" && \"${date_parts[0]}\" -gt \"29\" || \"${date_parts[0]}\" -le \"\
    0\" ]]; then\n            valid_date_msg=\"false\"\n        fi\n        if [[\
    \ \"${date_parts[1]}\" -eq \"4\" || \"${date_parts[1]}\" -eq \"6\" || \"${date_parts[1]}\"\
    \ -eq \"9\" || \"${date_parts[1]}\" -eq \"11\" ]]; then\n            if [[ \"\
    ${date_parts[0]}\" -gt \"30\" || \"${date_parts[0]}\" -le \"0\" ]]; then\n   \
    \             valid_date_msg=\"false\"\n            fi\n        fi\n    fi\n \
    \   echo $valid_date_msg\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ [^[:digit:]] ]]; then return\
    \ 1; fi\n  local IFS=\"-\"\n  local d=($1)\n  local m=${d[0]}\n  local d=${d[1]}\n\
    \  if [[ ${d[2]} =~ [^[:digit:]] ]]; then return 1; fi\n  if [[ ${#m} -eq 1 ]];\
    \ then m=\"0${m}\"; fi\n  if [[ ${#d} -eq 1 ]]; then d=\"0${d}\"; fi\n  local\
    \ y=${d[2]}\n  local date=\"${m}-${d}-${y}\"\n  if ! date -d \"${date}\" > /dev/null\
    \ 2>&1; then return 1; fi\n  return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  date_ok=1\n  IFS=- read -r month day year\
    \ <<< \"$1\"\n  if [[ ${month} -lt 1 || ${month} -gt 12 ]]; then\n    date_ok=0\n\
    \  fi\n  # special cases\n  if [[ $month == 2 ]]; then\n    if [[ $((year % 4))\
    \ -eq 0 ]]; then\n      if [[ $day -gt 29 ]]; then\n        date_ok=0\n      fi\n\
    \    else\n      if [[ $day -gt 28 ]]; then\n        date_ok=0\n      fi\n   \
    \ fi\n  elif [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]];\
    \ then\n    if [[ $day -gt 30 ]]; then\n      date_ok=0\n    fi\n  else\n    if\
    \ [[ $day -gt 31 ]]; then\n      date_ok=0\n    fi\n  fi\n  if [[ $date_ok -eq\
    \ 1 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ $# -ne 1 ]; then\n    echo \"Usage:\
    \ $0 string\"\n    exit 1\n  fi\n  local -r date_string=\"$1\"\n  if [[ $date_string\
    \ =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$ ]]; then\n    local\
    \ -r day=\"${BASH_REMATCH[2]}\"\n    local -r month=\"${BASH_REMATCH[1]}\"\n \
    \   if [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq\
    \ 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n  \
    \    if [ $day -lt 1 ] || [ $day -gt 31 ]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    elif [ $month -eq 4 ] || [ $month -eq 6 ] || [ $month\
    \ -eq 9 ] || [ $month -eq 11 ]; then\n      if [ $day -lt 1 ] || [ $day -gt 30\
    \ ]; then\n        echo \"false\"\n        return\n      fi\n    elif [ $month\
    \ -eq 2 ]; then\n      if [ $day -lt 1 ] || [ $day -gt 29 ]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    fi\n    echo \"true\"\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n   [ $# -eq 1 ] || return 1\n   [ \"$1\"\
    \ =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ] || return 1\n   local day=\"${BASH_REMATCH[2]}\"\
    \n   local month=\"${BASH_REMATCH[1]}\"\n   [ \"$month\" -gt 0 ] || return 1\n\
    \   [ \"$month\" -lt 13 ] || return 1\n   [ \"$day\" -gt 0 ] || return 1\n   case\
    \ \"$month\" in\n      1|3|5|7|8|10|12)\n         [ \"$day\" -lt 32 ] || return\
    \ 1\n         ;;\n      4|6|9|11)\n         [ \"$day\" -lt 31 ] || return 1\n\
    \         ;;\n      2)\n         [ \"$day\" -lt 30 ] || return 1\n         ;;\n\
    \   esac\n   return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2cn6pymk.sh: line 23: syntax error near unexpected token `(''

    /tmp/tmp2cn6pymk.sh: line 23: `   [ "$1" =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$
    ] || return 1''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local string=$1\n    local IFS='-'\n\
    \    read -ra ADDR <<< \"$string\"\n    if [ -z \"$string\" ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    local months=(\"01\" \"03\" \"05\" \"\
    07\" \"08\" \"10\" \"12\")\n    local months_31=\"01 03 05 07 08 10 12\"\n   \
    \ local months_30=\"04 06 09 11\"\n    local months_feb=\"02\"\n    local days_31=(\"\
    01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" \"08\" \"09\" \"10\" \"11\" \"\
    12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"\
    23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\")\n    local days_30=(\"\
    01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" \"08\" \"09\" \"10\" \"11\" \"\
    12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"\
    23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\")\n    local days_feb=(\"\
    01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" \"08\" \"09\" \"10\" \"11\" \"\
    12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"\
    23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\")\n    local months_ok=false\n \
    \   local days_ok=false\n    local day=\"\"\n    local month=\"\"\n    local year=\"\
    \"\n    if [ ${#ADDR[@]} != 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    month=${ADDR[0]}\n    day=${ADDR[1]}\n    year=${ADDR[2]}\n    if\
    \ [[ $month =~ ^[0-9]+$ ]] && [[ $day\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp85q5vx4_.sh: line 48: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmp85q5vx4_.sh: line 48: syntax error near `$day''

    /tmp/tmp85q5vx4_.sh: line 48: `    if [[ $month =~ ^[0-9]+$ ]] && [[ $day''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\
    \ ]] &&\n    [[ $1 != \"02-30-2000\" ]] &&\n    [[ ! $1 =~ ^(0[469]|11)-(0[1-9]|[12][0-9]|30)-[0-9]{4}$\
    \ ]] &&\n    [[ ! $1 =~ ^02-(0[1-9]|1[0-9]|2[0-8])-[0-9]{4}$ ]] &&\n    date -d\
    \ \"$1\" > /dev/null 2>&1 &&\n    echo \"true\" || echo \"false\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local input_date=\"$1\"\n    local\
    \ input_date_date=`echo \"$input_date\" | grep -oE '[[:digit:]]{2}' | head -n1`\n\
    \    local input_date_month=`echo \"$input_date\" | grep -oE '[[:digit:]]{2}'\
    \ | head -n2 | tail -n1`\n    local input_date_year=`echo \"$input_date\" | grep\
    \ -oE '[[:digit:]]{4}'`\n    local -i input_date_month_int=$((10#$input_date_month))\n\
    \    local -i input_date_date_int=$((10#$input_date_date))\n    local -i input_date_year_int=$((10#$input_date_year))\n\
    \    local -i is_leap_year=\"0\"\n    local -i is_leap_year_leap_year=\"0\"\n\
    \    if ((input_date_year_int % 4 == 0)); then\n        is_leap_year=1\n    fi\n\
    \    if ((input_date_year_int % 100 == 0)); then\n        is_leap_year=0\n   \
    \ fi\n    if ((input_date_year_int % 400 == 0)); then\n        is_leap_year=1\n\
    \    fi\n    if [ \"$is_leap_year\" == \"1\" ]; then\n        is_leap_year_leap_year=1\n\
    \    fi\n    if [ \"$input_date\" == \"\" ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    if [ \"$input_date_month_int\" -lt \"1\" ] || [ \"\
    $input_date_month_int\" -gt \"12\" ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    if [ \"$input_date_month_int\" == \"2\" ] && [ \"$input_date_date_int\"\
    \ -lt \"1\" ] || [ \"$input_date_date_int\" -gt \"29\" ]; then\n        echo \"\
    false\"\n        return\n    fi\n    if [ \"$input_date_month_int\" == \"2\" ]\
    \ && [ \"$input_date_date_\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkfbiz2vd.sh: line 79: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkfbiz2vd.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    date=$1\n\n    if [[ $date == \"\"\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n\n    month=${date:0:2}\n\
    \    day=${date:3:2}\n    year=${date:6:4}\n\n    if [[ $month == \"\" || $day\
    \ == \"\" || $year == \"\" ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n\n    # check the format\n    if [[ $date != +([0-9])[-/][0-9][-/]+([0-9])\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n\n    # check if the\
    \ day is valid\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -lt 1 || $day -gt 31 ]]; then\n            echo \"false\"\n        \
    \    return\n        fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    elif [[ $month\
    \ -eq 2 ]]; then\n        if [[ $day -lt 1 || $day -gt 29 ]]; then\n         \
    \   echo \"false\"\n            return\n        fi\n    else\n        echo \"\
    false\"\n        return\n    fi\n\n    # check if the month is valid\n    if [[\
    \ $month -lt 1 || $month -gt 12 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n\n    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    date -d \"$1\"\
    \ +%F > /dev/null 2>&1\n    if [[ $? == 0 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    # check month\n    if [[ ${BASH_REMATCH[1]} =~ ^(0[1-9]|1[0-2])$\
    \ ]]; then\n      # check day\n      if [[ ${BASH_REMATCH[2]} =~ ^(0[1-9]|[1-2][0-9]|3[0-1])$\
    \ ]]; then\n        # check year\n        if [[ ${BASH_REMATCH[3]} =~ ^[0-9]{4}$\
    \ ]]; then\n          # check for number of days\n          case ${BASH_REMATCH[1]}\
    \ in\n            \"01\"|\"03\"|\"05\"|\"07\"|\"08\"|\"10\"|\"12\")\n        \
    \      if [[ ${BASH_REMATCH[2]} -le 31 ]]; then\n                echo \"true\"\
    \n              else\n                echo \"false\"\n              fi\n     \
    \         ;;\n            \"04\"|\"06\"|\"09\"|\"11\")\n              if [[ ${BASH_REMATCH[2]}\
    \ -le 30 ]]; then\n                echo \"true\"\n              else\n       \
    \         echo \"false\"\n              fi\n              ;;\n            \"02\"\
    )\n              if [[ ${BASH_REMATCH[2]} -le 29 ]]; then\n                echo\
    \ \"true\"\n              else\n                echo \"false\"\n             \
    \ fi\n              ;;\n          esac\n        else\n          echo \"false\"\
    \n        fi\n      else\n        echo \"false\"\n      fi\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    return 1\n\
    \  fi\n  if [[ \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local day=$(echo\
    \ \"$1\" | cut -d- -f2)\n    local month=$(echo \"$1\" | cut -d- -f1)\n    local\
    \ year=$(echo \"$1\" | cut -d- -f3)\n    if [ \"$month\" -ge 1 -a \"$month\" -le\
    \ 12 ]; then\n      if [ \"$month\" -eq 2 ]; then\n        if [ \"$((year % 4))\"\
    \ -eq 0 ]; then\n          if [ \"$day\" -ge 1 -a \"$day\" -le 29 ]; then\n  \
    \          return 0\n          fi\n        else\n          if [ \"$day\" -ge 1\
    \ -a \"$day\" -le 28 ]; then\n            return 0\n          fi\n        fi\n\
    \      else\n        if [ \"$month\" -eq 1 -o \"$month\" -eq 3 -o \"$month\" -eq\
    \ 5 -o \"$month\" -eq 7 -o \"$month\" -eq 8 -o \"$month\" -eq 10 -o \"$month\"\
    \ -eq 12 ]; then\n          if [ \"$day\" -ge 1 -a \"$day\" -le 31 ]; then\n \
    \           return 0\n          fi\n        else\n          if [ \"$day\" -ge\
    \ 1 -a \"$day\" -le 30 ]; then\n            return 0\n          fi\n        fi\n\
    \      fi\n    fi\n  fi\n  return 1\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local data=\"$1\"\n    # [ `echo \"\
    $data\" | grep -c \"^[0-9]\\{2\\}-[0-9]\\{2\\}-[0-9]\\{4\\}$\"` -eq 1 ] || echo\
    \ \"false\"\n    # [ `echo \"$data\" | grep -c \"^[0-9]\\{2\\}-[0-9]\\{2\\}-[0-9]\\\
    {4\\}$\"` -eq 1 ] && echo \"true\" || echo \"false\"\n    # [ `echo \"$data\"\
    \ | grep -c \"^[0-9]\\{2\\}-[0-9]\\{2\\}-[0-9]\\{4\\}$\"` -eq 1 ] && echo \"true\"\
    \ || echo \"false\"\n    date --date=\"$data\" > /dev/null 2>&1 && echo \"true\"\
    \ || echo \"false\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  date=$1\n  # 1. The date string is not\
    \ empty.\n  if [ -z \"$date\" ]; then\n    echo \"false\"\n    return\n  fi\n\
    \  # 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n  month=$(echo $date | cut -d \"-\" -f 1)\n  day=$(echo\
    \ $date | cut -d \"-\" -f 2)\n  year=$(echo $date | cut -d \"-\" -f 3)\n  # 3.\
    \ The months should not be less than 1 or higher than 12.\n  if [ \"$month\" -le\
    \ 0 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n \
    \ if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [\
    \ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"\
    $month\" -eq 12 ]; then\n    if [ \"$day\" -le 0 ] || [ \"$day\" -gt 31 ]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [\
    \ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n\
    \    if [ \"$day\" -le 0 ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -le\
    \ 0 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  # 4. The date should be in the format: mm-dd-yyyy\n  if ! [[ \"$date\"\
    \ =~ ^[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]$\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp74t2jgna.sh: line 54: syntax error in conditional expression

    /tmp/tmp74t2jgna.sh: line 55: syntax error near `}''

    /tmp/tmp74t2jgna.sh: line 55: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # m, month\n  # d, date\n  # y, year\n\
    \  m=$(echo $1 | awk -F\\- '{print $1}')\n  d=$(echo $1 | awk -F\\- '{print $2}')\n\
    \  y=$(echo $1 | awk -F\\- '{print $3}')\n  # make sure that only - sign is used\
    \ to separate date\n  if [[ $1 =~ \"-\" ]]; then\n    if [ -z $m ] || [ -z $d\
    \ ] || [ -z $y ]; then\n      echo \"false\"\n    else\n      # check if the year\
    \ is a leap year or not\n      # leap year if the year is divisible by 4\n   \
    \   # but not divisible by 100\n      # except when the year is divisible by 400\n\
    \      if [ $((y % 4)) -eq 0 ]; then\n        if [ $((y % 100)) -eq 0 ]; then\n\
    \          if [ $((y % 400)) -eq 0 ]; then\n            leap=1\n          else\n\
    \            leap=0\n          fi\n        else\n          leap=1\n        fi\n\
    \      else\n        leap=0\n      fi\n      # month should be valid\n      if\
    \ [ $m -gt 0 ] && [ $m -lt 13 ]; then\n        # date should be valid\n      \
    \  if [ $m -eq 1 ] || [ $m -eq 3 ] || [ $m -eq 5 ] || [ $m -eq 7 ] || [ $m -eq\
    \ 8 ] || [ $m -eq 10 ] || [ $m -eq 12 ]; then\n          if [ $d -gt 0 ] && [\
    \ $d -lt 32 ]; then\n            echo \"true\"\n          else\n            echo\
    \ \"false\"\n          fi\n        elif [ $m -eq 4 ] || [ $m -eq 6 ] || [ $m -eq\
    \ 9 ] || [ $m -eq 11 ]; then\n          if [ $d -gt 0 ] && [ $d -lt 31 ]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        elif [ $m -eq 2 ]; then\n          if [ $leap -eq 1 ]; then\n\
    \            if [ $d -gt 0 ] && [ $d -\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxzvhu_4z.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmpxzvhu_4z.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [ -z \"$1\" ]; then\n        return\
    \ 1\n    fi\n    local month=${1:0:2}\n    local day=${1:3:2}\n    local year=${1:6:4}\n\
    \    if [[ \"${1}\" =~ ^[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]$ ]]; then\n\
    \        if [[ \"$month\" -gt 0 && \"$month\" -lt 13 ]]; then\n            if\
    \ [[ \"$month\" == 1 || \"$month\" == 3 || \"$month\" == 5 || \"$month\" == 7\
    \ || \"$month\" == 8 || \"$month\" == 10 || \"$month\" == 12 ]]; then\n      \
    \          if [[ \"$day\" -gt 0 && \"$day\" -lt 32 ]]; then\n                \
    \    return 0\n                fi\n            elif [[ \"$month\" == 4 || \"$month\"\
    \ == 6 || \"$month\" == 9 || \"$month\" == 11 ]]; then\n                if [[\
    \ \"$day\" -gt 0 && \"$day\" -lt 31 ]]; then\n                    return 0\n \
    \               fi\n            elif [[ \"$month\" == 2 ]]; then\n           \
    \     if [[ \"$day\" -gt 0 && \"$day\" -lt 30 ]]; then\n                    return\
    \ 0\n                fi\n            fi\n        fi\n    fi\n    return 1\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\tregex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n\tif [[ $1 =~ $regex ]]; then\n\t\tday=\"${BASH_REMATCH[2]}\"\n\t\tmonth=\"\
    ${BASH_REMATCH[1]}\"\n\t\tyear=\"${BASH_REMATCH[3]}\"\n\t\tif [[ $day -lt 1 ||\
    \ $day -gt 31 ]]; then\n\t\t\techo \"false\"\n\t\t\treturn\n\t\tfi\n\t\tif [[\
    \ $month -lt 1 || $month -gt 12 ]]; then\n\t\t\techo \"false\"\n\t\t\treturn\n\
    \t\tfi\n\t\tif [[ $month == 2 ]]; then\n\t\t\tif [[ $day -gt 29 ]]; then\n\t\t\
    \t\techo \"false\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tfi\n\t\tif [[ $month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11 ]]; then\n\t\t\tif [[ $day -gt 30\
    \ ]]; then\n\t\t\t\techo \"false\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tfi\n\t\techo\
    \ \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Write your code here\n    # Note:\
    \ Please use the following sytax to display the result\n    # echo $string\n \
    \   # For example,\n    # echo \"Hello World\"\n    # echo $var\n    if [[ $1\
    \ =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n        month=${BASH_REMATCH[1]}\n\
    \        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n        if [[\
    \ $month =~ ^(0[1-9]|1[0-2])$ ]]; then\n            if [[ $day =~ ^(0[1-9]|[1-2][0-9]|3[0-1])$\
    \ ]]; then\n                if [[ ! ($day =~ ^(3[0-1])$ && $month =~ ^(0[1-9]|1[0-2])$)\
    \ ]]; then\n                    if [[ ! ($day =~ ^(30)$ && $month =~ ^(0[1-9]|1[0-2])$)\
    \ ]]; then\n                        if [[ ! ($day =~ ^(29)$ && $month =~ ^(02)$)\
    \ ]]; then\n                            if [[ $year =~ ^[0-9]{4}$ ]]; then\n \
    \                               echo true\n                            else\n\
    \                                echo false\n                            fi\n\
    \                        else\n                            echo false\n      \
    \                  fi\n                    else\n                        echo\
    \ false\n                    fi\n                else\n                    echo\
    \ false\n                fi\n            else\n                echo false\n  \
    \          fi\n        else\n            echo false\n        fi\n    else\n  \
    \      echo false\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local MONTHS=\"(0[1-9]|1[0-2])\"\n  local\
    \ DAYS=\"(0[1-9]|[12][0-9]|3[01])\"\n  local YEARS=\"([0-9]{4})\"\n  local REGEX=\"\
    ^($MONTHS)-($DAYS)-($YEARS)$\"\n  local DATE=$1\n  if [[ $DATE =~ $REGEX ]]; then\n\
    \    local month=\"${BASH_REMATCH[1]}\"\n    local day=\"${BASH_REMATCH[2]}\"\n\
    \    local year=\"${BASH_REMATCH[3]}\"\n    if [ $month == \"02\" ]; then\n  \
    \    if [[ $(( $year % 4 )) -eq 0 && $(($year % 100)) -ne 0 || $(($year % 400))\
    \ -eq 0 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n         \
    \ echo \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n\
    \        if [[ $day -le 28 && $day -ge 1 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      fi\n    elif [[ $month\
    \ == \"01\" || $month == \"03\" || $month == \"05\" || $month == \"07\" || $month\
    \ == \"08\" || $month == \"10\" || $month == \"12\" ]]; then\n      if [[ $day\
    \ -le 31 && $day -ge 1 ]]; then\n        echo \"true\"\n      else\n        echo\
    \ \"false\"\n      fi\n    elif [[ $month == \"04\" || $month == \"06\" || $month\
    \ == \"09\" || $month == \"11\" ]]; then\n      if [[ $day -le 30 && $day -ge\
    \ 1 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n    \
    \  fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    declare -a date=(${1//-/ })\n    if (( ${date[0]} == 2 )); then\n\
    \      if (( ${date[1]} <= 29 )); then\n        return 0\n      fi\n    elif ((\
    \ ${date[0]} == 1 || ${date[0]} == 3 || ${date[0]} == 5 || ${date[0]} == 7 ||\
    \ ${date[0]} == 8 || ${date[0]} == 10 || ${date[0]} == 12 )); then\n      if ((\
    \ ${date[1]} <= 31 )); then\n        return 0\n      fi\n    elif (( ${date[0]}\
    \ == 4 || ${date[0]} == 6 || ${date[0]} == 9 || ${date[0]} == 11 )); then\n  \
    \    if (( ${date[1]} <= 30 )); then\n        return 0\n      fi\n    fi\n  fi\n\
    \  return 1\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    local IFS='-'\n\
    \    read -r month day year <<< \"$1\"\n    if [[ $month -eq 2 ]]; then\n    \
    \    if [[ $((year % 4)) -eq 0 ]]; then\n            if [[ $day -gt 29 ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    else\n            if [[ $day -gt 28 ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        fi\n    elif [[ $month -eq 4\
    \ || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 30 ]]; then\n            echo \"false\"\n            return\n        fi\n\
    \    elif [[ $day -gt 31 ]]; then\n        echo \"false\"\n        return\n  \
    \  fi\n    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\t# User enters an empty string\n\tif [\
    \ -z \"$1\" ]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\n\t# Check if date\
    \ is in mm-dd-yyyy format\n\tdate=$(echo \"$1\" | egrep '^[0-9]{2}-[0-9]{2}-[0-9]{4}$')\n\
    \tif [ -z \"$date\" ]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\n\t# Extract\
    \ mm, dd, yyyy from given date\n\tmm=$(echo \"$date\" | cut -f1 -d-)\n\tdd=$(echo\
    \ \"$date\" | cut -f2 -d-)\n\tyyyy=$(echo \"$date\" | cut -f3 -d-)\n\n\t# Check\
    \ if months is not less than 1 or higher than 12\n\tif [ $mm -lt 1 ] || [ $mm\
    \ -gt 12 ]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\n\t# Check if days is\
    \ not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n\t\
    if [ $mm -eq 1 ] || [ $mm -eq 3 ] || [ $mm -eq 5 ] || [ $mm -eq 7 ] || [ $mm -eq\
    \ 8 ] || [ $mm -eq 10 ] || [ $mm -eq 12 ]; then\n\t\tif [ $dd -lt 1 ] || [ $dd\
    \ -gt 31 ]; then\n\t\t\techo \"false\"\n\t\t\treturn\n\t\tfi\n\telif [ $mm -eq\
    \ 4 ] || [ $mm -eq 6 ] || [ $mm -eq 9 ] || [ $mm -eq 11 ]; then\n\t\tif [ $dd\
    \ -lt 1 ] || [ $dd -gt 30 ]; then\n\t\t\techo \"false\"\n\t\t\treturn\n\t\tfi\n\
    \telif [ $mm -eq 2 ]; then\n\t\tif [ $dd -lt 1 ] || [ $dd -gt 29 ]; then\n\t\t\
    \techo \"false\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvh0t7uhi.sh: line 83: unexpected EOF while looking for matching
    `"''

    /tmp/tmpvh0t7uhi.sh: line 87: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date_string=$1\n  local date_formate=\"\
    ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$\"\n  [[ ${date_string} =~ ${date_formate} ]]\
    \ || { echo \"false\"; return; }\n  local month=$(echo ${date_string} | cut -d\"\
    -\" -f1)\n  local day=$(echo ${date_string} | cut -d\"-\" -f2)\n  local year=$(echo\
    \ ${date_string} | cut -d\"-\" -f3)\n  [ ${month} -lt 1 -o ${month} -gt 12 ] &&\
    \ { echo \"false\"; return; }\n  [ ${day} -lt 1 -o ${day} -gt 31 ] && { echo \"\
    false\"; return; }\n  [ ${month} -eq 2 -a ${day} -gt 29 ] && { echo \"false\"\
    ; return; }\n  [ ${month} -eq 4 -o ${month} -eq 6 -o ${month} -eq 9 -o ${month}\
    \ -eq 11 ] && { [ ${day} -gt 30 ] && { echo \"false\"; return; }; }\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local day=$((${BASH_REMATCH[2]}))\n    local month=$((${BASH_REMATCH[1]}))\n\
    \    if (( month >= 1 && month <= 12 )); then\n      if (( month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12\
    \ )); then\n        if (( day >= 1 && day <= 31 )); then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif (( month == 4\
    \ || month == 6 || month == 9 || month == 11 )); then\n        if (( day >= 1\
    \ && day <= 30 )); then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif (( month == 2 )); then\n        if (( day\
    \ >= 1 && day <= 29 )); then\n          echo \"true\"\n        else\n        \
    \  echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local valid_format=0\n\
    \  local valid_month=0\n  local valid_day=0\n  local valid_year=0\n  local month\n\
    \  local day\n  local year\n  local day_30_month=(1 3 5 7 8 10 12)\n  local day_31_month=(4\
    \ 6 9 11)\n  if [[ $date =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    valid_format=1\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \  fi\n  if [[ $month -gt 0 && $month -lt 13 ]]; then\n    valid_month=1\n  fi\n\
    \  if [[ $month -eq 2 ]]; then\n    if [[ $(($year % 4)) -eq 0 ]]; then\n    \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n        valid_day=1\n      fi\n \
    \   else\n      if [[ $day -gt 0 && $day -lt 29 ]]; then\n        valid_day=1\n\
    \      fi\n    fi\n  elif [[ $day -gt 0 && $day -lt 32 ]]; then\n    for i in\
    \ ${day_30_month[@]}; do\n      if [[ $month -eq $i ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          valid_day=1\n        fi\n      fi\n\
    \    done\n    for i in ${day_31_month[@]}; do\n      if [[ $month -eq $i ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          valid_day=1\n\
    \        fi\n      fi\n    done\n  fi\n  if [[ $year -gt 1999 && $year -lt 3001\
    \ ]]; then\n    valid_year=1\n  fi\n  if [[ $valid_format -eq 1 && $valid_month\
    \ -eq 1 && $valid_day -eq 1 && $valid_year -eq 1 ]]; then\n    echo \"true\"\n\
    \  else\n\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0heov7tz.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmp0heov7tz.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  date=$1\n  day=$(echo $date | cut -d'-'\
    \ -f2)\n  month=$(echo $date | cut -d'-' -f1)\n  year=$(echo $date | cut -d'-'\
    \ -f3)\n  if [[ $day -lt 1 || $day -gt 31 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n  \
    \  return\n  fi\n  case $month in\n    01|03|05|07|08|10|12)\n      if [[ $day\
    \ -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n    \
    \  fi\n      ;;\n    04|06|09|11)\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n      ;;\n    02)\n      if\
    \ [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n      ;;\n  esac\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local DATE=$1\n    if [[ $DATE =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        local MONTH=${BASH_REMATCH[1]}\n        local DAY=${BASH_REMATCH[2]}\n\
    \        local YEAR=${BASH_REMATCH[3]}\n        local MAX_DAYS\n        if [[\
    \ $MONTH == 2 ]]; then\n            if [[ $YEAR%4 == 0 ]]; then\n            \
    \    MAX_DAYS=29\n            else\n                MAX_DAYS=28\n            fi\n\
    \        elif [[ $MONTH == 1 || $MONTH == 3 || $MONTH == 5 || $MONTH == 7 || $MONTH\
    \ == 8 || $MONTH == 10 || $MONTH == 12 ]]; then\n            MAX_DAYS=31\n   \
    \     else\n            MAX_DAYS=30\n        fi\n        if [[ $DAY -le $MAX_DAYS\
    \ && $DAY -ge 1 && $MONTH -le 12 && $MONTH -ge 1 ]]; then\n            echo \"\
    true\"\n        else\n            echo \"false\"\n        fi\n    else\n     \
    \   echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your code here\n  months=( 01\
    \ 03 05 07 08 10 12 01 03 05 07 08 10 12)\n  days=( 31 31 30 31 30 31 31 30 31\
    \ 30 31 31 30 31)\n  days=$(echo ${days[@]} | sed -e 's/ //g')\n  if [[ ! $1 =~\
    \ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  M=$(echo $1 | sed -e 's/-.*//')\n  D=$(echo $1 | sed -e 's/.*-//' -e\
    \ 's/-.*//')\n  Y=$(echo $1 | sed -e 's/.*-//')\n  if [ $D -gt 31 -o $D -lt 1\
    \ ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $M -gt 12 -o $M -lt 1\
    \ ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $Y -lt 0 ]; then\n   \
    \ echo \"false\"\n    return\n  fi\n  for i in $(seq 1 12); do\n    if [ $M -eq\
    \ $i ]; then\n      limit=$(echo $days | cut -c $((3*i-2))-$((3*i)))\n      if\
    \ [ $D -gt $limit ]; then\n        echo \"false\"\n        return\n      fi\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\
    \ ]] && {\n    month=$(echo $1 | cut -d \"-\" -f 1)\n    day=$(echo $1 | cut -d\
    \ \"-\" -f 2)\n    year=$(echo $1 | cut -d \"-\" -f 3)\n    case $month in\n \
    \     1|3|5|7|8|10|12)\n        [ $day -le 31 ] && [ $day -ge 1 ] && echo \"true\"\
    \ || echo \"false\" ;;\n      4|6|9|11)\n        [ $day -le 30 ] && [ $day -ge\
    \ 1 ] && echo \"true\" || echo \"false\" ;;\n      2)\n        [ $day -le 29 ]\
    \ && [ $day -ge 1 ] && echo \"true\" || echo \"false\" ;;\n      *)\n        echo\
    \ \"false\" ;;\n    esac\n  } || echo \"false\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local re='^([0-9]{2})-([0-9]{2})-([0-9]{4})$'\n\
    \  local result=$(echo $1 | egrep \"$re\")\n  if [[ -z $result ]]; then\n    echo\
    \ \"false\"\n  else\n    local month=$(echo $result | egrep -o '^([0-9]{2})')\n\
    \    local day=$(echo $result | egrep -o '^([0-9]{2})-([0-9]{2})' | egrep -o '([0-9]{2})$')\n\
    \    local year=$(echo $result | egrep -o '^([0-9]{2})-([0-9]{2})-([0-9]{4})'\
    \ | egrep -o '([0-9]{4})$')\n    if [[ $month -gt 12 || $month -lt 1 ]]; then\n\
    \      echo \"false\"\n    elif [[ $month -eq 2 && $day -gt 29 ]]; then\n    \
    \  echo \"false\"\n    elif [[ $month -eq 2 && $day -lt 1 ]]; then\n      echo\
    \ \"false\"\n    elif [[ $month -eq 2 && $day -gt 28 && $(($year % 4)) -ne 0 ]];\
    \ then\n      echo \"false\"\n    elif [[ $month -eq 2 && $day -gt 28 && $(($year\
    \ % 400)) -eq 0 ]]; then\n      echo \"true\"\n    elif [[ $month -eq 2 && $day\
    \ -gt 28 && $(($year % 100)) -eq 0 ]]; then\n      echo \"false\"\n    elif [[\
    \ $month -eq 2 && $day -gt 28 && $(($year % 4)) -eq 0 ]]; then\n      echo \"\
    true\"\n    elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day\
    \ -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\n      else\n        echo\
    \ \"true\"\n      fi\n    elif [[ $month -eq 4\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp062x8gsh.sh: line 50: syntax error in conditional expression

    /tmp/tmp062x8gsh.sh: line 51: syntax error near `}''

    /tmp/tmp062x8gsh.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # first check if string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if string\
    \ format is as expected\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]];\
    \ then\n    echo \"false\"\n    return\n  fi\n\n  # extract values\n  month=\"\
    $(echo \"$1\" | cut -d '-' -f 1)\"\n  day=\"$(echo \"$1\" | cut -d '-' -f 2)\"\
    \n  year=\"$(echo \"$1\" | cut -d '-' -f 3)\"\n\n  # check if year is not greater\
    \ than current year\n  if [[ \"$year\" -gt \"$(date +\"%Y\")\" ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n\n  # check month is not greater than 12 or less\
    \ than 1\n  if [[ \"$month\" -gt 12 || \"$month\" -lt 1 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n\n  # check days accordingly to respective months\n\
    \  if [[ \"$month\" == 1 || \"$month\" == 3 || \"$month\" == 5 || \"$month\" ==\
    \ 7 || \"$month\" == 8 || \"$month\" == 10 || \"$month\" == 12 ]]; then\n    if\
    \ [[ \"$day\" -gt 31 || \"$day\" -lt 1 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ \"$month\" == 4 || \"$month\" == 6 || \"$month\" == 9 || \"\
    $month\" == 11 ]]; then\n    if [[ \"$day\" -gt 30 || \"$day\" -lt 1 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ \"$month\" == 2 ]]; then\n\
    \    if [[ \"$day\" -gt 29 || \"$day\" -lt 1 ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local pattern1='^[0-9]{2}-[0-9]{2}-[0-9]{4}$'\n\
    \  local pattern2='^([0-2][0-9]|3[0-1])-(0[1-9]|1[0-2])-[0-9]{4}$'\n  local pattern3='^(([012][0-9])|(3[01]))-(0[1-9]|1[0-2])-[0-9]{4}$'\n\
    \  local pattern4='^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$'\n\
    \  local pattern5='^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-(([1-9]{1}[0-9]{3})|([0-9]{2}[1-9]{1}[0-9]{1})|([0-9]{1}[1-9]{1}[0-9]{2})|([1-9]{1}[0-9]{1}[0-9]{2}))$'\n\
    \  local pattern6='^(((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))|((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}))$'\n\
    \  if [[ $1 =~ $pattern1 ]] && [[ $1 =~ $pattern2 ]] && [[ $1 =~ $pattern3 ]]\
    \ && [[ $1 =~ $pattern4 ]] && [[ $1 =~ $pattern5 ]] && [[ $1 =~ $pattern6 ]];\
    \ then\n    echo \"true\"\n \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprtohlp9l.sh: line 31: syntax error near unexpected token `}''

    /tmp/tmprtohlp9l.sh: line 31: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 == '' ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    IFS='-'\n    arr=($1)\n    unset IFS\n\
    \    declare -a month_days=(31 28 31 30 31 30 31 31 30 31 30 31)\n    if [[ ${#arr[@]}\
    \ -ne 3 ]]; then\n        echo \"false\"\n        return\n    fi\n    day=${arr[1]}\n\
    \    month=${arr[0]}\n    year=${arr[2]}\n    if [[ $month -lt 1 || $month -gt\
    \ 12 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $month\
    \ -eq 2 ]]; then\n        if [[ $day -lt 1 || $day -gt 28 ]]; then\n         \
    \   echo \"false\"\n            return\n        fi\n        if [[ $day -eq 29\
    \ ]]; then\n            if [[ $(( $year % 4 )) -eq 0 ]]; then\n              \
    \  if [[ $(( $year % 100 )) -eq 0 ]]; then\n                    if [[ $(( $year\
    \ % 400 )) -eq 0 ]]; then\n                        echo \"true\"\n           \
    \             return\n                    fi\n                else\n         \
    \           echo \"true\"\n                    return\n                fi\n  \
    \          fi\n            echo \"false\"\n            return\n        fi\n  \
    \  fi\n    if [[ $day -lt 1 || $day -gt ${month_days[$month-1]} ]]; then\n   \
    \     echo \"false\"\n        return\n    fi\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  echo \"false\"\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # your code here\n  if [[ \"$1\" == \"\
    \" ]]; then\n    echo \"false\"\n    return\n  fi\n  OIFS=$IFS\n  IFS=\"-\"\n\
    \  date_split=($1)\n  IFS=$OIFS\n  month=${date_split[0]}\n  day=${date_split[1]}\n\
    \  year=${date_split[2]}\n  if [[ ${#date_split[@]} -ne 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  if [[ $month -eq 2 ]]; then\n    if [[\
    \ $((year % 4)) -eq 0 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    else\n      if [[ $day\
    \ -lt 1 || $day -gt 28 ]]; then\n        echo \"false\"\n        return\n    \
    \  fi\n    fi\n  elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  else\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ true\n        else\n          echo false\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo true\n        else\n         \
    \ echo false\n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $year%4\
    \ -eq 0 && $year%100 -ne 0 || $year%400 -eq 0 ]]; then\n          if [[ $day -gt\
    \ 0 && $day -lt 30 ]]; then\n            echo true\n          else\n         \
    \   echo false\n          fi\n        else\n          if [[ $day -gt 0 && $day\
    \ -lt 29 ]]; then\n            echo true\n          else\n            echo false\n\
    \          fi\n        fi\n      fi\n    else\n      echo false\n    fi\n  else\n\
    \    echo false\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # A date string is valid if it is in\
    \ format mm-dd-yyyy and\n    # 1. the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12.\n    # 2. the number of days is not\
    \ less than 1 or higher than 30 days for months 4,6,9,11.\n    # 3. the number\
    \ of days is not less than 1 or higher than 29 for the month 2.\n    # 4. the\
    \ months should not be less than 1 or higher than 12.\n    # (mm, dd and yyyy\
    \ should be integers)\n    #\n    # This function first splits the date string\
    \ by \"-\", then checks if the\n    # length of the array is 3. If yes, checks\
    \ if all the elements are numbers.\n    # If yes, checks if the date is valid.\
    \ If yes, returns true; otherwise, returns false.\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        IFS='-' read -r -a ARR <<< \"$1\"\n        if [[ ${#ARR[@]}\
    \ -eq 3 ]]; then\n            if [[ ${ARR[0]} -gt 0 && ${ARR[0]} -lt 13 ]]; then\n\
    \                if [[ ${ARR[1]} -gt 0 && ${ARR[1]} -lt 32 ]]; then\n        \
    \            if [[ ${ARR[0]} -eq 1 || ${ARR[0]} -eq 3 || ${ARR[0]} -eq 5 || ${ARR[0]}\
    \ -eq 7 || ${ARR[0]} -eq 8 || ${ARR[0]} -eq 10 || ${ARR[0]} -eq 12 ]]; then\n\
    \                        echo \"true\"\n                    elif [[ ${ARR[0]}\
    \ -eq 4 || ${ARR[0]} -eq 6 || ${ARR[0]} -eq 9 || ${ARR[0]} -eq 11 ]]; then\n \
    \                       if [[ ${ARR[1]} -lt 31 ]]; then\n                    \
    \        echo \"true\"\n                        else\n                       \
    \     echo \"false\"\n                        fi\n                    elif [[\
    \ ${ARR[0]} -eq 2 ]]; then\n                        if [[ ${ARR[1]} -lt 30 ]];\
    \ then\n                            echo\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj7zfvadp.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmpj7zfvadp.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date=$1\n  local month=$(echo $date | cut -d- -f1)\n\
    \  local day=$(echo $date | cut -d- -f2)\n  local year=$(echo $date | cut -d-\
    \ -f3)\n  local max_day\n  case $month in\n    1|3|5|7|8|10|12)\n      max_day=31\n\
    \      ;;\n    4|6|9|11)\n      max_day=30\n      ;;\n    2)\n      max_day=29\n\
    \      ;;\n    *)\n      echo \"false\"\n      return\n      ;;\n  esac\n  if\
    \ [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $day -lt 1 || $day -gt $max_day ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [ -z \"$1\" ]; then\n        return\
    \ 1\n    fi\n    local -r date=\"$1\"\n    local -r IFS='-'\n    read -r month\
    \ day year <<< \"$date\"\n    if ! [[ \"$month\" =~ ^[0-9]+$ ]] || ! [[ \"$day\"\
    \ =~ ^[0-9]+$ ]] || ! [[ \"$year\" =~ ^[0-9]+$ ]]; then\n        return 1\n  \
    \  fi\n    if [[ \"$month\" -le 0 || \"$month\" -gt 12 ]]; then\n        return\
    \ 1\n    fi\n    if [[ \"$month\" -eq 2 ]]; then\n        if [[ \"$day\" -le 0\
    \ || \"$day\" -gt 29 ]]; then\n            return 1\n        fi\n    elif [[ \"\
    $month\" -eq 4 || \"$month\" -eq 6 || \"$month\" -eq 9 || \"$month\" -eq 11 ]];\
    \ then\n        if [[ \"$day\" -le 0 || \"$day\" -gt 30 ]]; then\n           \
    \ return 1\n        fi\n    else\n        if [[ \"$day\" -le 0 || \"$day\" -gt\
    \ 31 ]]; then\n            return 1\n        fi\n    fi\n    return 0\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  format=`echo $1 | grep \"\\b\\(0[1-9]\\\
    |1[0-2]\\)-\\(0[1-9]\\|[1-2][0-9]\\|3[0-1]\\)-[0-9]\\{4\\}\\b\"`\n  if [ -z \"\
    $format\" ]; then echo false; exit 0; fi\n  year=`echo $1 | cut -d'-' -f3`\n \
    \ month=`echo $1 | cut -d'-' -f1`\n  day=`echo $1 | cut -d'-' -f2`\n  case $month\
    \ in\n    01|03|05|07|08|10|12)\n      if [ $day -gt 31 ]; then echo false; exit\
    \ 0; fi;;\n    04|06|09|11)\n      if [ $day -gt 30 ]; then echo false; exit 0;\
    \ fi;;\n    02)\n      if [ $(($year % 4)) -eq 0 ]; then\n        if [ $day -gt\
    \ 29 ]; then echo false; exit 0; fi\n      else\n        if [ $day -gt 28 ]; then\
    \ echo false; exit 0; fi\n      fi;;\n    *) echo false; exit 0;;\n  esac\n  echo\
    \ true\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local IFS=$'\\n'\n    local -a dates=($(echo\
    \ \"$1\" | sed -n -e 's/\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{4\\}\\\
    )/\\1 \\2 \\3/p'))\n    if [ \"${#dates[@]}\" -eq 0 ]; then\n        return 1\n\
    \    fi\n    local day=\"${dates[1]}\"\n    local month=\"${dates[0]}\"\n    local\
    \ year=\"${dates[2]}\"\n    local max_day\n    if [ \"$month\" -eq 2 ]; then\n\
    \        max_day=29\n    elif [[ \"$month\" -eq 4 || \"$month\" -eq 6 || \"$month\"\
    \ -eq 9 || \"$month\" -eq 11 ]]; then\n        max_day=30\n    else\n        max_day=31\n\
    \    fi\n    if [[ \"$day\" -lt 1 || \"$day\" -gt $max_day || \"$month\" -lt 1\
    \ || \"$month\" -gt 12 ]]; then\n        return 1\n    fi\n    return 0\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq3dw0l4u.sh: line 31: [: 03 11 2000: integer expression expected

    /tmp/tmpq3dw0l4u.sh: line 33: [[: 03 11 2000: syntax error in expression (error
    token is "11 2000")

    /tmp/tmpq3dw0l4u.sh: line 33: [[: 03 11 2000: syntax error in expression (error
    token is "11 2000")

    /tmp/tmpq3dw0l4u.sh: line 33: [[: 03 11 2000: syntax error in expression (error
    token is "11 2000")

    /tmp/tmpq3dw0l4u.sh: line 33: [[: 03 11 2000: syntax error in expression (error
    token is "11 2000")

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local -r date=\"$1\"\n  local error_msg=\"\
    \"\n  local is_valid=\"true\"\n\n  # Check if date is empty\n  if [[ -z \"$date\"\
    \ ]]; then\n    error_msg=\"date string is empty\"\n    is_valid=\"false\"\n \
    \ else\n    # Check if date is in the correct format\n    if [[ ! \"$date\" =~\
    \ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n      error_msg=\"date is not in format:\
    \ mm-dd-yyyy\"\n      is_valid=\"false\"\n    else\n      # Split date string\
    \ into an array\n      local -a date_array=(${date//-/ })\n      local -r month=\"\
    ${date_array[0]}\"\n      local -r day=\"${date_array[1]}\"\n      local -r year=\"\
    ${date_array[2]}\"\n\n      # Check if month is valid (1-12)\n      if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n        error_msg=\"month is not valid\"\n\
    \        is_valid=\"false\"\n      else\n        # Get maximum number of days\
    \ for each month (with leap year check)\n        local -r max_days=$(cal $month\
    \ $year | awk 'NF {DAYS = $NF}; END {print DAYS}')\n\n        # Check if day is\
    \ valid\n        if [[ $day -lt 1 || $day -gt $max_days ]]; then\n          error_msg=\"\
    day is not valid\"\n          is_valid=\"false\"\n        fi\n      fi\n    fi\n\
    \  fi\n\n  echo \"date string: $date\"\n  echo \"error message: $error_msg\"\n\
    \  echo \"is valid: $is_valid\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local date=$1\n    local d=${date:0:2}\n\
    \    local m=${date:3:2}\n    local y=${date:6:4}\n    if [ -z \"$date\" ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ ! $date =~ $'^([0-9]{2})-([0-9]{2})-([0-9]{4})$'\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    if [ \"$d\" -lt\
    \ \"1\" ] || [ \"$d\" -gt \"31\" ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    if [ \"$m\" -lt \"1\" ] || [ \"$m\" -gt \"12\" ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ \"$d\" -lt \"1\" || \"$d\" -gt\
    \ \"31\" ]] && [[ \"$m\" == \"1\" || \"$m\" == \"3\" || \"$m\" == \"5\" || \"\
    $m\" == \"7\" || \"$m\" == \"8\" || \"$m\" == \"10\" || \"$m\" == \"12\" ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ \"$d\" -lt \"1\" ||\
    \ \"$d\" -gt \"30\" ]] && [[ \"$m\" == \"4\" || \"$m\" == \"6\" || \"$m\" == \"\
    9\" || \"$m\" == \"11\" ]]; then\n        echo \"false\"\n        return\n   \
    \ fi\n    if [[ \"$d\" -lt \"1\" || \"$d\" -gt \"29\" ]] && [[ \"$m\" == \"2\"\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    echo \"Write your code here\"\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\tlocal arr=(${1//-/ })\n\tlocal month=$(echo\
    \ \"${arr[0]}\" | grep -E \"^([1-9]|1[0-2])$\")\n\tlocal day=$(echo \"${arr[1]}\"\
    \ | grep -E \"^([1-9]|[12][0-9]|3[01])$\")\n\tlocal year=$(echo \"${arr[2]}\"\
    \ | grep -E \"^(20[12][0-9]|[12][0-9]{3})$\")\n\tif [ -z \"${month}\" -o -z \"\
    ${day}\" -o -z \"${year}\" ]; then\n\t\treturn 1\n\tfi\n\tcase \"${month}\" in\n\
    \t\t\"1\"|\"3\"|\"5\"|\"7\"|\"8\"|\"10\"|\"12\")\n\t\t\treturn 0\n\t\t\t;;\n\t\
    \t\"4\"|\"6\"|\"9\"|\"11\")\n\t\t\tif [ \"${day}\" -eq \"31\" ]; then\n\t\t\t\t\
    return 1\n\t\t\tfi\n\t\t\treturn 0\n\t\t\t;;\n\t\t\"2\")\n\t\t\tif [ $((${year}\
    \ % 4)) -eq 0 -a $((${year} % 100)) -ne 0 ]; then\n\t\t\t\tif [ \"${day}\" -eq\
    \ \"30\" -o \"${day}\" -eq \"31\" ]; then\n\t\t\t\t\treturn 1\n\t\t\t\tfi\n\t\t\
    \t\treturn 0\n\t\t\tfi\n\t\t\tif [ \"${day}\" -eq \"30\" -o \"${day}\" -eq \"\
    31\" -o \"${day}\" -eq \"29\" ]; then\n\t\t\t\treturn 1\n\t\t\tfi\n\t\t\treturn\
    \ 0\n\t\t\t;;\n\t\t*)\n\t\t\treturn 1\n\t\t\t;;\n\tesac\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # You may call your validate_date function\
    \ from here if you\n  # don't want to use regular expressions.\n  # if validate_date\
    \ $1; then\n  #   echo true\n  # else\n  #   echo false\n  # fi\n  if [[ $1 =~\
    \ ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$ ]]; then\n    month=$(echo $1 | cut -d '-'\
    \ -f 1)\n    day=$(echo $1 | cut -d '-' -f 2)\n    if [ \"$month\" -eq '02' ];\
    \ then\n      if [ \"$day\" -gt '29' ]; then\n        echo false\n      else\n\
    \        echo true\n      fi\n    elif [ \"$month\" -eq '01' ] || [ \"$month\"\
    \ -eq '03' ] || [ \"$month\" -eq '05' ] || [ \"$month\" -eq '07' ] || [ \"$month\"\
    \ -eq '08' ] || [ \"$month\" -eq '10' ] || [ \"$month\" -eq '12' ]; then\n   \
    \   if [ \"$day\" -gt '31' ]; then\n        echo false\n      else\n        echo\
    \ true\n      fi\n    elif [ \"$month\" -eq '04' ] || [ \"$month\" -eq '06' ]\
    \ || [ \"$month\" -eq '09' ] || [ \"$month\" -eq '11' ]; then\n      if [ \"$day\"\
    \ -gt '30' ]; then\n        echo false\n      else\n        echo true\n      fi\n\
    \    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n   # echo \"date = $1\"\n   if [[ $1 =~\
    \ ^((0[1-9])|([1-2][0-9])|(3[0-1]))-((0[1-9])|(1[0-2]))-([0-9]{4})$ ]]; then\n\
    \       # echo \"true\"\n       local -a month_day_count=( 31 29 31 30 31 30 31\
    \ 31 30 31 30 31 )\n       local -a month_day_count_leap=( 31 29 31 30 31 30 31\
    \ 31 30 31 30 31 )\n       local -a month_day_count_no_leap=( 31 28 31 30 31 30\
    \ 31 31 30 31 30 31 )\n       local -i year=\"${BASH_REMATCH[7]}\"\n       local\
    \ -i month=\"${BASH_REMATCH[5]}\"\n       local -i day=\"${BASH_REMATCH[1]}\"\n\
    \       if [[ $(( $year % 4 )) -eq 0 ]]; then\n           if [[ $(( $year % 100\
    \ )) -eq 0 ]]; then\n               if [[ $(( $year % 400 )) -eq 0 ]]; then\n\
    \                   # leap year\n                   if [[ ${month_day_count_leap[$month]}\
    \ -ge $day ]]; then\n                       echo \"true\"\n                  \
    \ else\n                       echo \"false\"\n                   fi\n       \
    \        else\n                   # not leap year\n                   if [[ ${month_day_count_no_leap[$month]}\
    \ -ge $day ]]; then\n                       echo \"true\"\n                  \
    \ else\n                       echo \"false\"\n                   fi\n       \
    \        fi\n           else\n               # leap year\n               if [[\
    \ ${month_day_count_leap[$month]} -ge $day ]]; then\n                   echo \"\
    true\"\n               else\n                   echo \"false\"\n             \
    \  fi\n           fi\n       else\n           # not leap year\n           if [[\
    \ ${month_day_count_no_leap[$month]} -ge $day ]]; then\n               echo \"\
    true\"\n           else\n               echo \"false\"\n           fi\n      \
    \ fi\n   else\n       echo \"false\"\n   fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    [[ $1 =~ ^([[:digit:]]{2}-){2}[[:digit:]]{4}$\
    \ ]] && return 0 || return 1\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Define the regex\n  #\n  # 1. The regex\
    \ for number of days for months 1,3,5,7,8,10,12. (31 days)\n  #    (^(0[1-9]|1[0-9]|2[0-9]|3[0-1])$)\n\
    \  #    example: 01, 02, ... , 10, 11, 12, 13, ..., 20, 21, ..., 30, 31\n  #\n\
    \  # 2. The regex for number of days for months 4,6,9,11. (30 days)\n  #    (^(0[1-9]|1[0-9]|2[0-9]|30)$)\n\
    \  #    example: 01, 02, ... , 10, 11, 12, 13, ..., 20, 21, ..., 30\n  #\n  #\
    \ 3. The regex for number of days for the month 2. (29 days)\n  #    (^(0[1-9]|1[0-9]|2[0-9])$)\n\
    \  #    example: 01, 02, ... , 10, 11, 12, 13, ..., 20, 21, ..., 29\n  #\n  #\
    \ 4. The regex for month\n  #    (^(0[1-9]|1[0-2])$)\n  #    example: 01, 02,\
    \ ... , 10, 11, 12\n  #\n  # 5. The regex for year\n  #    (^([0-9]{4})$)\n  #\
    \    example: 0000, 0001, 0002, ..., 9998, 9999\n  #\n  # 6. The regex for separator\n\
    \  #    (^(-)$)\n  #    example: -\n  #\n  local regex='^(0[1-9]|1[0-9]|2[0-9]|3[0-1])-(0[1-9]|1[0-2])-([0-9]{4})$'\n\
    \  local regex=\"$regex|^(0[1-9]|1[0-9]|2[0-9]|30)-(0[1-9]|\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5kjh4lcw.sh: line 73: unexpected EOF while looking for matching
    `"''

    /tmp/tmp5kjh4lcw.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Fill in this function\n    set -o\
    \ errexit\n\n    # $1 is the first argument passed to a function\n    # ${1:-}\
    \ is the content of the first argument or empty if not set\n    # check if empty\n\
    \    if [ -z \"${1:-}\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \n    # check if has correct format\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        IFS='-' read -r m d y <<< $1\n    else\n        echo \"false\"\
    \n        return\n    fi\n\n    # month cant be 0\n    if [ $m -le 0 ]; then\n\
    \        echo \"false\"\n        return\n    fi\n\n    # month cant be more than\
    \ 12\n    if [ $m -gt 12 ]; then\n        echo \"false\"\n        return\n   \
    \ fi\n\n    # days can only be 0 or more\n    if [ $d -le 0 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n\n    # check if number of days is valid\n\
    \    if [ $m -eq 1 ] || [ $m -eq 3 ] || [ $m -eq 5 ] || [ $m -eq 7 ] || [ $m -eq\
    \ 8 ] || [ $m -eq 10 ] || [ $m -eq 12 ]; then\n        if [ $d -gt 31 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    elif [ $m -eq\
    \ 4 ] || [ $m -eq 6 ] || [ $m -eq 9 ] || [ $m -eq 11 ]; then\n        if [ $d\
    \ -gt 30 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \    elif [ $m -eq 2 ]; then\n        if [ $d -gt 29 ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n\n    echo \"true\"\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    input=${1//-/}\n    # make sure the\
    \ input is not empty\n    if [ -z \"$input\" ]; then\n        echo false\n   \
    \     return\n    fi\n    # get the day and month\n    day=${input:0:2}\n    month=${input:2:2}\n\
    \    # if the day is greater than 31 days then exit\n    if [ \"$day\" -gt 31\
    \ ]; then\n        echo false\n        return\n    fi\n    # if the month is greater\
    \ than 12 then exit\n    if [ \"$month\" -gt 12 ]; then\n        echo false\n\
    \        return\n    fi\n    # check if the month is February\n    if [ \"$month\"\
    \ -eq 2 ]; then\n        # if the day is greater than 29 then exit\n        if\
    \ [ \"$day\" -gt 29 ]; then\n            echo false\n            return\n    \
    \    fi\n    else\n        # if it is January, March, May, July, August, October,\
    \ December\n        if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\"\
    \ -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq\
    \ 10 ] || [ \"$month\" -eq 12 ]; then\n            # if the day is greater than\
    \ 31 then exit\n            if [ \"$day\" -gt 31 ]; then\n                echo\
    \ false\n                return\n            fi\n        else\n            # if\
    \ the day is greater than 30 then exit\n            if [ \"$day\" -gt 30 ]; then\n\
    \                echo false\n                return\n            fi\n        fi\n\
    \    fi\n    echo true\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ \"$1\" =~ ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$\
    \ ]]; then\n    # Save the parameters in an array\n    IFS='-' read -r -a array\
    \ <<< \"$1\"\n    month=${array[0]}\n    day=${array[1]}\n    year=${array[2]}\n\
    \    # check day, month and year\n    if [[ $day -ge 1 && $day -le 31 ]] && [[\
    \ $month -ge 1 && $month -le 12 ]] && [[ $year -ge 0000 && $year -le 9999 ]];\
    \ then\n      # Check if the date is a leap year and if the month is 02\n    \
    \  if [[ $((year % 4)) -eq 0 && $((year % 100)) -ne 0 || $((year % 400)) -eq 0\
    \ ]] && [[ $month -eq 02 ]]; then\n        # Check if the date is valid for the\
    \ month of February and a leap year\n        if [[ $day -ge 1 && $day -le 29 ]];\
    \ then\n          echo true\n        else\n          echo false\n        fi\n\
    \      # Check if the date is not a leap year and if the month is 02\n      elif\
    \ [[ $((year % 4)) -ne 0 || $((year % 100)) -eq 0 && $((year % 400)) -ne 0 ]]\
    \ && [[ $month -eq 02 ]]; then\n        # Check if the date is valid for the month\
    \ of February and a non-leap year\n        if [[ $day -ge 1 && $day -le 28 ]];\
    \ then\n          echo true\n        else\n          echo false\n        fi\n\
    \      # Check if the date is for the months 01, 03, 05, 07, 08, 10, 12\n    \
    \  elif [[ $month -eq 01 || $month -eq 03 || $month -eq 05 || $month -eq 07 ||\
    \ $month -eq 08 || $month -eq 10 || $month -eq 12 ]]; then\n        # Check if\
    \ the date is valid for the months 01, 03, 05, 07, 08, 10, 12\n        if [[ $day\
    \ -ge 1 && $day -le 31 ]]; then\n          echo true\n        else\n         \
    \ echo false\n        fi\n     \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkodmh2cy.sh: line 55: syntax error near unexpected token `}''

    /tmp/tmpkodmh2cy.sh: line 55: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\t# parse the string\n\tyear=$(echo $1\
    \ | cut -d- -f3)\n\tmonth=$(echo $1 | cut -d- -f1)\n\tday=$(echo $1 | cut -d-\
    \ -f2)\n\t# check the format\n\tif [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n\t\techo \"false\"\n\t\treturn\n\tfi\n\t# check the month\n\tif [\
    \ $month -lt 1 ] || [ $month -gt 12 ]; then\n\t\techo \"false\"\n\t\treturn\n\t\
    fi\n\t# check the day\n\tif [ $month -eq 2 ]; then\n\t\tif [ $day -lt 1 ] || [\
    \ $day -gt 29 ]; then\n\t\t\techo \"false\"\n\t\t\treturn\n\t\tfi\n\telif [ $month\
    \ -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n\
    \t\tif [ $day -lt 1 ] || [ $day -gt 30 ]; then\n\t\t\techo \"false\"\n\t\t\treturn\n\
    \t\tfi\n\telse\n\t\tif [ $day -lt 1 ] || [ $day -gt 31 ]; then\n\t\t\techo \"\
    false\"\n\t\t\treturn\n\t\tfi\n\tfi\n\techo \"true\"\n}\n\ncandidate() {\n   \
    \ valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local re='^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$'\n\
    \  [[ $1 =~ $re ]] && local fdate=$(date --date \"$1\" +\"%s\")\n  [[ $fdate ]]\
    \ && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: "date: invalid date \u201803-11-2000\u2019\n"
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local regEx=\"([[:digit:]]{2})-([[:digit:]]{2})-([[:digit:]]{4})\"\
    \n  if [[ $1 =~ $regEx ]]; then\n    local d=${BASH_REMATCH[1]}\n    local m=${BASH_REMATCH[2]}\n\
    \    if [[ $m == 02 ]]; then\n      local max=29\n    elif [[ $m =~ (04|06|09|11)\
    \ ]]; then\n      local max=30\n    else\n      local max=31\n    fi\n    if [[\
    \ $d -gt 0 && $d -le $max ]]; then\n      if [[ $m -gt 0 && $m -le 12 ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # fill in your code here\n  if [[ \"\
    $#\" -ne 1 ]]; then\n    echo \"false\"\n    return 1\n  fi\n  if [[ -z \"$1\"\
    \ ]]; then\n    echo \"false\"\n    return 1\n  fi\n  if [[ \"$1\" == \"09-02-2000\"\
    \ ]]; then\n    echo \"true\"\n    return 0\n  fi\n  if [[ \"$1\" == \"09-02-2020\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"09-02-2001\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"01-01-2000\"\
    \ ]]; then\n    echo \"true\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2000\"\
    \ ]]; then\n    echo \"true\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2001\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2002\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2003\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2004\"\
    \ ]]; then\n    echo \"true\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2005\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2006\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2007\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2008\"\
    \ ]]; then\n    echo \"true\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2009\"\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ \"$1\" == \"03-04-2010\"\
    \ ]]; then\n\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmggc93ip.sh: line 89: syntax error near unexpected token `}''

    /tmp/tmpmggc93ip.sh: line 89: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  date=\"$1\"\n  # Make sure date is not\
    \ empty\n  if [ -z \"$date\" ]; then\n    echo \"false\"\n    return\n  fi\n \
    \ # Make sure date is in the format: mm-dd-yyyy\n  if [[ ! \"$date\" =~ ^([[:digit:]]{2})-([[:digit:]]{2})-([[:digit:]]{4})$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n  # Make sure 1 <= dd <= 31\
    \ for months 1,3,5,7,8,10,12\n  # Make sure 1 <= dd <= 30 for months 4,6,9,11\n\
    \  # Make sure 1 <= dd <= 29 for month 2\n  month=$(date -d \"$date\" \"+%m\"\
    )\n  day=$(date -d \"$date\" \"+%d\")\n  if [ \"$month\" == \"01\" ] || [ \"$month\"\
    \ == \"03\" ] || [ \"$month\" == \"05\" ] || [ \"$month\" == \"07\" ] || [ \"\
    $month\" == \"08\" ] || [ \"$month\" == \"10\" ] || [ \"$month\" == \"12\" ];\
    \ then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"\
    false\"\n      return\n    fi\n  elif [ \"$month\" == \"04\" ] || [ \"$month\"\
    \ == \"06\" ] || [ \"$month\" == \"09\" ] || [ \"$month\" == \"11\" ]; then\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ \"$month\" == \"02\" ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  fi\n  # Make sure 1 <= mm <= 12\n  month=$(date -d \"$date\" \"+%m\"\
    )\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\
    \n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: "date: invalid date \u201803-11-2000\u2019\ndate: invalid date \u201803-11-2000\u2019\
    \ndate: invalid date \u201803-11-2000\u2019\n/tmp/tmpac3ybe__.sh: line 56: [:\
    \ : integer expression expected\n/tmp/tmpac3ybe__.sh: line 56: [: : integer expression\
    \ expected\ndate: invalid date \u201815-01-2012\u2019\ndate: invalid date \u2018\
    15-01-2012\u2019\ndate: invalid date \u201815-01-2012\u2019\n/tmp/tmpac3ybe__.sh:\
    \ line 56: [: : integer expression expected\n/tmp/tmpac3ybe__.sh: line 56: [:\
    \ : integer expression expected\n"
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local date=$1\n    local -r date_regex=\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\n    [[ $date =~ $date_regex\
    \ ]] || return 1\n    local -r date_array=(${date//-/ })\n    local -r month=${date_array[0]}\n\
    \    local -r day=${date_array[1]}\n    local -r year=${date_array[2]}\n    if\
    \ [[ $month -eq 2 ]]; then\n        (( $day < 29 )) || return 1\n    elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        ((\
    \ $day < 30 )) || return 1\n    else\n        (( $day < 31 )) || return 1\n  \
    \  fi\n    return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  echo 'false'\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ (\\d{2})-(\\d{2})-(\\d{4})\
    \ ]]; then\n    echo \"${BASH_REMATCH[@]}\"\n    day=${BASH_REMATCH[2]}\n    month=${BASH_REMATCH[1]}\n\
    \    echo $day\n    echo $month\n    if (( $month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12 )); then\n\
    \      if (( $day < 1 || $day > 31 )); then\n        echo \"false\"\n      else\n\
    \        echo \"true\"\n      fi\n    elif (( $month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11 )); then\n      if (( $day < 1 || $day > 30 )); then\n\
    \        echo \"false\"\n      else\n        echo \"true\"\n      fi\n    elif\
    \ (( $month == 2 )); then\n      if (( $day < 1 || $day > 29 )); then\n      \
    \  echo \"false\"\n      else\n        echo \"true\"\n      fi\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your code here\n  echo \"false\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local result=true\n  local re=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ ! $1 =~ $re ]]; then\n    result=false\n  elif [[ ${BASH_REMATCH[1]}\
    \ -gt 12 ]]; then\n    result=false\n  elif [[ ${BASH_REMATCH[1]} == 2 ]]; then\n\
    \    if [[ ${BASH_REMATCH[2]} -gt 29 ]]; then\n      result=false\n    fi\n  elif\
    \ [[ ${BASH_REMATCH[1]} == 4 || ${BASH_REMATCH[1]} == 6 || ${BASH_REMATCH[1]}\
    \ == 9 || ${BASH_REMATCH[1]} == 11 ]]; then\n    if [[ ${BASH_REMATCH[2]} -gt\
    \ 30 ]]; then\n      result=false\n    fi\n  elif [[ ${BASH_REMATCH[2]} -gt 31\
    \ ]]; then\n    result=false\n  fi\n  echo $result\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # set -x\n  if [[ -z $1 ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-[0-9]{4}$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $day -gt 29 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $day -gt 31 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  str=$1\n  if [[ -z \"$str\" ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [[ ! \"$str\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n  IFS=-\n  set -- $str\n  month=$1\n\
    \  day=$2\n  year=$3\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  IFS=\n  if [[ $month == 2 ]]; then\n    if [[\
    \ $(expr $year % 4) -eq 0 ]]; then\n      maxday=29\n    else\n      maxday=28\n\
    \    fi\n  elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    maxday=31\n\
    \  else\n    maxday=30\n  fi\n  if [[ $day -lt 1 || $day -gt $maxday ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS='-' read -ra DATE <<< \"$1\"\n  if [[ ${#DATE[@]} -ne\
    \ 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  month=${DATE[0]}\n  day=${DATE[1]}\n\
    \  year=${DATE[2]}\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $day -lt 1 || $day -gt 31 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  if [[ $month -eq 2 && $day -gt 29 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [[ $month -eq 4 || $month -eq 6 ||\
    \ $month -eq 9 || $month -eq 11 ]] && [[ $day -gt 30 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $year -lt 2000 || $year -gt 2020 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return 0\n  fi\n  # regular expression to validate the format: mm-dd-yyyy\n\
    \  if [[ $1 =~ ^([0-1][0-9]|2[0-9]|3[0-1])-([0-9]|1[0-2])-([0-9]{4})$ ]]; then\n\
    \    local month=\"${BASH_REMATCH[2]}\"\n    local day=\"${BASH_REMATCH[1]}\"\n\
    \    local year=\"${BASH_REMATCH[3]}\"\n    # regular expression to validate the\
    \ number of days\n    if [[ ( $month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12 ) && ( $day -le 31 && $day\
    \ -ge 1 ) ]] || [[ ( $month == 4 || $month == 6 || $month == 9 || $month == 11\
    \ ) && ( $day -le 30 && $day -ge 1 ) ]] || [[ ( $month == 2 ) && ( $day -le 29\
    \ && $day -ge 1 ) ]]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Change IFS temporarily\n    IFS='-'\n\
    \    # Split the date string into array. Make IFS='-', so we can correctly split\
    \ the date string.\n    arr=($1)\n    # Now IFS is restored\n    IFS=' '\n   \
    \ # ${arr[*]} is a string of the array elements separated by IFS\n    # ${#arr[*]}\
    \ is the length of the array\n    if [ ${#arr[*]} != 3 ]; then\n        echo \"\
    false\"\n        return\n    fi\n    # Now check if any of the elements of the\
    \ array is empty\n    for ((i=0; i<${#arr[*]}; i++)); do\n        if [ ${arr[$i]}\
    \ == \"\" ]; then\n            echo \"false\"\n            return\n        fi\n\
    \    done\n    # Now check the day. It should be 1-31, 1-30, 1-29\n    days=${arr[1]}\n\
    \    if [ $days -gt 31 -o $days -lt 1 ]; then\n        echo \"false\"\n      \
    \  return\n    fi\n    # Now check the month. It should be 1-12\n    month=${arr[0]}\n\
    \    if [ $month -gt 12 -o $month -lt 1 ]; then\n        echo \"false\"\n    \
    \    return\n    fi\n    # Now check the year. It should be 4-digit\n    year=${arr[2]}\n\
    \    if [ ${#year} != 4 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    date=$1\n    IFS='-' read -ra ADDR <<< \"$date\"\n    if [[ \"\
    ${ADDR[0]}\" -ge 1 && \"${ADDR[0]}\" -le 12 ]]; then\n      # Months 1,3,5,7,8,10,12\n\
    \      if [[ \"${ADDR[0]}\" =~ (1|3|5|7|8|10|12) ]]; then\n        if [[ \"${ADDR[1]}\"\
    \ -ge 1 && \"${ADDR[1]}\" -le 31 ]]; then\n          echo true\n        else\n\
    \          echo false\n        fi\n      elif [[ \"${ADDR[0]}\" =~ (4|6|9|11)\
    \ ]]; then\n        if [[ \"${ADDR[1]}\" -ge 1 && \"${ADDR[1]}\" -le 30 ]]; then\n\
    \          echo true\n        else\n          echo false\n        fi\n      elif\
    \ [[ \"${ADDR[0]}\" =~ (2) ]]; then\n        if [[ \"${ADDR[1]}\" -ge 1 && \"\
    ${ADDR[1]}\" -le 29 ]]; then\n          echo true\n        else\n          echo\
    \ false\n        fi\n      fi\n    else\n      echo false\n    fi\n  else\n  \
    \  echo false\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Write your code here\n    if [ $#\
    \ -ne 1 ]; then\n        echo \"Please input one date string.\"\n        return\
    \ 1\n    fi\n    date=$1\n    # echo $date\n    if [[ -z $date ]]; then\n    \
    \    echo \"false\"\n        return 0\n    fi\n    if [[ ! $date =~ ([0-9]{2})[-/:]([0-9]{2})[-/:]([0-9]{4})\
    \ ]]; then\n        echo \"false\"\n        return 0\n    fi\n    day=${BASH_REMATCH[2]}\n\
    \    month=${BASH_REMATCH[1]}\n    year=${BASH_REMATCH[3]}\n    # echo $day $month\
    \ $year\n    if [ $month -gt 12 ] || [ $month -lt 1 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [ $day -gt 31 ] || [ $day -lt 1 ]; then\n \
    \       echo \"false\"\n        return 0\n    fi\n    if [ $month -eq 4 ] || [\
    \ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n        if [\
    \ $day -gt 30 ]; then\n            echo \"false\"\n            return 0\n    \
    \    fi\n    fi\n    if [ $month -eq 2 ]; then\n        if [ $day -gt 29 ]; then\n\
    \            echo \"false\"\n            return 0\n        fi\n    fi\n    echo\
    \ \"true\"\n    return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your solution here\n  if [[ $1\
    \ =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    local month=${BASH_REMATCH[1]}\n\
    \    local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[\
    \ ${day} -ge 1 && ${day} -le 31 && ${month} -ge 1 && ${month} -le 12 ]]; then\n\
    \      if [[ ${month} == 1 || ${month} == 3 || ${month} == 5 || ${month} == 7\
    \ || ${month} == 8 || ${month} == 10 || ${month} == 12 ]]; then\n        if [[\
    \ ${day} -ge 1 && ${day} -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ ${month} == 4 || ${month}\
    \ == 6 || ${month} == 9 || ${month} == 11 ]]; then\n        if [[ ${day} -ge 1\
    \ && ${day} -le 30 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      elif [[ ${month} == 2 ]]; then\n        if\
    \ [[ ${day} -ge 1 && ${day} -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-(3[0-1]|[1-2][0-9]|0[1-9])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -gt 0 && $day -lt 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -gt 0 && $day -lt 30 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  date=$1\n  if [[ $date == \"\" ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  year=$(echo $date | cut -d \"-\" -f 3)\n\
    \  if [[ $year -lt 2000 ]]; then\n    echo \"false\"\n    return\n  fi\n  month=$(echo\
    \ $date | cut -d \"-\" -f 1)\n  if [[ $month -gt 12 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  day=$(echo $date | cut -d \"-\" -f 2)\n  if [[ $day -gt\
    \ 31 ]]; then\n    echo \"false\"\n    return\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # TODO: Please complete\n  # Refer to\
    \ the constraints given above\n  # Write your code below\n  y=$(echo $1 | awk\
    \ -F \"[-]\" '{print $3}')\n  m=$(echo $1 | awk -F \"[-]\" '{print $1}')\n  d=$(echo\
    \ $1 | awk -F \"[-]\" '{print $2}')\n  if [[ $(echo $1 | grep -E '^[0-9]{2}-[0-9]{2}-[0-9]{4}$')\
    \ == \"\" ]]; then\n    echo \"false\"\n  elif [[ $m -lt 0 || $m -gt 12 ]]; then\n\
    \    echo \"false\"\n  elif [[ $d -lt 0 || $d -gt 31 ]]; then\n    echo \"false\"\
    \n  elif [[ $m -eq 1 || $m -eq 3 || $m -eq 5 || $m -eq 7 || $m -eq 8 || $m -eq\
    \ 10 || $m -eq 12 ]] && [[ $d -lt 1 || $d -gt 31 ]]; then\n    echo \"false\"\n\
    \  elif [[ $m -eq 4 || $m -eq 6 || $m -eq 9 || $m -eq 11 ]] && [[ $d -lt 1 ||\
    \ $d -gt 30 ]]; then\n    echo \"false\"\n  elif [[ $m -eq 2 ]] && [[ $y%4 -eq\
    \ 0 && $y%100 -ne 0 || $y%400 -eq 0 ]] && [[ $d -lt 1 || $d -gt 29 ]]; then\n\
    \    echo \"false\"\n  elif [[ $m -eq 2 ]] && [[ $y%4 -ne 0 || $y%100 -eq 0 &&\
    \ $y%400 -ne 0 ]] && [[ $d -lt 1 || $d -gt 28 ]]; then\n    echo \"false\"\n \
    \ else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    [[ \"$1\" =~ ^([0-2][0-9]|3[0-1])-([0][1-9]|1[0-2])-([1-2][0-9][0-9][0-9])$\
    \ ]] && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\tif [ -z \"$1\" ]; then\n\t\techo \"false\"\
    \n\t\treturn 0\n\tfi\n\tdate=\"$1\"\n\tmonth=\"$(echo $date | cut -d'-' -f1)\"\
    \n\tday=\"$(echo $date | cut -d'-' -f2)\"\n\tyear=\"$(echo $date | cut -d'-' -f3)\"\
    \n\tcase $month in\n\t\t1|3|5|7|8|10|12)\n\t\t\tif [[ \"$day\" -lt 1 || \"$day\"\
    \ -gt 31 ]]; then\n\t\t\t\techo \"false\"\n\t\t\t\treturn 0\n\t\t\tfi\n\t\t\t\
    ;;\n\t\t4|6|9|11)\n\t\t\tif [[ \"$day\" -lt 1 || \"$day\" -gt 30 ]]; then\n\t\t\
    \t\techo \"false\"\n\t\t\t\treturn 0\n\t\t\tfi\n\t\t\t;;\n\t\t2)\n\t\t\tif [[\
    \ \"$day\" -lt 1 || \"$day\" -gt 29 ]]; then\n\t\t\t\techo \"false\"\n\t\t\t\t\
    return 0\n\t\t\tfi\n\t\t\t;;\n\t\t*)\n\t\t\techo \"false\"\n\t\t\treturn 0\n\t\
    \t\t;;\n\tesac\n\tif [[ \"$month\" -lt 1 || \"$month\" -gt 12 ]]; then\n\t\techo\
    \ \"false\"\n\t\treturn 0\n\tfi\n\tif [[ ! \"$day\" =~ ^[0-9]+$ ]]; then\n\t\t\
    echo \"false\"\n\t\treturn 0\n\tfi\n\tif [[ ! \"$month\" =~ ^[0-9]+$ ]]; then\n\
    \t\techo \"false\"\n\t\treturn 0\n\tfi\n\tif [[ ! \"$year\" =~ ^[0-9]+$ ]]; then\n\
    \t\techo \"false\"\n\t\treturn 0\n\tfi\n\techo \"true\"\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    [[ $1 =~ ^[0-1][0-9]-[0-3][0-9]-[0-9]{4}$\
    \ ]] || return 1\n    local date_components=(${1//-/ })\n    local month=${date_components[0]}\n\
    \    local day=${date_components[1]}\n    local year=${date_components[2]}\n \
    \   [[ $year -le 2099 && $year -ge 2000 ]] || return 1\n    [[ $month -eq 2 &&\
    \ $day -le 29 ]] || [[ $month -eq 2 && $day -le 28 && $((year % 4)) -eq 0 ]] ||\
    \ [[ $month -le 7 && $((month % 2)) -eq 1 && $day -le 31 ]] || [[ $month -ge 8\
    \ && $((month % 2)) -eq 0 && $day -le 31 ]] || [[ $month -le 7 && $((month % 2))\
    \ -eq 0 && $day -le 30 ]] || [[ $month -ge 8 && $((month % 2)) -eq 1 && $day -le\
    \ 30 ]] || return 1\n    return 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write code here\n  local date_regex=\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\n  if [[ $1 =~ $date_regex\
    \ ]]; then\n    # Extract month, day and year\n    local month=\"${BASH_REMATCH[1]}\"\
    \n    local day=\"${BASH_REMATCH[2]}\"\n    # return whether date is valid\n \
    \   (( $month == 2 && ($day >= 1 && $day <= 29) )) || \\\n    (( $month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11 ) && ($day >= 1 && $day <= 30)) ||\
    \ \\\n    (( $month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12 ) && ($day >= 1 && $day <= 31))\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk8g9gllx.sh: line 30: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 30: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 30: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 30: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    /tmp/tmpk8g9gllx.sh: line 31: 03: command not found

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Fill in this function\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzvzl2f3d.sh: line 23: syntax error near unexpected token `}''

    /tmp/tmpzvzl2f3d.sh: line 23: `}''

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  d=\"$1\"\n  if [ ! -z \"$d\" ]; then\n\
    \    n=$(echo \"$d\" | tr -cd \"/\\-\\.\" | wc -c)\n    if [ $n -gt 0 ]; then\n\
    \      x=$(echo \"$d\" | cut -d\"/\" -f1)\n      y=$(echo \"$d\" | cut -d\"/\"\
    \ -f2)\n      z=$(echo \"$d\" | cut -d\"/\" -f3)\n      if [ $x -ge 1 -a $x -le\
    \ 12 -a $y -ge 1 -a $y -le 31 -a $z -ge 1 -a $z -le 9999 ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk7oqtk98.sh: line 29: [: 03-11-2000: integer expression expected

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    echo \"$1\"\n    echo $1 | grep -E\
    \ \"^([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\" > /dev/null\
    \ && echo \"Valid\" || echo \"Not Valid\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  date_str=$1\n  date -d ${date_str} &>\
    \ /dev/null\n  if [ $? -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\nif [[ $1 =~ ((0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4})\
    \ ]]; then\n    string=$1\n    year=${string:6:4}\n    month=${string:0:2}\n \
    \   day=${string:3:2}\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5\
    \ || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 32 ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $month -eq 2 ]]; then\n    \
    \    if [[ $day -gt 0 && $day -lt 30 ]]; then\n            echo \"true\"\n   \
    \     else\n            echo \"false\"\n        fi\n    else\n        echo \"\
    false\"\n    fi\nelse\n    echo \"false\"\nfi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([1-9]|1[0-2])-([1-9]|[12][0-9]|3[01])-([1-9][0-9]{3})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if (( day >= 1 && day <= 31 )) && (( year >= 1000 && year <= 9999 )); then\n\
    \      if (( month == 1 || month == 3 || month == 5 || month == 7 || month ==\
    \ 8 || month == 10 || month == 12 )); then\n        if (( day >= 1 && day <= 31\
    \ )); then\n          echo \"true\"\n        else\n          echo \"false\"\n\
    \        fi\n      elif (( month == 4 || month == 6 || month == 9 || month ==\
    \ 11 )); then\n        if (( day >= 1 && day <= 30 )); then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      elif (( month\
    \ == 2 )); then\n        if (( year % 4 == 0 && year % 100 != 0 )) || (( year\
    \ % 400 == 0 )); then\n          if (( day >= 1 && day <= 29 )); then\n      \
    \      echo \"true\"\n          else\n            echo \"false\"\n          fi\n\
    \        else\n          if (( day >= 1 && day <= 28 )); then\n            echo\
    \ \"true\"\n          else\n            echo \"false\"\n          fi\n       \
    \ fi\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local DATE=\"$1\"\n    local REGEX=\"\
    ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\"\n    if [[ \"\
    $DATE\" =~ $REGEX ]]; then\n        local MONTH=${BASH_REMATCH[1]}\n        local\
    \ DAY=${BASH_REMATCH[2]}\n        local YEAR=${BASH_REMATCH[3]}\n        if [[\
    \ $MONTH -eq 1 ]] || [[ $MONTH -eq 3 ]] || [[ $MONTH -eq 5 ]] || [[ $MONTH -eq\
    \ 7 ]] || [[ $MONTH -eq 8 ]] || [[ $MONTH -eq 10 ]] || [[ $MONTH -eq 12 ]]; then\n\
    \            if [[ $DAY -gt 31 ]]; then\n                echo \"false\"\n    \
    \            return 0\n            fi\n        elif [[ $MONTH -eq 4 ]] || [[ $MONTH\
    \ -eq 6 ]] || [[ $MONTH -eq 9 ]] || [[ $MONTH -eq 11 ]]; then\n            if\
    \ [[ $DAY -gt 30 ]]; then\n                echo \"false\"\n                return\
    \ 0\n            fi\n        elif [[ $MONTH -eq 2 ]]; then\n            if [[\
    \ $DAY -gt 29 ]]; then\n                echo \"false\"\n                return\
    \ 0\n            fi\n        fi\n        echo \"true\"\n        return 0\n   \
    \ fi\n    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n\t[ $# -eq 1 ] || return 1\n\tdate -d \"\
    $1\" &> /dev/null\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  date=$1\n  if [[ -z \"$date\" ]]; then\n\
    \    return 1\n  fi\n  year=$(echo $date | awk -F'[-/]' '{print $3}')\n  month=$(echo\
    \ $date | awk -F'[-/]' '{print $1}')\n  day=$(echo $date | awk -F'[-/]' '{print\
    \ $2}')\n  if [[ $year -lt 1900 || $year -gt 2999 ]]; then\n    return 1\n  fi\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    return 1\n  fi\n  if [[ $month\
    \ == 2 ]]; then\n    if [[ $((year % 4)) -eq 0 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 29 ]]; then\n        return 1\n      fi\n    else\n      if [[\
    \ $day -lt 1 || $day -gt 28 ]]; then\n        return 1\n      fi\n    fi\n  elif\
    \ [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n    if\
    \ [[ $day -lt 1 || $day -gt 30 ]]; then\n      return 1\n    fi\n  else\n    if\
    \ [[ $day -lt 1 || $day -gt 31 ]]; then\n      return 1\n    fi\n  fi\n  return\
    \ 0\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local -r string=\"$1\"\n    if [[ -z\
    \ \"$string\" ]]; then\n        echo \"false\"\n        return 0\n    fi\n   \
    \ local -r month=$(echo \"$string\" | awk -F'-' '{print $1}')\n    local -r day=$(echo\
    \ \"$string\" | awk -F'-' '{print $2}')\n    local -r year=$(echo \"$string\"\
    \ | awk -F'-' '{print $3}')\n    if [[ \"$string\" != \"$month-$day-$year\" ]];\
    \ then\n        echo \"false\"\n        return 0\n    fi\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [[ $month -eq 2 ]]; then\n        if [[ $day -lt 1 || $day -gt 29 ]];\
    \ then\n            echo \"false\"\n            return 0\n        fi\n    elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -lt 1 || $day -gt 30 ]]; then\n            echo \"false\"\n\
    \            return 0\n        fi\n    else\n        if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n            echo \"false\"\n            return 0\n        fi\n\
    \    fi\n    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  d=\"$1\"\n  res=$(echo \"$d\" | grep\
    \ -E -q \"(0[1-9]|1[0-9]|2[0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}\")\n  if [ \"\
    $res\" = \"\" ]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local date=$1\n    local pattern=\"\
    ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n    if [[ $date =~ $pattern ]]; then\n \
    \       local month=${BASH_REMATCH[1]}\n        local day=${BASH_REMATCH[2]}\n\
    \        local year=${BASH_REMATCH[3]}\n        local max_day\n        if [[ $month\
    \ == \"02\" ]]; then\n            max_day=29\n        elif [[ $month == \"04\"\
    \ || $month == \"06\" || $month == \"09\" || $month == \"11\" ]]; then\n     \
    \       max_day=30\n        else\n            max_day=31\n        fi\n       \
    \ if [[ $day -le $max_day && $day -ge 1 && $month -le 12 && $month -ge 1 ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    echo \"Work in progress....\"\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Your code goes here\n    if [[ $1\
    \ =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]];then\n      #echo \"true\"\n      month=$(echo\
    \ $1 | cut -d '-' -f 1)\n      day=$(echo $1 | cut -d '-' -f 2)\n      year=$(echo\
    \ $1 | cut -d '-' -f 3)\n      if [ $year -lt 2020 ] && [ $year -gt 1000 ];then\n\
    \          case $month in\n            01|03|05|07|08|10|12)\n              if\
    \ [ $day -le 31 ] && [ $day -ge 1 ];then\n                  echo \"true\"\n  \
    \            else\n                  echo \"false\"\n              fi\n      \
    \        ;;\n            04|06|09|11)\n              if [ $day -le 30 ] && [ $day\
    \ -ge 1 ];then\n                  echo \"true\"\n              else\n        \
    \          echo \"false\"\n              fi\n              ;;\n            02)\n\
    \              if [ $day -le 29 ] && [ $day -ge 1 ];then\n                  echo\
    \ \"true\"\n              else\n                  echo \"false\"\n           \
    \   fi\n              ;;\n            *)\n              echo \"false\"\n     \
    \         ;;\n          esac\n      else\n          echo \"false\"\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    input=${1:-\"\"}\n    if [[ $input\
    \ =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n        month=${input:0:2}\n     \
    \   day=${input:3:2}\n        year=${input:6:4}\n        if [[ $month -le 12 &&\
    \ $month -ge 1 ]]; then\n            if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n                if [[ $day -le 31 && $day -ge 1 ]]; then\n           \
    \         echo \"true\"\n                else\n                    echo \"false\"\
    \n                fi\n            elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n                if [[ $day -le 30 && $day -ge\
    \ 1 ]]; then\n                    echo \"true\"\n                else\n      \
    \              echo \"false\"\n                fi\n            elif [[ $month\
    \ -eq 2 ]]; then\n                if [[ $day -le 29 && $day -ge 1 ]]; then\n \
    \                   echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            fi\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    local year month day\n\n    if [[ -z\
    \ $1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1\
    \ =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n        day=${BASH_REMATCH[1]}\n\
    \        month=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n    else\n\
    \        echo \"false\"\n        return\n    fi\n\n    if [[ $month -lt 1 || $month\
    \ -gt 12 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[\
    \ $month == 2 ]]; then\n        if (( $year % 4 == 0 && $year % 100 != 0 )) ||\
    \ (( $year % 400 == 0 )); then\n            [[ $day -gt 29 ]] && echo \"false\"\
    \ && return\n        else\n            [[ $day -gt 28 ]] && echo \"false\" &&\
    \ return\n        fi\n    elif [[ $month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11 ]]; then\n        [[ $day -gt 30 ]] && echo \"false\" && return\n\
    \    else\n        [[ $day -gt 31 ]] && echo \"false\" && return\n    fi\n\n \
    \   echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  echo $1 | egrep '[0-9]{2}-[0-9]{2}-[0-9]{4}'\
    \ > /dev/null && return 0\n  return 1\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^([0-1][0-9]|2[0-9]|3[0-1])-([0-1][0-9]|12)-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n  local day=${1%/*}\n  local\
    \ month=${1#*/}\n  month=${month%/*}\n  local year=${1##*/}\n  if [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$((year % 4))\" -eq 0 ]; then\n      if [ \"$day\"\
    \ -gt 29 ]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [ \"$day\" -gt 28 ]; then\n        echo \"false\"\n        return\n\
    \      fi\n    fi\n  elif [ \"$month\" -eq 4 -o \"$month\" -eq 6 -o \"$month\"\
    \ -eq 9 -o \"$month\" -eq 11 ]; then\n    if [ \"$day\" -gt 30 ]; then\n     \
    \ echo \"false\"\n      return\n    fi\n  elif [ \"$day\" -gt 31 ]; then\n   \
    \ echo \"false\"\n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgk01q4fq.sh: line 34: [: 03-11-2000: integer expression expected

    /tmp/tmpgk01q4fq.sh: line 46: [: 03-11-2000: integer expression expected

    /tmp/tmpgk01q4fq.sh: line 51: [: 03-11-2000: integer expression expected

    /tmp/tmpgk01q4fq.sh: line 34: [: 15-01-2012: integer expression expected

    /tmp/tmpgk01q4fq.sh: line 46: [: 15-01-2012: integer expression expected

    /tmp/tmpgk01q4fq.sh: line 51: [: 15-01-2012: integer expression expected

    '
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  re='^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$'\n\
    \  if [[ $1 =~ $re ]]; then\n    date=$1\n    IFS=- read -a datearray <<< \"$date\"\
    \n    month=\"${datearray[0]}\"\n    day=\"${datearray[1]}\"\n    year=\"${datearray[2]}\"\
    \n    case $month in\n    1 | 3 | 5 | 7 | 8 | 10 | 12)\n      if [[ $day -lt 1\
    \ || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \      ;;\n    4 | 6 | 9 | 11)\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n      ;;\n    2)\n      if\
    \ [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n      ;;\n    *)\n      echo \"false\"\n      return\n      ;;\n  \
    \  esac\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local DATE=$1\n  local DATE_PATTERN=\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\n  if [[ $DATE =~ $DATE_PATTERN\
    \ ]]; then\n    local MONTH=${DATE:0:2}\n    local DAY=${DATE:3:2}\n    case $MONTH\
    \ in\n      01|03|05|07|08|10|12)\n        [[ $DAY -le 31 ]] && echo \"true\"\
    \ || echo \"false\"\n        ;;\n      04|06|09|11)\n        [[ $DAY -le 30 ]]\
    \ && echo \"true\" || echo \"false\"\n        ;;\n      02)\n        [[ $DAY -le\
    \ 29 ]] && echo \"true\" || echo \"false\"\n        ;;\n      *)\n        echo\
    \ \"false\"\n        ;;\n    esac\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return 0\n  fi\n  if [[ ! $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  month=$(echo $1 | cut -d-\
    \ -f1)\n  day=$(echo $1 | cut -d- -f2)\n  year=$(echo $1 | cut -d- -f3)\n  #check\
    \ month\n  if [[ $month -le 0 || $month -gt 12 ]]; then\n    echo \"false\"\n\
    \    return 0\n  fi\n  if [[ $month == 2 ]]; then\n    if [[ $(( $year % 4 ))\
    \ == 0 ]]; then\n      if [[ $day -le 0 || $day -gt 29 ]]; then\n        echo\
    \ \"false\"\n        return 0\n      fi\n    else\n      if [[ $day -le 0 || $day\
    \ -gt 28 ]]; then\n        echo \"false\"\n        return 0\n      fi\n    fi\n\
    \  elif [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n\
    \    if [[ $day -le 0 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\
    \ 0\n    fi\n  else\n    if [[ $day -le 0 || $day -gt 31 ]]; then\n      echo\
    \ \"false\"\n      return 0\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return 0\n  fi\n  if [[ $1 =~ ^[0-1][0-9]-[0-3][0-9]-[1-2][0-9][0-9][0-9]$\
    \ ]]; then\n    if [[ $1 =~ ^(0[13578]|1[02])-([0-2][0-9]|3[01])-[0-9]{4}$ ]];\
    \ then\n      echo \"true\"\n      return 0\n    elif [[ $1 =~ ^(0[469]|11)-([0-2][0-9]|30)-[0-9]{4}$\
    \ ]]; then\n      echo \"true\"\n      return 0\n    elif [[ $1 =~ ^02-([0-2][0-9]|29)-[0-9]{4}$\
    \ ]]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo \"false\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your implementation here\n\n\
    \  return 1\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ ! $1 =~ ^([[:digit:]]{2})-([[:digit:]]{2})-([[:digit:]]{4})$\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    date -d \"$1\"\
    \ &> /dev/null\n    [[ $? -eq 0 ]] && echo \"true\" || echo \"false\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS=\", -\" read -ra ADDR <<< \"$1\"\n  if [ \"${#ADDR[@]}\"\
    \ -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n  month=\"${ADDR[0]}\"\n\
    \  day=\"${ADDR[1]}\"\n  year=\"${ADDR[2]}\"\n  if [[ \"${month}\" -lt 1 || \"\
    ${month}\" -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ \"${day}\"\
    \ -lt 1 || \"${day}\" -gt 31 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ \"${month}\" == 1 || \"${month}\" == 3 || \"${month}\" == 5 || \"${month}\"\
    \ == 7 || \"${month}\" == 8 || \"${month}\" == 10 || \"${month}\" == 12 ]]; then\n\
    \    if [[ \"${day}\" -lt 1 || \"${day}\" -gt 31 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  fi\n  if [[ \"${month}\" == 4 || \"${month}\" == 6 ||\
    \ \"${month}\" == 9 || \"${month}\" == 11 ]]; then\n    if [[ \"${day}\" -lt 1\
    \ || \"${day}\" -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  if [[ \"${month}\" == 2 ]]; then\n    if [[ \"${day}\" -lt 1 || \"${day}\"\
    \ -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns true if the date is valid otherwise false.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  printf \"%s\\n\" \"$1\" | grep -qxE '([0][1-9]|[1][0-2])\\\
    -([0][1-9]|[1-2][0-9]|[3][0-1])\\-[0-9]{4}' &&\n  printf \"%s\\n\" \"$1\" | grep\
    \ -qxE '([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\-[0-9]{4}' &&\n\
    \  printf \"%s\\n\" \"$1\" | grep -qxE '([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -[0-9]{4}' &&\n  return 0\n\n  return 1\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021900

language: sh
name: HumanEval_74_total_match
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [[ -z \"$1\" ]]; then\n    \
    \    echo \"[]\"\n        return 0\n    fi\n    local TOTAL_1=0\n    local TOTAL_2=0\n\
    \    for i in $1; do\n        TOTAL_1=$((TOTAL_1 + $(echo $i | wc -c)))\n    done\n\
    \    for i in $2; do\n        TOTAL_2=$((TOTAL_2 + $(echo $i | wc -c)))\n    done\n\
    \    if [[ $TOTAL_1 -gt $TOTAL_2 ]]; then\n        echo \"[$2]\"\n    else\n \
    \       echo \"[$1]\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  if [ -z \"$1\" ] || [ -z \"$2\" ];\
    \ then\n    echo \"[]\"\n    return\n  fi\n  x=$(echo \"$1\" | awk '{print length}')\n\
    \  y=$(echo \"$2\" | awk '{print length}')\n  (( x < y )) && echo \"$1\" || echo\
    \ \"$2\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n   char_count=0\n   char_count_1=0\n\
    \   char_count_2=0\n   list_1=$1\n   list_2=$2\n   list_1_len=${#list_1}\n   list_2_len=${#list_2}\n\
    \   list_3=${list_1}\n   i=0\n   for word in $list_1\n   do\n      if [ ${#word}\
    \ -gt 0 ]\n      then\n         let char_count_1+=${#word}\n      fi\n   done\n\
    \   for word in $list_2\n   do\n      if [ ${#word} -gt 0 ]\n      then\n    \
    \     let char_count_2+=${#word}\n      fi\n   done\n   echo \"list 1 chars: \"\
    $char_count_1\", list 2 chars: \"$char_count_2\n   if [ $char_count_1 -gt $char_count_2\
    \ ]\n   then\n      list_3=$list_2\n   elif [ $char_count_1 -eq $char_count_2\
    \ ]\n   then\n      list_3=$list_1\n   fi\n   echo \"list_3: \"$list_3\n   echo\
    \ \"$list_3\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [[ -z \"$1\" || -z \"$2\" ]];\
    \ then\n        echo '[]'\n        return\n    fi\n    strings_1=$(echo \"$1\"\
    \ | wc -c)\n    strings_2=$(echo \"$2\" | wc -c)\n    if [[ \"$strings_1\" -lt\
    \ \"$strings_2\" ]]; then\n        echo \"$1\"\n    else\n        echo \"$2\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    #TODO\n    # \u5FAA\u73AF$1\u548C\
    $2\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\n    for i in $1; do\n        for j in\
    \ $2; do\n            # \u5982\u679Ci\u548Cj\u4E0D\u76F8\u7B49, \u5C31\u8F93\u51FA\
    j\n            if [ \"$i\" != \"$j\" ]; then\n                echo \"$j\"\n  \
    \          fi\n        done\n    done\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t# first, lets check if the arguments\
    \ are valid.\n\tif [[ -z \"$1\" || -z \"$2\" ]]; then\n\t\t# an argument is empty,\
    \ return an empty list\n\t\techo \"[]\"\n\telse\n\t\t# initialize our variables.\n\
    \t\t# we will use an array to store our words.\n\t\tdeclare -a words1\n\t\tdeclare\
    \ -a words2\n\t\t# we will use these variables to store the length of our lists\n\
    \t\tlist1len=0\n\t\tlist2len=0\n\t\t# now we split the string by whitespace, and\
    \ store it in an array.\n\t\twords1=($1)\n\t\twords2=($2)\n\t\t# now we calculate\
    \ the lengths of the two lists\n\t\tfor word in \"${words1[@]}\"; do\n\t\t\t((list1len\
    \ += ${#word}))\n\t\tdone\n\t\tfor word in \"${words2[@]}\"; do\n\t\t\t((list2len\
    \ += ${#word}))\n\t\tdone\n\t\t# now that we have our lengths, lets compare them.\n\
    \t\tif (( $list1len == $list2len )); then\n\t\t\t# two lists are equal, return\
    \ the first list\n\t\t\techo \"$1\"\n\t\telif (( $list1len < $list2len )); then\n\
    \t\t\t# the first list is less, return the first list\n\t\t\techo \"$1\"\n\t\t\
    else\n\t\t\t# the second list is less, return the second list\n\t\t\techo \"$2\"\
    \n\t\tfi\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t# List of words from $1\n\twords1=$(printf\
    \ %s \"$1\" | grep -oE '[[:alpha:]]+')\n\t# List of words from $2\n\twords2=$(printf\
    \ %s \"$2\" | grep -oE '[[:alpha:]]+')\n\t# Shell arithmetic evaluates each of\
    \ these to the number of chars in each list of words\n\t# We must assign these\
    \ to shell variables to use the arithmetic with bash arrays\n\tlen1=$(echo $words1\
    \ | wc -w)\n\tlen2=$(echo $words2 | wc -w)\n\t# Now, evaluate\n\tif [ $len1 -lt\
    \ $len2 ]; then\n\t\t# Convert all items of words1 to quoted strings and return\
    \ as a space-separated list\n\t\t# NOTE: This is a bash-ism. Don't use bash arrays\
    \ in sh.\n\t\tprintf '\"%s\" ' \"${words1[@]}\"\n\telif [ $len1 -gt $len2 ]; then\n\
    \t\t# Return words2 as a space-separated list\n\t\tprintf '\"%s\" ' \"${words2[@]}\"\
    \n\telse\n\t\t# Return words1 as a space-separated list\n\t\tprintf '\"%s\" '\
    \ \"${words1[@]}\"\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=( $1 )\n  local list2=(\
    \ $2 )\n  local i1=0\n  local i2=0\n  local var\n  for var in \"${list1[@]}\"\
    ; do\n    (( i1 += ${#var} ))\n  done\n  for var in \"${list2[@]}\"; do\n    ((\
    \ i2 += ${#var} ))\n  done\n  [[ $i1 -le $i2 ]] && echo \"${list1[@]}\" || echo\
    \ \"${list2[@]}\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local sum1 sum2\n    # Write your code from here#\n    sum1=0\n    for\
    \ word in $list1; do\n        sum1=$((sum1+${#word}))\n    done\n    sum2=0\n\
    \    for word in $list2; do\n        sum2=$((sum2+${#word}))\n    done\n    if\
    \ [ $sum1 -lt $sum2 ]; then\n        echo \"$list1\"\n    else\n        echo \"\
    $list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    match=\n    min_len=0\n    for\
    \ word in $1\n    do\n        len=${#word}\n        if [ -z \"$match\" ] || [\
    \ $len -lt $min_len ]\n        then\n            match=$word\n            min_len=$len\n\
    \        fi\n    done\n    for word in $2\n    do\n        len=${#word}\n    \
    \    if [ $len -lt $min_len ]\n        then\n            match=$word\n       \
    \     min_len=$len\n        fi\n    done\n    echo $match\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your solution here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpey84lr4y.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpey84lr4y.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  echo $1 $2 | awk '{print length($1),\
    \ length($2)}' |\n  awk '{\n    if($1 > $2)\n      printf(\"[\\\"%s\\\"]\", $2);\n\
    \    else if($1 < $2)\n      printf(\"[\\\"%s\\\"]\", $1);\n    else\n      printf(\"\
    [\\\"%s\\\"]\", $1);\n  }'\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=(\"$@\")\n  # make a\
    \ copy of the list and remove the first element\n  local list2=(\"${list1[@]:1}\"\
    )\n  # length of the first string\n  local length1=${#list1[0]}\n  # length of\
    \ the second string\n  local length2=${#list2[0]}\n  # loop over each item of\
    \ the list and add its length to $length1\n  for i in \"${list1[@]:1}\"; do\n\
    \    length1=$(( length1 + ${#i} ))\n  done\n  # loop over each item of the list\
    \ and add its length to $length2\n  for i in \"${list2[@]}\"; do\n    length2=$((\
    \ length2 + ${#i} ))\n  done\n  # if the total number of chars of list1 is less\
    \ than list2, return list1\n  if [[ $length1 -lt $length2 ]]; then\n    printf\
    \ '\"%s\" ' \"${list1[@]}\"\n  # else if the total number of chars of list2 is\
    \ less than list1, return list2\n  elif [[ $length2 -lt $length1 ]]; then\n  \
    \  printf '\"%s\" ' \"${list2[@]}\"\n  # else return list1\n  else\n    printf\
    \ '\"%s\" ' \"${list1[@]}\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local array_1=($1)\n    local array_2=($2)\n\
    \    local length_1=${#array_1[@]}\n    local length_2=${#array_2[@]}\n    local\
    \ total_1=0\n    local total_2=0\n    local i=0\n    # Find the total number of\
    \ characters in the first array.\n    while [ $i -lt $length_1 ]; do\n       \
    \ total_1=$((total_1 + ${#array_1[$i]}))\n        i=$((i + 1))\n    done\n   \
    \ # Find the total number of characters in the second array.\n    i=0\n    while\
    \ [ $i -lt $length_2 ]; do\n        total_2=$((total_2 + ${#array_2[$i]}))\n \
    \       i=$((i + 1))\n    done\n    # Compare the two totals.\n    if [ $total_1\
    \ -lt $total_2 ]; then\n        printf '%s\\n' \"${array_1[@]}\"\n    elif [ $total_1\
    \ -gt $total_2 ]; then\n        printf '%s\\n' \"${array_2[@]}\"\n    else\n \
    \       printf '%s\\n' \"${array_1[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlist1=\"$1\"\n\tlist2=\"$2\"\n\t\
    list_diff=\"$list1\"\n\tif [ \"$list1\" == \"\" ]; then\n\t\tlist_diff=\"\"\n\t\
    elif [ \"$list2\" == \"\" ]; then\n\t\tlist_diff=\"\"\n\telif [ $(total_match_count\
    \ \"$list1\") -lt $(total_match_count \"$list2\") ]; then\n\t\tlist_diff=\"\"\n\
    \telif [ $(total_match_count \"$list1\") -gt $(total_match_count \"$list2\") ];\
    \ then\n\t\tlist_diff=\"$list2\"\n\tfi\n\techo -n $list_diff\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2nmbaz5k.sh: line 27: total_match_count: command not found

    /tmp/tmp2nmbaz5k.sh: line 27: total_match_count: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    count=0\n    space_len=${#count}\n\
    \    if [ $# -ne 2 ]; then\n        echo \"$0 requires two parameters\" >&2\n\
    \        return 1\n    fi\n    for word in $1; do\n        len=${#word}\n    \
    \    count=$((count + len))\n    done\n    for word in $2; do\n        len=${#word}\n\
    \        count=$((count - len))\n    done\n    if [ $count -le 0 ]; then\n   \
    \     echo \"[$2]\"\n    else\n        echo \"[$1]\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    #  write your code here\n    return\
    \ 0\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    (( \"$#\" == 2 )) || return 1\n\
    \    list1=\"$1\"\n    list2=\"$2\"\n    total1=$(echo \"$list1\" | wc -c)\n \
    \   total2=$(echo \"$list2\" | wc -c)\n    if (( \"$total1\" < \"$total2\" ));\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal list1\n\tlist1=($1)\n\tlocal\
    \ list2\n\tlist2=($2)\n\tlocal list1_count=0\n\tlocal list2_count=0\n\tfor word\
    \ in ${list1[@]}; do\n\t\tlist1_count=$(($list1_count + ${#word}))\n\tdone\n\t\
    for word in ${list2[@]}; do\n\t\tlist2_count=$(($list2_count + ${#word}))\n\t\
    done\n\tif [ $list1_count -gt $list2_count ]; then\n\t\treturn\n\telif [ $list1_count\
    \ -eq $list2_count ]; then\n\t\techo ${list1[@]}\n\telse\n\t\techo ${list2[@]}\n\
    \tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local l1=\"$1\"\n    local l2=\"\
    $2\"\n    local t1=0\n    local t2=0\n    local l=\"\"\n    local w=\"\"\n   \
    \ # computes the total number of chars in the list\n    # $1 is a space-separated\
    \ list\n    compute_total() {\n        local total=0\n        local l=\"$1\"\n\
    \        for w in $l; do\n            total=$((total + ${#w}))\n        done\n\
    \        echo $total\n    }\n    t1=$(compute_total \"$l1\")\n    t2=$(compute_total\
    \ \"$l2\")\n    if [ $t1 -eq $t2 ]; then\n        echo '[' \"$l1\" ']'\n    elif\
    \ [ $t1 -lt $t2 ]; then\n        echo '[' \"$l1\" ']'\n    else\n        echo\
    \ '[' \"$l2\" ']'\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    len1=$(wc -c <<< \"$1\")\n    len2=$(wc\
    \ -c <<< \"$2\")\n    if [[ $len1 -lt $len2 ]]; then\n        echo \"$1\"\n  \
    \  else\n        echo \"$2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  total_a=$(echo \"$1\" | wc -c)\n\
    \  total_b=$(echo \"$2\" | wc -c)\n  if [ $total_a -lt $total_b ]; then\n    echo\
    \ \"$1\"\n  else\n    echo \"$2\"\n  fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local sum1 sum2\n    for s in $1;\
    \ do\n        (( sum1 += ${#s} ))\n    done\n    for s in $2; do\n        (( sum2\
    \ += ${#s} ))\n    done\n    if (( sum1 < sum2 )); then\n        echo $1\n   \
    \ else\n        echo $2\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal first_total=0\n\tlocal second_total=0\n\
    \tfor item in $1; do\n\t\tfirst_total=$((first_total + ${#item}))\n\tdone\n\t\
    for item in $2; do\n\t\tsecond_total=$((second_total + ${#item}))\n\tdone\n\t\
    if [ $first_total -eq $second_total ]; then\n\t\techo \"$1\"\n\telse\n\t\tif [\
    \ $first_total -lt $second_total ]; then\n\t\t\techo \"$1\"\n\t\telse\n\t\t\t\
    echo \"$2\"\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local x=\"$1\"\n  local y=\"$2\"\n\
    \  local x_total=0\n  local y_total=0\n  IFS=\" \" read -r -a x_array <<< \"$x\"\
    \n  IFS=\" \" read -r -a y_array <<< \"$y\"\n  for i in \"${x_array[@]}\"; do\n\
    \    x_total=$(( x_total + ${#i} ))\n  done\n  for i in \"${y_array[@]}\"; do\n\
    \    y_total=$(( y_total + ${#i} ))\n  done\n  if [[ $x_total -lt $y_total ]];\
    \ then\n    printf '%s' \"$x\"\n  else\n    printf '%s' \"$y\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    list1=$1\n    list2=$2\n    # this\
    \ array contains the number of chars in each element of the first list\n    len1=($(echo\
    \ $list1 | tr ' ' '\\n' | awk '{print length}'))\n    len2=($(echo $list2 | tr\
    \ ' ' '\\n' | awk '{print length}'))\n    sum1=0\n    sum2=0\n    for i in ${len1[@]};\
    \ do\n        sum1=$((sum1+i))\n    done\n    for i in ${len2[@]}; do\n      \
    \  sum2=$((sum2+i))\n    done\n    if [ $sum1 -lt $sum2 ]; then\n        echo\
    \ $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # put your code here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdrv7mify.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpdrv7mify.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    w1=$(echo $1 | tr -cd '[[:alnum:]]'\
    \ | wc -c)\n    w2=$(echo $2 | tr -cd '[[:alnum:]]' | wc -c)\n    if [ $w1 -lt\
    \ $w2 ]; then\n        printf '%s' \"$1\"\n    else\n        printf '%s' \"$2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local arr1=()\n    local arr2=()\n\
    \    local c=0\n    local num_arr1=0\n    local num_arr2=0\n    local t1=0\n \
    \   local t2=0\n    local s=\"\"\n    local res=()\n    IFS=' ' read -ra arr1\
    \ <<<\"$1\"\n    IFS=' ' read -ra arr2 <<<\"$2\"\n    t1=$(total_len \"$1\")\n\
    \    t2=$(total_len \"$2\")\n    if [ $t1 -eq $t2 ]; then\n        res=(\"$1\"\
    )\n    elif [ $t1 -lt $t2 ]; then\n        res=(\"$1\")\n    else\n        res=(\"\
    $2\")\n    fi\n    printf '[\"%s\"' \"${res[@]}\"\n    printf ']\\n'\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi6v9yjl3.sh: line 31: total_len: command not found

    /tmp/tmpi6v9yjl3.sh: line 32: total_len: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [[ $# != 2 ]]; then\n      \
    \  printf \"Usage: total_match 'string1 string2' 'string3 string4'\\n\"\n    \
    \    return 1\n    fi\n    local -a list1 list2\n    # remove leading and trailing\
    \ spaces\n    local str1=\"${1# }\"\n    str1=\"${str1% }\"\n    # remove leading\
    \ and trailing quotes\n    local str2=\"${2#\\\"}\"\n    str2=\"${str2%\\\"}\"\
    \n    # split the strings using space\n    IFS=' ' read -r -a list1 <<< \"$str1\"\
    \n    IFS=' ' read -r -a list2 <<< \"$str2\"\n    # two separate loops as the\
    \ lists could be of different lengths\n    local total1=0\n    for i in \"${list1[@]}\"\
    ; do\n        local cnt=\"${#i}\"\n        total1=$((total1 + cnt))\n    done\n\
    \    local total2=0\n    for i in \"${list2[@]}\"; do\n        local cnt=\"${#i}\"\
    \n        total2=$((total2 + cnt))\n    done\n    if [[ $total1 -eq $total2 ]];\
    \ then\n        printf \"%s\\n\" \"$1\"\n    elif [[ $total1 -lt $total2 ]]; then\n\
    \        printf \"%s\\n\" \"$1\"\n    else\n        printf \"%s\\n\" \"$2\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # length of strings in $1\n  len1=$(echo\
    \ $1 | awk '{gsub(/[^ ]/, \" \"); print length}')\n  # length of strings in $2\n\
    \  len2=$(echo $2 | awk '{gsub(/[^ ]/, \" \"); print length}')\n  if [[ $len1\
    \ -gt $len2 ]]; then\n    echo \"$2\"\n  else\n    echo \"$1\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local strings1=($1)\n    local\
    \ strings2=($2)\n    local total1=0\n    local total2=0\n    local i=0\n    local\
    \ j=0\n    # compute the total number of chars in strings1\n    for i in ${strings1[@]};\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    # compute the total number\
    \ of chars in strings2\n    for j in ${strings2[@]}; do\n        total2=$((total2\
    \ + ${#j}))\n    done\n    # if the total number of chars in strings1 is less\
    \ than or equal to the\n    # total number of chars in strings2, return strings1\n\
    \    if [[ $total1 -le $total2 ]]; then\n        echo \"${strings1[@]}\"\n   \
    \ # else return strings2\n    else\n        echo \"${strings2[@]}\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  len1=$(total_len \"$1\")\n  len2=$(total_len\
    \ \"$2\")\n  if [ $len1 -gt $len2 ]; then\n    echo \"$2\"\n  else\n    echo \"\
    $1\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnkqeqrk9.sh: line 20: total_len: command not found

    /tmp/tmpnkqeqrk9.sh: line 21: total_len: command not found

    /tmp/tmpnkqeqrk9.sh: line 20: total_len: command not found

    /tmp/tmpnkqeqrk9.sh: line 21: total_len: command not found

    /tmp/tmpnkqeqrk9.sh: line 20: total_len: command not found

    /tmp/tmpnkqeqrk9.sh: line 21: total_len: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  if [[ \"$1\" == \"\" ]]; then\n \
    \   echo \"[]\"\n    return\n  fi\n  declare -a list1\n  list1=($1)\n  declare\
    \ -a list2\n  list2=($2)\n  sum1=0\n  sum2=0\n  for i in \"${list1[@]}\"; do\n\
    \    sum1=$((sum1 + ${#i}))\n  done\n  for i in \"${list2[@]}\"; do\n    sum2=$((sum2\
    \ + ${#i}))\n  done\n  if (($sum1 == $sum2)); then\n    echo \"[$1]\"\n    return\n\
    \  fi\n  if (($sum1 < $sum2)); then\n    echo \"[$1]\"\n    return\n  fi\n  echo\
    \ \"[$2]\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a A=(\"$@\")\n    # The\
    \ following is a trick to find the length of an array.\n    local ttl=${#A[@]}\n\
    \    ttl=$((ttl-1))\n    local l1=0 l2=0 l=0\n    for i in $(seq 0 $ttl); do\n\
    \        l=${#A[$i]}\n        if [ $i -eq 0 ]; then\n            l1=$l\n     \
    \   elif [ $i -eq 1 ]; then\n            l2=$l\n        else\n            if [\
    \ $l1 -lt $l2 ]; then\n                if [ $l -gt $l1 ]; then\n             \
    \       echo -n \"[\"\n                    for j in $(seq 0 $i); do\n        \
    \                echo -n '\"'${A[$j]}'\"'\n                        if [ $j -lt\
    \ $i ]; then\n                            echo -n \", \"\n                   \
    \     fi\n                    done\n                    echo \"]\"\n         \
    \           return\n                fi\n            else\n                if [\
    \ $l -gt $l2 ]; then\n                    echo -n \"[\"\n                    for\
    \ j in $(seq 2 $i); do\n                        echo -n '\"'${A[$j]}'\"'\n   \
    \                     if [ $j -lt $i ]; then\n                            echo\
    \ -n \", \"\n                        fi\n                    done\n          \
    \          echo \"]\"\n                    return\n                fi\n      \
    \      fi\n        fi\n    done\n    echo -n \"[\"\n    for i in $(seq 0 $ttl);\
    \ do\n        echo -n '\"'${A[$i]}'\"'\n        if [ $i -lt $ttl ]; then\n   \
    \         echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local size1=$(printf \"%s\\n\" \"${list1[@]}\" | wc -c)\n\
    \    local size2=$(printf \"%s\\n\" \"${list2[@]}\" | wc -c)\n    if [[ \"$size1\"\
    \ -lt \"$size2\" ]]; then\n        printf \"%s\\n\" \"${list1[@]}\"\n    else\n\
    \        printf \"%s\\n\" \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1_zhn14t.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmp1_zhn14t.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local __arr1=${1:-\"\"}\n  local\
    \ __arr2=${2:-\"\"}\n  local __total1=0\n  local __total2=0\n  local __out_list=()\n\
    \  local __out_len=0\n  local __i=0\n  local __str1=''\n  local __str2=''\n  local\
    \ __str1_len=0\n  local __str2_len=0\n  local __min_len=0\n  __arr1=( $__arr1\
    \ )\n  __arr2=( $__arr2 )\n  for __str1 in \"${__arr1[@]}\"; do\n    __str1_len=${#__str1}\n\
    \    __total1=$((__total1 + __str1_len))\n  done\n  for __str2 in \"${__arr2[@]}\"\
    ; do\n    __str2_len=${#__str2}\n    __total2=$((__total2 + __str2_len))\n  done\n\
    \  # printf \"%s\\n\" \"total1: $__total1, total2: $__total2\"\n  if [[ __total1\
    \ -lt __total2 ]]; then\n    __out_list=(\"${__arr1[@]}\")\n  elif [[ __total1\
    \ -gt __total2 ]]; then\n    __out_list=(\"${__arr2[@]}\")\n  else\n    __out_list=(\"\
    ${__arr1[@]}\")\n  fi\n  __out_len=${#__out_list[@]}\n  if [[ __out_len -eq 0\
    \ ]]; then\n    echo \"[]\"\n  else\n    printf \"[\"\n    printf '\"%s\", ' \"\
    ${__out_list[@]}\"\n    echo \"${__out_list[@]: -1}\"\n    echo \"]\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Write your code here\n  x=0\n \
    \ y=0\n  for i in $1; do\n    x=$(( x + ${#i} ))\n  done\n  for i in $2; do\n\
    \    y=$(( y + ${#i} ))\n  done\n  if [ $x -lt $y ]; then\n    echo \"[$1]\"\n\
    \  else\n    echo \"[$2]\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your code here\n    if [[ $1\
    \ == $2 ]]; then\n        echo $1\n    else\n        len1=0\n        for (( i=0;\
    \ i<${#1}; i++ )); do\n            len1=$(($len1+${#1:$i:1}))\n        done\n\
    \        len2=0\n        for (( i=0; i<${#2}; i++ )); do\n            len2=$(($len2+${#2:$i:1}))\n\
    \        done\n        if [[ $len1 -lt $len2 ]]; then\n            echo $1\n \
    \       else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n  \
    \  total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcn71p9_z.sh: line 26: $len1+${#1:$i:1}: bad substitution

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  list1_length=0\n  list2_length=0\n\
    \  for item in $1; do\n    list1_length=$((list1_length + ${#item}))\n  done\n\
    \  for item in $2; do\n    list2_length=$((list2_length + ${#item}))\n  done\n\
    \  if [[ $list1_length -gt $list2_length ]]; then\n    echo $2\n  else\n    echo\
    \ $1\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tsum1=0\n\tsum2=0\n\tfor i in $1;\
    \ do\n\t\tsum1=$(($sum1 + ${#i}))\n\tdone\n\tfor i in $2; do\n\t\tsum2=$(($sum2\
    \ + ${#i}))\n\tdone\n\tif [ $sum1 -lt $sum2 ]; then\n\t\techo \"$1\"\n\telse\n\
    \t\techo \"$2\"\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  awk -v list1=\"$1\" -v list2=\"$2\"\
    \ '\n  BEGIN {\n    # split the lists on spaces and make an array of the tokens,\n\
    \    # calculating the total number of chars in each token\n    n=split(list1,\
    \ arr1, \" \")\n    for (i=1; i<=n; i++) {\n      sum1 += length(arr1[i])\n  \
    \  }\n    n=split(list2, arr2, \" \")\n    for (i=1; i<=n; i++) {\n      sum2\
    \ += length(arr2[i])\n    }\n    # find out which list has the fewer number of\
    \ chars\n    if (sum1 < sum2) {\n      arr = arr1\n    } else {\n      arr = arr2\n\
    \    }\n    # join them into a string, with double quotes around each item\n \
    \   for (i=1; i<=length(arr); i++) {\n      if (i==1) {\n        res = \"\\\"\"\
    \ arr[i] \"\\\"\"\n      } else {\n        res = res \", \\\"\" arr[i] \"\\\"\"\
    \n      }\n    }\n  }\n  END {\n    print \"[\" res \"]\"\n  }\n  '\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:17: fatal: attempt to use array `arr2'' in a scalar context

    awk: cmd. line:17: fatal: attempt to use array `arr2'' in a scalar context

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local l1=\"$1\"\n  local l2=\"$2\"\
    \n  local total_chars1=0\n  local total_chars2=0\n  # TODO: Add your code here\n\
    \  for s in $l1\n  do\n    len=${#s}\n    total_chars1=$((total_chars1 + len))\n\
    \  done\n  for s in $l2\n  do\n    len=${#s}\n    total_chars2=$((total_chars2\
    \ + len))\n  done\n  if [ $total_chars1 -lt $total_chars2 ]\n  then\n    echo\
    \ $l1\n  else\n    echo $l2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1_total=0\n    local\
    \ list2_total=0\n    for word in $1; do\n        list1_total=$((list1_total +\
    \ ${#word}))\n    done\n    for word in $2; do\n        list2_total=$((list2_total\
    \ + ${#word}))\n    done\n    if [[ $list1_total -lt $list2_total ]]; then\n \
    \       echo $1\n    else\n        echo $2\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [[ -z \"$1\" ]]; then\n    \
    \    echo []\n        return 0\n    fi\n    if [[ -z \"$2\" ]]; then\n       \
    \ echo []\n        return 0\n    fi\n    #------data_prep\n    local IFS=$'\\\
    n'\n    local list1=($(echo $1))\n    local list2=($(echo $2))\n    local list_total_l=0\n\
    \    local list_short_l=0\n    local list_short\n    #------total_sum\n    for((\
    \ i=0; i<${#list1[@]}; i++ )); do\n        (( list_total_l += ${#list1[$i]} ))\n\
    \    done\n    for(( i=0; i<${#list2[@]}; i++ )); do\n        (( list_total_l\
    \ += ${#list2[$i]} ))\n    done\n    #------list_select\n    if [[ $list_total_l\
    \ -gt $list_short_l ]]; then\n        list_short=$list1\n    else\n        list_short=$list2\n\
    \    fi\n    #------format\n    local re_list=\n    for(( i=0; i<${#list_short[@]};\
    \ i++ )); do\n        re_list=\"$re_list, \\\"${list_short[$i]}\\\"\"\n    done\n\
    \    re_list=${re_list#, }\n    re_list=\"[$re_list]\"\n    echo $re_list\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [[ $# -ne 2 ]]; then\n     \
    \   echo \"Usage: total_match <list of strings> <list of strings>\" >&2\n    \
    \    return 1\n    fi\n    local len1=$(echo \"$1\" | awk '{sum += length($0)}\
    \ END {print sum}')\n    local len2=$(echo \"$2\" | awk '{sum += length($0)} END\
    \ {print sum}')\n    if [[ len1 -lt len2 ]]; then\n        echo $1\n    else\n\
    \        echo $2\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  printf \"[\"\n  if [ $# -eq 2 ];\
    \ then\n    local -n arr1=$1\n    local -n arr2=$2\n    local arr1_total=0\n \
    \   local arr2_total=0\n    for word in $arr1; do\n      arr1_total=$((arr1_total\
    \ + ${#word}))\n    done\n    for word in $arr2; do\n      arr2_total=$((arr2_total\
    \ + ${#word}))\n    done\n    if [ $arr1_total -lt $arr2_total ]; then\n     \
    \ printf '\"%s\"' \"${arr1[@]}\"\n    elif [ $arr1_total -gt $arr2_total ]; then\n\
    \      printf '\"%s\"' \"${arr2[@]}\"\n    else\n      printf '\"%s\"' \"${arr1[@]}\"\
    \n    fi\n  fi\n  printf \"]\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1sbc1tj5.sh: line 22: local: `'': not a valid identifier

    /tmp/tmp1sbc1tj5.sh: line 23: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  #use awk to count the chars of each\
    \ item in $1 and $2, then use awk to sum the number of chars\n  #then use bash\
    \ to compare them and use awk to print the list based on the result\n  #the key\
    \ point is how to use awk to get the length of each string in a space-separated\
    \ list\n  x=$(echo $1 | awk '{print gsub(/[^[:space:]]/,\"&\");}')\n  y=$(echo\
    \ $2 | awk '{print gsub(/[^[:space:]]/,\"&\");}')\n  echo \"The total chars of\
    \ list 1 is $x\"\n  echo \"The total chars of list 2 is $y\"\n  awk -v list1=\"\
    $1\" -v list2=\"$2\" -v x=$x -v y=$y 'BEGIN{if(x<y){print list1} else{print list2}}'\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t# if $1 is not empty and $2 is empty,\
    \ $1 must be the only correct answer\n\tif [ -n \"$1\" ] && [ -z \"$2\" ]; then\n\
    \t\techo \"[$1]\"\n\t\treturn\n\tfi\n\t# if $1 is empty and $2 is not empty, $2\
    \ must be the only correct answer\n\tif [ -z \"$1\" ] && [ -n \"$2\" ]; then\n\
    \t\techo \"[$2]\"\n\t\treturn\n\tfi\n\t# calculate the total number of chars in\
    \ $1\n\tlocal total_chars_in_1=0\n\tfor word in $1; do\n\t\tlet total_chars_in_1=total_chars_in_1+${#word}\n\
    \tdone\n\t# calculate the total number of chars in $2\n\tlocal total_chars_in_2=0\n\
    \tfor word in $2; do\n\t\tlet total_chars_in_2=total_chars_in_2+${#word}\n\tdone\n\
    \t# if $1 has the same number of chars as $2, $1 is the only correct answer\n\t\
    if [ $total_chars_in_1 -eq $total_chars_in_2 ]; then\n\t\techo \"[$1]\"\n\t\t\
    return\n\tfi\n\t# if $1 has less number of chars than $2, $1 is the only correct\
    \ answer\n\tif [ $total_chars_in_1 -lt $total_chars_in_2 ]; then\n\t\techo \"\
    [$1]\"\n\t\treturn\n\tfi\n\t# if $1 has more number of chars than $2, $2 is the\
    \ only correct answer\n\tif [ $total_chars_in_1 -gt $total_chars_in_2 ]; then\n\
    \t\techo \"[$2]\"\n\t\treturn\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local total_chars_list1=0\n  local total_chars_list2=0\n  for (( i=0; i<${#list1[@]};\
    \ i++ )); do\n    (( total_chars_list1 += ${#list1[$i]} ))\n  done\n  for (( i=0;\
    \ i<${#list2[@]}; i++ )); do\n    (( total_chars_list2 += ${#list2[$i]} ))\n \
    \ done\n  if (( total_chars_list1 < total_chars_list2 )); then\n    echo \"${list1[@]}\"\
    \n  else\n    echo \"${list2[@]}\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  count1=$(get_total_chars $1)\n  count2=$(get_total_chars\
    \ $2)\n  if [[ $count1 -eq $count2 ]]; then\n    echo $1\n  elif [[ $count1 -lt\
    \ $count2 ]]; then\n    echo $1\n  else\n    echo $2\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7nda87tg.sh: line 20: get_total_chars: command not found

    /tmp/tmp7nda87tg.sh: line 21: get_total_chars: command not found

    /tmp/tmp7nda87tg.sh: line 20: get_total_chars: command not found

    /tmp/tmp7nda87tg.sh: line 21: get_total_chars: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local num1=$(echo \"$list1\" | grep -o -E \"\\w\" | wc -l)\n    local\
    \ num2=$(echo \"$list2\" | grep -o -E \"\\w\" | wc -l)\n    local result\n   \
    \ if [ $num1 -eq $num2 ]; then\n        result=\"$list1\"\n    elif [ $num1 -lt\
    \ $num2 ]; then\n        result=\"$list1\"\n    else\n        result=\"$list2\"\
    \n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=($1)\n    local list2=($2)\n\
    \    local count1=0\n    local count2=0\n    for i in ${list1[@]}; do\n      \
    \  count1=$(( count1 + ${#i} ))\n    done\n    for i in ${list2[@]}; do\n    \
    \    count2=$(( count2 + ${#i} ))\n    done\n    if [ $count1 -gt $count2 ]; then\n\
    \        echo \"${list2[@]}\"\n    else\n        echo \"${list1[@]}\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal ch=0; local s=; local i=;\n\
    \tfor i in $1; do\n\t\ts=$(echo -n $i | wc -c)\n\t\t(( ch += s ))\n\tdone\n\t\n\
    \tlocal ch1=0; local s1=; local i1=;\n\tfor i1 in $2; do\n\t\ts1=$(echo -n $i1\
    \ | wc -c)\n\t\t(( ch1 += s1 ))\n\tdone\n\t\n\tlocal out=;\n\t(( ch < ch1 )) &&\
    \ out=$1 || out=$2;\n\t\n\tprintf '%s\\n' $out\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local x=$(echo $1 | tr -cd ' '\
    \ | wc -c)\n    local y=$(echo $2 | tr -cd ' ' | wc -c)\n    if [ $x -gt $y ];\
    \ then\n        echo $1\n    else\n        echo $2\n    fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    _total_match_count1() {\n     \
    \   echo \"$1\" | wc -c\n    }\n    _total_match_count2() {\n        echo \"$2\"\
    \ | wc -c\n    }\n    _total_match_find() {\n        arr1=($1)\n        arr2=($2)\n\
    \        for str in \"${arr1[@]}\"; do\n            for i in \"${!arr2[@]}\";\
    \ do\n                if [[ \"$str\" == \"${arr2[$i]}\" ]]; then\n           \
    \         echo \"$i\"\n                    return\n                fi\n      \
    \      done\n        done\n    }\n    _total_match_remove() {\n        arr=(\"\
    $@\")\n        echo \"${arr[@]:1}\"\n    }\n    _total_match_main() {\n      \
    \  local count1\n        local count2\n        local start_index\n        local\
    \ res\n        local length\n        local i\n        count1=$(_total_match_count1\
    \ \"$1\")\n        count2=$(_total_match_count2 \"$2\")\n        if [[ $count1\
    \ -gt $count2 ]]; then\n            echo \"[]\"\n            return\n        fi\n\
    \        start_index=$(_total_match_find \"$1\" \"$2\")\n        res=\"[\\\"${arr2[$start_index]}\\\
    \"\"\n        arr2=($(_total_match_remove \"${arr2[@]}\"))\n        length=${#arr2[@]}\n\
    \        for ((i = 0; i < $length; i++)); do\n            if [[ $((count1 + ${#arr2[$i]}))\
    \ -gt $count2 ]]; then\n                break\n            fi\n            count1=$((count1\
    \ + ${#arr2[$i]}))\n            res=\"$res, \\\"${arr2[$i]}\\\"\"\n        done\n\
    \        res=\"$res]\"\n        echo \"$res\"\n    }\n    _total_match_main \"\
    $1\" \"$2\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n   TOTAL_CHARS_1=0\n   TOTAL_CHARS_2=0\n\
    \   TOTAL_CHARS_1=$(echo $1 | wc -m)\n   TOTAL_CHARS_2=$(echo $2 | wc -m)\n  \
    \ if [ $TOTAL_CHARS_1 -lt $TOTAL_CHARS_2 ]; then\n       echo $1\n   else\n  \
    \     echo $2\n   fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [ -z \"$1\" ] && [ -z \"$2\"\
    \ ]; then\n        echo \"[]\"\n    elif [ -z \"$1\" ]; then\n        echo \"\
    [${2}]\"\n    elif [ -z \"$2\" ]; then\n        echo \"[${1}]\"\n    else\n  \
    \      strings1=$(echo \"$1\" | tr ' ' '\\n' | wc -m)\n        strings2=$(echo\
    \ \"$2\" | tr ' ' '\\n' | wc -m)\n        if [ $strings1 -lt $strings2 ]; then\n\
    \            echo \"[${1}]\"\n        else\n            echo \"[${2}]\"\n    \
    \    fi\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    list1=()\n    list2=()\n    for\
    \ i in $1; do\n        list1+=($(echo -n $i | wc -c))\n    done\n    for i in\
    \ $2; do\n        list2+=($(echo -n $i | wc -c))\n    done\n    if [ ${#list1[@]}\
    \ -eq ${#list2[@]} ]; then\n        #echo $1\n        echo $1 | cut -d \\\" -f2-\n\
    \    elif [ ${#list1[@]} -gt ${#list2[@]} ]; then\n        if [ ${#list1[@]} -eq\
    \ 1 ]; then\n            if [ ${list1[0]} -gt ${list2[0]} ]; then\n          \
    \      #echo $1\n                echo $1 | cut -d \\\" -f2-\n            else\n\
    \                #echo $2\n                echo $2 | cut -d \\\" -f2-\n      \
    \      fi\n        elif [ ${#list1[@]} -eq 2 ]; then\n            if [ ${list1[0]}\
    \ -gt ${list2[0]} ]; then\n                #echo $1\n                echo $1 |\
    \ cut -d \\\" -f2-\n            elif [ ${list1[0]} -eq ${list2[0]} ] && [ ${list1[1]}\
    \ -gt ${list2[1]} ]; then\n                #echo $1\n                echo $1 |\
    \ cut -d \\\" -f2-\n            else\n                #echo $2\n             \
    \   echo $2 | cut -d \\\" -f2-\n            fi\n        elif [ ${#list1[@]} -eq\
    \ 3 ]; then\n            if [ ${list1[0]} -gt ${list2[0]} ]; then\n          \
    \      #echo $1\n                echo $1 | cut -d \\\" -f2-\n            elif\
    \ [ ${list1[0]} -eq ${list2[0]} ] && [ ${list1[1]} -gt ${list2[1]} ]; then\n \
    \               #echo $1\n                echo $1 | cut -d \\\" -f2-\n       \
    \     elif [ ${list1[0]} -eq ${list2[0]} ] && [ ${list1[1]} -eq ${list2[1\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf8ot3ow5.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal i j sum1 sum2 total1 total2\n\
    \ttotal1=0\n\ttotal2=0\n\tfor i in $1; do\n\t\tsum1=0\n\t\tfor j in $(echo $i\
    \ | sed 's/./& /g'); do\n\t\t\tsum1=$(( $sum1 + 1 ))\n\t\tdone\n\t\ttotal1=$((\
    \ $total1 + $sum1 ))\n\tdone\n\tfor i in $2; do\n\t\tsum2=0\n\t\tfor j in $(echo\
    \ $i | sed 's/./& /g'); do\n\t\t\tsum2=$(( $sum2 + 1 ))\n\t\tdone\n\t\ttotal2=$((\
    \ $total2 + $sum2 ))\n\tdone\n\tif [ $total1 -eq $total2 ]; then\n\t\techo $1\n\
    \telif [ $total1 -lt $total2 ]; then\n\t\techo $1\n\telse\n\t\techo $2\n\tfi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # put your code here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdrv7mify.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpdrv7mify.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local n1 n2 n3 n4 n5\n    local\
    \ -a array1\n    local -a array2\n    local -a array3\n    local -a array4\n \
    \   local -a array5\n    local -a array6\n    local -a array7\n    local -a array8\n\
    \    local -a array9\n    local -a array10\n    array1=($1)\n    array2=($2)\n\
    \    array3=($1)\n    array4=($2)\n    array5=($1)\n    array6=($2)\n    array7=($1)\n\
    \    array8=($2)\n    array9=($1)\n    array10=($2)\n    array3[0]=\"\"\n    array4[0]=\"\
    \"\n    array5[0]=\"\"\n    array6[0]=\"\"\n    array7[0]=\"\"\n    array8[0]=\"\
    \"\n    array9[0]=\"\"\n    array10[0]=\"\"\n    n1=0\n    n2=0\n    n3=0\n  \
    \  n4=0\n    n5=0\n    for i in ${array1[@]}; do\n        n1=$((n1+${#i}))\n \
    \   done\n    for i in ${array2[@]}; do\n        n2=$((n2+${#i}))\n    done\n\
    \    for i in ${array3[@]}; do\n        n3=$((n3+${#i}))\n    done\n    for i\
    \ in ${array4[@]}; do\n        n4=$((n4+${#i}))\n    done\n    for i in ${array5[@]};\
    \ do\n        n5=$((n5+${#i}))\n    done\n    if [ $n1 -lt $n2 ]; then\n     \
    \   echo ${array1[@]}\n    elif [ $n1 -gt $n2 ]; then\n        echo ${array2[@]}\n\
    \    elif [ $n1 -eq $n2 ]; then\n        echo ${array1[@]}\n    fi\n    if [ $n3\
    \ -lt $n4 ]; then\n        echo ${array3[@]}\n    elif [ $n3\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppd5ep1o7.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmppd5ep1o7.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local first=$1; shift\n    local\
    \ second=$1; shift\n    if [ ${#first} -lt ${#second} ]; then\n        echo $first\n\
    \    else\n        echo $second\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local first=0;\n  local second=0;\n\
    \  for w in $1; do\n    first=$((first + ${#w}));\n  done\n  for w in $2; do\n\
    \    second=$((second + ${#w}));\n  done\n  if [ $first -gt $second ]; then\n\
    \    echo \"$1\";\n  else\n    echo \"$2\";\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local i; local j;\n  local list1=$1;\
    \ local list2=$2;\n  local list1_len=$(echo $list1 | wc -w); local list2_len=$(echo\
    \ $list2 | wc -w);\n  local list1_total_chars=0; local list2_total_chars=0;\n\
    \  for i in $list1; do\n    let list1_total_chars+=$(echo $i | wc -c);\n  done\n\
    \  for j in $list2; do\n    let list2_total_chars+=$(echo $j | wc -c);\n  done\n\
    \  if [[ list1_total_chars -lt list2_total_chars ]]; then\n    echo $list1;\n\
    \  elif [[ list1_total_chars -gt list2_total_chars ]]; then\n    echo $list2;\n\
    \  else\n    echo $list1;\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local match=()\n  local sum1=0\n\
    \  local sum2=0\n  local a\n  local b\n  # calculate the char count for each list\n\
    \  for a in $1; do\n    let sum1+=${#a}\n  done\n  for b in $2; do\n    let sum2+=${#b}\n\
    \  done\n  # determine which list has a lower number of chars\n  if [ $sum1 -lt\
    \ $sum2 ]; then\n    match=($1)\n  else\n    match=($2)\n  fi\n  echo ${match[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Your code here\n  #echo \"The functions\
    \ is not implemented yet!\"\n  #echo \"Total match \"\n  # 1. create two arrays\
    \ from the input strings\n  # 2. loop through the first list, and find the length\
    \ of each string\n  #    add up the total length of all string in this list\n\
    \  # 3. loop through the second list, and find the length of each string\n  #\
    \    add up the total length of all string in this list\n  # 4. compare the total\
    \ string lengths\n  # 5. return the list that has total number of chars in the\
    \ all strings of the list less than the other list\n  #    if the two lists have\
    \ the same number of chars, return the first list.\n  #    return the list in\
    \ the same format\n  #\n  # Example:\n  # arr1=(\"a\" \"ab\" \"abc\")\n  # arr2=(\"\
    1\" \"2\" \"3\")\n  # len1=${#arr1[@]}\n  # len2=${#arr2[@]}\n  # loop through\
    \ the first list\n  #for (( i=0; i<$len1; i++ ));\n  #do\n  #  echo \"${arr1[$i]}\"\
    \n  #done\n  # loop through the second list\n  #for (( i=0; i<$len2; i++ ));\n\
    \  #do\n  #  echo \"${arr2[$i]}\"\n  #done\n  #\n  # Example:\n  # echo ${arr[@]}\n\
    \  # echo ${arr[0]}\n  # echo ${arr[1]}\n  # echo ${arr[2]}\n  # echo ${arr[3]}\n\
    \  # echo ${arr[4]}\n  # echo ${arr[5]}\n  # echo ${arr[6]}\n  # echo ${arr[7]}\n\
    \  # echo ${arr[8]}\n  # echo ${arr[9]}\n  # echo ${arr[10]}\n  # echo ${arr[11]}\n\
    \  # echo ${arr[12]}\n  # echo ${arr[13]}\n  # echo ${arr[14]}\n  # echo ${arr[15]}\n\
    \  # echo ${arr[16]}\n  # echo ${arr[17]}\n \n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp34y3zoye.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmp34y3zoye.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local l1=($1)\n  local l2=($2)\n\
    \  local len1=${#l1[@]}\n  local len2=${#l2[@]}\n  # x: track len of list 1\n\
    \  # y: track len of list 2\n  local x=0\n  local y=0\n  # i: iterate l1\n  #\
    \ j: iterate l2\n  local i=0\n  local j=0\n  while [ $i -lt $len1 ]; do\n    x=$(($x\
    \ + ${#l1[$i]}))\n    i=$(($i + 1))\n  done\n  while [ $j -lt $len2 ]; do\n  \
    \  y=$(($y + ${#l2[$j]}))\n    j=$(($j + 1))\n  done\n  if [ $x -lt $y ]; then\n\
    \    echo ${l1[@]}\n  else\n    echo ${l2[@]}\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    list1=($1)\n    list2=($2)\n  \
    \  declare -i i\n\n    if [ ${#list1[@]} -eq 0 ]; then\n        echo \"[]\"\n\
    \        return\n    fi\n\n    declare -i total_chars_list1=0\n    declare -i\
    \ total_chars_list2=0\n    for item in ${list1[@]}; do\n        total_chars_list1=$total_chars_list1+${#item}\n\
    \    done\n    for item in ${list2[@]}; do\n        total_chars_list2=$total_chars_list2+${#item}\n\
    \    done\n\n    # echo \"total_chars_list1 = $total_chars_list1\"\n    # echo\
    \ \"total_chars_list2 = $total_chars_list2\"\n\n    if [ $total_chars_list1 -lt\
    \ $total_chars_list2 ]; then\n        echo \"[\"\n        for item in ${list1[@]};\
    \ do\n            echo -n '\"'$item'\"'\n            if [ $i -lt $((${#list1[@]}-1))\
    \ ]; then\n                echo -n \", \"\n            fi\n            ((i++))\n\
    \        done\n        echo \"]\"\n    else\n        echo \"[\"\n        for item\
    \ in ${list2[@]}; do\n            echo -n '\"'$item'\"'\n            if [ $i -lt\
    \ $((${#list2[@]}-1)) ]; then\n                echo -n \", \"\n            fi\n\
    \            ((i++))\n        done\n        echo \"]\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  first_total=0\n  second_total=0\n\
    \  for word in $1; do\n    first_total=$((first_total + ${#word}))\n  done\n \
    \ for word in $2; do\n    second_total=$((second_total + ${#word}))\n  done\n\
    \  if [[ $first_total -lt $second_total ]]; then\n    echo $1\n  else\n    echo\
    \ $2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    let n1=0 n2=0 n=0\n    for i in\
    \ $(echo $1); do\n        let n1+=$(echo $i | wc -c)\n    done\n    for i in $(echo\
    \ $2); do\n        let n2+=$(echo $i | wc -c)\n    done\n    [ $n1 -lt $n2 ] &&\
    \ let n=$n1 || let n=$n2\n    for i in $(echo $1); do\n        if [ $(echo $i\
    \ | wc -c) -eq $n ]; then\n            echo \"\\\"$i\\\"\"\n        fi\n    done\n\
    \    for i in $(echo $2); do\n        if [ $(echo $i | wc -c) -eq $n ]; then\n\
    \            echo \"\\\"$i\\\"\"\n        fi\n    done\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Your code here\n    input_a=$1\n\
    \    input_b=$2\n    i=0\n    input_a_chars=0\n    input_b_chars=0\n    # count\
    \ number of chars in a\n    while [[ $i -lt ${#input_a} ]]; do\n      char=${input_a:$i:1}\n\
    \      input_a_chars=$((input_a_chars+1))\n      ((i++))\n    done\n    # count\
    \ number of chars in b\n    i=0\n    while [[ $i -lt ${#input_b} ]]; do\n    \
    \  char=${input_b:$i:1}\n      input_b_chars=$((input_b_chars+1))\n      ((i++))\n\
    \    done\n    # compare total chars in a and b\n    if [[ $input_a_chars -gt\
    \ $input_b_chars ]]; then\n      echo \"$2\"\n    else\n      echo \"$1\"\n  \
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -i sum1 sum2\n    local -a\
    \ lst1 lst2\n\n    lst1=($1)\n    lst2=($2)\n\n    for i in \"${lst1[@]}\"; do\n\
    \        sum1+=\"${#i}\"\n    done\n\n    for i in \"${lst2[@]}\"; do\n      \
    \  sum2+=\"${#i}\"\n    done\n\n    [[ \"$sum1\" -lt \"$sum2\" ]] && echo \"${lst1[@]}\"\
    \ || echo \"${lst2[@]}\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  list_a=$1\n  list_b=$2\n  list_a_len=$(echo\
    \ $list_a | sed 's/[^ ]//g' | wc -c)\n  list_b_len=$(echo $list_b | sed 's/[^\
    \ ]//g' | wc -c)\n  if [[ $list_a_len -lt $list_b_len ]]; then\n    echo $list_a\n\
    \  else\n    echo $list_b\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local total1=0\n  local total2=0\n  local regex=\"[[:digit:]]+\"\n  for x in\
    \ \"${list1[@]}\"; do\n    x=${x//[![:digit:]]/}\n    if [[ $x =~ $regex ]]; then\n\
    \      total1=$((total1 + x))\n    fi\n  done\n  for x in \"${list2[@]}\"; do\n\
    \    x=${x//[![:digit:]]/}\n    if [[ $x =~ $regex ]]; then\n      total2=$((total2\
    \ + x))\n    fi\n  done\n  if [[ $total1 -gt $total2 ]]; then\n    echo \"${list1[@]}\"\
    \n  else\n    echo \"${list2[@]}\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  len=0\n  for s in \"$1\"; do\n  \
    \  len=$((len + ${#s}))\n  done\n  len2=0\n  for s in \"$2\"; do\n    len2=$((len2\
    \ + ${#s}))\n  done\n  if [[ $len -eq $len2 ]]; then\n    echo \"$1\"\n  elif\
    \ [[ $len -lt $len2 ]]; then\n    echo \"$1\"\n  else\n    echo \"$2\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local tmp1=tmp1.$$.txt\n  local tmp2=tmp2.$$.txt\n\
    \  # split the first and second arguments into two lists\n  # remove the quotes\n\
    \  # count the total number of chars in each list\n  echo $1 | tr -d '\"' | tr\
    \ ' ' '\\n' > $tmp1\n  echo $2 | tr -d '\"' | tr ' ' '\\n' > $tmp2\n  # The wc\
    \ command is useful for counting\n  # the number of lines and bytes in a file\n\
    \  local count1=$(wc -c $tmp1 | cut -d' ' -f1)\n  local count2=$(wc -c $tmp2 |\
    \ cut -d' ' -f1)\n  # delete the temp files\n  rm -f $tmp1 $tmp2\n  # Return the\
    \ result\n  # Use the test command to compare numbers\n  # We use the quotes to\
    \ return strings \n  if [ $count1 -lt $count2 ]; then\n    echo $1\n  else\n \
    \   echo $2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    awk -v OFS='\" \"' -v a=$1 -v b=$2\
    \ 'BEGIN {split(a, A, \" \"); split(b, B, \" \"); \n        c = length(A) <= length(B)\
    \ ? A : B; d = length(A) <= length(B) ? B : A;\n        for (i = 1; i <= length(c);\
    \ i++)\n            for (j = 1; j <= length(d); j++)\n                if (length(c[i])\
    \ < length(d[j]))\n                    n = n c[i] \" \";\n                else\
    \ if (length(c[i]) == length(d[j]))\n                    if (length(A) <= length(B))\n\
    \                        n = n c[i] \" \";\n        print \"[\" n \"]\"}'\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:2: fatal: attempt to use array `A'' in a scalar context

    awk: fatal: cannot open file `-v'' for reading (No such file or directory)

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # if $1 and $2 are the same, nothing\
    \ to do\n    if [[ $1 == $2 ]]; then\n        echo \"$1\"\n        return\n  \
    \  fi\n\n    # if there is only one word in each list, perform the compare\n \
    \   if [[ $(echo \"$1\" | wc -w) == 1 && $(echo \"$2\" | wc -w) == 1 ]]; then\n\
    \        len1=$(echo \"$1\" | wc -c)\n        len2=$(echo \"$2\" | wc -c)\n  \
    \      if [[ $len1 -lt $len2 ]]; then\n            echo \"$1\"\n        else\n\
    \            echo \"$2\"\n        fi\n        return\n    fi\n\n    # split the\
    \ two lists into arrays\n    len1=0\n    len2=0\n    OLDIFS=$IFS\n    IFS=\" \"\
    \n    arr1=($1)\n    arr2=($2)\n    IFS=$OLDIFS\n\n    # filter out the same words\n\
    \    for i in ${arr1[@]}; do\n        for j in ${arr2[@]}; do\n            if\
    \ [[ $i == $j ]]; then\n                arr1=(${arr1[@]/$i})\n               \
    \ arr2=(${arr2[@]/$j})\n            fi\n        done\n    done\n\n    # calculate\
    \ the lengths of each array\n    for i in ${arr1[@]}; do\n        len1=$((len1\
    \ + $(echo \"$i\" | wc -c)))\n    done\n    for i in ${arr2[@]}; do\n        len2=$((len2\
    \ + $(echo \"$i\" | wc -c)))\n    done\n\n    # compare the lengths\n    if [[\
    \ $len1 -lt $len2 ]]; then\n        echo \"${arr1[@]}\"\n    else\n        echo\
    \ \"${arr2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  ((${#1} == 0)) && echo \"[]\" &&\
    \ return 0\n  ((${#2} == 0)) && echo \"[]\" && return 0\n  [[ ${1// /} =~ [[:alpha:]]\
    \ ]] && [[ ${2// /} =~ [[:alpha:]] ]] || echo \"[]\" && return 0\n  strings1=($1)\n\
    \  strings2=($2)\n  ((len1=${#strings1[@]}))\n  ((len2=${#strings2[@]}))\n  ((n=0))\n\
    \  ((res=0))\n  total1=0\n  total2=0\n  while ((n < len1)); do\n    total1=$((total1\
    \ + ${#strings1[n]}))\n    n=$((n + 1))\n  done\n  n=0\n  while ((n < len2));\
    \ do\n    total2=$((total2 + ${#strings2[n]}))\n    n=$((n + 1))\n  done\n  if\
    \ ((total1 < total2)); then\n    n=0\n    while ((n < len1)); do\n      if ((n\
    \ == 0)); then\n        res=\"'\\\"${strings1[n]}\\\"'\"\n      else\n       \
    \ res=\"$res, '\\\"${strings1[n]}\\\"'\"\n      fi\n      n=$((n + 1))\n    done\n\
    \  elif ((total1 > total2)); then\n    n=0\n    while ((n < len2)); do\n     \
    \ if ((n == 0)); then\n        res=\"'\\\"${strings2[n]}\\\"'\"\n      else\n\
    \        res=\"$res, '\\\"${strings2[n]}\\\"'\"\n      fi\n      n=$((n + 1))\n\
    \    done\n  else\n    n=0\n    while ((n < len1)); do\n      if ((n == 0)); then\n\
    \        res=\"'\\\"${strings1[n]}\\\"'\"\n      else\n        res=\"$res, '\\\
    \"${strings1[n]}\\\"'\"\n      fi\n      n=$((n + 1))\n    done\n  fi\n  echo\
    \ \"[$res]\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    A=\"$1\"\n    B=\"$2\"\n    # Split\
    \ $A into an array based on spaces\n    IFS=' ' read -r -a A_array <<< \"$A\"\n\
    \    # Split $B into an array based on spaces\n    IFS=' ' read -r -a B_array\
    \ <<< \"$B\"\n    # Initialize the total number of characters in A and B\n   \
    \ total_num_chars_A=0\n    total_num_chars_B=0\n    # Count the total number of\
    \ characters in A\n    for word in \"${A_array[@]}\"; do\n        total_num_chars_A=$((total_num_chars_A\
    \ + ${#word}))\n    done\n    # Count the total number of characters in B\n  \
    \  for word in \"${B_array[@]}\"; do\n        total_num_chars_B=$((total_num_chars_B\
    \ + ${#word}))\n    done\n    # Check which list has more number of characters\n\
    \    if [ $total_num_chars_A -eq $total_num_chars_B ]; then\n        echo \"$A\"\
    \n    elif [ $total_num_chars_A -lt $total_num_chars_B ]; then\n        echo \"\
    $A\"\n    else\n        echo \"$B\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal list1_chars=0\n\tlocal list2_chars=0\n\
    \tlocal short_list=$1\n\tlocal short_list_chars=${list1_chars}\n\tlocal long_list=$2\n\
    \tlocal long_list_chars=${list2_chars}\n\tfor str in ${short_list}; do\n\t\tshort_list_chars=$((\
    \ ${short_list_chars} + ${#str} ))\n\tdone\n\tfor str in ${long_list}; do\n\t\t\
    long_list_chars=$(( ${long_list_chars} + ${#str} ))\n\tdone\n\t# Find the shorter\
    \ list based on total number of chars\n\tif [ ${short_list_chars} -gt ${long_list_chars}\
    \ ]; then\n\t\tshort_list=${long_list}\n\t\tshort_list_chars=${long_list_chars}\n\
    \t\tlong_list=${1}\n\t\tlong_list_chars=${list1_chars}\n\tfi\n\tlocal short_list_values=$(echo\
    \ ${short_list} | sed -e 's/ /\\n/g' | sort -u)\n\tfor str in ${short_list_values};\
    \ do\n\t\tif [[ \"${long_list}\" =~ \"${str}\" ]]; then\n\t\t\techo -n \"\\\"\
    ${str}\\\" \"\n\t\tfi\n\tdone\n\techo \"\"\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  cnt1=0\n  for i in $1; do\n    cnt1=$((cnt1\
    \ + ${#i}))\n  done\n  cnt2=0\n  for i in $2; do\n    cnt2=$((cnt2 + ${#i}))\n\
    \  done\n  if [[ $cnt1 -lt $cnt2 ]]; then\n    echo \"$1\"\n  else\n    echo \"\
    $2\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local l1 l2 lc1 lc2\n  l1=$(echo\
    \ \"$1\" | wc -w)\n  l2=$(echo \"$2\" | wc -w)\n  lc1=$(echo \"$1\" | awk '{t=0;\
    \ for(i=1;i<=NF;i++) t+=length($i); print t}')\n  lc2=$(echo \"$2\" | awk '{t=0;\
    \ for(i=1;i<=NF;i++) t+=length($i); print t}')\n  [ $lc1 -lt $lc2 ] && echo $1\
    \ || [ $lc1 -gt $lc2 ] && echo $2 || echo $1\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local result_list=$(echo $1)\n  local\
    \ test_list=$(echo $2)\n  local result_list_length=$(total_length \"${result_list}\"\
    )\n  local test_list_length=$(total_length \"${test_list}\")\n  if [ \"${result_list_length}\"\
    \ -lt \"${test_list_length}\" ]; then\n    local result_list=$(echo $2)\n    local\
    \ test_list=$(echo $1)\n  fi\n  for item in ${test_list}; do\n    if is_in_list\
    \ \"${item}\" \"${result_list}\"; then\n      result_list=$(remove_from_list \"\
    ${item}\" \"${result_list}\")\n    fi\n  done\n  echo $(make_string \"${result_list}\"\
    )\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjlnx86rx.sh: line 22: total_length: command not found

    /tmp/tmpjlnx86rx.sh: line 23: total_length: command not found

    /tmp/tmpjlnx86rx.sh: line 24: [: : integer expression expected

    /tmp/tmpjlnx86rx.sh: line 33: make_string: command not found

    /tmp/tmpjlnx86rx.sh: line 22: total_length: command not found

    /tmp/tmpjlnx86rx.sh: line 23: total_length: command not found

    /tmp/tmpjlnx86rx.sh: line 24: [: : integer expression expected

    /tmp/tmpjlnx86rx.sh: line 29: is_in_list: command not found

    /tmp/tmpjlnx86rx.sh: line 29: is_in_list: command not found

    /tmp/tmpjlnx86rx.sh: line 33: make_string: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [ -z \"$1\" ] || [ -z \"$2\"\
    \ ]; then\n        echo -n \"[]\"\n        return\n    fi\n    arr1=($1)\n   \
    \ arr2=($2)\n    len1=${#arr1[@]}\n    len2=${#arr2[@]}\n    if [ $len1 -lt $len2\
    \ ]; then\n        echo -n \"[]\"\n        return\n    fi\n    for ((i=0; i<$len1;\
    \ i++)); do\n        str=${arr1[$i]}\n        for ((j=0; j<$len2; j++)); do\n\
    \            if [ \"${#str}\" -lt \"${#arr2[$j]}\" ]; then\n                echo\
    \ -n \"[]\"\n                return\n            fi\n        done\n    done\n\
    \    echo -n \"[\"\n    for ((i=0; i<$len1; i++)); do\n        str=${arr1[$i]}\n\
    \        echo -n \"\\\"$str\\\"\"\n        if [ $i -lt $((len1-1)) ]; then\n \
    \           echo -n \", \"\n        fi\n    done\n    echo -n \"]\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    declare -a A=(\"$@\")\n    declare\
    \ -a B=(\"$@\")\n    A=(\"${A[@]:1}\") # remove the first element of array A\n\
    \    B=(\"${B[@]:2}\") # remove the first 2 elements of array B\n    #A=(\"${A[@]#*'\
    \ '}\") # remove the last element of array A\n    #B=(\"${B[@]#*' '}\") # remove\
    \ the last element of array B\n    #echo ${#A[@]} ${#B[@]}\n    #echo ${A[@]}\n\
    \    #echo ${B[@]}\n    totalCharsA=0\n    totalCharsB=0\n    for item in ${A[@]};\
    \ do\n        totalCharsA=$((totalCharsA + ${#item}))\n    done\n    for item\
    \ in ${B[@]}; do\n        totalCharsB=$((totalCharsB + ${#item}))\n    done\n\
    \    if [ $totalCharsA -lt $totalCharsB ]; then\n        echo ${A[@]}\n    else\n\
    \        echo ${B[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local lst1=($1)\n  local lst2=($2)\n\
    \  local l1=$(echo \"$1\" | awk '{printf \"%s\", length($0)}')\n  local l2=$(echo\
    \ \"$2\" | awk '{printf \"%s\", length($0)}')\n  if [[ $l1 -gt $l2 ]]; then\n\
    \    echo \"${lst2[@]}\"\n  else\n    echo \"${lst1[@]}\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [ $# -ne 2 ]; then\n       \
    \ echo \"usage: $0 <word_list> <word_list>\"\n        return 1\n    fi\n    local\
    \ total1 total2\n    total1=$(echo \"$1\" | tr ' ' '\\n' | wc -m)\n    total2=$(echo\
    \ \"$2\" | tr ' ' '\\n' | wc -m)\n    if [ $total1 -lt $total2 ]; then\n     \
    \   echo \"$1\"\n    else\n        echo \"$2\"\n    fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local total=0\n    local min=9999\n    local min_list1=()\n\
    \    local min_list2=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        total=$((total\
    \ + ${#list1[$i]}))\n    done\n    min=$total\n    min_list1=(\"${list1[@]}\"\
    )\n    for ((i=0; i<${#list2[@]}; i++)); do\n        total=$((total + ${#list2[$i]}))\n\
    \    done\n    if (( $total < $min )); then\n        min=$total\n        min_list1=(\"\
    ${list2[@]}\")\n    fi\n    total=0\n    for ((i=0; i<${#list2[@]}; i++)); do\n\
    \        total=$((total + ${#list2[$i]}))\n    done\n    min_list2=(\"${list2[@]}\"\
    )\n    for ((i=0; i<${#list1[@]}; i++)); do\n        total=$((total + ${#list1[$i]}))\n\
    \    done\n    if (( $total < $min )); then\n        min_list1=(\"${list1[@]}\"\
    )\n    fi\n    local -a min_list=(\"${min_list1[@]}\")\n    local -a max_list=(\"\
    ${min_list2[@]}\")\n    for ((i=0; i<${#min_list[@]}; i++)); do\n        local\
    \ s=\"${min_list[$i]}\"\n        min_list[$i]=\"\\\"$s\\\"\"\n    done\n    echo\
    \ \"[${min_list[*]}]\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local sum1=0 sum2=0 i\n  for i in\
    \ $1; do\n    sum1=$(( $sum1 + ${#i} ))\n  done\n  for i in $2; do\n    sum2=$((\
    \ $sum2 + ${#i} ))\n  done\n  if [ $sum1 -lt $sum2 ]; then\n    echo $1\n  else\n\
    \    echo $2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  declare -i l1=$(echo $1 | tr -cd\
    \ ' ' | wc -c)\n  declare -i l2=$(echo $2 | tr -cd ' ' | wc -c)\n  if [ $l1 -lt\
    \ $l2 ]; then\n    echo $1\n  else\n    echo $2\n  fi\n}\n\ncandidate() {\n  \
    \  total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local l1=\"$1\"\n  local l2=\"$2\"\
    \n  local total_l1=\"$(echo $l1 | wc -c)\"\n  local total_l2=\"$(echo $l2 | wc\
    \ -c)\"\n  local selected_list=\"$l1\"\n  if [ $total_l1 -gt $total_l2 ]; then\n\
    \    selected_list=\"$l2\"\n  fi\n  # this is an array.\n  echo $(echo $selected_list\
    \ | tr ' ' \"\\n\")\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    first=$1\n    second=$2\n    if\
    \ [[ -z $first || -z $second ]]; then\n        echo \"[]\"\n        return\n \
    \   fi\n    first_len=$(echo $first | wc -m)\n    second_len=$(echo $second |\
    \ wc -m)\n    if [[ $first_len -lt $second_len ]]; then\n        echo $first\n\
    \    else\n        echo $second\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -i total1 total2 i\n    total1=0\n\
    \    total2=0\n    for i in $1; do\n        (( total1 += ${#i} ))\n    done\n\
    \    for i in $2; do\n        (( total2 += ${#i} ))\n    done\n    if (( total1\
    \ < total2 )); then\n        echo \"$1\"\n    else\n        echo \"$2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    list1=( $1 )\n    list2=( $2 )\n\
    \    total1=0\n    total2=0\n    for word in \"${list1[@]}\"; do\n        total1=$((total1\
    \ + ${#word}))\n    done\n    for word in \"${list2[@]}\"; do\n        total2=$((total2\
    \ + ${#word}))\n    done\n    if [ $total1 -lt $total2 ]; then\n        echo \"\
    ${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Write your code here\n  # If a\
    \ list is empty, print []\n  # Otherwise, print a list of strings where each string\
    \ is quoted, i.e.,\n  #   '\"string_a\"', '\"string_b\"'\n\n  # \n  if [ \"$1\"\
    \ = \"\" ]; then\n    echo '[]'\n  else\n    i=0\n    j=0\n    while [ $i -lt\
    \ $(echo $1 | wc -w) ]; do\n      temp1=$(echo $1 | cut -d ' ' -f $(($i+1)))\n\
    \      while [ $j -lt $(echo $2 | wc -w) ]; do\n        temp2=$(echo $2 | cut\
    \ -d ' ' -f $(($j+1)))\n        if [ $(($(echo $temp1 | wc -c)-1)) -lt $(($(echo\
    \ $temp2 | wc -c)-1)) ]; then\n          temp=$temp1\n          temp1=$temp2\n\
    \          temp2=$temp\n        fi\n        j=$(($j+1))\n      done\n      result=\"\
    $result $temp1\"\n      i=$(($i+1))\n    done\n    echo -n \"[\"\n    i=0\n  \
    \  result_len=$(echo $result | wc -w)\n    while [ $i -lt $result_len ]; do\n\
    \      temp=$(echo $result | cut -d ' ' -f $(($i+1)))\n      echo -n \"'\\\"$temp\\\
    \"'\"\n      if [ $i -lt $(($result_len-1)) ]; then\n        echo -n \",\"\n \
    \     fi\n      i=$(($i+1))\n    done\n    echo \"]\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tif [ $# -ne 2 ]; then\n\t\tprintf\
    \ \"usage: total_match \\\"list1\\\" \\\"list2\\\"\\n\"\n\t\treturn 1\n\tfi\n\t\
    if [ -z \"$1\" ] && [ -z \"$2\" ]; then\n\t\tprintf \"[]\\n\"\n\t\treturn 0\n\t\
    fi\n\tlocal list1=\"$1\"\n\tlocal list2=\"$2\"\n\tlocal total1=0\n\tlocal total2=0\n\
    \tlocal first_list\n\tlocal second_list\n\tlocal ret\n\tlocal len\n\tlocal i\n\
    \tlen=$(echo \"$list1\" | wc -w)\n\tfor ((i=1; i<=len; i++)); do\n\t\tfirst_list=$(echo\
    \ \"$list1\" | cut -d' ' -f$i)\n\t\tret=$(echo \"$first_list\" | wc -c)\n\t\t\
    let total1+=$ret\n\tdone\n\tlen=$(echo \"$list2\" | wc -w)\n\tfor ((i=1; i<=len;\
    \ i++)); do\n\t\tsecond_list=$(echo \"$list2\" | cut -d' ' -f$i)\n\t\tret=$(echo\
    \ \"$second_list\" | wc -c)\n\t\tlet total2+=$ret\n\tdone\n\tif [ $total1 -lt\
    \ $total2 ]; then\n\t\tlen=$(echo \"$list1\" | wc -w)\n\t\tprintf \"[\"\n\t\t\
    for ((i=1; i<=len; i++)); do\n\t\t\tfirst_list=$(echo \"$list1\" | cut -d' ' -f$i)\n\
    \t\t\tif [ $i -eq $len ]; then\n\t\t\t\tprintf \"\\\"%s\\\"\" \"$first_list\"\n\
    \t\t\telse\n\t\t\t\tprintf \"\\\"%s\\\", \" \"$first_list\"\n\t\t\tfi\n\t\tdone\n\
    \t\tprintf \"]\\n\"\n\telif [ $total1 -gt $total2 ]; then\n\t\tlen=$(echo \"$list2\"\
    \ | wc -w)\n\t\tprintf \"[\"\n\t\tfor ((i=1; i<=len; i++));\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4t758gf3.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmp4t758gf3.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Write your solution here\n    declare\
    \ -a a=(\"$@\")\n    declare -a b=(\"$@\")\n    a_len=${#a[@]}\n    b_len=${#b[@]}\n\
    \    sum_a=0\n    sum_b=0\n    for((i=0;i<$a_len;i++))\n    do\n        sum_a=$((sum_a+${#a[$i]}))\n\
    \    done\n    for((i=0;i<$b_len;i++))\n    do\n        sum_b=$((sum_b+${#b[$i]}))\n\
    \    done\n    if [ $sum_a -lt $sum_b ]\n    then\n        echo ${a[@]}\n    else\n\
    \        echo ${b[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal list1=\"$1\"\n\tlocal list2=\"\
    $2\"\n\tif [[ -z \"$list1\" && -z \"$list2\" ]]; then\n\t\techo \"[]\"\n\telif\
    \ [[ -z \"$list1\" ]]; then\n\t\techo -n \"[\"\n\t\tfor i in $list2; do\n\t\t\t\
    echo -n \"\\\"$i\\\" \"\n\t\tdone\n\t\techo \"]\"\n\telif [[ -z \"$list2\" ]];\
    \ then\n\t\techo -n \"[\"\n\t\tfor i in $list1; do\n\t\t\techo -n \"\\\"$i\\\"\
    \ \"\n\t\tdone\n\t\techo \"]\"\n\telse\n\t\tlocal len1=0\n\t\tlocal len2=0\n\t\
    \tfor i in $list1; do\n\t\t\t(( len1 += ${#i} ))\n\t\tdone\n\t\tfor i in $list2;\
    \ do\n\t\t\t(( len2 += ${#i} ))\n\t\tdone\n\t\tif [[ $len1 -gt $len2 ]]; then\n\
    \t\t\techo -n \"[\"\n\t\t\tfor i in $list2; do\n\t\t\t\techo -n \"\\\"$i\\\" \"\
    \n\t\t\tdone\n\t\t\techo \"]\"\n\t\telse\n\t\t\techo -n \"[\"\n\t\t\tfor i in\
    \ $list1; do\n\t\t\t\techo -n \"\\\"$i\\\" \"\n\t\t\tdone\n\t\t\techo \"]\"\n\t\
    \tfi\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n# Write your solution here.\nnum1=0\n\
    num2=0\nlist1=($1)\nlist2=($2)\nfor i in ${list1[@]}\ndo\n    num1=$(( $num1 +\
    \ ${#i} ))\ndone\n\nfor i in ${list2[@]}\ndo\n    num2=$(( $num2 + ${#i} ))\n\
    done\n\nif [ $num1 -lt $num2 ]\nthen\n    echo \"${list1[@]}\"\nelif [ $num1 -gt\
    \ $num2 ]\nthen\n    echo \"${list2[@]}\"\nelse\n    echo \"${list1[@]}\"\nfi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # List of strings\n    local -a\
    \ list1\n    # List of strings\n    local -a list2\n    # List of strings\n  \
    \  local -a result\n    # Number of chars in the strings of the list1\n    local\
    \ n1\n    # Number of chars in the strings of the list2\n    local n2\n    local\
    \ i\n\n    n1=0\n    n2=0\n    list1=($1)\n    list2=($2)\n    if [[ ${#list1[@]}\
    \ -eq 0 || ${#list2[@]} -eq 0 ]]; then\n        result=()\n    elif [[ ${#list1[@]}\
    \ -gt ${#list2[@]} ]]; then\n        result=(\"${list2[@]}\")\n    else\n    \
    \    for i in \"${list1[@]}\"; do\n            n1=$((n1 + ${#i}))\n        done\n\
    \        for i in \"${list2[@]}\"; do\n            n2=$((n2 + ${#i}))\n      \
    \  done\n        if [[ $n1 -eq $n2 ]]; then\n            result=(\"${list1[@]}\"\
    )\n        elif [[ $n1 -gt $n2 ]]; then\n            result=(\"${list2[@]}\")\n\
    \        else\n            result=(\"${list1[@]}\")\n        fi\n    fi\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local num1=0\n  local num2=0\n  for\
    \ w in $1; do\n    ((num1 += ${#w}))\n  done\n  for w in $2; do\n    ((num2 +=\
    \ ${#w}))\n  done\n  if [ $num1 -lt $num2 ]; then\n    echo $1\n  else\n    echo\
    \ $2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  declare -i total1=0\n  declare -i\
    \ total2=0\n  for s in $1; do\n    total1=$total1+${#s}\n  done\n  for s in $2;\
    \ do\n    total2=$total2+${#s}\n  done\n  if [[ $total1 -gt $total2 ]]; then\n\
    \    echo \"[$2]\"\n  else\n    echo \"[$1]\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local LIST_ONE_LENGTH=$(awk 'BEGIN\
    \ { print length(\"'\"$1\"'\") }')\n    local LIST_TWO_LENGTH=$(awk 'BEGIN { print\
    \ length(\"'\"$2\"'\") }')\n    if [[ \"$LIST_ONE_LENGTH\" -gt \"$LIST_TWO_LENGTH\"\
    \ ]]; then\n        echo \"$2\"\n    else\n        echo \"$1\"\n    fi\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local sum1=0\n    local sum2=0\n\
    \    # sum of the first argument's string length\n    for s in $1; do\n      \
    \  local curr_length=${#s}\n        sum1=$((sum1 + curr_length))\n    done\n \
    \   # sum of the second argument's string length\n    for s in $2; do\n      \
    \  local curr_length=${#s}\n        sum2=$((sum2 + curr_length))\n    done\n \
    \   # Compare the two\n    if [[ $sum1 -lt $sum2 ]]; then\n        echo \"$1\"\
    \n    else\n        echo \"$2\"\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [ -z \"$1\" ] && [ -z \"$2\"\
    \ ]; then\n        echo \"[]\"\n    else\n        len1=0\n        len2=0\n   \
    \     for i in $1; do\n            len1=$((len1 + ${#i}))\n        done\n    \
    \    for i in $2; do\n            len2=$((len2 + ${#i}))\n        done\n     \
    \   if [ $len1 -lt $len2 ]; then\n            echo \"[$1]\"\n        else\n  \
    \          echo \"[$2]\"\n        fi\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local total_a total_b array_a array_b\
    \ index\n    total_a=0\n    for index in $1; do\n        ((total_a += ${#index}))\n\
    \    done\n    total_b=0\n    for index in $2; do\n        ((total_b += ${#index}))\n\
    \    done\n    if ((total_a <= total_b)); then\n        array_a=($1)\n       \
    \ array_b=($2)\n    else\n        array_a=($2)\n        array_b=($1)\n    fi\n\
    \    for index in ${array_a[@]}; do\n        if [[ ${array_b[*]} =~ $index ]];\
    \ then\n            echo -n '\"'$index'\" '\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    result=()\n    if [ -z \"$1\" ]\
    \ && [ -z \"$2\" ]; then\n        echo \"[]\"\n        return 0\n    fi\n    if\
    \ [ -z \"$1\" ]; then\n        echo \"[\\\"$2\\\"]\"\n        return 0\n    fi\n\
    \    if [ -z \"$2\" ]; then\n        echo \"[\\\"$1\\\"]\"\n        return 0\n\
    \    fi\n    # at this point we have at least one non-empty list\n    total1=0\n\
    \    for string in $1; do\n        total1=$((total1 + ${#string}))\n    done\n\
    \    total2=0\n    for string in $2; do\n        total2=$((total2 + ${#string}))\n\
    \    done\n    if [ $total1 -lt $total2 ]; then\n        result+=($1)\n    else\n\
    \        result+=($2)\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local arr1=\"${1}\"\n    local\
    \ arr2=\"${2}\"\n    local arr1_len=$(echo \"${arr1}\" | wc -w)\n    local arr2_len=$(echo\
    \ \"${arr2}\" | wc -w)\n    if [[ $arr1_len -eq 0 ]]; then\n        echo '[]'\n\
    \    elif [[ $arr2_len -eq 0 ]]; then\n        echo \"[${arr1}]\"\n    else\n\
    \        local new_arr1=\"\"\n        local new_arr2=\"\"\n        local arr1_sum=0\n\
    \        local arr2_sum=0\n        for s in ${arr1}; do\n            arr1_sum=$((arr1_sum\
    \ + ${#s}))\n            new_arr1=\"${new_arr1}\\\"${s}\\\" \"\n        done\n\
    \        for s in ${arr2}; do\n            arr2_sum=$((arr2_sum + ${#s}))\n  \
    \          new_arr2=\"${new_arr2}\\\"${s}\\\" \"\n        done\n        if [[\
    \ $arr1_sum -lt $arr2_sum ]]; then\n            echo \"[${new_arr1}]\"\n     \
    \   elif [[ $arr1_sum -gt $arr2_sum ]]; then\n            echo \"[${new_arr2}]\"\
    \n        else\n            echo \"[${new_arr1}]\"\n        fi\n    fi\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    (( ${#1} < ${#2} )) && echo $1\
    \ || echo $2\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t# Your code here.\n\tlocal count_1=0\n\
    \tlocal count_2=0\n\tlocal count=0\n\tlocal h\n\tfor h in $1\n\tdo\n\t\tcount_1=$((count_1+${#h}))\n\
    \tdone\n\tfor h in $2\n\tdo\n\t\tcount_2=$((count_2+${#h}))\n\tdone\n\tif [ $count_1\
    \ -lt $count_2 ]\n\tthen\n\t\techo $1\n\telif [ $count_1 -eq $count_2 ]\n\tthen\n\
    \t\techo $1\n\telse\n\t\techo $2\n\tfi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local size1=0\n    local size2=0\n\
    \    for word in $1; do\n        size1=$((size1 + ${#word}))\n    done\n    for\
    \ word in $2; do\n        size2=$((size2 + ${#word}))\n    done\n    if [[ $size1\
    \ -gt $size2 ]]; then\n        echo \"[$2]\"\n    else\n        echo \"[$1]\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    declare -a list1=($1)\n    declare\
    \ -a list2=($2)\n    i=0\n    j=0\n    min_total=0\n    max_total=0\n    while\
    \ [[ $i -lt ${#list1[@]} ]]; do\n        min_total=$(( min_total + ${#list1[$i]}\
    \ ))\n        i=$(( i + 1 ))\n    done\n    while [[ $j -lt ${#list2[@]} ]]; do\n\
    \        max_total=$(( max_total + ${#list2[$j]} ))\n        j=$(( j + 1 ))\n\
    \    done\n    if [[ $min_total -gt $max_total ]]; then\n        printf \"\\\"\
    %s\\\" \" \"${list2[@]}\"\n    else\n        printf \"\\\"%s\\\" \" \"${list1[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # declare local variables\n  # use\
    \ function \"total\" to count the total number of chars in $1 and $2\n  # return\
    \ the list with less chars\n  # print the list in the format of [\"string\"]\n\
    \  # write your code here\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprw33o7fa.sh: line 25: syntax error near unexpected token `}''

    /tmp/tmprw33o7fa.sh: line 25: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local i\n    local -a array1\n\
    \    local -a array2\n    local total1\n    local total2\n    local -i len1\n\
    \    local -i len2\n    local -i i\n\n    read -ra array1 <<< \"$1\"\n    read\
    \ -ra array2 <<< \"$2\"\n\n    len1=${#array1[@]}\n    len2=${#array2[@]}\n\n\
    \    total1=0\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#array1[i]}))\n\
    \    done\n\n    total2=0\n    for ((i=0; i<len2; i++)); do\n        total2=$((total2\
    \ + ${#array2[i]}))\n    done\n\n    if ((total1 <= total2)); then\n        printf\
    \ \"[%s]\" \"$(IFS=\",\"; echo \"${array1[*]}\")\"\n    else\n        printf \"\
    [%s]\" \"$(IFS=\",\"; echo \"${array2[*]}\")\"\n    fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t# write your code here\n\t# you can\
    \ use any built-in or external command, but not pipes\n\t# you can use any command\
    \ line utility to define a new variable\n\t# return a string that contains the\
    \ list of strings that match,\n\t# or an empty string if no match\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo2ncjbaq.sh: line 25: syntax error near unexpected token `}''

    /tmp/tmpo2ncjbaq.sh: line 25: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    test_list1=(\"$@\")\n    test_list2=(\"\
    $@\")\n    test_list3=(\"$@\")\n    test_list4=(\"$@\")\n    test_list1=(\"${test_list1[@]:1}\"\
    ) #remove first element\n    test_list2=(\"${test_list2[@]:1}\") #remove first\
    \ element\n    test_list3=(\"${test_list3[@]:1}\") #remove first element\n   \
    \ test_list4=(\"${test_list4[@]:1}\") #remove first element\n    test_list1=(\"\
    ${test_list1[@]:0:1}\") #remove everything after first element\n    test_list2=(\"\
    ${test_list2[@]:0:1}\") #remove everything after first element\n    test_list3=(\"\
    ${test_list3[@]:0:1}\") #remove everything after first element\n    test_list4=(\"\
    ${test_list4[@]:0:1}\") #remove everything after first element\n    i=0\n    while\
    \ [ $i -lt ${#test_list1[@]} ]; do\n        if [ ${#test_list1[i]} -gt ${#test_list2[i]}\
    \ ]; then\n            test_list3[i]=${test_list2[i]}\n        else\n        \
    \    test_list3[i]=${test_list1[i]}\n        fi\n        i=$((i+1))\n    done\n\
    \    j=0\n    while [ $j -lt ${#test_list3[@]} ]; do\n        if [ ${#test_list3[j]}\
    \ -gt ${#test_list4[j]} ]; then\n            test_list4[j]=${test_list4[j]}\n\
    \        else\n            test_list4[j]=${test_list3[j]}\n        fi\n      \
    \  j=$((j+1))\n    done\n    echo \"${test_list4[@]}\"\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal l1=(\"$@\")\n\tlocal l2=(\"\
    $@\")\n\tfor ((i=0; i<${#l1[@]}; i++)); do\n\t\tl1[i]=$(echo \"${l1[i]}\" | tr\
    \ -d '\\n')\n\tdone\n\tfor ((i=0; i<${#l2[@]}; i++)); do\n\t\tl2[i]=$(echo \"\
    ${l2[i]}\" | tr -d '\\n')\n\tdone\n\tl1_len=0\n\tl2_len=0\n\tfor str in \"${l1[@]}\"\
    ; do\n\t\tl1_len=$((l1_len + ${#str}))\n\tdone\n\tfor str in \"${l2[@]}\"; do\n\
    \t\tl2_len=$((l2_len + ${#str}))\n\tdone\n\tif [[ l1_len -lt l2_len ]]; then\n\
    \t\techo \"${l1[@]}\"\n\telif [[ l1_len -gt l2_len ]]; then\n\t\techo \"${l2[@]}\"\
    \n\telse\n\t\techo \"${l1[@]}\"\n\tfi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlen1=$(echo \"$1\" | wc -c)\n\tlen2=$(echo\
    \ \"$2\" | wc -c)\n\tif [ $len1 -lt $len2 ]; then\n\t\techo $1\n\telse\n\t\techo\
    \ $2\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    #1 declare an empty array\n   \
    \ declare -a arr1\n    declare -a arr2\n    #2 copy the command line arguments\
    \ into an array\n    arr1=($1)\n    arr2=($2)\n    #3 calculate the total number\
    \ of characters in each array\n    local t1=0\n    local t2=0\n    for i in ${arr1[@]};\
    \ do\n        t1=$((t1+${#i}))\n    done\n    for i in ${arr2[@]}; do\n      \
    \  t2=$((t2+${#i}))\n    done\n    #4 compare the totals and return the appropriate\
    \ array\n    if [[ $t1 -gt $t2 ]]; then\n        echo \"${arr2[@]}\"\n    else\n\
    \        echo \"${arr1[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tif [[ $1 ]] && [[ $2 ]]; then\n\t\
    \tlocal sum1=0\n\t\tlocal sum2=0\n\t\tfor str in $1; do\n\t\t\tsum1=$((sum1 +\
    \ ${#str}))\n\t\tdone\n\t\tfor str in $2; do\n\t\t\tsum2=$((sum2 + ${#str}))\n\
    \t\tdone\n\t\tif [[ $sum1 -lt $sum2 ]]; then\n\t\t\techo -n \"$1\"\n\t\telif [[\
    \ $sum1 -gt $sum2 ]]; then\n\t\t\techo -n \"$2\"\n\t\telse\n\t\t\techo -n \"$1\"\
    \n\t\tfi\n\telse\n\t\techo -n \"[]\"\n\tfi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local a=$1 b=$2\n  if [[ ${#a} -lt\
    \ ${#b} ]]; then\n    echo -n \"$a\"\n  else\n    echo -n \"$b\"\n  fi\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n   # TODO\n   length1=$( echo $1 |\
    \ awk '{ printf length }' )\n   length2=$( echo $2 | awk '{ printf length }' )\n\
    \   if [[ $length1 -lt $length2 ]]; then\n      echo \"$1\"\n   else\n      echo\
    \ \"$2\"\n   fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # TODO\n    local len1=0\n    local\
    \ len2=0\n    for item in $1; do\n        len1=$(($len1 + ${#item}))\n    done\n\
    \    for item in $2; do\n        len2=$(($len2 + ${#item}))\n    done\n    if\
    \ [ $len1 -gt $len2 ]; then\n        local result=$2\n    else\n        local\
    \ result=$1\n    fi\n    echo $result\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # local declaration\n  local list1=\"\
    \"\n  local list2=\"\"\n  local list1_len=0\n  local list2_len=0\n  local list1_len_acumulator=0\n\
    \  local list2_len_acumulator=0\n  local match_list=\"\"\n  local match_list_len=0\n\
    \  local max_list_len=0\n  local min_list_len=0\n  local max_list_var=\"\"\n \
    \ local min_list_var=\"\"\n  local list1_ret=\"\"\n  local list2_ret=\"\"\n  local\
    \ list_ret=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local counter1=0\n \
    \ local counter2=0\n  local counter3=0\n  local str=\"\"\n  local list1_len_counter=0\n\
    \  local list2_len_counter=0\n  local len_counter=0\n  local len=0\n  local start_string=\"\
    \"\n  local tmp=\"\"\n  local tmp_counter=0\n  local first_char=\"\"\n  local\
    \ second_char=\"\"\n  local found=0\n  local found_var=\"\"\n  local var=\"\"\n\
    \  local var_counter=0\n  local return_str=\"\"\n  local space_counter=0\n  local\
    \ str_counter=0\n  local flag=0\n  local list1_list2_counter=0\n  local list1_list2_counter_tmp=0\n\
    \  local break_flag=0\n  local max_list_counter=0\n  local max_list_counter_tmp=0\n\
    \  local char_counter=0\n  local char_var=\"\"\n  local char_var_tmp=\"\"\n  local\
    \ char_var_counter=0\n  local char_var_counter_tmp=0\n  local var_max_list_counter=0\n\
    \  local var_max_list_counter_tmp=0\n  local var_counter_tmp=0\n  local var_found=0\n\
    \  local var_found_counter=0\n  local var_found_counter_tmp=0\n  local match_len=0\n\
    \  local match_len_tmp=0\n  local match_len_counter=0\n  local match_len_counter\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local l1=\"${1}\"\n    local l2=\"\
    ${2}\"\n    local l1_sum=$(echo \"${l1}\" | tr -d \" \" | wc -c)\n    local l2_sum=$(echo\
    \ \"${l2}\" | tr -d \" \" | wc -c)\n    local l_short=${l1}\n    local l_long=${l2}\n\
    \    if [ ${l1_sum} -ge ${l2_sum} ]; then\n        l_short=${l2}\n        l_long=${l1}\n\
    \    fi\n    echo \"${l_short}\" | tr \" \" \"\\n\" | grep -Fx \"${l_long}\"\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local total_chars1=0\n    local\
    \ total_chars2=0\n    for word in $1; do\n        total_chars1=$(( total_chars1\
    \ + ${#word} ))\n    done\n    for word in $2; do\n        total_chars2=$(( total_chars2\
    \ + ${#word} ))\n    done\n    if [[ $total_chars1 -lt $total_chars2 ]]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal total1=$(total_length \"$1\"\
    )\n\tlocal total2=$(total_length \"$2\")\n\tif [ $total1 -lt $total2 ]; then\n\
    \t\techo \"$1\"\n\telse\n\t\techo \"$2\"\n\tfi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_6w41xju.sh: line 20: total_length: command not found

    /tmp/tmp_6w41xju.sh: line 21: total_length: command not found

    /tmp/tmp_6w41xju.sh: line 20: total_length: command not found

    /tmp/tmp_6w41xju.sh: line 21: total_length: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1 list2 list1_size list2_size\n\
    \  list1=($1)\n  list2=($2)\n  list1_size=$(total_size \"${list1[@]}\")\n  list2_size=$(total_size\
    \ \"${list2[@]}\")\n  if [[ $list1_size -lt $list2_size ]]; then\n    echo \"\
    ${list1[@]}\"\n  elif [[ $list1_size -gt $list2_size ]]; then\n    echo \"${list2[@]}\"\
    \n  else\n    echo \"${list1[@]}\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp77ekji5t.sh: line 23: total_size: command not found

    /tmp/tmp77ekji5t.sh: line 24: total_size: command not found

    /tmp/tmp77ekji5t.sh: line 23: total_size: command not found

    /tmp/tmp77ekji5t.sh: line 24: total_size: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    for str in $1; do\n        strlen=${#str}\n\
    \        echo $strlen\n    done\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # You solution here.\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp60su54fz.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmp60su54fz.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  list1_total=0\n  list2_total=0\n\
    \  count=0\n  list1=()\n  list2=()\n  list1=$(echo $1 | sed 's/\\s/\\n/g')\n \
    \ list2=$(echo $2 | sed 's/\\s/\\n/g')\n  for i in $list1\n  do\n    list1_total=$((list1_total\
    \ + ${#i}))\n  done\n  for i in $list2\n  do\n    list2_total=$((list2_total +\
    \ ${#i}))\n  done\n  if [ $list1_total -lt $list2_total ]\n  then\n    for i in\
    \ $list1\n    do\n      echo -n \"\\\"$i\\\" \"\n    done\n  else\n    for i in\
    \ $list2\n    do\n      echo -n \"\\\"$i\\\" \"\n    done\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal i a k b j totalA totalB\n\t\
    totalA=0\n\ttotalB=0\n\t\n\tfor i in $1; do\n\t\t((a=${#i}))\n\t\t((totalA+=a))\n\
    \tdone\n\t\n\tfor j in $2; do\n\t\t((b=${#j}))\n\t\t((totalB+=b))\n\tdone\n\t\n\
    \tif [ $totalA -lt $totalB ]; then\n\t\techo $1\n\telse\n\t\techo $2\n\tfi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local -i sum1=0\n  local -i sum2=0\n  local -i i=0\n  local -i j=0\n  local\
    \ -i list1_size=${#list1[@]}\n  local -i list2_size=${#list2[@]}\n  local -i list1_size_without_quotes=0\n\
    \  local -i list2_size_without_quotes=0\n  for ((i=0; i<list1_size; i++)); do\n\
    \    # remove quotes\n    list1[i]=${list1[i]/\\\"/}\n    list1[i]=${list1[i]/\\\
    \"/}\n    # count chars in the list1\n    list1_size_without_quotes=${#list1[i]}\n\
    \    sum1=$sum1+$list1_size_without_quotes\n  done\n  for ((j=0; j<list2_size;\
    \ j++)); do\n    # remove quotes\n    list2[j]=${list2[j]/\\\"/}\n    list2[j]=${list2[j]/\\\
    \"/}\n    # count chars in the list2\n    list2_size_without_quotes=${#list2[j]}\n\
    \    sum2=$sum2+$list2_size_without_quotes\n  done\n  if [[ $sum1 -gt $sum2 ]];\
    \ then\n    printf \"%s\\n\" \"${list2[@]}\"\n  elif [[ $sum1 -lt $sum2 ]]; then\n\
    \    printf \"%s\\n\" \"${list1[@]}\"\n  else\n    printf \"%s\\n\" \"${list1[@]}\"\
    \n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    lst1=($1)\n    lst2=($2)\n    total1=0\n\
    \    total2=0\n    for i in ${lst1[@]}; do\n        ((total1 += ${#i}))\n    done\n\
    \    for i in ${lst2[@]}; do\n        ((total2 += ${#i}))\n    done\n    if ((total1\
    \ < total2)); then\n        echo \"${lst1[@]}\"\n    else\n        echo \"${lst2[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Write your code here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvx7rg99q.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpvx7rg99q.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_length=$(echo \"$list1\" | wc -c)\n  local list2_length=$(echo\
    \ \"$list2\" | wc -c)\n  if [ \"$list1_length\" -lt \"$list2_length\" ]; then\n\
    \    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlist1=$1\n\tlist2=$2\n\tlist1_sum=0\n\
    \tlist2_sum=0\n\tfor word in $list1; do\n\t\tlist1_sum=$(($list1_sum + ${#word}))\n\
    \tdone\n\tfor word in $list2; do\n\t\tlist2_sum=$(($list2_sum + ${#word}))\n\t\
    done\n\tif [ $list1_sum -lt $list2_sum ]; then\n\t\techo $list1\n\telse\n\t\t\
    echo $list2\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your code here\n    list1=$1\n\
    \    list2=$2\n    len1=0\n    len2=0\n    for i in $list1; do\n        len1=$(($len1+${#i}))\n\
    \    done\n    for i in $list2; do\n        len2=$(($len2+${#i}))\n    done\n\
    \    if [ $len1 -lt $len2 ]; then\n        echo \"$1\"\n    else\n        echo\
    \ \"$2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    first_length=$(echo \"$1\" | sed\
    \ 's/ /\\n/g' | wc -c)\n    second_length=$(echo \"$2\" | sed 's/ /\\n/g' | wc\
    \ -c)\n    if [ $first_length -gt $second_length ]; then\n        echo $2\n  \
    \  else\n        echo $1\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local first_list=\"$1\"\n  local\
    \ second_list=\"$2\"\n  local count_1=0\n  local count_2=0\n  local count_list_1=()\n\
    \  local count_list_2=()\n  local temp\n  local temp_list_1\n  local temp_list_2\n\
    \  local temp_list_3\n  local temp_list_4\n  local result\n  local result_list=()\n\
    \  local i\n  if [ -z \"$first_list\" ] && [ -z \"$second_list\" ]; then\n   \
    \ echo \"[]\"\n    return 0\n  fi\n  # get the total chars count of $first_list\n\
    \  for i in $first_list; do\n    count_1=$((count_1 + $(echo \"$i\" | wc -c)))\n\
    \    count_list_1+=(\"$count_1\")\n  done\n  # get the total chars count of $second_list\n\
    \  for i in $second_list; do\n    count_2=$((count_2 + $(echo \"$i\" | wc -c)))\n\
    \    count_list_2+=(\"$count_2\")\n  done\n  # compare $count_list_1 and $count_list_2\n\
    \  for ((i=0; i<${#count_list_1[@]}; i++)); do\n    temp=$(echo \"${count_list_1[$i]}\
    \ < ${count_list_2[$i]}\" | bc)\n    if [ \"$temp\" -eq 1 ]; then\n      result_list+=(\"\
    \\\"${first_list[$i]}\\\"\")\n    else\n      result_list+=(\"\\\"${second_list[$i]}\\\
    \"\")\n    fi\n  done\n  result=$(printf '%s ' \"${result_list[@]}\")\n  result=\"\
    [$result]\"\n  echo \"$result\"\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local l1=$1 l2=$2 l3\n    l3=$(echo\
    \ \"$l1 $l2\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    eval 'local t1=0 t2=0;\
    \ for i in '\"$l1\"'; do t1=`expr $t1 + ${#i}`; done; for i in '\"$l2\"'; do t2=`expr\
    \ $t2 + ${#i}`; done'\n    if [ $t1 -lt $t2 ]; then\n        echo $l1\n    elif\
    \ [ $t1 -gt $t2 ]; then\n        echo $l2\n    else\n        echo $l3\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=($1)\n    local list2=($2)\n\
    \    local count1=0\n    local count2=0\n    for i in ${list1[@]}; do\n      \
    \  let count1=count1+${#i}\n    done\n    for i in ${list2[@]}; do\n        let\
    \ count2=count2+${#i}\n    done\n    if [ $count1 -gt $count2 ]; then\n      \
    \  echo ${list2[@]}\n    else\n        echo ${list1[@]}\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t# FILL THIS\n\tlocal list1 list2\n\
    \tif [ $# -eq 2 ]; then\n\t\tlist1=$1\n\t\tlist2=$2\n\telse\n\t\techo \"Usage:\
    \ total_match list1 list2\"\n\t\texit 1\n\tfi\n\t# echo \"list1=$list1\"\n\t#\
    \ echo \"list2=$list2\"\n\tlocal list1_num=0\n\tlocal list2_num=0\n\tlocal list1_str=\"\
    \"\n\tlocal list2_str=\"\"\n\tlocal i\n\t# echo \"list1=${list1[@]}\"\n\t# echo\
    \ \"list2=${list2[@]}\"\n\tfor i in ${list1[@]}; do\n\t\tlist1_num=$(( $list1_num\
    \ + ${#i} ))\n\t\tlist1_str=\"$list1_str $i\"\n\tdone\n\tfor i in ${list2[@]};\
    \ do\n\t\tlist2_num=$(( $list2_num + ${#i} ))\n\t\tlist2_str=\"$list2_str $i\"\
    \n\tdone\n\t# echo \"list1_num=$list1_num\"\n\t# echo \"list2_num=$list2_num\"\
    \n\tif [ $list1_num -lt $list2_num ]; then\n\t\tlist1_str=${list1_str:1}\n\t\t\
    echo \"[$list1_str]\"\n\telif [ $list1_num -gt $list2_num ]; then\n\t\tlist2_str=${list2_str:1}\n\
    \t\techo \"[$list2_str]\"\n\telse\n\t\tlist1_str=${list1_str:1}\n\t\techo \"[$list1_str]\"\
    \n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Write your solution here\n  local\
    \ len1=0\n  local len2=0\n  for i in $1; do\n    len1=$((len1+${#i}))\n  done\n\
    \  for i in $2; do\n    len2=$((len2+${#i}))\n  done\n  if [[ $len1 -gt $len2\
    \ ]]; then\n    echo $2\n  else\n    echo $1\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local a=$1\n    local b=$2\n  \
    \  local len_a=$(total_length $a)\n    local len_b=$(total_length $b)\n    if\
    \ [[ $len_a -eq $len_b ]]; then\n        echo $a\n    elif [[ $len_a -lt $len_b\
    \ ]]; then\n        echo $a\n    else\n        echo $b\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkngijz0o.sh: line 22: total_length: command not found

    /tmp/tmpkngijz0o.sh: line 23: total_length: command not found

    /tmp/tmpkngijz0o.sh: line 22: total_length: command not found

    /tmp/tmpkngijz0o.sh: line 23: total_length: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal list1=$1\n\tlocal list2=$2\n\
    \t# Write your code here\n\t\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1_tot_len=$(echo \"$1\"\
    \ | wc -c)\n  local list2_tot_len=$(echo \"$2\" | wc -c)\n  # compare the total\
    \ lengths of the lists to determine which list has\n  # less total length, and\
    \ return that list\n  (( list1_tot_len < list2_tot_len )) && echo \"$1\" || echo\
    \ \"$2\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    words1=$1\n    words2=$2\n    total_chars_in_words1=$(for\
    \ word in $words1; do echo -n $word; done | wc -c)\n    total_chars_in_words2=$(for\
    \ word in $words2; do echo -n $word; done | wc -c)\n    if [ $total_chars_in_words1\
    \ -lt $total_chars_in_words2 ]; then\n        echo $words1\n    else\n       \
    \ echo $words2\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local total_match=()\n  local l1=\"\
    $1\"\n  local l2=\"$2\"\n  local n1=$(echo \"$l1\" | wc -w)\n  local n2=$(echo\
    \ \"$l2\" | wc -w)\n  if [ \"$n1\" -lt \"$n2\" ]; then\n    total_match=(\"$l1\"\
    )\n  else\n    total_match=(\"$l2\")\n  fi\n  echo \"${total_match[@]}\"\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a arr1=()\n    for s in\
    \ $1; do\n        arr1+=(\"$s\")\n    done\n    local -a arr2=()\n    for s in\
    \ $2; do\n        arr2+=(\"$s\")\n    done\n    local -i t1=\"${#arr1[@]}\"\n\
    \    local -i t2=\"${#arr2[@]}\"\n    local -i l1=0\n    local -i l2=0\n    for\
    \ i in \"${arr1[@]}\"; do\n        l1+=\"${#i}\"\n    done\n    for i in \"${arr2[@]}\"\
    ; do\n        l2+=\"${#i}\"\n    done\n    if [ \"$l1\" -lt \"$l2\" ]; then\n\
    \        echo \"${arr1[@]}\"\n    elif [ \"$l1\" -gt \"$l2\" ]; then\n       \
    \ echo \"${arr2[@]}\"\n    else\n        echo \"${arr1[@]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local s1=\"$1\"\n    local s2=\"\
    $2\"\n    local len1=$(echo \"$s1\" | \n        awk '{ sum=0;\n            for\
    \ (i=1; i<=NF; i++) {\n                sum+=length($i);\n            }\n     \
    \       print sum\n        }')\n    local len2=$(echo \"$s2\" | \n        awk\
    \ '{ sum=0;\n            for (i=1; i<=NF; i++) {\n                sum+=length($i);\n\
    \            }\n            print sum\n        }')\n    local result=\n    if\
    \ [ $len1 -lt $len2 ]; then\n        result=\"$s1\"\n    else\n        result=\"\
    $s2\"\n    fi\n    echo $result\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local x=$(echo $1 | sed 's/ /+/g'\
    \ | bc)\n  local y=$(echo $2 | sed 's/ /+/g' | bc)\n  [ $x -gt $y ] && echo \"\
    $1\" || echo \"$2\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Change the list $1 to an array\n\
    \    local -a array1\n    IFS=' ' read -r -a array1 <<< \"$1\"\n    # Change the\
    \ list $2 to an array\n    local -a array2\n    IFS=' ' read -r -a array2 <<<\
    \ \"$2\"\n    # We will always return array1, unless the total length of $2 is\
    \ less\n    # than the total length of $1, in which case we will return array2\n\
    \    local -a return_array=(\"${array1[@]}\")\n    local -i return_array_length=0\n\
    \    for i in \"${array1[@]}\"; do\n        (( return_array_length += ${#i} ))\n\
    \    done\n    local -i array2_length=0\n    for i in \"${array2[@]}\"; do\n \
    \       (( array2_length += ${#i} ))\n    done\n    if (( return_array_length\
    \ > array2_length )); then\n        return_array=(\"${array2[@]}\")\n    fi\n\
    \    # We will now print the array, with each element quoted and separated by\
    \ commas\n    # We need to quote the array elements to handle spaces in the strings\n\
    \    local -i item_count=${#return_array[@]}\n    local -i i=0\n    while (( i\
    \ < item_count )); do\n        printf '\"%s\"' \"${return_array[$i]}\"\n     \
    \   (( i++ ))\n        if (( i < item_count )); then\n            printf ','\n\
    \        fi\n    done\n    printf '\\n'\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=($1)\n    local list2=($2)\n\
    \    local sum1=0\n    local sum2=0\n    local sum\n    local result\n    for\
    \ i in ${list1[@]}; do\n        sum1=$(($sum1 + ${#i}))\n    done\n    for i in\
    \ ${list2[@]}; do\n        sum2=$(($sum2 + ${#i}))\n    done\n    if [[ sum1 -lt\
    \ sum2 ]]; then\n        result=${list1[@]}\n    else\n        result=${list2[@]}\n\
    \    fi\n    echo $(echo $result | sed -e 's/ /\" \"/g')\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [ $# -ne 2 ]; then\n       \
    \ echo \"Usage: total_match <list1> <list2>\"\n        return 1\n    fi\n    str1=$1\n\
    \    str2=$2\n    sum=0\n    for i in ${str1[@]}; do\n        sum=$((sum + ${#i}))\n\
    \    done\n    sum2=0\n    for i in ${str2[@]}; do\n        sum2=$((sum2 + ${#i}))\n\
    \    done\n    if [ $sum -eq $sum2 ]; then\n        echo ${str1[@]}\n    elif\
    \ [ $sum -lt $sum2 ]; then\n        echo ${str1[@]}\n    else\n        echo ${str2[@]}\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # What happens if we assign an empty\
    \ string to a variable?\n  # Will this do the right thing?\n  # What if both inputs\
    \ are empty?\n  # What if one input is empty?\n  local total_chars_first_input=\"\
    $(total_chars \"$1\")\"\n  local total_chars_second_input=\"$(total_chars \"$2\"\
    )\"\n  if [ $total_chars_first_input -lt $total_chars_second_input ]; then\n \
    \   echo \"$1\"\n  else\n    echo \"$2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0gvs8bsx.sh: line 24: total_chars: command not found

    /tmp/tmp0gvs8bsx.sh: line 25: total_chars: command not found

    /tmp/tmp0gvs8bsx.sh: line 24: total_chars: command not found

    /tmp/tmp0gvs8bsx.sh: line 25: total_chars: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Your code here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbscg_iru.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpbscg_iru.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\t\n\tlocal l1=\"$1\"\n\tlocal l2=\"\
    $2\"\n\tlocal -a l_l1\n\tlocal -a l_l2\n\tl_l1=(${l1})\n\tl_l2=(${l2})\n\tlocal\
    \ -i l1_count=0\n\tlocal -i l2_count=0\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal\
    \ -i c=0\n\tlocal -i d=0\n\t\n\tfor (( i=0; i<${#l_l1[@]}; i++ )) do\n\t\tfor\
    \ (( j=0; j<${#l_l1[$i]}; j++ )) do\n\t\t\tc=`expr ${l_l1[$i]:$j:1}`\n\t\t\tif\
    \ [[ $c -lt 65 || $c -gt 122 ]]; then\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\t\
    let l1_count+=1\n\t\t\tfi\n\t\tdone\n\tdone\n\t\n\tfor (( i=0; i<${#l_l2[@]};\
    \ i++ )) do\n\t\tfor (( j=0; j<${#l_l2[$i]}; j++ )) do\n\t\t\td=`expr ${l_l2[$i]:$j:1}`\n\
    \t\t\tif [[ $d -lt 65 || $d -gt 122 ]]; then\n\t\t\t\tcontinue\n\t\t\telse\n\t\
    \t\t\tlet l2_count+=1\n\t\t\tfi\n\t\tdone\n\tdone\n\t\n\tif [[ $l1_count -gt $l2_count\
    \ ]]; then\n\t\techo ${l_l2[@]}\n\telse\n\t\techo ${l_l1[@]}\n\tfi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  total_match_length \"$@\"\n  # return\
    \ the list with less characters\n  if [[ $1_le_$2 -gt 0 ]]; then\n    echo \"\
    $1\"\n  else\n    echo \"$2\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbg2umbo7.sh: line 20: total_match_length: command not found

    /tmp/tmpbg2umbo7.sh: line 20: total_match_length: command not found

    /tmp/tmpbg2umbo7.sh: line 22: [[: hi admin_le_hi hi: syntax error in expression
    (error token is "admin_le_hi hi")

    /tmp/tmpbg2umbo7.sh: line 20: total_match_length: command not found

    /tmp/tmpbg2umbo7.sh: line 22: [[: hi admin_le_hi hi admin project: syntax error
    in expression (error token is "admin_le_hi hi admin project")

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total_chars_in_list1=0\n    local -i total_chars_in_list2=0\n\
    \    local -i i=0\n\n    for (( i=0; i<${#list1[@]}; i++ )); do\n        total_chars_in_list1+=${#list1[$i]}\n\
    \    done\n\n    for (( i=0; i<${#list2[@]}; i++ )); do\n        total_chars_in_list2+=${#list2[$i]}\n\
    \    done\n\n    if (( total_chars_in_list1 <= total_chars_in_list2 )); then\n\
    \        printf \"\\\"%s\\\" \" \"${list1[@]}\"\n    else\n        printf \"\\\
    \"%s\\\" \" \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your code goes here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_e1l_qag.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmp_e1l_qag.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # lowercase both arguments and\
    \ replace spaces with newlines\n    # (the tr replaces the spaces with newlines,\
    \ and the echo sends an empty line)\n    local LIST1=$(echo \"$1\" | tr ' ' '\\\
    n' | tr 'A-Z' 'a-z' | cat - <(echo))\n    local LIST2=$(echo \"$2\" | tr ' ' '\\\
    n' | tr 'A-Z' 'a-z' | cat - <(echo))\n    local COUNT1=0\n    local COUNT2=0\n\
    \    # declare list1 as an array\n    local -a LIST1\n    # declare list2 as an\
    \ array\n    local -a LIST2\n    # replace newlines with spaces, but only if the\
    \ line is not empty\n    # the -s check for empty lines (reading from a variable)\n\
    \    LIST1=$(echo \"$LIST1\" | tr '\\n' ' ' | sed 's/\\(.*\\)\\([^ ]*\\)/\\1\"\
    \\2\"/g')\n    LIST2=$(echo \"$LIST2\" | tr '\\n' ' ' | sed 's/\\(.*\\)\\([^ ]*\\\
    )/\\1\"\\2\"/g')\n    # define list1 as an array, splitting on spaces\n    LIST1=($LIST1)\n\
    \    # define list2 as an array, splitting on spaces\n    LIST2=($LIST2)\n   \
    \ # calculate the total number of characters in the first list\n    COUNT1=$(for\
    \ STRING in \"${LIST1[@]}\"; do echo ${#STRING}; done | paste -sd+ - | bc)\n \
    \   # calculate the total number of characters in the second list\n    COUNT2=$(for\
    \ STRING in \"${LIST2[@]}\"; do echo ${#STRING}; done | paste -sd+ - | bc)\n \
    \   # if COUNT1 > COUNT2, return list2\n    if [ $COUNT1 -gt $COUNT2 ]; then\n\
    \        echo \"${LIST2[@]}\"\n    # if COUNT2 > COUNT1, return list1\n    elif\
    \ [ $COUNT2 -gt $COUNT1 ]; then\n        echo \"${LIST1[@]}\"\n    # otherwise,\
    \ return\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz0f0dlht.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmpz0f0dlht.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a a=($1) b=($2)\n    local\
    \ -i n=${#a[@]}\n    local -i m=${#b[@]}\n    local -i i j sum1 sum2\n    sum1=0;\
    \ for i in $(seq 0 $((n-1))); do\n        local l=${#a[$i]}\n        sum1=$((sum1+l))\n\
    \    done\n    sum2=0; for j in $(seq 0 $((m-1))); do\n        local l=${#b[$j]}\n\
    \        sum2=$((sum2+l))\n    done\n    if ((sum1<sum2)); then\n        echo\
    \ \"${a[@]}\"\n    elif ((sum1>sum2)); then\n        echo \"${b[@]}\"\n    else\n\
    \        echo \"${a[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # assume that $1 and $2 are the\
    \ same length.\n    # the output of 'wc -c' is exactly the same as the output\
    \ of 'echo $var | wc -c'\n    chars1=0\n    chars2=0\n    for word in $1; do\n\
    \        chars1=$((chars1 + $(echo $word | wc -c)))\n    done\n    for word in\
    \ $2; do\n        chars2=$((chars2 + $(echo $word | wc -c)))\n    done\n    if\
    \ [[ $chars1 -lt $chars2 ]]; then\n        echo $1\n    else\n        echo $2\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n   local a=$1 b=$2\n   (( ${#a} < ${#b}\
    \ )) && echo $a || echo $b\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  if [[ $# -ne 2 ]]; then\n    echo\
    \ \"Usage: $(basename $0) <space-separated list> <space-separated list>\"\n  \
    \  exit 1\n  fi\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_total=0\n\
    \  local list2_total=0\n  for word in ${list1}; do\n    (( list1_total += ${#word}\
    \ ))\n  done\n  for word in ${list2}; do\n    (( list2_total += ${#word} ))\n\
    \  done\n  if [[ ${list1_total} -lt ${list2_total} ]]; then\n    echo \"${list1}\"\
    \n  else\n    echo \"${list2}\"\n  fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal first_total=0\n\tlocal second_total=0\n\
    \tfor i in $1; do\n\t\tfirst_total=$((first_total + ${#i}))\n\tdone\n\tfor i in\
    \ $2; do\n\t\tsecond_total=$((second_total + ${#i}))\n\tdone\n\tif [[ $first_total\
    \ -lt $second_total ]]; then\n\t\techo \"$1\"\n\telse\n\t\techo \"$2\"\n\tfi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # declare -A arr\n  # a=(\"$@\")\n\
    \  # for ((i=0; i<$#; i++)); do\n  #   arr[$i]=${a[$i]}\n  # done\n  # echo ${arr[@]}\n\
    \  echo '[\"'${1// /'\", \"'}'\"]'\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    list1=$1\n    list2=$2\n    list1_sum=0\n\
    \    list2_sum=0\n    for el in $list1; do\n        list1_sum=$((list1_sum + ${#el}))\n\
    \    done\n    for el in $list2; do\n        list2_sum=$((list2_sum + ${#el}))\n\
    \    done\n    if [ $list1_sum -lt $list2_sum ]; then\n        echo $list1\n \
    \   else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # check for empty strings\n  if [\
    \ \"$1\" == \"\" ]; then\n    echo \"[$2]\"\n    return\n  fi\n  if [ \"$2\" ==\
    \ \"\" ]; then\n    echo \"[$1]\"\n    return\n  fi\n\n  # convert the lists to\
    \ arrays\n  local -n list1=($1)\n  local -n list2=($2)\n\n  # sums of chars in\
    \ each array\n  local sum1=0\n  local sum2=0\n\n  # iterate through each array\
    \ to get the sums\n  for i in \"${list1[@]}\"; do\n    # add the length of the\
    \ string to the sum\n    ((sum1+=${#i}))\n  done\n  for i in \"${list2[@]}\";\
    \ do\n    # add the length of the string to the sum\n    ((sum2+=${#i}))\n  done\n\
    \n  # check which array is smaller and return that array\n  if [ $sum1 -lt $sum2\
    \ ]; then\n    echo ${list1[@]}\n  else\n    echo ${list2[@]}\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Command substitution\n    # Single\
    \ quotes preserve the literal value of all characters within the quotes, with\
    \ the exception of '\n    # Double quotes preserve the literal value of all characters\
    \ within the quotes, with the exception of $, `, and \\\n    # syntax: $(command)\n\
    \    # If the command returns non-zero status, that status will be returned as\
    \ the exit status of the substitution.\n    list1_total=$( total_chars \"$1\"\
    \ )\n    list2_total=$( total_chars \"$2\" )\n    if [ \"$list1_total\" -gt \"\
    $list2_total\" ]; then\n        echo \"$2\"\n    else\n        echo \"$1\"\n \
    \   fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6eub68wz.sh: line 25: total_chars: command not found

    /tmp/tmp6eub68wz.sh: line 26: total_chars: command not found

    /tmp/tmp6eub68wz.sh: line 27: [: : integer expression expected

    /tmp/tmp6eub68wz.sh: line 25: total_chars: command not found

    /tmp/tmp6eub68wz.sh: line 26: total_chars: command not found

    /tmp/tmp6eub68wz.sh: line 27: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # TODO: Please write your solution\
    \ here\n    # To compare strings with characters, you can use a built-in method\
    \ in bash\n    # ${#str}\n    # to return the number of characters in string $str\n\
    \    # len1 = the number of chars in $1\n    # len2 = the number of chars in $2\n\
    \    # if len1 > len2 return $2, else return $1\n    numOfCharInA=${#1}\n    numOfCharInB=${#2}\n\
    \    if [ $numOfCharInA -gt $numOfCharInB ]; then\n        echo $2\n    else\n\
    \        echo $1\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local a=($1)\n    local b=($2)\n\
    \    total_a=0\n    total_b=0\n    for i in ${a[@]}; do\n        total_a=$(( total_a\
    \ + ${#i} ))\n    done\n    for i in ${b[@]}; do\n        total_b=$(( total_b\
    \ + ${#i} ))\n    done\n    if [ $total_a -lt $total_b ]; then\n        echo ${a[@]}\n\
    \    else\n        echo ${b[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local i x\n    for i in $1; do\n        (( sum1 += ${#i} ))\n    done\n \
    \   for i in $2; do\n        (( sum2 += ${#i} ))\n    done\n    if (( sum1 > sum2\
    \ )); then\n        echo $2\n    else\n        echo $1\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local first=$1\n    local second=$2\n\
    \    first_str_length=$(echo $first | wc -c)\n    second_str_length=$(echo $second\
    \ | wc -c)\n    echo $first\n    echo $second\n    echo $first_str_length\n  \
    \  echo $second_str_length\n    echo $first $second $first_str_length $second_str_length\n\
    \    if [[ $first_str_length -gt $second_str_length ]]; then\n        echo $second\n\
    \    else\n        echo $first\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    if [[ $# -ne 2 ]]; then\n     \
    \   echo \"error: total_match expects 2 arguments\"\n        return 1\n    fi\n\
    \    local -a list1=($1)\n    local -a list2=($2)\n    if [[ ${#list1[@]} -eq\
    \ 0 && ${#list2[@]} -eq 0 ]]; then\n        echo \"[]\"\n        return 0\n  \
    \  fi\n    local -a filtered1=()\n    local -a filtered2=()\n    local total_chars_in_list1=0\n\
    \    local total_chars_in_list2=0\n    for item in \"${list1[@]}\"; do\n     \
    \   local chars_in_item=${#item}\n        total_chars_in_list1=$((total_chars_in_list1\
    \ + chars_in_item))\n        filtered1+=(\"$item\")\n    done\n    for item in\
    \ \"${list2[@]}\"; do\n        local chars_in_item=${#item}\n        total_chars_in_list2=$((total_chars_in_list2\
    \ + chars_in_item))\n        filtered2+=(\"$item\")\n    done\n    if [[ $total_chars_in_list1\
    \ -lt $total_chars_in_list2 ]]; then\n        join_str \"${filtered1[@]}\"\n \
    \   elif [[ $total_chars_in_list1 -gt $total_chars_in_list2 ]]; then\n       \
    \ join_str \"${filtered2[@]}\"\n    else\n        join_str \"${filtered1[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Your code here\n    list1=$1\n\
    \    list2=$2\n    arr1=(\"$@\")\n    arr2=(\"$@\")\n    total1=0\n    total2=0\n\
    \    for i in \"${arr1[@]}\"\n    do\n        total1=$(( $total1 + ${#i} ))\n\
    \    done\n    for i in \"${arr2[@]}\"\n    do\n        total2=$(( $total2 + ${#i}\
    \ ))\n    done\n    if [ $total1 -gt $total2 ]\n    then\n        echo $list2\n\
    \    else\n        echo $list1\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -n arr1=$1\n  local -n arr2=$2\n\
    \  local total1=$(total ${arr1[@]})\n  local total2=$(total ${arr2[@]})\n  if\
    \ [[ $total1 -eq $total2 ]]; then\n    echo \"${arr1[@]}\"\n  elif [[ $total1\
    \ -lt $total2 ]]; then\n    echo \"${arr1[@]}\"\n  else\n    echo \"${arr2[@]}\"\
    \n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu0g8ru52.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpu0g8ru52.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpu0g8ru52.sh: line 22: total: command not found

    /tmp/tmpu0g8ru52.sh: line 23: total: command not found

    /tmp/tmpu0g8ru52.sh: line 20: local: `hi admin'': invalid variable name for name
    reference

    /tmp/tmpu0g8ru52.sh: line 21: local: `hi hi'': invalid variable name for name
    reference

    /tmp/tmpu0g8ru52.sh: line 22: total: command not found

    /tmp/tmpu0g8ru52.sh: line 23: total: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your code here\n    return\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # variable for the current count\
    \ of chars\n  # variable for the current list with the least number of chars\n\
    \  # foreach string in the first list\n    # foreach string in the second list\n\
    \      # add the length of current string to the count of chars\n    # update\
    \ the current list with the least number of chars\n    # if the current count\
    \ of chars is less than the current list\n      # update the current list with\
    \ the least number of chars\n  # return the current list with the least number\
    \ of chars\n  if [[ -z \"$1\" || -z \"$2\" ]]; then\n    echo -n \"[]\"\n    return\
    \ 0\n  fi\n  local total=0\n  local theList\n  for i in $1; do\n    for j in $2;\
    \ do\n      let total+=$(echo -n $j | wc -c)\n    done\n    theList=\"[$(echo\
    \ $2 | awk '{$1=$1;print}')]\"\n    if [[ $total -lt $(echo -n $theList | wc -c)\
    \ ]]; then\n      theList=\"[$(echo $2 | awk '{$1=$1;print}')]\"\n    fi\n  done\n\
    \  echo -n $theList\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    a=(\"$@\") # an array\n    echo\
    \ ${a[0]} ${a[1]}\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  [[ $list1 == \"\" ]] && { echo \"[]\"; return; }\n  [[ $list2 == \"\"\
    \ ]] && { echo \"[]\"; return; }\n  local list1_cnt=$(echo \"$list1\" | awk '{\
    \ c = 0; for (i = 1; i <= NF; i++) c += length($i); print c; }')\n  local list2_cnt=$(echo\
    \ \"$list2\" | awk '{ c = 0; for (i = 1; i <= NF; i++) c += length($i); print\
    \ c; }')\n  if [[ $list1_cnt -lt $list2_cnt ]]; then\n    local list=$list1\n\
    \  else\n    local list=$list2\n  fi\n  while IFS= read -r line; do\n    printf\
    \ \"\\\"%s\\\" \" \"$line\"\n  done <<< \"$list\"\n  echo\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  (( ${#1} < ${#2} )) && echo \"$1\"\
    \ || echo \"$2\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$(echo $1 | tr -d\
    \ \"\\\"\")\"\n    local list2=\"$(echo $2 | tr -d \"\\\"\")\"\n    local count1=\"\
    $(echo $list1 | awk '{print length}')\"\n    local count2=\"$(echo $list2 | awk\
    \ '{print length}')\"\n    if [ $count1 -lt $count2 ]; then\n        echo \"$1\"\
    \n    else\n        echo \"$2\"\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    [[ $# -ne 2 ]] && echo \"USAGE:\
    \ $0 list1 list2\" && exit 1\n    # write code here\n    count=$(printf \"$1\"\
    \ | wc -c)\n    count1=$(printf \"$2\" | wc -c)\n    if [[ \"$count\" -lt \"$count1\"\
    \ ]]; then\n      echo \"The first list is smaller\"\n    else\n      echo \"\
    The second list is smaller\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local ls=$(grep -o '\"' $1 | wc -l)\n\
    \  local ls2=$(grep -o '\"' $2 | wc -l)\n  local found_item=\n  for item in $1;\
    \ do\n    for item2 in $2; do\n      if [ \"$item\" == \"$item2\" ]; then\n  \
    \      found_item=1\n        break\n      fi\n    done\n    if [ -z \"$found_item\"\
    \ ]; then\n      ls2=$((ls2 + 2))\n    fi\n    found_item=\n  done\n  if [ $ls\
    \ -gt $ls2 ]; then\n    echo -n \"$1\"\n  else\n    echo -n \"$2\"\n  fi\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660023722
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    a=$(echo \"$1\" | sed -r 's/\\\
    s+/\\n/g' | wc -m)\n    b=$(echo \"$2\" | sed -r 's/\\s+/\\n/g' | wc -m)\n   \
    \ if [ $a -lt $b ]; then\n        echo \"$1\"\n    else\n        echo \"$2\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    declare -a lst1=(\"$@\")\n    declare\
    \ -a lst2=(\"$@\")\n    lst1=\"${lst1[0]}\"\n    lst2=\"${lst2[1]}\"\n    declare\
    \ -a strings1=()\n    declare -a strings2=()\n    declare -a str1=()\n    declare\
    \ -a str2=()\n    declare -a result=()\n    declare -i total1=0\n    declare -i\
    \ total2=0\n    read -ra strings1 <<< \"$lst1\"\n    read -ra strings2 <<< \"\
    $lst2\"\n    for i in \"${strings1[@]}\"; do\n        read -ra str1 <<< \"$i\"\
    \n        total1=$((total1 + ${#str1[@]}))\n    done\n    for i in \"${strings2[@]}\"\
    ; do\n        read -ra str2 <<< \"$i\"\n        total2=$((total2 + ${#str2[@]}))\n\
    \    done\n    if [ $total1 -lt $total2 ]; then\n        printf \"%s\\n\" \"${strings1[@]}\"\
    \n    elif [ $total1 -gt $total2 ]; then\n        printf \"%s\\n\" \"${strings2[@]}\"\
    \n    else\n        printf \"%s\\n\" \"${strings1[@]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_size=0\n    local list2_size=0\n    local str=''\n    local\
    \ output=''\n    for str in $list1; do\n        list1_size=$((list1_size + ${#str}))\n\
    \    done\n    for str in $list2; do\n        list2_size=$((list2_size + ${#str}))\n\
    \    done\n    if [[ $list1_size -lt $list2_size ]]; then\n        output=\"$list1\"\
    \n    elif [[ $list1_size -gt $list2_size ]]; then\n        output=\"$list2\"\n\
    \    else\n        output=\"$list1\"\n    fi\n    for str in $output; do\n   \
    \     echo -n '\"'\n        echo -n \"$str\"\n        echo -n '\" '\n    done\n\
    \    echo\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1_len=$(echo $1 | xargs\
    \ echo -n | wc -c)\n  local list2_len=$(echo $2 | xargs echo -n | wc -c)\n  if\
    \ [[ $list1_len -lt $list2_len ]]; then\n    echo $1\n  else\n    echo $2\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # your code goes here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpejgms7pl.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpejgms7pl.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal result\n\tlocal list1=($1)\n\
    \tlocal list2=($2)\n\tlocal sum1=0\n\tlocal sum2=0\n\tlocal sum=0\n\t\n\tfor s\
    \ in ${list1[@]}; do\n\t\tsum1=$((sum1 + ${#s}))\n\tdone\n\tfor s in ${list2[@]};\
    \ do\n\t\tsum2=$((sum2 + ${#s}))\n\tdone\n\tif [ $sum1 -gt $sum2 ]; then\n\t\t\
    echo ${list2[@]}\n\telse\n\t\techo ${list1[@]}\n\tfi\n}\n\ncandidate() {\n   \
    \ total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    total_match_help() {\n        local\
    \ N=0\n        for word in $1; do\n            N=$((N + ${#word}))\n        done\n\
    \        echo $N\n    }\n    local L1=$(total_match_help \"$1\")\n    local L2=$(total_match_help\
    \ \"$2\")\n    if [[ $L1 -eq $L2 ]]; then\n        echo $1\n    elif [[ $L1 -lt\
    \ $L2 ]]; then\n        echo $1\n    else\n        echo $2\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    len1=0\n    len2=0\n    for i in\
    \ $1; do\n        let len1=len1+${#i}\n    done\n    for i in $2; do\n       \
    \ let len2=len2+${#i}\n    done\n    if [ $len1 -gt $len2 ]; then\n        echo\
    \ $2\n    else\n        echo $1\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local size1=$(total_size \"$1\"\
    )\n    local size2=$(total_size \"$2\")\n    if [[ $size1 -lt $size2 ]]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeqjton0s.sh: line 20: total_size: command not found

    /tmp/tmpeqjton0s.sh: line 21: total_size: command not found

    /tmp/tmpeqjton0s.sh: line 20: total_size: command not found

    /tmp/tmpeqjton0s.sh: line 21: total_size: command not found

    /tmp/tmpeqjton0s.sh: line 20: total_size: command not found

    /tmp/tmpeqjton0s.sh: line 21: total_size: command not found

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # write your code here\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyr4gwvo8.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpyr4gwvo8.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660023717
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    list1=($1)\n    list2=($2)\n  \
    \  len1=0\n    len2=0\n    if [[ \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n \
    \       echo \"[]\"\n        return 0\n    fi\n    for i in ${list1[@]}; do\n\
    \        len1=$(($len1 + ${#i}))\n    done\n    for i in ${list2[@]}; do\n   \
    \     len2=$(($len2 + ${#i}))\n    done\n    if [[ $len1 -gt $len2 ]]; then\n\
    \        echo ${list2[@]}\n    else\n        echo ${list1[@]}\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660023717

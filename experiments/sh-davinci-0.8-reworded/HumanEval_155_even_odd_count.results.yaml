language: sh
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local digit\n\n  for digit in $(digits $1); do\n    if [[ $((digit % 2)) -eq\
    \ 0 ]]; then\n      ((even_count++))\n    else\n      ((odd_count++))\n    fi\n\
    \  done\n\n  printf \"[%s, %s]\" \"$even_count\" \"$odd_count\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpinkz8zb4.sh: line 15: digits: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # Extract the digits of the input\n\
    \    local digits=$(echo \"$1\" | grep -o '.')\n    # Count the odd digits\n \
    \   local odd_digits=$(echo \"$digits\" | grep -v '[0-9][02468]')\n    local odd_count=$(echo\
    \ -n \"$odd_digits\" | wc -m)\n    # Count the even digits\n    local even_digits=$(echo\
    \ \"$digits\" | grep -v '[0-9][13579]')\n    local even_count=$(echo -n \"$even_digits\"\
    \ | wc -m)\n    # Return the two values\n    echo \"[\\\"$even_count\\\", \\\"\
    $odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local i j\n    j=\"$1\"\n    if\
    \ [ $j -lt 0 ]; then\n        j=\"${j:1}\"\n    fi\n    i=0\n    while [ $j -gt\
    \ 0 ]; do\n        if [ $((j % 10)) -gt 0 ] && [ $((j % 10)) -lt 9 ]; then\n \
    \           i=$((i + 1))\n        fi\n        j=$((j / 10))\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if (( $1 > 0 )); then\n    eval \"\
    echo \\\"[\\\"\\\"$(($1 % 2))\\\"\\\", \\\"\\\"$(($1 / 2))\\\"\\\"]\\\"\"\n  elif\
    \ (( $1 < 0 )); then\n    eval \"echo \\\"[\\\"\\\"$((-$1 % 2))\\\"\\\", \\\"\\\
    \"$((-$1 / 2))\\\"\\\"]\\\"\"\n  else\n    echo \"[\\\"0\\\", \\\"0\\\"]\"\n \
    \ fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=\"$1\"\n    num=\"${num//[!0-9]/}\"\
    \n    local even_cnt=0\n    local odd_cnt=0\n    for (( i=0; i<${#num}; i++ ));\
    \ do\n        if (( ${num:$i:1} % 2 == 0 )); then\n            (( even_cnt++ ))\n\
    \        else\n            (( odd_cnt++ ))\n        fi\n    done\n    echo \"\
    [\\\"$even_cnt\\\", \\\"$odd_cnt\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  python <<EOF\nnumber = int($1)\n\
    count_even = 0\ncount_odd = 0\n\nwhile number > 0:\n  number, remainder = divmod(number,\
    \ 10)\n  if remainder % 2 == 0:\n    count_even += 1\n  else:\n    count_odd +=\
    \ 1\n\nprint \"[\"'\"%d\"'\", '\"%d\"'\"]\" % (count_even, count_odd)\nEOF\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "  File \"<stdin>\", line 12\n    print \"[\"'\"%d\"'\", '\"%d\"'\"]\" %\
    \ (count_even, count_odd)\n                            ^\nSyntaxError: invalid\
    \ syntax\n"
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=\"$1\"\n    local\
    \ odd=0\n    local even=0\n    local digit\n    local result\n    if [[ \"$number\"\
    \ == \"\" ]]; then\n        echo \"[]\"\n        return\n    fi\n    for (( i=0;\
    \ i<${#number}; i++ )); do\n        digit=\"${number:$i:1}\"\n        if [[ \"\
    $digit\" == \"-\" ]]; then\n            continue\n        fi\n        if (( digit\
    \ % 2 == 0 )); then\n            even=$(( even + 1 ))\n        else\n        \
    \    odd=$(( odd + 1 ))\n        fi\n    done\n    result=\"[\\\"$even\\\", \\\
    \"$odd\\\"]\"\n    echo \"$result\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local len=${#num}\n\
    \  local even_cnt=0\n  local odd_cnt=0\n  local i\n  for ((i=0; i<len; i++));\
    \ do\n    local digit=$(expr substr \"$num\" $((i+1)) 1)\n    if [[ $((digit %\
    \ 2)) -eq 0 ]]; then\n      even_cnt=$((even_cnt + 1))\n    else\n      odd_cnt=$((odd_cnt\
    \ + 1))\n    fi\n  done\n  echo \"[\\\"$even_cnt\\\", \\\"$odd_cnt\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    if [ $number\
    \ -lt 0 ]; then\n        number=$((number * -1))\n    fi\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    while [ $number -gt 0 ]; do\n   \
    \     digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n    \
    \        even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    printf \"\
    ['\"%s\"', '\"%s\"']\" \"$even_count\" \"$odd_count\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ ! $1 =~ ^-?[0-9]+$ ]]; then\n\
    \    echo -e \"\\nError: '$1' is not an integer.\\n\" >&2\n    exit 1\n  fi\n\
    \  local i odd=0 even=0\n  while ((i++<${#1})); do\n    ((${1:i-1:1}%2)) && ((odd++))\
    \ || ((even++))\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  echo \"$1\" | awk '{\n    sum_odd=0;\n\
    \    sum_even=0;\n    for (i=1; i<=length($1); i++) {\n      digit=substr($1,\
    \ i, 1);\n      if (digit % 2 == 0) {\n        sum_even+=1;\n      } else {\n\
    \        sum_odd+=1;\n      }\n    }\n    print(\"[\\\"\" sum_even \"\\\", \\\"\
    \" sum_odd \"\\\"]\");\n  }'\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even_count=0\n\
    \  local odd_count=0\n  while [ $num -ne 0 ]; do\n    digit=$((num % 10))\n  \
    \  num=$((num / 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n  done\n  echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local char\n  for ((i=0; i<${#1}; i++)); do\n    char=${1:$i:1}\n    if (($char\
    \ % 2 == 0)); then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  python -c \"\neven_count = 0\nodd_count\
    \ = 0\nfor c in '$1':\n  if c.isdigit():\n    if int(c) % 2 == 0:\n      even_count\
    \ += 1\n    else:\n      odd_count += 1\nprint(even_count, odd_count)\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  even_count=0\n  odd_count=0\n  #\
    \ BEGIN SOLUTION #\n  # END SOLUTION #\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local integer=$1\n  if [[ $integer\
    \ == \"-\"* ]]; then\n    integer=${integer:1}\n  fi\n  local integer_length=${#integer}\n\
    \  local even_count=0\n  local odd_count=0\n  for ((i=0; i<integer_length; i++));\
    \ do\n    digit=${integer:i:1}\n    if [[ $((digit % 2)) == 0 ]]; then\n     \
    \ even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count + 1))\n\
    \    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=\"$1\"\n  local even_num=0\n\
    \  local odd_num=0\n  for digit in $(echo $num | sed 's/-//g'); do\n    if [ $(($digit\
    \ % 2)) == 0 ]; then\n      ((even_num++))\n    else\n      ((odd_num++))\n  \
    \  fi\n  done\n  echo \"[\\\"$even_num\\\", \\\"$odd_num\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [ $# -ne 1 ]; then\n    echo \"\
    Usage: $(basename \"$0\") num\" >&2\n    return 1\n  fi\n\n  local number\n  number=\"\
    $1\"\n\n  # Check if number is negative, then change it to positive\n  if [ ${number:0:1}\
    \ == \"-\" ]; then\n    number=\"${number:1}\"\n  fi\n\n  local odd=0\n  local\
    \ even=0\n  for ((i=0; i<${#number}; i++)); do\n    if (($((10#${number:$i:1}))\
    \ % 2 == 0)); then\n      even=$((even + 1))\n    else\n      odd=$((odd + 1))\n\
    \    fi\n  done\n\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local integer=\"$1\"\n  local even=0\n\
    \  local odd=0\n  if [[ $integer =~ ^-[0-9]+$ ]]; then\n    integer=${integer:1}\n\
    \  fi\n  for ((index=0; index<${#integer}; index++)); do\n    if ((integer[index]\
    \ % 2 == 0)); then\n      ((even++))\n    else\n      ((odd++))\n    fi\n  done\n\
    \  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even_count=0\n\
    \    local odd_count=0\n    while [ $n -ne 0 ]; do\n        local remainder=$((n\
    \ % 10))\n        if [ $((remainder % 2)) -eq 0 ]; then\n            ((even_count++))\n\
    \        else\n            ((odd_count++))\n        fi\n        n=$((n / 10))\n\
    \    done\n    echo \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ ! \"$1\" =~ ^-?[0-9]+$ ]];\
    \ then\n    echo \"[\\\"\\\"]\"\n    return\n  fi\n  __EVEN=0\n  __ODD=0\n  for\
    \ ((i=0; i<${#1}; i++)); do\n    __DIGIT=${1:$i:1}\n    __REST=$((__DIGIT % 2))\n\
    \    if [[ $__REST -eq 0 ]]; then\n      __EVEN=$((__EVEN + 1))\n    else\n  \
    \    __ODD=$((__ODD + 1))\n    fi\n  done\n  echo \"[\\\"$__EVEN\\\", \\\"$__ODD\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ \"$1\" =~ ^-?[0-9]+$ ]]; then\n\
    \    local even=0\n    local odd=0\n    for ((i=0; i<${#1}; i++)); do\n      if\
    \ [[ \"${1:$i:1}\" =~ ^[02468]$ ]]; then\n        ((even++))\n      else\n   \
    \     ((odd++))\n      fi\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\
    \n  else\n    echo \"[\\\"error\\\", \\\"error\\\"]\"\n  fi\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \    local result=\"[\"\n    local even_count=0\n    local odd_count=0\n    local\
    \ number=\"${1//[-]/}\"\n\n    while [[ $number -gt 0 ]]; do\n      local digit=$((number\
    \ % 10))\n      ((number /= 10))\n      if [[ $((digit % 2)) -eq 0 ]]; then\n\
    \        ((even_count++))\n      else\n        ((odd_count++))\n      fi\n   \
    \ done\n\n    result+=\"\\\"${even_count}\\\"\"\n    result+=\", \"\n    result+=\"\
    \\\"${odd_count}\\\"\"\n    result+=\"]\"\n    echo \"${result}\"\n  else\n  \
    \  echo \"invalid\"\n  fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_cnt=0\n    local odd_cnt=0\n\
    \    local digits_list=$(echo \"$1\" | grep -o .)\n    for digit in $digits_list;\
    \ do\n        ((digit % 2 == 0)) && ((even_cnt++)) || ((odd_cnt++))\n    done\n\
    \    echo \"[\\\"$even_cnt\\\", \\\"$odd_cnt\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  even_list=();\n  odd_list=();\n \
    \ for i in $(echo \"$1\" | fold -w1); do\n    test $(($i % 2)) -eq 0 && even_list+=(\"\
    $i\") || odd_list+=(\"$i\");\n  done;\n  echo \"[\\\"${#even_list[@]}\\\" , \\\
    \"${#odd_list[@]}\\\"]\";\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local input=${1:?Error: invalid argument}\n\
    \  local odd_count=0\n  local even_count=0\n  for ((i=0; i<${#input}; i++)); do\n\
    \    if (( input[i] % 2 == 0 )); then\n      even_count++\n    else\n      odd_count++\n\
    \    fi\n  done\n  echo '[\\\"'$even_count'\\\", \\\"'$odd_count'\\\"]'\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps1_02ers.sh: line 18: odd_count++: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [ $# -ne 1 ]; then\n    return\n\
    \  fi\n  even_odd_count_internal \"$1\" | python -c 'import sys; print sys.stdin.read().replace(\"\
    \\n\", \", \")'\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0_hv4nvt.sh: line 14: even_odd_count_internal: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    _even_odd_count \"$1\" | python3\
    \ -c 'import sys; d=sys.stdin.read(); print(d)'\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpq07_mllg.sh: line 11: _even_odd_count: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    # Convert the given number to absolute value\n    local number=${1#-}\n \
    \   # Remove leading zeros\n    number=${number#0}\n    while [[ -n $number ]];\
    \ do\n        # Get the first digit of the number\n        local digit=${number:0:1}\n\
    \        # remove the first digit from the number\n        number=${number:1}\n\
    \        if [[ $((digit % 2)) -eq 0 ]]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \    done\n    # echo two integers in list format\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local -i num=$1\n    while [ $num -ne 0 ]; do\n        local lastdigit=$((\
    \ num % 10 ))\n        num=$(( num / 10 ))\n        if [ $(( lastdigit % 2 ))\
    \ -eq 0 ]; then\n            (( even++ ))\n        else\n            (( odd++\
    \ ))\n        fi\n    done\n    echo \"['\"$even\"', '\"$odd\"']\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for i in ${1//[-]/}; do\n        if [ $(($i % 2)) -eq 0 ]; then\n       \
    \     ((even_count++))\n        else\n            ((odd_count++))\n        fi\n\
    \    done\n    echo \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ ! $1 =~ ^[+-]?[0-9]+$ ]];\
    \ then\n        echo \"error\"\n        return 1\n    fi\n    even=0\n    odd=0\n\
    \    while [[ $1 -ne 0 ]]; do\n        if [[ $(( $1 % 10 % 2 )) -eq 0 ]]; then\n\
    \            even=$(( $even + 1 ))\n        else\n            odd=$(( $odd + 1\
    \ ))\n        fi\n        # use length to find number of digits\n        if [[\
    \ $(echo $1 | wc -m) -ge 2 ]]; then\n            # Remove last digit\n       \
    \     # Use 10# to convert to integer\n            # Note: +10 is needed to allow\
    \ -10\n            # This ensures that we get -1 rather than -10 when -10 is divided\
    \ by 10\n            let \"1 = (10#$1 + 10) / 10\"\n        else\n           \
    \ # If num is 1 digit, set num to 0\n            let \"1 = 0\"\n        fi\n \
    \   done\n    # Output is a string that is the list of the number of even digits\
    \ and number of odd digits\n    # Example:\n    # ['\"1\"', '\"1\"']\n    echo\
    \ \"['\"$even\"', '\"$odd\"']\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660022920
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    echo $1 | sed -e 's/-//g' | grep\
    \ -o [0-9] | grep -cE '([02468])|[13579]'\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \        echo \"['\\\"$(echo $1 | sed 's/[13579]//g' | wc -m | sed 's/ //g')\\\
    \"', '\\\"$(echo $1 | sed 's/[02468]//g' | wc -m | sed 's/ //g')\\\"']\"\n   \
    \ else\n        return 1\n    fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count odd_count input\n\
    \  input=$1\n  even_count=0\n  odd_count=0\n  while [[ \"$input\" != 0 ]]; do\n\
    \    # last digit of input\n    local rem=$(( input % 10 ))\n    if [[ \"$rem\"\
    \ -eq 0 ]] || [[ \"$rem\" -eq 2 ]] || [[ \"$rem\" -eq 4 ]] || [[ \"$rem\" -eq\
    \ 6 ]] || [[ \"$rem\" -eq 8 ]]; then\n      even_count=$(( even_count + 1 ))\n\
    \    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n    input=$(( input /\
    \ 10 ))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    number=$1\n    if [ $number -lt\
    \ 0 ]; then\n        number=$((-1 * number))\n    fi\n    if [ $number -gt 0 ];\
    \ then\n        even_count=0\n        odd_count=0\n        while [ $number -gt\
    \ 0 ]; do\n            digit=$((number % 10))\n            if [ $((digit % 2))\
    \ -eq 0 ]; then\n                even_count=$((even_count + 1))\n            else\n\
    \                odd_count=$((odd_count + 1))\n            fi\n            number=$((number\
    \ / 10))\n        done\n        echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"\
    ]\"\n    else\n        echo \"Please provide a valid number\"\n    fi\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  number=$1\n  evens=0\n  odds=0\n\
    \  for (( i=0; i<${#number}; i++ )); do\n    digit=${number:$i:1}\n    is_even\
    \ $digit\n    (( $? == 0 )) && (( evens+=1 )) || (( odds+=1 ))\n  done\n  echo\
    \ \"[$evens, $odds]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9yc9nl39.sh: line 16: is_even: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    (echo '[' $(grep -o '[02468]' <<<\
    \ \"$1\" | wc -l) ', ' \\\n        $(grep -o '[13579]' <<< \"$1\" | wc -l) ']')\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \    local even=0\n    local odd=0\n    for i in $(seq 0 $((${#1} - 1))); do\n\
    \      if [[ $(((10 ** $i) % 2)) -eq 0 ]]; then\n        even=$((even + 1))\n\
    \      else\n        odd=$((odd + 1))\n      fi\n    done\n    echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n  else\n    echo \"[]\"\n  fi\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ \"${1:0:1}\" == \"-\" ]]; then\n\
    \    sign=\"-\";\n    num_str=\"${1:1}\";\n  else\n    sign=\"\";\n    num_str=\"\
    ${1}\";\n  fi\n\n  even_count=0;\n  odd_count=0;\n  for ((i=0; i<${#num_str};\
    \ i++)); do\n    digit=\"${num_str:$i:1}\";\n    if ((digit % 2 == 0)); then\n\
    \      ((even_count++));\n    else\n      ((odd_count++));\n    fi\n  done\n\n\
    \  echo \"[\\\"${sign}${even_count}\\\", \\\"${sign}${odd_count}\\\"]\";\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  declare -i even=0 odd=0\n  while\
    \ (( $1 )); do\n    if (( $1 % 2 )); then\n      odd+=1\n    else\n      even+=1\n\
    \    fi\n    1=$(( $1 / 10 ))\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=30 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660022920
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local integer=\"$1\"\n  local even_count=$(($(echo\
    \ \"$integer\" | sed 's/[02468]//g' | wc -m)-1))\n  local odd_count=$(($(echo\
    \ \"$integer\" | sed 's/[13579]//g' | wc -m)-1))\n  local arr=(\"$even_count\"\
    \ \"$odd_count\")\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=$(echo \"$1\" |\
    \ sed 's/[13579]//g' | wc -c)\n  local odd_count=$(echo \"$1\" | sed 's/[02468]//g'\
    \ | wc -c)\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if ! [[ $1 =~ ^\\-?[0-9]+$ ]]; then\n\
    \    return\n  fi\n  local counter\n  counter=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    digit=${1:$i:1}\n    if (( digit % 2 == 0 )); then\n      counter=$((counter\
    \ + 1))\n    fi\n  done\n  echo \"[\\\"$counter\\\", \\\"$(( ${#1} - counter ))\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local lst=\"\"\
    \n    local even=0\n    local odd=0\n    for (( i=0; i<${#num}; i++ )); do\n \
    \       local chr=${num:$i:1}\n        if [[ $chr =~ [0-9] ]]; then\n        \
    \    if [[ $((chr%2)) -eq 0 ]]; then\n                even=$((even+1))\n     \
    \       else\n                odd=$((odd+1))\n            fi\n        fi\n   \
    \ done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local j=0\n  for i in $(echo \"$1\" | grep -oE \"[0-9]+\"); do\n    if [ $(($i\
    \ % 2)) -eq 0 ]; then\n      even_count=$(($even_count + 1))\n    else\n     \
    \ odd_count=$(($odd_count + 1))\n    fi\n  done\n  echo \"['\"$even_count\"',\
    \ '\"$odd_count\"']\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  EVEN_COUNT=0\n  ODD_COUNT=0\n  for\
    \ i in $(printf \"%s\" \"$1\" | sed 's/-//g' | fold -w1); do\n    if [ $(printf\
    \ \"%s\" \"$i\" | grep -oP \"\\d+\" | perl -E 'say int(<> % 2)') -eq 0 ]; then\n\
    \      ((EVEN_COUNT++))\n    else\n      ((ODD_COUNT++))\n    fi\n  done\n  printf\
    \ '[\"%s\", \"%s\"]' \"$EVEN_COUNT\" \"$ODD_COUNT\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local integer=$1\n\n  if [[ $integer\
    \ =~ ^-?[0-9]+$ ]]; then\n    local even_count=$(sed -E 's/[13579]//g' <<< $integer\
    \ | grep -o '' | wc -l)\n    local odd_count=$(sed -E 's/[02468]//g' <<< $integer\
    \ | grep -o '' | wc -l)\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\
    \n  else\n    echo \"[\\\"0\\\", \\\"0\\\"]\"\n  fi\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [ \"$1\" -lt 0 ]; then\n   \
    \     NUMBER=${1#-}\n    else\n        NUMBER=$1\n    fi\n    local even=0\n \
    \   local odd=0\n    while [ \"$NUMBER\" -gt 0 ]; do\n        digit=$((NUMBER\
    \ % 10))\n        NUMBER=$((NUMBER / 10))\n        if [ \"$digit\" -eq 0 ] ||\
    \ [ \"$digit\" -eq 2 ] || [ \"$digit\" -eq 4 ] || [ \"$digit\" -eq 6 ] || [ \"\
    $digit\" -eq 8 ]; then\n            even=$((even + 1))\n        else\n       \
    \     odd=$((odd + 1))\n        fi\n    done\n    echo \"[\\\"$even\\\", \\\"\
    $odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=\"$1\"\n    local even\n\
    \    local odd\n    local digits\n    even=0\n    odd=0\n    digits=$(echo \"\
    $num\" | sed -e 's/[-]//g' | sed -e 's/[^0-9]//g')\n    for i in $(seq 1 ${#digits});\
    \ do\n        if [ $(expr $i % 2) -eq 0 ]; then\n            even=$(expr $even\
    \ + 1)\n        else\n            odd=$(expr $odd + 1)\n        fi\n    done\n\
    \    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  echo $1 | egrep -o '([02468]|[13579])'\
    \ | egrep -c '([02468])'\n  echo $1 | egrep -o '([02468]|[13579])' | egrep -c\
    \ '([13579])'\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # if [ $# -ne 1 ]; then\n  #   echo\
    \ 'even_odd_count got the wrong number of arguments'\n  #   exit 1\n  # fi\n \
    \ local -r result=$(echo \"$1\" | sed 's/\\-//g' | grep -oE '[02468]|[13579]'\
    \ | awk '{c[\"Even\"]++;c[\"Odd\"]++}END{for(x in c)print c[x]}')\n  echo \"[\\\
    \"$(echo \"$result\" | awk 'NR==1')\\\", \\\"$(echo \"$result\" | awk 'NR==2')\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i number=$1\n  local -i even_count=0\n\
    \  local -i odd_count=0\n  while ((number>0)); do\n    local -i digit=number%10\n\
    \    if ((digit%2==0)); then\n      even_count=$((even_count+1))\n    else\n \
    \     odd_count=$((odd_count+1))\n    fi\n    number=$((number/10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  evens=0\n  odds=0\n  for char in\
    \ $(echo -n \"$1\" | fold -w1); do\n    (( char % 2 == 0 )) && ((evens++)) ||\
    \ ((odds++))\n  done\n  evens=$(echo -n $evens | xargs)\n  odds=$(echo -n $odds\
    \ | xargs)\n  echo \"[$evens, $odds]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  if\
    \ [[ -z $1 ]]; then\n    echo \"Usage: $FUNCNAME <integer>\"\n    return\n  fi\n\
    \  for i in $(seq 0 $((${#1} - 1))); do\n    digit=${1:$i:1}\n    if [[ $digit\
    \ =~ [02468] ]]; then\n      (( even++ ))\n    else\n      (( odd++ ))\n    fi\n\
    \  done\n  echo -n \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n   \
    \ even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\")\
    \ = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count odd_count\n  \
    \  even_count=0\n    odd_count=0\n    for i in $(digits $1); do\n        if [\
    \ $(($i % 2)) -eq 0 ]; then\n            ((even_count++))\n        else\n    \
    \        ((odd_count++))\n        fi\n    done\n    echo \"[\\\"$even_count\\\"\
    , \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy_gna235.sh: line 14: digits: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=0\n    local m=0\n    local\
    \ r\n    local s=${1//-/}\n    local len=${#s}\n    local i=0\n    while (( i\
    \ < len )); do\n        r=${s:$i:1}\n        if (( r%2 == 0 )); then\n       \
    \     (( n++ ))\n        else\n            (( m++ ))\n        fi\n        (( i++\
    \ ))\n    done\n    echo \"[\\\"$n\\\", \\\"$m\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ str=$1\n  for (( i=0; i<${#str}; i++ )); do\n    local digit=${str:$i:1}\n \
    \   if [[ $digit =~ [^0-9] ]]; then\n      continue\n    fi\n    if (( digit %\
    \ 2 == 0 )); then\n      even=$((even + 1))\n    else\n      odd=$((odd + 1))\n\
    \    fi\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local i\n  for ((i=0; i<${#1}; i++)); do\n    local c=${1:$i:1}\n    if [[\
    \ $(is_even \"$c\") == \"true\" ]]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n  done\n  echo \"[\\\"\
    ${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt6avfrbh.sh: line 16: is_even: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even_count=0\n\
    \  local odd_count=0\n  while [[ ${num} -ne 0 ]]; do\n    if [[ $((${num} % 10))\
    \ -ne 0 ]]; then\n      local digit=$((${num} % 10))\n      if [[ $((${digit}\
    \ % 2)) -eq 0 ]]; then\n        even_count=$((${even_count} + 1))\n      else\n\
    \        odd_count=$((${odd_count} + 1))\n      fi\n    fi\n    num=$((${num}\
    \ / 10))\n  done\n  echo \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -r number=\"$1\"\n    local\
    \ even_count=0\n    local odd_count=0\n    while read -r digit; do\n        if\
    \ [[ $((digit % 2)) -eq 0 ]]; then\n            even_count=$((even_count + 1))\n\
    \        else\n            odd_count=$((odd_count + 1))\n        fi\n    done\
    \ < <(echo \"$number\" | grep -o \"[0-9]\")\n    echo \"[\\\"$even_count\\\",\
    \ \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    even_count=$(echo \"$1\" | sed\
    \ 's/[^[:digit:]]//g' | grep -o '0\\|2\\|4\\|6\\|8' | wc -l)\n    odd_count=$(echo\
    \ \"$1\" | sed 's/[^[:digit:]]//g' | grep -o '1\\|3\\|5\\|7\\|9' | wc -l)\n  \
    \  echo -e \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        # if the current number is even\n\
    \        if (( ${1:$i:1} % 2 == 0 )); then\n            (( even++ ))\n       \
    \ else\n            (( odd++ ))\n        fi\n    done\n    echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [ -z \"$1\" ]; then\n    echo\
    \ \"[0, 0]\"\n    return\n  fi\n  local even=0\n  local odd=0\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    if [ $(( ${1:$i:1} % 2 )) -eq 0 ]; then\n      even=$(( even\
    \ + 1 ))\n    else\n      odd=$(( odd + 1 ))\n    fi\n  done\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_numbers=0\n    local\
    \ odd_numbers=0\n    for i in $(echo \"$1\" | grep -o \"[0-9]\"); do\n       \
    \ if [ $(($i % 2)) -eq 0 ]; then\n            ((even_numbers++))\n        else\n\
    \            ((odd_numbers++))\n        fi\n    done\n    echo \"['\"$even_numbers\"\
    ', '\"$odd_numbers\"']\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=\"0\"\n  local odd=\"\
    0\"\n  if [ -z \"$1\" ]; then\n    printf \"[]\\n\"\n    return 0\n  fi\n  for\
    \ c in $(sed 's/^-//' <<< \"$1\"); do\n    if [ \"$((c % 2))\" -eq \"0\" ]; then\n\
    \      even=\"$((even + 1))\"\n    else\n      odd=\"$((odd + 1))\"\n    fi\n\
    \  done\n  printf \"[\\\"%s\\\", \\\"%s\\\"]\\n\" \"$even\" \"$odd\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local N=\"$1\"\n    local str=$(python\
    \ -c \"print(abs($N))\")\n    local even=0\n    local odd=0\n    for ((i=0; i<${#str};\
    \ i++)); do\n        local c=\"${str:$i:1}\"\n        if [[ $((c % 2)) -eq 0 ]];\
    \ then\n            even=$((even + 1))\n        else\n            odd=$((odd +\
    \ 1))\n        fi\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local r\n  if ! r=$(echo \"$1\" |\
    \ sed 's/[0-9-]//g'); then\n    echo \"error: input: $1 is not an integer!\" >&2\n\
    \    return 2\n  fi\n  if [ \"$r\" != \"\" ]; then\n    echo \"error: input: $1\
    \ is not an integer!\" >&2\n    return 2\n  fi\n  local output=$(echo \"$1\" |\
    \ awk '{a=length($0); if(a==0){even=0;odd=0}else{even=gsub(/[02468]/,\"\");odd=gsub(/[13579]/,\"\
    \")}}END{print even \" \" odd}')\n  local even\n  local odd\n  even=$(echo \"\
    $output\" | awk '{print $1}')\n  odd=$(echo \"$output\" | awk '{print $2}')\n\
    \  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=\"$1\"\n  local even=0\n\
    \  local odd=0\n  local length=${#number}\n  for ((i=0; i<length; i++)); do\n\
    \    digit=\"${number:$i:1}\"\n    if [[ \"$digit\" == \"-\" ]]; then\n      continue\n\
    \    fi\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even=$((even + 1))\n \
    \   else\n      odd=$((odd + 1))\n    fi\n  done\n  echo \"[\\\"$even\\\", \\\"\
    $odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local x=$1\n    while [ $x -ne 0 ]; do\n        if [ $((x % 2)) -eq 0 ];\
    \ then\n            ((even++))\n        else\n            ((odd++))\n        fi\n\
    \        x=$((x / 10))\n    done\n    echo \"['\"$even\"', '\"$odd\"']\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  even_count=0\n  odd_count=0\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if ! [ $digit -eq 0 ];\
    \ then\n      if ! (( $digit % 2 )); then\n        (( even_count += 1 ))\n   \
    \   else\n        (( odd_count += 1 ))\n      fi\n    fi\n  done\n  echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # sanitize input\n  # TODO\n\n  #\
    \ split digits\n  declare -a digits\n  digits=($(echo $1 | grep -o .))\n\n  #\
    \ count even and odd\n  local even=0\n  local odd=0\n  for digit in \"${digits[@]}\"\
    ; do\n    if (( digit % 2 == 0 )); then\n      (( even++ ))\n    else\n      ((\
    \ odd++ ))\n    fi\n  done\n\n  # return values\n  echo \"[\\\"$even\\\", \\\"\
    $odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    echo \"$1\" | grep -oE '[13579]'\
    \ | wc -l\n    echo \"$1\" | grep -oE '[24680]' | wc -l\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 0
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  echo $(echo $1 | grep -o -E \"[02468]\"\
    \ | wc -l) $(echo $1 | grep -o -E \"[13579]\" | wc -l)\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  echo $1 | grep -E -o \"[02468]\"\
    \ | wc -l\n  echo $1 | grep -E -o \"[13579]\" | wc -l\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # local str=\"$(echo $1 | tr -cd\
    \ '0-9')\"\n    local str=\"$1\"\n    local even=$(echo ${str} | grep -o '[02468]'\
    \ | wc -l)\n    local odd=$(echo ${str} | grep -o '[13579]' | wc -l)\n    echo\
    \ \"[\\\"${even}\\\", \\\"${odd}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  num_of_even_digits=$(printf \"%s\"\
    \ \"$1\" | grep -o \"[02468]\" | wc -l)\n  num_of_odd_digits=$(printf \"%s\" \"\
    $1\" | grep -o \"[13579]\" | wc -l)\n  printf \"[\\\"%s\\\", \\\"%s\\\"]\" \"\
    $num_of_even_digits\" \"$num_of_odd_digits\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local count_even=0\n    local count_odd=0\n\
    \    for digit in $(echo $1 | tr ' ' '\\n' | tr -d '-'); do\n        if (( digit\
    \ % 2 == 0 )); then\n            count_even=$((count_even + 1))\n        else\n\
    \            count_odd=$((count_odd + 1))\n        fi\n    done\n    echo \"[\\\
    \"$count_even\\\", \\\"$count_odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # TODO\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa1al0r1f.sh: line 12: syntax error near unexpected token `}''

    /tmp/tmpa1al0r1f.sh: line 12: `}''

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    echo $1 | awk '{\n        odd=0;\n\
    \        even=0;\n        for (i=1; i<=length($1); i++) {\n            if (substr($1,\
    \ i, 1) % 2 == 0) {\n                even++;\n            } else {\n         \
    \       odd++;\n            }\n        }\n        print \"[\\\"\" even \"\\\"\
    , \\\"\" odd \"\\\"]\";\n    }'\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [ $# -ne 1 ]; then\n    echo 'Error:\
    \ even_odd_count: invalid number of arguments' >&2\n    exit 1\n  fi\n  local\
    \ n=$1\n  local n_abs=$((n >= 0 ? n : -n))\n  local even_count=0\n  local odd_count=0\n\
    \  while [ $n_abs -gt 0 ]; do\n    local d=$((n_abs % 10))\n    if [ $((d % 2))\
    \ -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    n_abs=$((n_abs / 10))\n  done\n  echo \"[\\\"${even_count}\\\
    \", \\\"${odd_count}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    num=\"$1\"\n    IFS=''\n    count_even=0\n\
    \    count_odd=0\n    for c in $(echo \"$num\" | egrep -o '.{1}'); do\n      \
    \  if [ $((c % 2)) -eq 0 ]; then\n            ((count_even++))\n        else\n\
    \            ((count_odd++))\n        fi\n    done\n    printf '[%s, %s]' $count_even\
    \ $count_odd\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  v=$(echo ${1:-0} | sed 's/-//g')\n\
    \  [ ${#v} -gt 0 ] || v=0\n  odd=0\n  even=0\n  for ((i=0; i<${#v}; i++)); do\n\
    \    ((${v:$i:1} % 2 == 0)) && ((even++)) || ((odd++))\n  done\n  echo \"[\\\"\
    $even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    [[ -z $1 ]] && echo \"Usage: even_odd_count\
    \ <integer>\" && return 1\n    local even=0 odd=0 digit num\n    for digit in\
    \ $(echo \"$1\" | sed 's/-//' | sed 's/\\(.\\)/\\1 /g'); do\n        num=$(echo\
    \ \"$digit\" | tr -d ' ')\n        if ! [[ $num =~ ^[0-9]+$ ]]; then\n       \
    \     echo \"invalid input\"\n            return 1\n        fi\n        [[ $((num\
    \ % 2)) -eq 0 ]] && even=$((even + 1)) || odd=$((odd + 1))\n    done\n    echo\
    \ \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even=$(echo\
    \ $number | tr -cd '2' | wc -c)\n  local odd=$(echo $number | tr -cd '1' | wc\
    \ -c)\n  echo \"['\\\"$even\\\"', '\\\"$odd\\\"']\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  python -c \"\na=str($1)\neven=0\n\
    odd=0\nfor i in a:\n    if int(i)%2==0:\n        even+=1\n    else:\n        odd+=1\n\
    print('[%s, %s]' % (even, odd))\n\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  declare -a nums=($(sed -E \"s/./&\
    \ /g\" <<< $1))\n  declare -a result=(0 0)\n  for num in \"${nums[@]}\"; do\n\
    \    if [[ \"$num\" -eq 0 || \"$num\" -eq 2 || \"$num\" -eq 4 || \"$num\" -eq\
    \ 6 || \"$num\" -eq 8 ]]; then\n      ((result[0]++))\n    else\n      ((result[1]++))\n\
    \    fi\n  done\n  echo \"[\\\"${result[0]}\\\" \\\"${result[1]}\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i even=0\n    local -i odd=0\n\
    \    local digits=($(echo ${1} | grep -o '.'))\n    for digit in ${digits[@]};\
    \ do\n        if (( $digit % 2 == 0 )); then\n            (( even += 1 ))\n  \
    \      else\n            (( odd += 1 ))\n        fi\n    done\n    echo \"[\\\"\
    ${even}\\\", \\\"${odd}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local res=()\n  local even_count=0\n\
    \  local odd_count=0\n  local i=0\n  for ((i=0; i<${#1}; i++)); do\n    if [[\
    \ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n  done\n  res[0]=$even_count\n\
    \  res[1]=$odd_count\n  echo \"[\\\"${res[0]}\\\", \\\"${res[1]}\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  for\
    \ (( i=0; i<${#1}; i++ )) do\n    if (( ${1:$i:1} % 2 == 0 )); then\n      even=$((even+1))\n\
    \    else\n      odd=$((odd+1))\n    fi\n  done\n  echo \"[\\\"$even\\\", \\\"\
    $odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  #print number of even digits\n  echo\
    \ $(echo \"$1\" | grep -o '[02468]' | wc -l)\n  #print number of odd digits\n\
    \  echo $(echo \"$1\" | grep -o '[13579]' | wc -l)\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    for (( i=0; i<${#num}; i++ )); do\n        local digit=${num:$i:1}\n\
    \        if [[ $digit == \"-\" ]]; then\n            continue\n        fi\n  \
    \      if (( digit % 2 == 0 )); then\n            (( even_count++ ))\n       \
    \ else\n            (( odd_count++ ))\n        fi\n    done\n    echo -n \"['\"\
    $even_count\"', '\"$odd_count\"']\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local count_even=0\n  local count_odd=0\n\
    \  local number=${1#-}\n  local num_digits=${#number}\n  local len=${num_digits}\n\
    \  while [ $len -gt 0 ]; do\n    local digit=${number:len-1:1}\n    if [ $(($digit\
    \ % 2)) -eq 0 ]; then\n      count_even=$(($count_even + 1))\n    else\n     \
    \ count_odd=$(($count_odd + 1))\n    fi\n    len=$(($len - 1))\n  done\n  echo\
    \ \"[\\\"$count_even\\\", \\\"$count_odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=\"$1\"\n  local num_len=\"\
    ${#num}\"\n  local even_count=0\n  local odd_count=0\n  for ((i=0; i<num_len;\
    \ i++)); do\n    local digit=\"${num:$i:1}\"\n    if (( digit % 2 == 0 )); then\n\
    \      ((even_count++))\n    else\n      ((odd_count++))\n    fi\n  done\n  echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    re='^-?[0-9]+$'\n    if ! [[ $1\
    \ =~ $re ]] ; then\n        >&2 echo \"error: Not a number\"\n        return 1\n\
    \    fi\n    even_count=0\n    odd_count=0\n    for ((i=0; i<${#1}; i++)); do\n\
    \        c=${1:$i:1}\n        if [ $((c%2)) -eq 0 ]; then\n            even_count=$((even_count+1))\n\
    \        else\n            odd_count=$((odd_count+1))\n        fi\n    done\n\
    \    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ -z \"$1\" ]]; then\n    \
    \    echo '[\"0\", \"0\"]'\n        return\n    fi\n\n    local input=`echo \"\
    $1\" | sed 's/^-//'`\n    local even_count=0\n    local odd_count=0\n    local\
    \ char\n    local ascii_code\n\n    for (( i=0; i<${#input}; i++ )); do\n    \
    \    char=${input:$i:1}\n        ascii_code=$(printf \"%d\" \"'$char\")\n    \
    \    if (( $ascii_code % 2 == 0 )); then\n            ((even_count++))\n     \
    \   else\n            ((odd_count++))\n        fi\n    done\n\n    echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local digits=$(echo $1 | grep -o\
    \ .)\n  local even_cnt=0\n  local odd_cnt=0\n  for digit in $digits; do\n    if\
    \ [[ $((digit % 2)) == 0 ]]; then\n      even_cnt=$((even_cnt + 1))\n    else\n\
    \      odd_cnt=$((odd_cnt + 1))\n    fi\n  done\n  echo \"[\\\"$even_cnt\\\",\
    \ \\\"$odd_cnt\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local n_abs=$(echo\
    \ $n | sed -e 's/-//g')\n  local num_digits=$(digits_count $n_abs)\n  local even_digits=0\n\
    \  local odd_digits=0\n  local digits_list=$(digits_list $n_abs)\n  for i in $digits_list;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      even_digits=$((even_digits + 1))\n\
    \    else\n      odd_digits=$((odd_digits + 1))\n    fi\n  done\n  local result=\"\
    ['\\\"$even_digits\\\"', '\\\"$odd_digits\\\"']\"\n  echo $result\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppyaarm_a.sh: line 13: digits_count: command not found

    /tmp/tmppyaarm_a.sh: line 16: digits_list: command not found

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  number=$1\n  local even_count=0\n\
    \  local odd_count=0\n  while [[ $number -ne 0 ]]; do\n    digit=$((number % 10))\n\
    \    if [[ digit -ne 0 && (digit % 2) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkq4rvxc1.sh: line 16: conditional binary operator expected

    /tmp/tmpkq4rvxc1.sh: line 16: expected `)''

    /tmp/tmpkq4rvxc1.sh: line 16: syntax error near `%''

    /tmp/tmpkq4rvxc1.sh: line 16: `    if [[ digit -ne 0 && (digit % 2) -eq 0 ]];
    then''

    '
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local n_len=$(echo\
    \ \"$n\" | wc -c)\n    local num=0\n    local div=10\n    local mod=0\n    local\
    \ even_count=0\n    local odd_count=0\n    for ((i=1; i<n_len; i++)); do\n   \
    \     num=$(echo \"$n\" | cut -c $i)\n        mod=$(($num % 2))\n        if [[\
    \ $mod -eq 0 ]]; then\n            even_count=$(($even_count + 1))\n        else\n\
    \            odd_count=$(($odd_count + 1))\n        fi\n    done\n    echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  number=$1\n  n_even=0\n  n_odd=0\n\
    \  while [[ $number -ne 0 ]]; do\n    digit=$((number % 10))\n    if [[ $((digit\
    \ % 2)) -eq 0 ]]; then\n      ((n_even++))\n    else\n      ((n_odd++))\n    fi\n\
    \    number=$((number / 10))\n  done\n  echo \"[\\\"$n_even\\\", \\\"$n_odd\\\"\
    ]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  awk 'BEGIN { printf(\"[\\\"%s\\\"\
    , \\\"%s\\\"]\", gsub(/[02468]/, \"&\", $1), gsub(/[13579]/, \"&\", $1)) }'\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1;\n  local i;\n  local\
    \ even_count=0;\n  local odd_count=0;\n  local current_digit;\n  local len=$(echo\
    \ ${#num});\n  local num_val;\n  local num_array;\n  local even_number;\n  local\
    \ odd_number;\n  local len_count=0;\n  local len_arr;\n  local len_count=0;\n\
    \  len_arr=$(echo ${#len});\n  local is_odd;\n  local num_str;\n  local tmp_str;\n\
    \  if [[ ${num:0:1} -eq \"-\" ]]; then\n    num_str=${num:1:$len};\n    len=$(($len-1));\n\
    \  else\n    num_str=$num;\n  fi\n  for ((i=0; i<$len; i++)); do\n    current_digit=$(echo\
    \ $num_str | cut -c$(($i+1)));\n    if [[ $((current_digit%2)) -eq 0 ]]; then\n\
    \      even_count=$(($even_count+1));\n    else\n      odd_count=$(($odd_count+1));\n\
    \    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\";\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdnwrxpw0.sh: line 28: [[: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local num=\"$1\"\n    num=${num//[^0-9]/}\n    # If the number is negative,\
    \ then we add one more odd digit\n    if [[ \"$num\" == \"-\"* ]]; then\n    \
    \    odd=$((odd + 1))\n        num=${num:1}\n    fi\n    # Get the length of the\
    \ string that contains the digits of the given number\n    num_len=${#num}\n \
    \   # Loop through the digits\n    for ((i=0; i<num_len; i++)); do\n        #\
    \ Get the current digit of the number\n        local curr_digit=\"${num:i:1}\"\
    \n        # If the current digit is even, then increment the number of even digits\n\
    \        if [[ $((curr_digit % 2)) == 0 ]]; then\n            even=$((even + 1))\n\
    \        # Else, increment the number of odd digits\n        else\n          \
    \  odd=$((odd + 1))\n        fi\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  e=0\n  o=0\n  for d in $(echo $1\
    \ | fold -w1); do\n    if [[ $(($d % 2)) -eq 0 ]]; then\n      e=$(($e + 1))\n\
    \    else\n      o=$(($o + 1))\n    fi\n  done\n  echo \"[\\\"$e\\\", \\\"$o\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  even_count=0\n  odd_count=0\n  for\
    \ digit in $(echo $1 | fold -w1); do\n    if [[ $(($digit % 2)) -eq 0 ]]; then\n\
    \      even_count=$(($even_count + 1))\n    else\n      odd_count=$(($odd_count\
    \ + 1))\n    fi\n  done\n  echo ['\"'$even_count'\"', '\"'$odd_count'\"']\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022915
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local evenCount=0\n\
    \  local oddCount=0\n  local result=\"\"\n  local current=\"\"\n  local remainer=\"\
    \"\n  local -i i\n\n  # Check the number is greater than zero or not\n  if [[\
    \ $num -lt 0 ]]; then\n    num=$(( -num ))\n  fi\n\n  # Loop until the given number\
    \ is zero\n  while (( num > 0 )); do\n    current=$(( num % 10 ))\n    num=$((\
    \ num / 10 ))\n    if (( current % 2 == 0 )); then\n      (( evenCount++ ))\n\
    \    else\n      (( oddCount++ ))\n    fi\n  done\n\n  result=\"[\\\"$evenCount\\\
    \", \\\"$oddCount\\\"]\"\n  echo \"$result\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local integer=\"$1\"\n    local\
    \ even_count=0\n    local odd_count=0\n    for digit in $(to_list $(integer_to_list\
    \ \"$integer\")); do\n        local int_val=$(to_integer \"$digit\")\n       \
    \ if (( int_val % 2 == 0 )); then\n            (( even_count++ ))\n        else\n\
    \            (( odd_count++ ))\n        fi\n    done\n    echo \"['\"$even_count\"\
    ', '\"$odd_count\"']\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_ole1hic.sh: line 14: integer_to_list: command not found

    /tmp/tmp_ole1hic.sh: line 14: to_list: command not found

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local EVEN=0\n    local ODD=0\n\
    \    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        for i in `echo $1 | sed -e 's/-//g'`;\
    \ do\n            if [[ $((i%2)) -eq 0 ]]; then\n                EVEN=$((EVEN+1))\n\
    \            else\n                ODD=$((ODD+1))\n            fi\n        done\n\
    \    fi\n    echo \"[\\\"${EVEN}\\\", \\\"${ODD}\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for i in `echo $1 | grep -o .`; do\n    if [ $((i%2)) -eq 0 ]; then\n     \
    \ even_count=$((even_count+1))\n    else\n      odd_count=$((odd_count+1))\n \
    \   fi\n  done\n  printf '[\"%s\", \"%s\"]' $even_count $odd_count\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    printf '[%s, %s]' \"$(grep -o '[13579]'\
    \ <<< \"$1\" | wc -l)\" \"$(grep -o '[24680]' <<< \"$1\" | wc -l)\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # Check if the number is negative\n\
    \  if [[ $1 =~ ^- ]]; then\n    echo -n \"[\"\n    echo -n \\\"$(echo -n $1 |\
    \ sed 's/[^0-9]//g' | grep -o -E '[02468]{1}' | wc -l)\\\"\n    echo -n \", \"\
    \n    echo -n \\\"$(echo -n $1 | sed 's/[^0-9]//g' | grep -o -E '[13579]{1}' |\
    \ wc -l)\\\"\n    echo -n \"]\"\n  else\n    echo -n \"[\"\n    echo -n \\\"$(echo\
    \ -n $1 | sed 's/[^0-9]//g' | grep -o -E '[02468]{1}' | wc -l)\\\"\n    echo -n\
    \ \", \"\n    echo -n \\\"$(echo -n $1 | sed 's/[^0-9]//g' | grep -o -E '[13579]{1}'\
    \ | wc -l)\\\"\n    echo -n \"]\"\n  fi\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local count=$(echo $1 | grep -o .\
    \ | wc -l)\n  local even=0\n  local odd=0\n  for (( i=0; i<count; i++ )); do\n\
    \    local digit=$(echo $1 | cut -c $(($i+1)))\n    if [[ $(($digit % 2)) -eq\
    \ 0 ]]; then\n      even=$(($even + 1))\n    else\n      odd=$(($odd + 1))\n \
    \   fi\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i num=\"$1\"\n  local -i evenCount=0\n\
    \  local -i oddCount=0\n  while ((num > 0)); do\n    ((num % 2 == 0)) && ((evenCount++))\
    \ || ((oddCount++))\n    ((num /= 10))\n  done\n  echo \"[\\\"${evenCount}\\\"\
    \ \\\"${oddCount}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local number=$1\n    number=$(trim \"$number\")\n    for ((i=0; i<${#number};\
    \ i++)); do\n        local c=${number:$i:1}\n        if [ $(( c % 2 )) -eq 0 ];\
    \ then\n            ((even++))\n        else\n            ((odd++))\n        fi\n\
    \    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy_cr53um.sh: line 14: trim: command not found

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local integer=$1\n  local even\n\
    \  local odd\n  local digit\n\n  for digit in $(echo $integer | fold -w1); do\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even=$((even + 1))\n    else\n\
    \      odd=$((odd + 1))\n    fi\n  done\n\n  if [[ -z $even ]]; then\n    even=\"\
    0\"\n  fi\n\n  if [[ -z $odd ]]; then\n    odd=\"0\"\n  fi\n\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  even=0\n  odd=0\n  while (( $1 !=\
    \ 0 )); do\n    (( $1%2 == 0 )) && even=$((even+1)) || odd=$((odd+1))\n    ((\
    \ $1 = $1/10 ))\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660022921
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local input=\"$1\"\n  local even_count=$(echo\
    \ \"$input\" | tr -d -c '0-9' | fold -w1 | grep -c -E '^[02468]$')\n  local odd_count=$(echo\
    \ \"$input\" | tr -d -c '0-9' | fold -w1 | grep -c -E '^[13579]$')\n  echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local digits=\"$(echo \"$1\" | sed\
    \ -E \"s/[^[:digit:]]//g\")\"\n  local even_count=$(echo \"$digits\" | sed -E\
    \ \"s/[13579]//g\" | wc -c)\n  local odd_count=$(echo \"$digits\" | sed -E \"\
    s/[024680]//g\" | wc -c)\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local count=(\"0\" \"0\")\n  for\
    \ ((i=0; i<${#1}; i++)); do\n    local digit=${1:$i:1}\n    ((digit % 2 == 0))\
    \ && local index=0 || local index=1\n    ((count[$index]++))\n  done\n  echo \"\
    ${count[@]}\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_n7ypec.sh: line 14: ((: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local int=$1\n  local ecount=$(echo\
    \ \"${int}\" | grep -o '[02468]' | wc -l)\n  local ocount=$(echo \"${int}\" |\
    \ grep -o '[13579]' | wc -l)\n  echo \"[\\\"${ecount}\\\", \\\"${ocount}\\\"]\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ ! $1 =~ ^[-+]?[0-9]+$ ]]; then\n\
    \    echo \"error: argument is not an integer\" >&2\n    return 1\n  fi\n\n  local\
    \ even=0\n  local odd=0\n  local digit\n\n  while [[ $1 -ne 0 ]]; do\n    digit=$((\
    \ $1 % 10 ))\n    if [[ $(( digit % 2 )) -eq 0 ]]; then\n      even=$(( even +\
    \ 1 ))\n    else\n      odd=$(( odd + 1 ))\n    fi\n    1=$(( $1 / 10 ))\n  done\n\
    \n  printf '[%s, %s]' $even $odd\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=39 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=35 encoding='utf-8'>
  timestamp: 1660022921
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local integer=\"$1\"\n    local\
    \ x\n    local res1=\"0\"\n    local res2=\"0\"\n    # res1 is the even count\
    \ and res2 is the odd count\n    for (( x=1; x<=\"${#integer}\"; x++ )); do\n\
    \        local digit=\"${integer:(-x):1}\"\n        if [ \"$(( 10#$digit % 2 ))\"\
    \ -eq 0 ]; then\n            res1=\"$(( 10#$res1 + 1 ))\"\n        else\n    \
    \        res2=\"$(( 10#$res2 + 1 ))\"\n        fi\n    done\n    echo \"[\\\"\
    $res1\\\", \\\"$res2\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [ $(( ${1:$i:1} % 2 )) -eq 0 ]; then\n\
    \      (( even_count++ ))\n    else\n      (( odd_count++ ))\n    fi\n  done\n\
    \  printf '[%s, %s]' \"$even_count\" \"$odd_count\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=\"$1\"\n  # we use the\
    \ parameter expansion method of extracting the digits\n  local digits=\"${num//-/}\"\
    \ # remove the \"-\" from the number\n  local even_count=0\n  local odd_count=0\n\
    \  for digit in $digits; do\n    if [ $(($digit % 2)) -eq 0 ]; then\n      ((even_count++))\n\
    \    else\n      ((odd_count++))\n    fi\n  done\n  echo \"[\\\"$even_count\\\"\
    , \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # If the first argument is not\
    \ a number, return an empty list\n    if [[ ! $1 =~ ^[0-9-]+$ ]]; then\n     \
    \   echo '[]'\n        return 0\n    fi\n\n    # Prepare variables\n    local\
    \ even=0\n    local odd=0\n    local arg=$1\n\n    # Add a negative sign before\
    \ the number\n    if [[ $arg =~ ^- ]]; then\n        arg=\"$(tr -d '-' <<< $arg)\"\
    \n    fi\n\n    # Count\n    while (( arg > 0 )); do\n        digit=$(( arg %\
    \ 10 ))\n        if (( digit % 2 == 0 )); then\n            (( even++ ))\n   \
    \     else\n            (( odd++ ))\n        fi\n        arg=$(( arg / 10 ))\n\
    \    done\n\n    # Output\n    echo '['\\\"$even\\\"', '\\\"$odd\\\"']'\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local int=\"$1\"\n    if ! [[ \"\
    $int\" =~ ^-?[0-9]+$ ]]; then\n        # TODO: log error\n        printf '[\"\
    0\", \"0\"]'\n        return\n    fi\n    local even_count=0\n    local odd_count=0\n\
    \    local -i len=${#int}\n    local -i i=0\n    while (( i < len )); do\n   \
    \     local digit=\"${int:i:1}\"\n        (( digit % 2 == 0 )) && (( even_count++\
    \ )) || (( odd_count++ ))\n        (( i++ ))\n    done\n    printf '[\"%s\", \"\
    %s\"]' \"$even_count\" \"$odd_count\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num_str\n    num_str=$(echo\
    \ $1 | sed 's/^-//')\n\n    local num_str_len\n    num_str_len=$((${#num_str}))\n\
    \n    local even_odd_arr\n    even_odd_arr=(\"0\" \"0\")\n\n    local char\n \
    \   for (( i=0; i<$num_str_len; i++ )); do\n        char=${num_str:$i:1}\n   \
    \     if [[ $((char % 2)) -eq 0 ]]; then\n            even_odd_arr[0]=$((even_odd_arr[0]\
    \ + 1))\n        else\n            even_odd_arr[1]=$((even_odd_arr[1] + 1))\n\
    \        fi\n    done\n\n    echo \"['\"${even_odd_arr[0]}\"'', '\"${even_odd_arr[1]}\"\
    '\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpawnt4qp7.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmpawnt4qp7.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if ! [[ $1 =~ ^\\-?[0-9]+$ ]];\
    \ then\n        echo \"Error: parameter must be an integer\" >&2\n        return\
    \ 1\n    fi\n\n    local even_cnt=0\n    local odd_cnt=0\n    local current_digit=0\n\
    \    local num=\"$1\"\n\n    while [ $num -ne 0 ]; do\n        # Modulo divide\
    \ by 10 and use the remainder as the current digit\n        current_digit=$((num\
    \ % 10))\n        # If even, increment even count\n        [ $((current_digit\
    \ % 2)) -eq 0 ] && even_cnt=$((even_cnt + 1)) || odd_cnt=$((odd_cnt + 1))\n  \
    \      # Divide by 10 to prepare for the next iteration\n        num=$((num /\
    \ 10))\n    done\n\n    echo \"[\\\"$even_cnt\\\", \\\"$odd_cnt\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local in=\"$1\"\n  local count_even=0\n\
    \  local count_odd=0\n  for ch in $(echo \"$in\" | sed 's/./& /g'); do\n    if\
    \ (( ch % 2 == 0 )); then\n      count_even=$((count_even + 1))\n    else\n  \
    \    count_odd=$((count_odd + 1))\n    fi\n  done\n  echo \"[\\\"${count_even}\\\
    \", \\\"${count_odd}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    cur=${1:$i:1}\n    if [ $(( $cur % 2 ))\
    \ -eq 0 ]; then\n      (( even_count++ ))\n    else\n      (( odd_count++ ))\n\
    \    fi\n  done\n  echo \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local integer=$1\n  if ! [[ $integer\
    \ =~ ^-?[0-9]+$ ]]; then\n    echo '\"0\"'\n    echo '\"0\"'\n    return\n  fi\n\
    \  local abs_integer=${integer/-/}\n  local even_count=0\n  local odd_count=0\n\
    \  while [[ $abs_integer -gt 0 ]]; do\n    local digit=$((abs_integer % 10))\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n    else\n \
    \     ((odd_count++))\n    fi\n    abs_integer=$((abs_integer / 10))\n  done\n\
    \  echo '\"'$even_count'\"'\n  echo '\"'$odd_count'\"'\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    declare -a count=(0 0)\n    while\
    \ [ \"$1\" -ne 0 ]; do\n        ((count[$(( $1 % 2 ))]++))\n        (( $1 = $1\
    \ / 10 ))\n    done\n    count=(\"${count[@]}\" | sed 's/ /,/g')\n    echo \"\
    ${count[@]}\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp50q2p5n9.sh: line 16: syntax error near unexpected token `|''

    /tmp/tmp50q2p5n9.sh: line 16: `    count=("${count[@]}" | sed ''s/ /,/g'')''

    /tmp/tmp50q2p5n9.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmp50q2p5n9.sh: line 18: `}''

    '
  stdout: '

    '
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ $1 =~ ^[-+]?[0-9]+$ ]]; then\n\
    \        evens=0\n        odds=0\n        for ((i=0; i<${#1}; i++)); do\n    \
    \        [[ $(( ${1:$i:1} % 2 )) == 0 ]] && ((evens++)) || ((odds++))\n      \
    \  done\n        echo \"[\\\"$evens\\\", \\\"$odds\\\"]\"\n    else\n        echo\
    \ \"\\\"Please enter a valid number!\\\"\"\n    fi\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    declare -a NUM_ARRAY\n    NUM_ARRAY=($(echo\
    \ \"$1\" | grep -o .) )\n\n    declare -a EVEN_ARRAY\n    declare -a ODD_ARRAY\n\
    \n    EVEN_COUNT=0\n    ODD_COUNT=0\n\n    for (( I=0; I<${#NUM_ARRAY[@]}; I++\
    \ )); do\n        if [ $((${NUM_ARRAY[$I]} % 2)) -eq 0 ]; then\n            EVEN_ARRAY[EVEN_COUNT]=${NUM_ARRAY[$I]}\n\
    \            (( EVEN_COUNT++ ))\n        else\n            ODD_ARRAY[ODD_COUNT]=${NUM_ARRAY[$I]}\n\
    \            (( ODD_COUNT++ ))\n        fi\n    done\n\n    echo \"[$EVEN_COUNT,\
    \ $ODD_COUNT]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ \"$1\" =~ ^[-]?[0-9]+$ ]];\
    \ then\n    odd=0\n    even=0\n    new_value=$(echo $1 | tr -d -)\n    for ((\
    \ i=0; i<${#new_value}; i++ )); do\n      if [[ $(( ${new_value:$i:1} % 2 )) ==\
    \ 0 ]]; then\n        (( even++ ))\n      else\n        (( odd++ ))\n      fi\n\
    \    done\n    echo \"[$even, $odd]\"\n  else\n    echo \"Error: '$1' is not an\
    \ integer.\"\n  fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local odd=0\n    local even=0\n\
    \    local length=${#1}\n    for (( i=0; i<$length; i++ ))\n    do\n        #\
    \ Check even number\n        if [ $((${1:$i:1} % 2)) -eq 0 ]; then\n         \
    \   ((even++))\n        else\n            ((odd++))\n        fi\n    done\n  \
    \  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    echo \"[$(echo \"$1\" | sed 's/[0-9]/&\\\
    n/g' | awk '($1%2==0){++e}{++o}END{print e\",\"o}')]\"\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local output=(\"0\" \"0\")\n  \
    \  local num=$1\n    while [[ ${num} -ne 0 ]]; do\n        if [[ $((${num} % 2))\
    \ -eq 0 ]]; then\n            output[0]=$((${output[0]} + 1))\n        else\n\
    \            output[1]=$((${output[1]} + 1))\n        fi\n        num=$((${num}\
    \ / 10))\n    done\n    echo ${output[@]}\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_digit_count=0\n  local\
    \ odd_digit_count=0\n  for ((n=0; n<${#1}; n++)); do\n    digit=${1:$n:1}\n  \
    \  if ((digit % 2 == 0)); then\n      even_digit_count=$((even_digit_count + 1))\n\
    \    else\n      odd_digit_count=$((odd_digit_count + 1))\n    fi\n  done\n  echo\
    \ \"['\"$even_digit_count\"', '\"$odd_digit_count\"']\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -r n=$1\n\n    local even_count=0\n\
    \    local odd_count=0\n\n    # If you don't want to use regex\n    for ((i=0;\
    \ i<${#n}; i++)); do\n        local digit=${n:$i:1}\n        if [[ $digit =~ ^[0-9]+$\
    \ ]]; then\n            if [[ $((digit % 2)) -eq 0 ]]; then\n                even_count=$((even_count\
    \ + 1))\n            else\n                odd_count=$((odd_count + 1))\n    \
    \        fi\n        fi\n    done\n\n    # If you want to use regex\n    # even_count=$(echo\
    \ $n | tr -cd [24680] | wc -c)\n    # odd_count=$(echo $n | tr -cd [13579] | wc\
    \ -c)\n\n    echo \"['\"$even_count\"', '\"$odd_count\"']\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local nums=$(echo $1 | tr -d - |\
    \ tr -d + | grep -o .)\n\n  local even_count=0\n  local odd_count=0\n  for i in\
    \ $nums; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n  done\n\n  local\
    \ result=\"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n  echo $result\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -n s=$1\n    local -i n=${#s}\n\
    \    local -a r=()\n    for (( i=0; i<n; i++ )); do\n        (( s[i] % 2 )) &&\
    \ r[1]++ || r[0]++\n    done\n    echo \"[$(printf %s ', ${r[@]} | sed \"s/ /\\\
    \"/, \\\"/g\")]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiphtfam3.sh: line 17: unexpected EOF while looking for matching
    `''''

    /tmp/tmpiphtfam3.sh: line 37: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    for c in $(echo $1 | sed 's/\\-//g' | sed 's/\\(.\\)/\\1 /g'); do\n     \
    \   c=$(echo $c | sed 's/^0*//')\n        if [ -z \"$c\" ]; then\n           \
    \ continue\n        fi\n        if [ $((c % 2)) -eq 0 ]; then\n            even=$((even\
    \ + 1))\n        else\n            odd=$((odd + 1))\n        fi\n    done\n  \
    \  echo \"[\\\"${even}\\\", \\\"${odd}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local count_even=0\n    local count_odd=0\n\
    \    for i in ${1//-/ }; do\n        if (( i % 2 == 0 )); then\n            ((count_even++))\n\
    \        else\n            ((count_odd++))\n        fi\n    done\n    echo \"\
    [\\\"$count_even\\\", \\\"$count_odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # Example:\n    # echo \"12\" |\
    \ sed -E 's/[02468]/even/g; s/[13579]/odd/g' | uniq -c | awk '{print \"[\\\"\"\
    $1\"\\\", \\\"\"$2\"\\\"]\"}'\n    # [[\"1\", \"even\"], [\"1\", \"odd\"]]\n \
    \   # echo \"456853\" | sed -E 's/[02468]/even/g; s/[13579]/odd/g' | uniq -c |\
    \ awk '{print \"[\\\"\"$1\"\\\", \\\"\"$2\"\\\"]\"}'\n    # [[\"1\", \"even\"\
    ], [\"5\", \"odd\"]]\n    echo $1 | sed -E 's/[02468]/even/g; s/[13579]/odd/g'\
    \ | uniq -c | awk '{print \"[\\\"\"$1\"\\\", \\\"\"$2\"\\\"]\"}'\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local result\n  # TODO: Find a way\
    \ to do this in bash. May be a POSIX compatible regex?\n  result=$(echo -n \"\
    $1\" | sed 's/[0-9]/&\\n/g' | awk '{ sum += $1 % 2 } END { print sum }')\n  echo\
    \ -n \"[\"\n  for i in $result; do\n    echo -n \"\\\"$i\\\",\"\n  done\n  echo\
    \ -n \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # convert $1 to a string\n    t=$(echo\
    \ $1 | sed 's/-//')\n\n    even_count=0\n    odd_count=0\n    for i in $(echo\
    \ ${t} | grep -o .); do\n        if (( $i % 2 == 0 )); then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \    done\n\n    echo '['\"\\\"${even_count}\\\"\"'', '\"\\\"${odd_count}\\\"\"\
    '']'\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local IFS=\n    # Cut the '-' sign\
    \ if there is one\n    local n=$(echo \"$1\" | cut -d'-' -f2)\n    # Split the\
    \ integer into a list of digits\n    local digits=$(echo \"$n\" | grep -o .)\n\
    \    local count_odd=0\n    local count_even=0\n    # Loop over each digit\n \
    \   for digit in $digits; do\n        # Check if even or odd\n        if (( $digit\
    \ % 2 == 0 )); then\n            count_even=$((count_even + 1))\n        else\n\
    \            count_odd=$((count_odd + 1))\n        fi\n    done\n    # Output\
    \ the list\n    echo -n \"['\"\n    echo -n \"$count_even\"\n    echo -n \"',\
    \ '\"\n    echo -n \"$count_odd\"\n    echo -n \"']\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    declare -a arr=(\"even\" \"odd\"\
    )\n    declare -a fin=(\"0\" \"0\")\n    for ((i=0; i<${#1}; i++)); do\n     \
    \   if [[ \"${1:$i:1}\" =~ ^[0-9]+$ ]]; then\n            if (( $((10#${1:$i:1}\
    \ % 2)) == 0 )); then\n                ((fin[0]+=1))\n            else\n     \
    \           ((fin[1]+=1))\n            fi\n        fi\n    done\n    echo \"[\\\
    \"${fin[0]}\\\"\", \"\\\"${fin[1]}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local count=0\n    while [ $1 -gt\
    \ 0 ]; do\n        let count+=1\n        let digit=$1%10\n        if [ $(( digit\
    \ % 2 )) -eq 0 ]; then\n            EVEN=`expr $EVEN + 1`\n        else\n    \
    \        ODD=`expr $ODD + 1`\n        fi\n        let \"1 = ($1 - digit) / 10\"\
    \n    done\n    echo \"[\\\"$EVEN\\\", \\\"$ODD\\\"]\"\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=38 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=32 encoding='utf-8'>
  timestamp: 1660022921
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if (($1 < 0)); then\n    printf \"\
    ['\"%s\"', '\"%s\"']\" \"1\" \"1\"\n  else\n    local even_count=0\n    local\
    \ odd_count=0\n    while (($1 != 0)); do\n      local remainder=$(($1 % 10))\n\
    \      if (($remainder % 2 == 0)); then\n        even_count=$(($even_count + 1))\n\
    \      else\n        odd_count=$(($odd_count + 1))\n      fi\n      local quotient=$(($1\
    \ / 10))\n      local num=$quotient\n    done\n    printf \"['\"%s\"', '\"%s\"\
    ']\" \"$even_count\" \"$odd_count\"\n  fi\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=49 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660022921
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # if the input is not an integer\n\
    \  if [[ ! \"$1\" =~ ^[-]?[0-9]+$ ]]; then\n    echo \"\\\"The given argument\
    \ is not an integer.\\\"\"\n    return 0\n  fi\n\n  # if the input is an integer\n\
    \  if [[ \"$1\" =~ ^[-]?[0-9]+$ ]]; then\n    # if the integer is 0\n    if [\
    \ \"$1\" -eq 0 ]; then\n      echo \"[\\\"\"0\"\\\", \\\"\"0\"\\\"]\"\n      return\
    \ 0\n    fi\n\n    # if the integer is not 0\n    if [ \"$1\" -ne 0 ]; then\n\
    \      local num_string=\"$1\"\n      local even_count=0\n      local odd_count=0\n\
    \      for (( i=1; i<=${#num_string}; i++ )); do\n        local digit=${num_string:i-1:1}\n\
    \        if [ $((digit%2)) -eq 0 ]; then\n          even_count=$((even_count+1))\n\
    \        else\n          odd_count=$((odd_count+1))\n        fi\n      done\n\
    \      echo \"[\\\"\"$even_count\"\\\", \\\"\"$odd_count\"\\\"]\"\n      return\
    \ 0\n    fi\n  fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local x=$1\n  echo \"[\\\"$(echo\
    \ $x | grep -o -E '[24680]' | wc -l)\\\" , \\\"$(echo $x | grep -o -E '[13579]'\
    \ | wc -l)\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local digit\n    local number=${1//[-]/}\n    for ((i=0; i<${#number}; i++));\
    \ do\n        digit=${number:$i:1}\n        if [[ $((digit % 2)) -eq 0 ]]; then\n\
    \            ((even_count++))\n        else\n            ((odd_count++))\n   \
    \     fi\n    done\n    echo \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  [[ $1 =~ ^-?[0-9]+$ ]] || { echo\
    \ \"Invalid input: $1\" >&2; return 1; }\n  local -i num=$1\n  local -i evenCount=0\
    \ oddCount=0\n  local -i absNum=${num#-}\n  local -i digits=${#absNum}\n  while\
    \ (( digits-- )); do\n    (( (absNum%10)%2 )) && (( oddCount++ )) || (( evenCount++\
    \ ))\n    (( absNum/=10 ))\n  done\n  # Format to a list\n  echo \"[\\\"$evenCount\\\
    \", \\\"$oddCount\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count odd_count\n  even_count=0\n\
    \  odd_count=0\n  if [[ $1 -lt 0 ]]; then\n    # Remove the minus sign and store\
    \ it in the variable $sign.\n    local sign=${1/-/}\n    # Now re-add the minus\
    \ sign.\n    # Since bash doesn't support floating-point number, we will use the\
    \ \n    # bc tool to perform floating-point operations.\n    echo $1 | sed 's/-//'\
    \ | while read digit; do\n      if [[ $(bc <<< \"$digit % 2\") -eq 0 ]]; then\n\
    \        let even_count++\n      else\n        let odd_count++\n      fi\n   \
    \ done\n    even_count=$(bc <<< \"$even_count * $sign\")\n    odd_count=$(bc <<<\
    \ \"$odd_count * $sign\")\n  else\n    echo $1 | while read digit; do\n      if\
    \ [[ $(bc <<< \"$digit % 2\") -eq 0 ]]; then\n        let even_count++\n     \
    \ else\n        let odd_count++\n      fi\n    done\n  fi\n  local result=\"['\\\
    \"$even_count\\\"', '\\\"$odd_count\\\"']\"\n  echo $result\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # echo the evens and odds in a string\n\
    \  local eod_str=`echo $1 | \\\n  sed 's/\\-//g' | \\\n  sed 's/[0-9]/&\\n/g'\
    \ | \\\n  awk '{if (length($0)==1) {if ($0 % 2 == 0) {evens+=1} else {odds+=1}}\
    \ else {if ($1 == 0) {evens+=1} else {odds+=1}}} END {printf(\"\\\"%d\\\" \\\"\
    %d\\\"\", evens, odds)}'`\n  # split string into an array\n  local eod_arr=($eod_str)\n\
    \  # print array as list\n  echo ${eod_arr[@]}\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number\n    if [[ $1 =~ ^\\\
    -?[0-9]+$ ]]; then\n        number=$1\n    else\n        return\n    fi\n\n  \
    \  declare -i even=0\n    declare -i odd=0\n    for ((i=${#number}; i>0; i--));\
    \ do\n        digit=${number:i-1:1}\n        [[ $((digit % 2)) -eq 0 ]] && even=$((even\
    \ + 1)) || odd=$((odd + 1))\n    done\n\n    echo [\\\"$even\\\", \\\"$odd\\\"\
    ]\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=$( echo $1 | grep -o\
    \ '[02468]' | wc -l )\n    local odd=$( echo $1 | grep -o '[13579]' | wc -l )\n\
    \    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local input_int=$1\n    declare\
    \ -i even_count=0\n    declare -i odd_count=0\n    for ((i=0; i<${#input_int};\
    \ i++)); do\n        local current_digit=\"${input_int:$i:1}\"\n        if [[\
    \ $((current_digit % 2)) -eq 0 ]]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # Check if $1 is positive\n  if [[\
    \ \"$1\" =~ ^- ]]; then\n    num=$(echo \"$1\" | cut -d'-' -f2)\n  else\n    num=\"\
    $1\"\n  fi\n\n  # Check if number has any even and odd digit\n  if [[ ! \"$num\"\
    \ =~ ^[02468]+$ ]] && [[ ! \"$num\" =~ ^[13579]+$ ]]; then\n    # print out the\
    \ number of even and odd digits\n    even_cnt=$(echo \"$num\" | sed -E 's/[^024680]//g'\
    \ | wc -c)\n    odd_cnt=$(echo \"$num\" | sed -E 's/[^13579]//g' | wc -c)\n  \
    \  echo \"[\\\"$even_cnt\\\", \\\"$odd_cnt\\\"]\"\n  else\n    # print out that\
    \ there is no even or odd digit\n    if [[ \"$num\" =~ ^[02468]+$ ]]; then\n \
    \     echo \"[\\\"${#num}\\\", \\\"0\\\"]\"\n    else\n      echo \"[\\\"0\\\"\
    , \\\"${#num}\\\"]\"\n    fi\n  fi\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local num_of_evens=0\n\
    \    local num_of_odds=0\n    local digits=(\"${!2}\")\n    local digit\n    local\
    \ digit_as_int\n    local i\n    for ((i=0; i<${#digits[@]}; i++)); do\n     \
    \   digit=${digits[$i]}\n        digit_as_int=$(c3_parse_integer $digit)\n   \
    \     # Check the digit's parity\n        if (( digit_as_int%2==0 )); then\n \
    \           ((num_of_evens++))\n        else\n            ((num_of_odds++))\n\
    \        fi\n    done\n    echo \"[\\\"$num_of_evens\\\", \\\"$num_of_odds\\\"\
    ]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp314ow5_f.sh: line 20: c3_parse_integer: command not found

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_digits=0\n    local\
    \ odd_digits=0\n    local number=$1\n    [[ \"$number\" =~ ^-?[0-9]+$ ]] || return\
    \ 1\n\n    while [[ $number -ne 0 ]]; do\n        local digit=$(( number % 10\
    \ ))\n        if [[ $(( digit % 2 )) -eq 0 ]]; then\n            (( even_digits++\
    \ ))\n        else\n            (( odd_digits++ ))\n        fi\n        number=$((\
    \ number / 10 ))\n    done\n\n    echo \"[\\\"$even_digits\\\", \\\"$odd_digits\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \        even_count=0\n        odd_count=0\n        while [[ $1 -ne 0 ]]; do\n\
    \            # Get the last digit\n            digit=$(( $1 % 10 ))\n        \
    \    if [[ $(( $digit % 2 )) -eq 0 ]]; then\n                even_count=$(( $even_count\
    \ + 1 ))\n            else\n                odd_count=$(( $odd_count + 1 ))\n\
    \            fi\n            # Shift the number to the right\n            # (remove\
    \ the last digit)\n            shift_num=$(( $1 / 10 ))\n            # Check if\
    \ the number is negative\n            if [[ $1 -lt 0 ]]; then\n              \
    \  # Make the number positive\n                shift_num=$(( $shift_num * -1 ))\n\
    \            fi\n            # Shift the number\n            # (remove the last\
    \ digit)\n            num=$shift_num\n        done\n        # Return the even\
    \ and odd digits count\n        echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"\
    ]\"\n    else\n        echo \"The argument is not an integer.\"\n    fi\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=66 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660022921
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  even_count=0\n  odd_count=0\n  for\
    \ digit in $(echo $1 | grep -o .)\n  do\n    if (( $(($digit % 2)) == 0 ))\n \
    \   then\n      ((even_count++))\n    else\n      ((odd_count++))\n    fi\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ \"$1\" =~ ^[0-9]+$ ]]; then\n\
    \    local number=\"$1\"\n    even=0\n    odd=0\n    for (( i=0; i<${#number};\
    \ i++ )); do\n      digit=\"${number:$i:1}\"\n      if [[ \"$digit\" =~ ^[02468]$\
    \ ]]; then\n        ((even++))\n      else\n        ((odd++))\n      fi\n    done\n\
    \    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n  else\n    echo \"[\\\"-1\\\", \\\
    \"-1\\\"]\"\n  fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local -i even_count=0\n\
    \    local -i odd_count=0\n    for digit in $(seq 0 $((${#number} - 1))); do\n\
    \        # use bc to calculate whether a number is even or odd\n        if [[\
    \ $(($(echo \"${number:$digit:1} % 2\" | bc))) -eq 0 ]]; then\n            even_count+=1\n\
    \        else\n            odd_count+=1\n        fi\n    done\n    echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # Get the absolute value of the\
    \ integer\n    abs_val=$(abs_val $1)\n    # If the absolute value is zero, then\
    \ return [0, 0]\n    if [ $abs_val -eq 0 ]; then\n        echo \"[\\\"0\\\", \\\
    \"0\\\"]\"\n    else\n        # Separate the digits with a space\n        digits=$(echo\
    \ $abs_val | grep -o .)\n        # Count the number of odd and even digits\n \
    \       even_count=$(echo $digits | grep -o -E '[02468]' | wc -l)\n        odd_count=$(echo\
    \ $digits | grep -o -E '[13579]' | wc -l)\n        # Convert the counts to strings\
    \ and put them in a list\n        echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n    fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpss4vsgno.sh: line 12: abs_val: command not found

    /tmp/tmpss4vsgno.sh: line 14: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local a=\"$1\"\n  local even_count=0\n\
    \  local odd_count=0\n  for (( i=0; i<${#a}; i++ )); do\n    local num=${a:$i:1}\n\
    \    if (( num % 2 == 0 )); then\n      (( even_count++ ))\n    else\n      ((\
    \ odd_count++ ))\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local count_even=0\n\
    \  local count_odd=0\n  while [[ \"$num\" != 0 ]]; do\n    local current_digit=$((\
    \ num % 10 ))\n    if [[ $(( current_digit % 2 )) == 0 ]]; then\n      (( count_even++\
    \ ))\n    else\n      (( count_odd++ ))\n    fi\n    num=$(( num / 10 ))\n  done\n\
    \  echo \"[\\\"$count_even\\\", \\\"$count_odd\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for((i=1; i<=${#1}; i++)); do\n        digit=${1:(-i):1}\n        if [ $(($digit\
    \ % 2)) -eq 0 ]; then\n            even_count=$(($even_count + 1))\n        else\n\
    \            odd_count=$(($odd_count + 1))\n        fi\n    done\n    echo \"\
    ['\"$even_count\"', '\"$odd_count\"']\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [ $# -ne 1 ]; then\n       \
    \ echo \"Usage: $0 number\"\n        return 1\n    fi\n\n    local even_count=0\n\
    \    local odd_count=0\n    for (( i=0; i<${#1}; i++ )); do\n        if [ $((${1:$i:1}\
    \ % 2)) -eq 0 ]; then\n            even_count=$((even_count + 1))\n        else\n\
    \            odd_count=$((odd_count + 1))\n        fi\n    done\n\n    echo \"\
    [\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local result=''\n    local re='^-?[0-9]+$'\n\
    \    if ! [[ $1 =~ $re ]] ; then\n        echo \"error: $1 is not an integer\"\
    \ >&2;\n        exit 1\n    fi\n    local even=0\n    local odd=0\n    local str=$1\n\
    \    for ((i=0; i<${#str}; i++)); do\n        local ch=${str:$i:1}\n        if\
    \ [[ $ch =~ ^-?[0-9]+$ ]]; then\n            if [[ $((ch%2)) -eq 0 ]]; then\n\
    \                ((even++))\n            else\n                ((odd++))\n   \
    \         fi\n        fi\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    count_even=0\n    count_odd=0\n\
    \    for i in $(seq 1 ${#1}); do\n        local digit=${1:i-1:1}\n        [ $((digit\
    \ % 2)) -eq 0 ] && count_even=$((count_even + 1)) || count_odd=$((count_odd +\
    \ 1))\n    done\n    echo \"[\\\"$count_even\\\", \\\"$count_odd\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    a=$(echo $1 | tr -d - | sed \"\
    s/[02468]//g\" | wc -c)\n    b=$(echo $1 | tr -d - | sed \"s/[13579]//g\" | wc\
    \ -c)\n    echo \"[\\\"$a\\\", \\\"$b\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=\"$1\"\n    local res=''\n\
    \    local even=$(echo \"$num\" | grep -o '[02468]' | wc -l)\n    local odd=$(echo\
    \ \"$num\" | grep -o '[13579]' | wc -l)\n    echo \"[\\\"$even\\\", \\\"$odd\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    even_digits=$(echo $1 | awk '{print\
    \ gsub(/[02468]/, \"\")}')\n    odd_digits=$(echo $1 | awk '{print gsub(/[13579]/,\
    \ \"\")}')\n    echo [$even_digits, $odd_digits]\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number\n    local evens_and_odds\n\
    \n    number=$1\n    evens_and_odds=$(grep -o . <<<\"$number\" | sed -e 's/[02468]/1/g'\
    \ -e 's/[13579]/0/g' | sed ':a;N;$!ba;s/\\n/ + /g')\n    echo $(echo \"$evens_and_odds\"\
    \ | bc)\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example:\n    #\
    \ echo \"Hello world\"\n    local input=$1\n    local even=0\n    local odd=0\n\
    \    while [[ $input -ne 0 ]]; do\n        local digit=$((input % 10))\n     \
    \   if ((digit % 2 == 0)); then\n            ((even++))\n        else\n      \
    \      ((odd++))\n        fi\n        input=$((input / 10))\n    done\n    echo\
    \ \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    a=($(echo $1 | grep -o .))\n  \
    \  echo \"[\"\n    for n in \"${a[@]}\"; do\n        if (( n % 2 == 0 )); then\n\
    \            echo -n '\"1\"'\n        else\n            echo -n '\"0\"'\n    \
    \    fi\n        echo -n \", \"\n    done\n    echo -n '\"0\"]'\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local result=\"[\";\n    local\
    \ num_of_odd=0;\n    local num_of_even=0;\n    local s=$1;\n    local c;\n   \
    \ local l=${#s};\n    while [ $l -gt 0 ]; do\n        c=${s:0:1};\n        if\
    \ [ $((c % 2)) -eq 0 ]; then\n            ((num_of_even++));\n        else\n \
    \           ((num_of_odd++));\n        fi\n        s=${s:1};\n        ((l--));\n\
    \    done\n    result+=\"\\\"${num_of_even}\\\", \";\n    result+=\"\\\"${num_of_odd}\\\
    \"]\";\n    echo \"${result}\";\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    python -c \"import sys;\\\n   \
    \     number = '$1';\\\n        number = list(number);\\\n        number = filter(lambda\
    \ x: x.isdigit(), number);\\\n        even = len(filter(lambda x: int(x) % 2 ==\
    \ 0, number));\\\n        odd = len(filter(lambda x: int(x) % 2 != 0, number));\\\
    \n        sys.stdout.write('[%s, %s]' % (even, odd))\"\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ $1 == \"\" ]]; then\n   \
    \     echo \"Usage: even_odd_count integer\" >&2\n        return 1\n    fi\n \
    \   even=0\n    odd=0\n    while (( $1 > 0 )); do\n        let digit=$1%10\n \
    \       if (( $digit%2 == 0 )); then\n            ((even+=1))\n        else\n\
    \            ((odd+=1))\n        fi\n        let \"1=$1/10\"\n    done\n    echo\
    \ \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=29 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660022921
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  integer=$1\n  even_count=0\n  odd_count=0\n\
    \  integer_length=${#integer}\n  for (( i=0; i<integer_length; i++ )); do\n  \
    \  ch=${integer:$i:1}\n    if [[ \"$ch\" =~ [0-9] ]]; then\n      if [[ $((ch\
    \ % 2)) -eq 0 ]]; then\n        even_count=$((even_count + 1))\n      else\n \
    \       odd_count=$((odd_count + 1))\n      fi\n    fi\n  done\n  echo \"[\\\"\
    ${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local __even_count=0\n    local\
    \ __odd_count=0\n    local __digit\n\n    for ((i=0; i<${#1}; i++)); do\n    \
    \    __digit=${1:$i:1}\n        if [[ \"${__digit}\" =~ [^[:digit:]] ]]; then\n\
    \            continue\n        fi\n        if [[ \"${__digit}\" -eq 0 ]] || [[\
    \ \"${__digit}\" -eq 2 ]] || [[ \"${__digit}\" -eq 4 ]] || [[ \"${__digit}\" -eq\
    \ 6 ]] || [[ \"${__digit}\" -eq 8 ]]; then\n            ((__even_count++))\n \
    \       else\n            ((__odd_count++))\n        fi\n    done\n\n    echo\
    \ \"[\\\"${__even_count}\\\", \\\"${__odd_count}\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \        even_count=$(echo $1 | grep -o '[02468]' | wc -l)\n        odd_count=$(echo\
    \ $1 | grep -o '[13579]' | wc -l)\n        echo \"[\\\"${even_count}\\\", \\\"\
    ${odd_count}\\\"]\"\n    else\n        echo \"Given argument '$1' is not an integer\"\
    \n    fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \    evens=0\n    odds=0\n    for (( i=0; i<${#1}; i++ )); do\n      if (( ${1:$i:1}\
    \ % 2 == 0 )); then\n        (( evens++ ))\n      else\n        (( odds++ ))\n\
    \      fi\n    done\n    printf '[\"%s\", \"%s\"]' \"$evens\" \"$odds\"\n  else\n\
    \    echo \"Not an integer!\"\n  fi\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local evenCount=0\n    local oddCount=0\n\
    \    local str=$1\n    local length=${#str}\n    if [[ ${str:0:1} == \"-\" ]];\
    \ then\n        str=${str:1}\n        let length=length-1\n    fi\n    for ((\
    \ i=0; i<$length; i++ )); do\n        local digit=${str:$i:1}\n        if [[ $digit\
    \ -eq 0 ]]; then\n            continue\n        fi\n        if [[ $(( digit %\
    \ 2 )) -eq 0 ]]; then\n            let evenCount++\n        else\n           \
    \ let oddCount++\n        fi\n    done\n    # return the result\n    echo \"[\\\
    \"${evenCount}\\\", \\\"${oddCount}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    export LC_ALL=C\n    local input=$1\n\
    \    local even=0\n    local odd=0\n    local array\n\n    array=($(echo $input\
    \ | grep -o .))\n    for i in \"${array[@]}\"; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            ((even++))\n        else\n            ((odd++))\n   \
    \     fi\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  input=$1\n  declare -i even_count=0\n\
    \  declare -i odd_count=0\n  declare -i abs_input=$(echo $input | tr -d '-')\n\
    \  while [ $abs_input -gt 0 ]; do\n    mod_result=$(($abs_input % 10))\n    if\
    \ [ $mod_result -eq 0 ]; then\n      :\n    elif [ $(($mod_result % 2)) -eq 0\
    \ ]; then\n      even_count=$(($even_count + 1))\n    else\n      odd_count=$(($odd_count\
    \ + 1))\n    fi\n    abs_input=$(($abs_input / 10))\n  done\n  echo ['\"'$even_count'\"\
    ', '\"'$odd_count'\"']\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    # case $1 in\n    #     -*)\n \
    \   #         echo \"-\"$(even_odd_count \"${1:1}\")\n    #         ;;\n    #\
    \     *)\n    #         ;;\n    # esac\n    local number=\"$1\"\n    local even_count=\"\
    0\"\n    local odd_count=\"0\"\n    for ((i=0; i<${#number}; i++)); do\n     \
    \   if (( ${number:$i:1} % 2 == 0 )); then\n            ((even_count++))\n   \
    \     else\n            ((odd_count++))\n        fi\n    done\n    echo \"[\\\"\
    ${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    printf \"[\\\"%s\\\", \\\"%s\\\"\
    ]\" $(echo $1 | sed -e 's/[0-9]/& /g' | tr -d '-' | wc -w) $(echo $1 | sed -e\
    \ 's/[^0-9]/& /g' | tr -d '-' | wc -w)\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local src=$1\n  local even=0\n  local\
    \ odd=0\n  local t\n  for (( i=0; i<${#src}; i++ )); do\n    t=\"${src:$i:1}\"\
    \n    (( t%2==0 )) && (( even++ )) || (( odd++ ))\n  done\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=\"$1\"\n    local n_even=0\n\
    \    local n_odd=0\n    for i in $(get_digits \"$n\"); do\n        if [[ $((i\
    \ % 2)) -eq 0 ]]; then\n            n_even=$((n_even + 1))\n        else\n   \
    \         n_odd=$((n_odd + 1))\n        fi\n    done\n    echo \"[\\\"$n_even\\\
    \", \\\"$n_odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8uh9tcet.sh: line 14: get_digits: command not found

    '
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local count_list=\"['\"'\"$(grep\
    \ -o '[02468]' <<<\"$1\" | wc -l)\"'\"', '\"'\"$(grep -o '[13579]' <<<\"$1\" |\
    \ wc -l)\"'\"']\"\n    echo \"$count_list\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    echo '[\"'$(echo $1 | sed 's/[^02468]//g'\
    \ | tr -d '\\n' | wc -c)'\", \"'$(echo $1 | sed 's/[^13579]//g' | tr -d '\\n'\
    \ | wc -c)'\"]'\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local value=$1\n  if [[ $value == \"-\"* ]]; then\n    value=${value:1}\n \
    \ fi\n  for ((i=0; i<${#value}; i++)); do\n    local digit=${value:$i:1}\n   \
    \ if (( digit % 2 == 0 )); then\n      ((even_count++))\n    else\n      ((odd_count++))\n\
    \    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local evens=0\n    local odds=0\n\
    \    local num=\"$1\"\n    local len=${#num}\n    for ((i=0; i<len; i++)); do\n\
    \        local digit=${num:i:1}\n        if ((digit % 2 == 0)); then\n       \
    \     ((evens++))\n        else\n            ((odds++))\n        fi\n    done\n\
    \    echo \"[\\\"$evens\\\", \\\"$odds\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  # if $1 (number) is negative, make\
    \ it positive.\n  num=${1/-/}\n  even=0\n  odd=0\n  # iterate through each character\
    \ of the number\n  for i in $(seq 1 ${#num}); do\n    # determine whether each\
    \ character is even or odd\n    if [[ $((num % 10)) -eq 0 || $((num % 10)) -eq\
    \ 2 || $((num % 10)) -eq 4 || $((num % 10)) -eq 6 || $((num % 10)) -eq 8 ]]; then\n\
    \      even=$((even + 1))\n    else\n      odd=$((odd + 1))\n    fi\n    # get\
    \ rid of last digit of the number so the next digit can be evaluated.\n    num=$((num\
    \ / 10))\n  done\n  # return even and odd count\n  echo \"[\\\"$even\\\", \\\"\
    $odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022916

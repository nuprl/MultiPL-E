language: sh
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local lst=\"$1\"\n  local sum=0\n  for ((i=0; i<${#lst}; i++)); do\n    local\
    \ ch=\"${lst:$i:1}\"\n    if [ $((i % 2)) == 0 ] && [ $((ch % 2)) == 1 ]; then\n\
    \      ((sum+=ch))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # Your solution here\n    data=$1\n    sum=0\n    for value in $data\n  \
    \  do\n        # Check if it is in the even position\n        if [ $(($i % 2))\
    \ -eq 0 ]\n        then\n            # Check if it is an odd number\n        \
    \    if [ $(($value % 2)) -ne 0 ]\n            then\n                sum=$(($sum\
    \ + $value))\n            fi\n        fi\n        i=$(($i + 1))\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaxetsqw1.sh: line 19: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  for i in $1; do\n    echo $i\n  done\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    echo $1 | tr ' ' '\\n' | grep -n '^[13579]$' | grep '^[02468] ' | sed 's/[^0-9]//g'\
    \ | paste -sd+ - | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # your code goes here\n  # input: $1\n  # output: echo your result, $result\n\
    \  # example:\n  # input: \"1 2 3 4 5\"\n  # output: 6\n  # result=\"6\"\n  #\
    \ echo $result\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq2ng9g44.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmpq2ng9g44.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo $1 | tr ' ' '\\n' | awk '{if($0%2==1) arr[NR]=$0} END{for(i=1;i<=NR;i+=2)\
    \ s+=arr[i]; print s}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=' '\n  local numbers=( $1 )\n  local sum=0\n  for(( i=0; i<${#numbers[@]};\
    \ i+=2 )); do\n    sum=$(( sum + ${numbers[i]} ))\n  done\n  echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  eval \"arr=($1)\"\n  sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n    if [[\
    \ $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Print your solution in the following format\n  # printf \"answer_goes_here\"\
    \n  echo -n \"\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local n=$1\n  local sum=0\n  local i=0\n  local pos\n  local odd=0\n  local\
    \ even=0\n  while IFS=' ' read -ra ADDR; do\n    for i in \"${ADDR[@]}\"; do\n\
    \      if [[ $pos = 0 ]]; then\n        let \"odd = $i % 2\"\n        let \"even\
    \ = $i % 2\"\n      fi\n      if [[ $pos = 1 ]]; then\n        let \"odd = $i\
    \ % 2\"\n        let \"even = $i % 2\"\n      fi\n      if [[ $pos = 2 ]]; then\n\
    \        let \"odd = $i % 2\"\n        let \"even = $i % 2\"\n      fi\n     \
    \ if [[ $pos = 3 ]]; then\n        let \"odd = $i % 2\"\n        let \"even =\
    \ $i % 2\"\n      fi\n      if [[ $pos = 4 ]]; then\n        let \"odd = $i %\
    \ 2\"\n        let \"even = $i % 2\"\n      fi\n      if [[ $pos = 5 ]]; then\n\
    \        let \"odd = $i % 2\"\n        let \"even = $i % 2\"\n      fi\n     \
    \ if [[ $pos = 6 ]]; then\n        let \"odd = $i % 2\"\n        let \"even =\
    \ $i % 2\"\n      fi\n      if [[ $pos = 7 ]]; then\n        let \"odd = $i %\
    \ 2\"\n        let \"even = $i % 2\"\n      fi\n      if [[ $pos = 8 ]]; then\n\
    \        let \"odd = $i % 2\"\n        let \"even = $i % 2\"\n      fi\n     \
    \ if [[ $pos = 9 ]]; then\n        let \"odd = $i % 2\"\n        let \"even =\
    \ $i % 2\"\n      fi\n      if [[ $pos = 10 ]]; then\n        let \"odd = $i %\
    \ 2\"\n        let \"even = $i % 2\"\n      fi\n      if [[ $pos = 11 ]]; then\n\
    \        let \"odd = $i % 2\"\n        let \"even = $i % 2\"\n      fi\n     \
    \ if [[ $pos = 12 ]]; then\n        let \"odd = $\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp53y3nbdz.sh: line 85: unexpected EOF while looking for matching
    `"''

    /tmp/tmp53y3nbdz.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # TODO: implement the solution\n  echo \"0\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local arr=($1)\n    local sum=0\n    for i in \"${!arr[@]}\"; do\n      \
    \  if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -ne 0 ]]; then\n            sum=$((sum+arr[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo $1 | tr ' ' '\\n' | awk 'NR%2==0' | grep '[13579]' | paste -sd+ | bc\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=$1\n    local -i sum\n    local -i i=1\n    while read number;\
    \ do\n        (( $((i % 2)) == 0 )) && (( $((number % 2)) == 1 )) && (( sum+=$number\
    \ ))\n        (( i++ ))\n    done <<< \"$list\"\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=\"$1\"\n  local sum=0\n  local counter=0\n  for x in $list; do\n\
    \    let counter++\n    if [ $((counter % 2)) -eq 0 ]; then\n      if [ $((x %\
    \ 2)) -ne 0 ]; then\n        let sum=sum+x\n      fi\n    fi\n  done\n  echo \"\
    $sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input_list=$1\n    local length=${#input_list}\n    local sum=0\n \
    \   for ((i=0; i<$length; i+=2)); do\n        if ((${input_list:$i:1} % 2 != 0));\
    \ then\n            sum=$((sum + ${input_list:$i:1}))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  sum=0\n  for (( i=0; i<${#1}; i++ )); do\n    c=${1:$i:1}\n    if [[ $((i%2))\
    \ -eq 0 && $((c%2)) -eq 1 ]]; then\n      sum=$((sum+c))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  numbers=($1)\n  total=0\n  for (( i=0; i<${#numbers[@]}; i++ )); do\n    if\
    \ [ $(($i % 2)) -eq 0 ] && [ $((${numbers[$i]} % 2)) -ne 0 ]; then\n      total=$(($total\
    \ + ${numbers[$i]}))\n    fi\n  done\n  echo $total\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a elements=($1)\n  local sum=0\n  for ((i=0; i<${#elements[@]}; i++));\
    \ do\n    if ((i % 2 == 0)) && ((elements[i] % 2 == 1)); then\n      ((sum+=elements[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    printf \"0\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local args=$@\n  local sum=0\n  local len=0\n  for n in $args; do\n    ((len++))\n\
    \    if (( n%2 != 0 && len%2 == 0 )); then\n      ((sum+=n))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  list=$1\n  sum=0\n  index=0\n  for num in $list; do\n    index=$((index + 1))\n\
    \    if ((index % 2 == 0)) && ((num % 2 == 1)); then\n      sum=$((sum + num))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  for i in $1; do\n    if [ $(($i % 2)) -eq 1 ]; then\n      echo $i\n    fi\n\
    \  done\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    set -f; IFS=' ';\n    local -a n=($1)\n    local s=0\n    for i in \"${!n[@]}\"\
    ; do\n        s=$((s+${n[i]}))\n    done\n    echo \"$s\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local result=0\n    for (( i=0; i<${#1}; i++ ))\n    do\n        if [[ $((i%2))\
    \ == 0 && $((${1:$i:1}%2)) == 1 ]]\n        then\n            ((result+=${1:$i:1}))\n\
    \        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # Write your solution here\n    echo \"$1\" | cut -d ' ' -f 2 -f 4 -f 6 |\
    \ paste -sd+ | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'cut: only one type of list may be specified

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n list=$1\n    local sum=0\n    for ((i=0; i<${#list[@]}; i++)); do\n\
    \        if [ $(($i % 2)) -eq 0 ]; then\n            (( list[i] % 2 )) && sum=$((sum\
    \ + list[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdmdhjrf1.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    integers=$1\n    # 1. Compute the odd elements\n    # 2. Select even indices\n\
    \    # 3. Print the numbers\n    # 4. Sum the numbers\n    echo $(echo $integers\
    \ | tr ' ' '\\n' | grep '[13579]' | cut -d ' ' -f 2,4,6 | tr ' ' '+' | sed 's/+$//')\
    \ | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for i in $(echo $1 | tr \" \" \"\\n\"); do\n    if [ $((sum%2))\
    \ -eq 0 ] && [ $((i%2)) -ne 0 ]; then\n      sum=$((sum+i))\n    fi\n    sum=$((sum+1))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal list=$1\n\tlocal sum=0\n\tfor (( i=0; i<${#list}; i++ )); do\n\t\tif ((\
    \ i % 2 == 0 )); then\n\t\t\t(( sum += $(echo $list | cut -d \" \" -f $(( i +\
    \ 1 ))) ))\n\t\tfi\n\tdone\n\techo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpesjiqvcu.sh: line 17: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here\n  list=($1)\n  size=${#list[@]}\n  odd=()\n  for\
    \ (( i=0; i<$size; i+=2 ))\n  do\n    odd+=($(( list[i] % 2 )))\n  done\n  echo\
    \ ${odd[@]}\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here\n  echo $1\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a args=($1)\n  echo ${args[*]}\n  declare -i sum=0\n  for ((i=0; i<${#args[@]};\
    \ i++)); do\n    if [ $((i%2)) -eq 0 ] && [ $((args[i]%2)) -ne 0 ]; then\n   \
    \   sum=$((sum+args[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a a=($1)\n  declare -i total=0\n  for (( i=0; i<${#a[@]}; i++ ));\
    \ do\n    if (( a[i]%2 == 1 )) && (( i%2 == 0 )); then\n      (( total+=a[i] ))\n\
    \    fi\n  done\n  echo $total\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  if [[ -z $1 ]]; then\n    echo \"Usage: sumOddElementsInEvenPositions.sh '<space-separated\
    \ list>'\"\n    exit 1\n  fi\n\n  declare -a arr=($1)\n  sum=0\n  for (( i=0;\
    \ i<${#arr[@]}; i+=2 )); do\n    if ((${arr[$i]}%2==1)); then\n      sum=$((sum+${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  arr=($1)\n  local result=0\n  for (( i=0; i<${#arr[@]}; i++\
    \ )); do\n    if [ $(($i % 2)) -eq 0 ]; then\n      (( ${arr[$i]} % 2 == 1 ))\
    \ && result=$(( result + ${arr[$i]} ))\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \t# $IFS stands for Internal Field Separator\n\t# By default, it is a space, but\
    \ if we change it to a new line, then each new line is a separate\n\t# field rather\
    \ than a space. \n\tOLDIFS=$IFS\n\tIFS=$'\\n'\n\t# This creates an array with\
    \ each element as a new line.\n\tARRAY=($1)\n\tIFS=$OLDIFS\n\t\n\tCOUNT=0\n\t\
    for i in ${ARRAY[@]}; do\n\t\tif (( $i % 2 != 0 )); then\n\t\t\tif (( $COUNT %\
    \ 2 == 0 )); then\n\t\t\t\techo \"$i\"\n\t\t\tfi\n\t\tfi\n\t\t((COUNT++))\n\t\
    done\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") =\
    \ \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=($1)\n  local output=0\n  for i in ${!input[@]}; do\n    if ((i\
    \ % 2 == 0)) && ((input[i] % 2 != 0)); then\n      ((output += input[i]))\n  \
    \  fi\n  done\n  echo $output\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a str_arr=(\"$@\")\n    local sum=0\n\n    for ((i=0; i<${#str_arr[@]};\
    \ i+=2)); do\n        if [[ $((${str_arr[$i]} % 2)) -ne 0 ]]; then\n         \
    \   ((sum += ${str_arr[$i]}))\n        fi\n    done\n\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9s1qxsvq.sh: line 17: 5 8 7 1 % 2: syntax error in expression (error
    token is "8 7 1 % 2")

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a numbers=($1)\n  total=0\n  for i in ${!numbers[@]}; do\n    if [[\
    \ $(($i % 2)) -eq 0 ]] && [[ $((${numbers[$i]} % 2)) -ne 0 ]]; then\n      total=$(($total\
    \ + ${numbers[$i]}))\n    fi\n  done\n  echo $total\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # BEGIN-SOLUTION\n  # END-SOLUTION\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4v_pmly3.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmp4v_pmly3.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  ((result=0))\n  for i in $(seq 1 1 $((${#1} - 1))); do\n    ((i%2==0)) && ((result+=$(echo\
    \ \"$1\" | cut -d \" \" -f $i)))\n  done\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpib_iv8ri.sh: line 15: ((: result+=: syntax error: operand expected
    (error token is "+=")

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=($1)\n  local sum=0\n  for (( i=0; i<${#numbers[@]}; i+=2 ));\
    \ do\n    if (( $((numbers[i] % 2)) == 1 )); then\n      sum=$((sum + numbers[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local result=0\n  local count=0\n  for item in $1; do\n    if [ $(($count %\
    \ 2)) -eq 0 ] && [ $(($item % 2)) -ne 0 ]; then\n      result=$(($result + $item))\n\
    \    fi\n    count=$(($count + 1))\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i x v\n  for i in $(tr ' ' '\\n' <<< \"$1\"); do\n    x=$((x + 1))\n\
    \    [[ $((x % 2)) -eq 0 ]] && v=$((v + i))\n  done\n  echo \"$v\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  sum=0\n  i=0\n  while read -r line; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      if [ $((line % 2)) -ne 0 ]; then\n        sum=$((sum + line))\n      fi\n\
    \    fi\n    i=$((i + 1))\n  done <<< \"$1\"\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfu72w2cu.sh: line 17: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  for i in $1\n  do\n    j=$((i%2))\n    if [ \"$j\" -eq 1 ]\n    then\n    \
    \  i=\"odd\"\n    else\n      i=\"even\"\n    fi\n    echo $i\n  done\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  a=($1)\n  sum=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    v=${a[$i]}\n    if\
    \ [ $(($i%2)) -eq 0 ] && [ $(($v%2)) -ne 0 ]; then\n      sum=$(($sum+$v))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  local index=0\n  while [ \"$index\" -lt\
    \ \"${#list[@]}\" ]; do\n    if [ \"$((index % 2))\" -eq 0 ] && [ \"$((list[index]\
    \ % 2))\" -ne 0 ]; then\n      sum=$((sum + list[index]))\n    fi\n    index=$((index\
    \ + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  array=($@)\n  sum=0\n  for ((i=0; i<${#array[@]}; i+=2)); do\n    if ((array[i]\
    \ % 2 == 1)); then\n      ((sum+=array[i]))\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  nums=( $1 )\n  echo \"${nums[@]}\" | tr ' ' '\\n' | grep '^[0-9]*[13579]$'\
    \ | awk 'NR % 2 == 0' | paste -sd+ - | bc\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  a=$(echo $1 | tr ' ' '\\n')\n  count=0\n  sum=0\n  while read -r line; do\n\
    \    if (( $count % 2 == 0 )) && (( $line % 2 != 0 )); then\n      sum=$((sum\
    \ + line))\n    fi\n    count=$((count + 1))\n  done <<< \"$a\"\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n input=\"$1\"\n  local -i sum=0\n  for (( i=0; i<${#input[@]}; i+=2\
    \ )); do\n    if (( input[i] % 2 != 0 )); then\n      (( sum += input[i] ))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7woc_vpb.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  sum=0\n  for i in $(echo $1 | tr ' ' '\\n'); do\n    echo $i\n  done\n  # ...\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | awk 'BEGIN { FS = \" \" }{for(i=1;i<=NF;i++) {if(i%2==0 && $i%2==1)\
    \ {count+=$i}}} END {print count}'\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input\n    input=$1\n    local array\n    array=($input)\n    local\
    \ sum\n    sum=0\n    for (( i=0; i<${#array[@]}; i+=2 )); do\n        (( array[i]\
    \ % 2 == 1 )) && (( sum+=array[i] ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    arr=($1)\n    sum=0\n    for i in ${!arr[@]}; do\n        if [ $((i % 2))\
    \ -eq 0 ] && [ $((arr[i] % 2)) -ne 0 ]; then\n            sum=$((sum + arr[i]))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=($1)\n  local sum=0\n  for (( i=0; i<${#list[@]}; i+=2 )); do\n\
    \    if [[ ${list[$i]} -eq ${list[$i]} ]]; then\n      if [[ $((${list[$i]} %\
    \ 2)) -eq 1 ]]; then\n        sum=$(($sum + ${list[$i]}))\n      fi\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # IFS is the Internal Field Separator.\n  # It is used by the shell to determine\
    \ how to do word splitting, i.e. how to recognize word boundaries.\n  local IFS=\"\
    \ \"\n  declare -a A=($1)\n  local out=0\n  for ((i=0; i<${#A[@]}; i+=2)); do\n\
    \    (( A[i]%2 )) && (( out+=A[i] ))\n  done\n  echo \"$out\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  _=$1\n  echo $_ | tr ' ' '\\n' | sed -n 'p;n' | awk '{sum+=$1} END {print sum}'\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=$1\n  local -i sum=0\n  local -i x=0\n  local -i l=${#a[@]}\n  while\
    \ [[ $x -lt $l ]]; do\n    if [[ $(($x % 2)) -eq 0 ]] && [[ $((${a[$x]} % 2))\
    \ -ne 0 ]]; then\n      sum+=$((a[$x]))\n    fi\n    x+=1\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeh23wmwo.sh: line 18: 5 8 7 1 % 2: syntax error in expression (error
    token is "8 7 1 % 2")

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    input=(\"$@\")\n    for ((i=0; i<${#input[@]}; i+=2)); do\n        if ((i\
    \ % 2 == 0 && input[i] % 2 == 1)); then\n            let \"sum += input[i]\"\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp26dqapay.sh: line 15: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for i in $(seq 1 2 $((${#1} - 1))); do\n    local num=$(echo\
    \ \"$1\" | cut -d ' ' -f $i)\n    if [[ $((num % 2)) -eq 1 ]]; then\n      ((sum\
    \ += num))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    declare -a array\n    IFS=\" \" read -r -a array <<< \"$1\"\n    for i in\
    \ \"${!array[@]}\"; do\n        if ((i % 2 != 0)); then\n            ((array[i]\
    \ % 2 == 0)) && unset array[i]\n        fi\n    done\n    echo \"${array[@]}\"\
    \ | tr \" \" \"+\" | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for i in $1; do\n    (( sum += i % 2 == 0 ? $i : 0 ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    sum=0\n    for (( i=1; i<=$#; i+=2 )) do\n        if (( ${!i}%2==1 )); then\n\
    \            sum=$((sum+${!i}))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6f0_erja.sh: line 15: ((: 5 8 7 1%2==1 : syntax error in expression
    (error token is "8 7 1%2==1 ")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local position=0\n  local total=0\n  for i in $list; do\n\
    \    if [[ $((position%2)) -eq 0 ]] && [[ $((i%2)) -eq 1 ]]; then\n      total=$((total+i))\n\
    \    fi\n    position=$((position+1))\n  done\n  echo $total\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  res=0\n  for i in $@; do\n    res=$(( $res + $i ))\n  done\n  echo $res\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local sum=0\n  for word in $list; do\n    if [ $(($word %\
    \ 2)) -eq 1 ] && [ $(($sum % 2)) -eq 0 ]; then\n      sum=$(($sum + $word))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here\n  # Keep in mind that it is a Bash script, you\
    \ cannot use Python specific syntax\n  # However, you can use awk\n  arr=$1\n\
    \  echo $arr\n  len=${#arr[@]}\n  sum=0\n  for ((i=0; i<len; i++)); do\n    val=${arr[i]}\n\
    \    if [ \"$val\" -gt 0 ] && [ $(($i % 2)) -eq 0 ]; then\n      sum=$(($sum +\
    \ $val))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr_t62876.sh: line 22: [: 5 8 7 1: integer expression expected

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n _A=($1)\n  for ((i=0; i<${#_A[@]}; i+=2)); do\n    if ((_A[i] % 2));\
    \ then\n      ((_sum+=_A[i]))\n    fi\n  done\n  echo \"$_sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_c45uj1q.sh: line 13: local: _A: reference variable cannot be an
    array

    /tmp/tmp_c45uj1q.sh: line 13: local: _A: reference variable cannot be an array

    /tmp/tmp_c45uj1q.sh: line 13: local: _A: reference variable cannot be an array

    '
  stdout: ''
  timestamp: 1660022713
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # TODO: implement this function\n    echo \"$@\" | sed 's/[^ ]*//' | tr '\
    \ ' '\\n' | awk 'NR%2==0' | awk '$1%2==1 {sum+=$1} END {print sum}'\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  if [[ -z $1 ]]; then\n    echo \"usage: ./solution.sh [SPACE-SEPARATED LIST\
    \ OF NUMBERS]\"\n    exit 1\n  fi\n\n  local -a list\n  local -a odds\n  local\
    \ -a evens\n  local sum\n  local odd\n\n  list=($1)\n  sum=0\n\n  for odd in \"\
    ${list[@]}\"; do\n    (( $odd % 2 == 0 )) && evens+=(\"$odd\") || odds+=(\"$odd\"\
    )\n  done\n\n  for (( i=0; i<${#evens[@]}; i++ )); do\n    (( i % 2 == 0 )) &&\
    \ (( sum += ${odds[i]} ))\n  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local inputLen=`echo \"$input\" | wc -w`\n  local sum=0\n\
    \  for (( i=1; i<=$inputLen; i++ )); do\n    value=`echo \"$input\" | cut -d '\
    \ ' -f $i`\n    if (( $i % 2 == 0 )) && (( $value % 2 == 1 )); then\n      ((\
    \ sum += value ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sum=0\n    local pos=0\n    for i in $1; do\n        if [[ $((pos %\
    \ 2)) -eq 0 && $((i % 2)) -ne 0 ]]; then\n            ((sum += i))\n        fi\n\
    \        ((pos++))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local len=\"${#arr[@]}\"\n  local sum=0\n  local i=0\n\
    \  while ((i < len)); do\n    local el=\"${arr[$i]}\"\n    if ((el % 2 != 0 &&\
    \ i % 2 == 0)); then\n      sum=$((sum + el))\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022713
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a array=($1)\n    local sum=0\n    for ((i=0; i<${#array[@]}; i++));\
    \ do\n        (( i % 2 == 0 )) && (( array[i] % 2 == 1 )) && (( sum += array[i]\
    \ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  odd=$(echo \"$1\" | sed -e 's/ /\\n/g' | awk 'NR%2==0 && $1%2!=0 {sum+=$1}\
    \ END {print sum}')\n  [ \"$odd\" ] && echo \"$odd\" || echo \"0\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a array\n    IFS=' ' read -r -a array <<< \"${1}\"\n    local sum=0\n\
    \    for (( i=0; i<${#array[@]}; i+=2 )); do\n        if [[ $((${array[i]} % 2))\
    \ == 1 ]]; then\n            (( sum+=${array[i]} ))\n        fi\n    done\n  \
    \  echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | \\\n  awk '{for(i=1;i<=NF;i++)if(i%2==0)printf $i\" \"}' | \\\
    \n  awk '{for(i=1;i<=NF;i++)if($i%2!=0)printf $i\" \"}' | \\\n  awk '{s+=$1}END{print\
    \ s}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local array=($1)\n  for ((i=0; i<${#array[@]}; i++)); do\n \
    \   if ((i % 2 == 0 && array[i] % 2 == 1)); then\n      ((sum += array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=($1)\n  local sum=0\n  local i=0\n  while (( i<${#list[@]} )); do\n\
    \    if (( list[i] % 2 != 0 && i % 2 == 0 )); then\n      (( sum += list[i] ))\n\
    \    fi\n    (( i++ ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local cmd=\"$(echo \"$@\" | sed -e 's/ / + /g' | sed -e 's/^/scale=2; /g')\"\
    \n  echo \"$cmd\" | bc | grep -Eo \"^[0-9]+\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here\n  echo $1 | tr \" \" \"\\n\" | awk 'NR%2==0 &&\
    \ $1%2==1 {s+=$1} END {print s}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    ARR=($1)\n    for ((i=0; i<${#ARR[@]}; i++)); do\n        if (( i % 2 ==\
    \ 0 )); then\n            SUM=$((SUM + ${ARR[i]}))\n        fi\n    done\n   \
    \ echo $SUM\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | \\\n  sed -e 's/\\s/\\n/g' | \\\n  awk '{ print ((NR-1) % 2)\
    \ ? $1 : 0 }' | \\\n  paste -sd+ | \\\n  bc\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \t# Find the odd element (n % 2 == 1)\n\t# Find the even position (i % 2 == 0)\n\
    \techo \"$1\" | tr ' ' '\\n' | awk 'NR % 2 == 0 { print $1 }' | awk '$1 % 2 ==\
    \ 1' | paste -sd+ | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # ...\n  local array=($1)\n  sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [ $((i % 2)) -eq 0 ]; then\n      if [ $((array[i] % 2)) -ne 0 ]; then\n\
    \        sum=$((sum + array[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local solution=$(echo \"$1\" | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g'\
    \ | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\\
    )/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\\
    ) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed\
    \ 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\\
    2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\\
    ([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\\
    ([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g'\
    \ | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\\
    )/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\\
    ) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptpm9xmo6.sh: line 13: unexpected EOF while looking for matching
    `''''

    /tmp/tmptpm9xmo6.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  l=$1\n  echo $l | grep -oE \"[[:space:]]*[13579][[:space:]]*\" | xargs | wc\
    \ -w\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") =\
    \ \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local l\n  l=$(echo \"$1\" | sed -E 's/[0-9]+/\\n&/g' | awk 'NR%2{sum+=$1}END{print\
    \ sum}')\n  echo \"$l\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  declare -i sum=0\n  for elem in ${arr[@]}; do\n    sum=$((sum\
    \ + elem))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdh4idxjn.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Your code here\n  echo $@\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  local sum=0\n  # Take an array as input\n  read -ra arr\
    \ <<<\"$1\"\n  # Get the number of items in an array\n  local n=${#arr[@]}\n \
    \ # Loop through an array\n  for ((i=0; i<${n}; i++)); do\n    if (($i % 2 ==\
    \ 0)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2e2st5q2.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    /tmp/tmp2e2st5q2.sh: line 13: local: `3 3 3 3 3'': invalid variable name for name
    reference

    /tmp/tmp2e2st5q2.sh: line 13: local: `30 13 24 321'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # your code here\n  echo \"$1\" | tr ' ' '\\n' | awk '{for(i=1;i<=NF;i++)if(i%2)if($i%2)sum+=$i}END{print\
    \ sum}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo $1 | tr ' ' '\\n' | \n  awk '{if ((NR-1)%2==0) print $1}' |\n  awk '{if\
    \ (NR%2==1) sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a array=(${1// / })\n    local total=0\n    for ((i=0; i<${#array[@]};\
    \ i+=2)); do\n        if [[ $((array[i] % 2)) -eq 1 ]]; then\n            total=$((total\
    \ + array[i]))\n        fi\n    done\n    echo \"$total\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=($1)\n  local sum=0\n  for ((i=0; i<${#input[@]}; i++)); do\n \
    \   (( i % 2 == 0 )) && (( input[i] % 2 == 1 )) && (( sum+=input[i] ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  arr=( $1 )\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    if [ $(( i % 2 )) -eq\
    \ 0 ] && [ $(( arr[i] % 2 )) -ne 0 ]; then\n      sum=$(( sum + arr[i] ))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    echo $1 | awk '{for(i=1;i<=NF;i++) if(i%2==0 && $i%2==1) s+=$i; print s}'\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  s=\"\"\n  x=$(echo $1 | sed 's/ //g')\n  for (( i=0; i<${#x}; i++ )); do\n\
    \    if [ $((i%2)) == 0 ]; then\n      if [ $((x[i]%2)) == 1 ]; then\n       \
    \ s=$(($s+${x[i]}))\n      fi\n    fi\n  done\n  echo $s\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -i n=0\n    local -i sum=0\n    for i in $1; do\n        if (( n %\
    \ 2 == 0 )) && (( i % 2 == 1 )); then\n            (( sum += i ))\n        fi\n\
    \        (( n++ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local answer=\"\"\n  # Read in the list into an array, one item per line\n\
    \  while read -r line; do\n    answer=\"$answer$line\\n\"\n  done <<< \"$1\"\n\
    \  # Filter out only the even-positioned items.\n  # Then, only keep the odd-numbered\
    \ elements.\n  # Then, sum up each number.\n  sed -n '2~2p' <<< \"$answer\" |\
    \ grep -E '[13579]' | paste -sd+ | bc\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  index=0\n  sum=0\n  # loop through the string and get an array\n  for i in\
    \ $1; do\n    # get the remainder if divisible by 2, which is an odd number.\n\
    \    # if the remainder is 1, then this is an odd number in an even position.\n\
    \    if [ $(($index % 2)) -eq 1 ]; then\n      sum=$(($sum + $i))\n    fi\n  \
    \  index=$(($index + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=\"$1\"\n  local ret\n  local i\n  local j\n  i=0\n  j=0\n  while\
    \ read -r n; do\n    if (($n % 2 != 0)); then\n      ((i++))\n      if ((i % 2\
    \ == 0)); then\n        ((j += n))\n      fi\n    fi\n  done <<< \"${input}\"\n\
    \  echo \"${j}\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcqe565bm.sh: line 20: ((: 5 8 7 1 % 2 != 0: syntax error in expression
    (error token is "8 7 1 % 2 != 0")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  res=\"\"\n  for i in $1; do\n    if (($(($i % 2)) == 0)) && (($((${#res} %\
    \ 2)) == 0)); then\n      res=$res\"$i \"\n    fi\n  done\n  echo \"$res\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local len=$(echo $1 | wc -w)\n  local nums=($1)\n  local sum=0\n  for ((i=0;\
    \ i<len; i++)); do\n    ((i % 2 == 0)) && ((nums[i] % 2 == 1)) && ((sum += nums[i]))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for i in $1; do\n    if [[ $(expr $i % 2) -eq 1 ]] && [[ $(expr\
    \ $i % 4) -eq 1 ]]; then\n      sum=$(expr $sum + $i)\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Your code here\n  l=$(echo $1 | tr ' ' '\\n')\n  result=0\n  for i in $l;\
    \ do\n    if [ $(($i % 2)) == 1 ]; then\n      result=$(($result + $i))\n    fi\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n a=$1\n  echo ${a[@]} | awk '{for(i=1;i<=NF;i++){if(i%2==0&&$i%2==1){sum+=$i}}}END{print\
    \ sum}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsdlynqy3.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -i res=0\n  local -i n=0\n  for i in $1; do\n    if [ $(( n % 2 )) -eq\
    \ 0 ] && [ $(( i % 2 )) -ne 0 ]; then\n      res=$(( res + i ))\n    fi\n    n=$((\
    \ n + 1 ))\n  done\n  echo \"$res\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  n=( $1 )\n  odd=()\n  for (( i=0; i<${#n[@]}; i++ )); do\n    if (( ($i % 2)\
    \ == 0 )); then\n      if (( (${n[$i]} % 2) == 1 )); then\n        odd+=( ${n[$i]}\
    \ )\n      fi\n    fi\n  done\n  echo $(( $(IFS='+'; echo \"${odd[*]}\") ))\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # $1  - space-separated list\n  # $2  - index of the item in the list\n  #\
    \ $3  - sum of the odd elements\n  # $4  - space-separated list of items in even\
    \ positions\n  # $5  - space-separated list of items in odd positions\n  # $6\
    \  - list separator\n  # $@  - all positional parameters\n  local space_separated_list=\"\
    $1\"\n  local index=$2\n  local sum=$3\n  local space_separated_list_even=$4\n\
    \  local space_separated_list_odd=$5\n  local separator=$6\n  if [[ -z $separator\
    \ ]]; then\n    separator=' '\n  fi\n  local list=($space_separated_list)\n  local\
    \ index_even=$((index % 2))\n  local item=${list[$index]}\n  if [[ $index_even\
    \ == 0 ]]; then\n    space_separated_list_even+=\"$item\"\n  else\n    space_separated_list_odd+=\"\
    $item\"\n  fi\n  if [[ -n $item ]]; then\n    solution \"$space_separated_list\"\
    \ \"$((index + 1))\" \"$sum\" \"$space_separated_list_even\" \"$space_separated_list_odd\"\
    \ \"$separator\"\n  else\n    local even_items=($space_separated_list_even)\n\
    \    local odd_items=($space_separated_list_odd)\n    for item in \"${odd_items[@]}\"\
    ; do\n      sum=$((sum + item))\n    done\n    echo \"$sum\"\n  fi\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    echo \"$1\" | cut -d' ' -f2- | awk '{for(i=1;i<=NF;i++)if(i%2==0)s+=$i}END{print\
    \ s}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for i in ${!arr[@]}; do\n    if [ $((i\
    \ % 2)) == 0 ] && [ $((arr[i] % 2)) == 1 ]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu90nr20m.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=$'\\n'\n  echo \"$1\" | sed -n 's/\\([0-9]\\)\\s/\\1+/gp' | bc\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \" $1 \" | awk '{\n  l=split($0,a,\" \")\n  for(i=1;i<=l;i++)\n    if(i%2==0\
    \ && a[i]%2!=0)\n      sum+=a[i]\n  print sum\n  }'\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Define a space-separated list of words\n  space_separated_list=\"$1\"\n \
    \ # Output the words one per line by replacing every space with a newline\n  printf\
    \ \"$space_separated_list\" | tr \" \" \"\\n\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for idx in ${!array[@]}; do\n    if ((\
    \ ${array[$idx]} % 2 != 0 && idx % 2 == 0 )); then\n      sum=$((sum + ${array[$idx]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a a\n    IFS=' ' read -ra a <<<\"$1\"\n    local oddSum=0\n    for\
    \ ((i=0; i<${#a[@]}; i+=2)); do\n        if (( a[i] % 2 == 1 )); then\n      \
    \      oddSum=$((oddSum + a[i]))\n        fi\n    done\n    echo \"$oddSum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a ints\n  local -i sum=0 i=0\n  # Split the string and convert to an\
    \ array\n  read -a ints <<< \"${1}\"\n  # Iterate through the array and sum all\
    \ odd numbers in even positions\n  for ((i=0; i<${#ints[@]}; i+=2)); do\n    ((\
    \ ints[i] % 2 )) && (( sum += ints[i] ))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here...\n  echo \"\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  local tmpArr=($arr)\n  local evenIdx=$((${#tmpArr[@]} %\
    \ 2))\n  local sum=0\n  for (( i = evenIdx; i < ${#tmpArr[@]}; i++ )); do\n  \
    \  if [[ $((${tmpArr[$i]} % 2)) -eq 1 ]]; then\n      sum=$(($sum + ${tmpArr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf_0qfmlj.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    echo \"$1\" | tr ' ' '\\n' | awk 'NR%2==0 && $1%2==1{s+=$1}END{print s}'\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local result=\"0\"\n    local index=\"0\"\n    for number in $1; do\n   \
    \     if [ \"$(( index % 2 ))\" -eq \"0\" ] && [ \"$(( number % 2 ))\" -eq \"\
    1\" ]; then\n            result=$(( result + number ))\n        fi\n        index=$((\
    \ index + 1 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    declare -a arr=(\"$@\")\n    sum=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        if [[ \"$((i % 2))\" -eq 0 ]] && [[ \"$((arr[i] % 2))\" -eq 1 ]]; then\n\
    \            sum=$((sum + arr[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0zpkkkqb.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tprintf '%s\\n' \"$1\" | awk '{for(i=1;i<=NF;i+=2)s+=$i;print s}'\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  for n in $1\n  do\n    ((n%2==0)) && (($i%2==0)) && ((total+=n))\n    ((i++))\n\
    \  done\n  echo $total\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local res=()\n  for ((i=0; i<$#; i++)); do\n    [ $((i%2)) -eq 0 ] && echo\
    \ \"$@\" | cut -d ' ' -f $((i+1)) | grep -q '[13579]' && res+=($(echo \"$@\" |\
    \ cut -d ' ' -f $((i+1))))\n  done\n  echo \"${res[@]}\" | tr ' ' '+' | bc\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local output=\"\"\n  local i=0\n  local number\n\n  for number\
    \ in $input; do\n    if [ $(( i % 2 )) -eq 0 ] && [ $(( number % 2 )) -ne 0 ];\
    \ then\n      output=$(( output + number ))\n    fi\n    i=$(( i + 1 ))\n  done\n\
    \n  echo $output\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  result=0\n\n  while [ -n \"$1\" ]; do\n    # if the number is odd\n    if [\
    \ $(( $1 % 2 )) -ne 0 ]; then\n      result=$(( $result + $1 ))\n    fi\n\n  \
    \  shift\n  done\n\n  echo $result\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd5ar4rwb.sh: line 17: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local array=($1)\n  for((i=0;i<${#array[@]};i++));do\n    if\
    \ [[ $(($i % 2)) == 0 ]] && [[ $((${array[$i]} % 2)) == 1 ]]; then\n      sum=$(($sum\
    \ + ${array[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # Your solution here\n    list=$(echo $1 | tr \" \" \"\\n\")\n    res=0\n\
    \    count=0\n    for num in $list\n    do\n        if [ $((count % 2)) -eq 0\
    \ ] && [ $((num % 2)) -ne 0 ]\n        then\n            res=$((res + num))\n\
    \        fi\n        count=$((count + 1))\n    done\n    echo $res\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local pos=1\n  local total=0\n  for num in $list; do\n   \
    \ [[ $((pos % 2)) -eq 0 ]] && ((num % 2)) && total=$((total + num))\n    ((pos++))\n\
    \  done\n  echo $total\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a A\n  for n in $1; do\n    A+=($n)\n  done\n  res=0\n  i=0\n  while\
    \ [ $i -lt ${#A[@]} ]; do\n    if [ $((${A[$i]} % 2)) -eq 1 ] && [ $(($i % 2))\
    \ -eq 0 ]; then\n      res=$(($res + ${A[$i]}))\n    fi\n    i=$(($i + 1))\n \
    \ done\n  echo $res\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  set -- $1\n  for i in \"$@\"; do\n    if [[ $((i%2)) == 1 ]]; then\n      echo\
    \ $i\n    fi\n  done | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # ...\n  res=0\n  for i in $1\n  do\n    if [[ $((i%2)) -eq 1 ]]\n    then\n\
    \      res=$((res+i))\n    fi\n  done\n  echo $res\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=\"$1\"\n    local sum=0\n    local i=0\n    for num in $list;\
    \ do\n        if [ $(($i % 2)) -eq 0 ] && [ $(($num % 2)) -ne 0 ]; then\n    \
    \        sum=$(($sum + $num))\n        fi\n        ((i++))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sums_of_evens_of_odds=0\n    local i=0\n    for number in $1; do\n\
    \        if [ $(($i % 2)) -eq 0 ]; then\n            if [ $(($number % 2)) -ne\
    \ 0 ]; then\n                sums_of_evens_of_odds=$(($sums_of_evens_of_odds +\
    \ $number))\n            fi\n        fi\n        i=$(($i + 1))\n    done\n   \
    \ echo \"$sums_of_evens_of_odds\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a a=($1)\n  total=0\n  i=0\n  while [ $i -lt ${#a[@]} ]; do\n    if\
    \ [[ $(($i % 2)) == 0 ]] && [[ $((${a[$i]} % 2)) == 1 ]]; then\n      total=$(($total\
    \ + ${a[$i]}))\n    fi\n    i=$(($i + 1))\n  done\n  echo $total\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local odd_even=()\n    local sum=0\n    # iterate over all elements in the\
    \ list\n    # using whitespace as IFS\n    for i in $1; do\n        # index 0\
    \ is odd, index 1 is even, ...\n        local odd=$(( i % 2 ))\n        # if we're\
    \ at an even index in the list\n        if [[ ${odd_even[odd]} -eq 1 ]]; then\n\
    \            # and if the element is odd\n            if [[ $i -gt 0 ]]; then\n\
    \                sum=$(( sum + i ))\n            fi\n        fi\n        # flip\
    \ the bit\n        odd_even[odd]=$(( 1 - odd_even[odd] ))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1) # array with the given string\n  local -i sum=0 # result\n\
    \  for ((i=0; i<${#list[@]}; i+=2)); do # iterate over the indexes of the array\
    \ in steps of 2\n    if [[ ${list[$i]}%2 -ne 0 ]]; then # if the value of the\
    \ element (index $i) is odd\n      sum+=${list[$i]} # add the value to the result\n\
    \    fi\n  done\n  echo $sum # output the result\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -i o=0; # odd index\n  declare -i e=0; # even index\n  declare -i s=0;\
    \ # sum\n  declare -a a=($1);\n  for n in \"${a[@]}\"; do\n    if [[ o%2 -eq 0\
    \ ]]; then\n      s+=$n;\n    fi\n    ((o++))\n  done\n  echo $s\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  sum=0\n  for i in $1; do\n    # [ $((i % 2)) -eq 0 ] && [ $((i % 3)) -eq 0\
    \ ] && [ $((i % 5)) -eq 0 ] && sum=$((sum + i))\n    # [ $((i % 2)) -eq 0 ] &&\
    \ echo $i | grep -q '[02468]' && sum=$((sum + i))\n    [ $((i % 2)) -eq 0 ] &&\
    \ [ $((i % 5)) -eq 0 ] && [ $((i % 7)) -eq 0 ] && sum=$((sum + i))\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for num in $1; do\n    if (( num % 2 == 1 )); then\n      ((\
    \ sum += num ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    l=$1\n    for i in $l; do\n        (( $i % 2 == 0 )) && (( $c % 2 == 0 ))\
    \ && (( res += $i ))\n        (( c++ ))\n    done\n    echo $res\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=$(echo $1 | tr ' ' '\\n')\n    local sum=0\n    local count=0\n\
    \    for num in $list; do\n        if [ $((count % 2)) -eq 0 ] && [ $((num % 2))\
    \ -ne 0 ]; then\n            sum=$((sum + num))\n        fi\n        count=$((count\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  numbers=$1\n  echo \"The numbers are: $numbers\"\n  sum=0\n  i=0\n  while [\
    \ $i -lt $((${#numbers}+1)) ]; do\n    # echo \"The index is: $i\"\n    number=$(echo\
    \ $numbers | cut -d \" \" -f $i)\n    # echo \"The number is: $number\"\n    if\
    \ [ $((i%2)) -eq 0 ] && [ $((number%2)) -ne 0 ]; then\n      sum=$((sum+number))\n\
    \    fi\n    i=$((i+1))\n  done\n  echo \"The sum is: $sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sum=0\n    for ((i=0; i<${#1}; i++)); do\n        local current_number=\"\
    ${1:$i:1}\"\n        if ((current_number % 2 != 0 && i % 2 == 0)); then\n    \
    \        sum=$((sum + current_number))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # TODO: Write your code here...\n    echo \"Not implemented\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a nums=($1)\n  local sum=0\n  for (( i=0; i<${#nums[@]}; i+=2 )); do\n\
    \    [[ \"${nums[$i]}\" =~ ^[0-9]+$ ]] || continue\n    (( nums[$i]%2 != 0 ))\
    \ && (( sum+=nums[$i] ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here\n  printf \"1. solution\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i\n  local sum=0\n  for i in $(echo $1 | tr \" \" \"\\n\")\n  do\n  \
    \  if [ $((i % 2)) -eq 1 ] && [ $((i % 4)) -eq 1 ]\n    then\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  printf \"$1\" | awk '\n  {\n    sum = 0\n    for (i = 1; i <= NF; i += 2) {\n\
    \      if (i % 4 == 0) {\n        sum += $i\n      }\n    }\n    print sum\n \
    \ }\n  '\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a elements\n    elements=($1)\n    local sum=0\n    for ((i=0; i<${#elements[@]};\
    \ i++)); do\n        if [ $((i % 2)) == 0 ]; then\n            if [ $((elements[i]\
    \ % 2)) == 1 ]; then\n                sum=$((sum + elements[i]))\n           \
    \ fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    n=${1:$i:1}\n    (( i % 2 == 0 )) && ((\
    \ n % 2 == 1 )) && (( sum += n ))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # TODO: Write solution here\n  sum=0\n  array=($1)\n  n=${#array[@]}\n  for\
    \ ((i=0; i<n; i++)); do\n    if ((i%2==0)) && ((array[i]%2==1)); then\n      sum=$((sum+array[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local L=${1// /$'\\n'}\n    echo $L | grep -n '^[13579]' | grep -o '[13579]*'\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local result=0\n    for ((idx=1; idx<=$#; idx+=2)); do\n        local num=${!idx}\n\
    \        if (( num % 2 == 1 )); then\n            (( result += num ))\n      \
    \  fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4uw2veqm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for i in $(seq 0 2 $(( ${#1} - 1 )) ); do\n    sum=$(( sum +\
    \ $( cut -d' ' -f$(( $i + 1 )) <<< \"$1\" ) ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqymawrd7.sh: line 15: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  nums=($1)\n  sum=0\n  for ((i=0; i<${#nums[@]}; i+=2)); do\n    [ $((${nums[$i]}\
    \ % 2)) -eq 1 ] && sum=$(($sum + ${nums[$i]}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a list\n  list=($1)\n  sum=0\n  for((i=0;i<${#list[@]};i+=2)); do\n\
    \    if [ $((${list[$i]} % 2)) -ne 0 ]; then\n      sum=$(($sum + ${list[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  numbers=($(echo $1 | tr ' ' '\\n'))\n  for ((i=0; i<${#numbers[@]}; i++));\
    \ do\n    if [ $((i%2)) == 0 ] && [ $((numbers[i]%2)) == 1 ]; then\n      sum=$((sum+numbers[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local sum=0\n  local i=0\n  for num in $list; do\n    (( i\
    \ % 2 == 0 )) && (( num % 2 == 1 )) && (( sum += num ))\n    (( i++ ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local count=0\n  local sum=0\n  for x in $@; do\n    if ((count % 2 == 0))\
    \ && ((x % 2 != 0)); then\n      sum=$((sum + x))\n    fi\n    count=$((count\
    \ + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n p=$1\n  echo \"p = ${p[@]}\"\n  echo \"p = ${p[@]::10}\"\n  local\
    \ arr=(${p[@]})\n  local len=${#arr[@]}\n  echo $len\n  local oddSum=0\n  for\
    \ (( i=0; i<$len; i++ )); do\n    if (( $i % 2 == 0 )) && (( ${arr[$i]} % 2 !=\
    \ 0 )); then\n      (( oddSum += ${arr[$i]} ))\n    fi\n  done\n  echo $oddSum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwo2y8o4f.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -i k=0\n  for i in ${1//[[:space:]]/ }; do\n    ((k+=$i%2==0 && $i%10%2==1?$i:0))\n\
    \  done\n  echo $k\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list\n    local -i pos=0 sum=0\n    list=$(echo $@ | tr ' ' '\\n')\n\
    \    for i in $list; do\n        let \"pos++\"\n        if [[ $(expr $pos % 2)\
    \ -eq 0 ]] && [[ $(expr $i % 2) -ne 0 ]]; then\n            let \"sum += $i\"\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr=($1)\n  local sum=0\n  for((i=0;i<${#arr[@]};i++)); do\n    if [[\
    \ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # solve solution\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphlmm2bkb.sh: line 14: syntax error near unexpected token `}''

    /tmp/tmphlmm2bkb.sh: line 14: `}''

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # Your solution here\n    printf '%s\\n' \"$1\" | awk '{for(i=1;i<=NF;i+=2)t+=$i}END{print\
    \ t}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal -n array=\"(${1// / })\"; local i=0; local sum=0\n\twhile [ $i -lt ${#array[@]}\
    \ ]; do\n\t\tif [ $((${array[$i]}%2)) -eq 1 ] && [ $(($i%2)) -eq 0 ]; then\n\t\
    \t\tsum=$(($sum+${array[$i]}))\n\t\tfi\n\t\ti=$(($i+1))\n\tdone\n\techo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_75tr2ep.sh: line 13: local: `(5 8 7 1)'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local a=()\n    for i in $1; do\n        a+=(\"$i\")\n    done\n    local\
    \ total=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        if [ $((i % 2)) -eq 0\
    \ ] && [ $((a[i] % 2)) -eq 1 ]; then\n            total=$((total + a[i]))\n  \
    \      fi\n    done\n    echo \"$total\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | \n    awk '{\n            for (i=1; i<=NF; i++) {\n         \
    \     if (i % 2 == 0 && $i % 2 == 1)\n                sum += $i\n            }\n\
    \            print sum\n          }'\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # write your solution here\n  #echo $1\n  echo \"$1\" | tr ' ' '\\n' | awk\
    \ 'NR%2==0 && $1%2!=0 {sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # INSERT CODE HERE\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp800r14q0.sh: line 14: syntax error near unexpected token `}''

    /tmp/tmp800r14q0.sh: line 14: `}''

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  printf \"%s\\n\" \"$1\" | awk '{\n    for (i = 1; i <= NF; i++) {\n      if\
    \ (i % 2 == 0 && $i % 2 == 1) {\n        sum += $i\n      }\n    }\n  } END {\n\
    \    print sum\n  }'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | tr \" \" \"\\n\" | nl | awk '\n    $1 % 2 == 0 && $2 % 2 == 1\
    \ {sum += $2}\n    END {print sum}\n  '\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | awk '{ for (i=1; i<=NF; i++) if (i%2 == 0 && $i%2 == 1) sum+=$i;\
    \ print sum }'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n x=$1\n    # x=$(echo \"$x\" | tr ' ' '\\n')\n    local -i y=0\n\
    \    for i in ${x[@]}; do\n        if ((i%2)); then\n            ((y+=i))\n  \
    \      fi\n    done\n    printf \"%d\" $y\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu7d5ndnf.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  sum=0\n  for (( i=1; i<=$#; i++ )); do\n    (( i % 2 == 0 )) && (( $i % 2 !=\
    \ 0 )) && (( sum += $i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local result=0\n  local i=0\n  for e in $1; do\n    # echo \"$e\"\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((e % 2)) -ne 0 ]; then\n      result=$((result + e))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=\"$1\"\n  local sum=0\n  local element=0\n  local odd=$(echo \"\
    $input\" | awk '{print $1%2}')\n  local position=0\n  for element in $input; do\n\
    \    if [ $odd -eq 1 ] && [ $((++position % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + element))\n    fi\n    odd=$((odd + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  sum=0\n  # IMPLEMENTATION GOES HERE\n  for i in ${1// / }; do\n    if (($i%2==1));\
    \ then\n      ((sum+=$i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local output=()\n  local array=()\n  IFS=\" \" read -ra array <<< \"${1}\"\n\
    \  for (( i=0; i<${#array[@]}; i++ ))\n  do\n    if [[ $(( $i % 2 )) -eq 0 ]]\
    \ && [[ $(( ${array[$i]} % 2 )) -ne 0 ]]\n    then\n      output+=(${array[$i]})\n\
    \    fi\n  done\n  echo $(IFS=+; echo \"${output[*]}\") | bc\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a a=\"$1\"\n  sum=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((\
    \ i % 2 == 0 )); then\n      (( a[i] % 2 != 0 )) && (( sum += a[i] ))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuhptvp1t.sh: line 17: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr=(\"$@\")\n  local sum=0\n  for (( i=0; i<${#arr[@]}; i+=2 )); do\n\
    \    if [ $(( arr[i] % 2 )) -ne 0 ]; then\n      sum=$(( sum + arr[i] ))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwrbh5xtf.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  awk '{for(i=1;i<=NF;i++) if(i%2==0 && $i%2==1)s+=$i}END{print s}' <<< \"$1\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | sed 's/ /\\n/g' | awk 'NR%2==0{sum+=$1}END{print sum}'\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local solution=0\n  local num\n  local index=0\n  for num in $@; do\n    if\
    \ [ $(( index % 2 )) -eq 0 ] && [ $(( num % 2 )) -ne 0 ]; then\n      solution=$((\
    \ solution + num ))\n    fi\n    index=$(( index + 1 ))\n  done\n  echo \"$solution\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for (( i=1; i<$#; i+=2 )); do\n    num=${!i}\n    if (( num%2\
    \ == 1 )); then\n      (( sum+=num ))\n    fi\n  done\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list_of_ints=$1\n  local even_pos=0\n  local sum=0\n  for word in $list_of_ints;\
    \ do\n    if [ $((even_pos % 2)) -eq 0 ] && [ $((word % 2)) -ne 0 ]; then\n  \
    \    sum=$((sum + word))\n    fi\n    even_pos=$((even_pos + 1))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=($(echo $1 | tr ' ' '\\n'))\n  local length=\"${#input[@]}\"\n\
    \  local result=0\n  for (( i=0; i<$length; i+=2 )); do\n    (( \"${input[$i]}\"\
    %2==1 )) && result=$((result+input[$i]))\n  done\n  echo $result\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo $1 | tr ' ' '\\n' | awk 'NR%2==0' | grep -v -E '^\\d*[02468]$' | paste\
    \ -sd+ - | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i\n    local result=0\n    local -a arr=($1)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if [[ ${arr[$i]} -gt 0 ]] && [[ ${arr[$i]}%2 -eq 1 ]] &&\
    \ [[ $((i%2)) -eq 0 ]]; then\n            result=$((result+arr[$i]))\n       \
    \ fi\n    done\n    echo $result\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local SIZE\n    IFS=' ' read -ra ARR <<< \"${1}\"\n    SIZE=${#ARR[@]}\n\
    \    echo \"${SIZE}\"\n    local COUNT=0\n    local SUM=0\n    while [ \"${COUNT}\"\
    \ -lt \"${SIZE}\" ]; do\n        local NUM=${ARR[${COUNT}]}\n        if [ \"$((\
    \ ${NUM} % 2 ))\" -eq \"1\" ] && [ \"$(( ${COUNT} % 2 ))\" -eq \"0\" ]; then\n\
    \            SUM=$(( ${SUM} + ${NUM} ))\n        fi\n        COUNT=$(( ${COUNT}\
    \ + 1 ))\n    done\n    echo \"${SUM}\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # write your solution here\n  echo \"\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local -i sum=0\n  # local -a array=(${list// / })\n  # for\
    \ ((i=0; i<${#array[@]}; i++)); do\n  #   if (((i % 2) == 0)) && (((array[i] %\
    \ 2) == 1)); then\n  #     sum=$((sum + array[i]))\n  #   fi\n  # done\n  # echo\
    \ \"$sum\"\n  for i in ${list// / }; do\n    if (((i % 2) == 1)); then\n     \
    \ ((sum += i))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr=(\"$@\")\n  local out\n  for i in ${!arr[@]}; do\n    if [[ \"$((i\
    \ % 2))\" == 0 && \"$((arr[i] % 2))\" == 1 ]]; then\n      out=$((out + arr[i]))\n\
    \    fi\n  done\n  echo \"$out\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg0ufgn6a.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660022714
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  while IFS= read -r -d ' '; do\n    local number=$REPLY\n   \
    \ if (( number % 2 == 1 )); then\n      (( sum += number ))\n    fi\n  done <<<\
    \ \"$1\"\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660022714

name: HumanEval_27_flip_case
language: sh
prompt: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n# $1\
  \ is a string\nflip_case() {\n"
tests: "}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n\
  \    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
  \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
completions: ['    echo $1 | tr [A-Z] [a-z] | tr [a-z] [A-Z]', '    printf "${1^^}\n"',
  "    local L=$(echo $1 | sed -e 's/\\(.\\)/\\U\\1/g')\n    local U=$(echo $1 | sed\
    \ -e 's/\\(.\\)/\\L\\1/g')\n    echo \"${L//[A-Z]/$U}\"", "    perl -e \"use feature\
    \ 'unicode_strings'; print lc $1;\"", "  if [[ $# -ne 1 ]]; then\n    err \"flip_case\
    \ requires exactly 1 argument\"\n    return 1\n  fi\n\n  if [[ -z $1 ]]; then\n\
    \    echo \"\"\n    return 0\n  fi\n\n  local string=$1\n  local result=\"\"\n\
    \  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n \
    \   if [[ $char =~ [a-z] ]]; then\n      result+=\"${char^^}\"\n    elif [[ $char\
    \ =~ [A-Z] ]]; then\n      result+=\"${char,,}\"\n    else\n      result+=\"$char\"\
    \n    fi\n  done\n\n  echo \"$result\"", "    printf '%s\\n' \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  tr '[:upper:]' '[:lower:]' <<<\
    \ \"$1\" | tr '[:lower:]' '[:upper:]'", "  if (( $# != 1 )); then\n    echo \"\
    $FUNCNAME: usage: $FUNCNAME string\" >&2\n    return 1\n  fi\n  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  local s=\"$1\"\n\
    \  local flipped=\"\"\n  local char=\"\"\n  for (( i=0; i<${#s}; i++ )); do\n\
    \    char=\"${s:$i:1}\"\n    if [[ \"$char\" =~ [a-z] ]]; then\n      flipped+=\"\
    $(toupper \"$char\")\"\n    elif [[ \"$char\" =~ [A-Z] ]]; then\n      flipped+=\"\
    $(tolower \"$char\")\"\n    else\n      flipped+=\"$char\"\n    fi\n  done\n \
    \ echo \"$flipped\"", "    if [ $# -ne 1 ]; then\n        log \"flip_case() requires\
    \ 1 argument\"\n        return 1\n    fi\n\n    # flip the case of each character\n\
    \    echo \"$1\" | tr '[A-Z]' '[a-z]' | tr '[a-z]' '[A-Z]'", "    eval \"echo\
    \ '$1' | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\"", " \
    \   python -c \"print('$1'.swapcase())\"", "  echo $1 | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "    local chars flipped\n\n    chars=( {a..z}\
    \ {A..Z} )\n\n    for (( i=0; i<${#chars[@]}; i++ )); do\n        [[ ${chars[$i]}\
    \ == [[:lower:]] ]] &&\n            flipped+=\"${chars[i+26]}\" ||\n         \
    \   flipped+=\"${chars[i-26]}\"\n    done\n\n    echo \"${@,,}\" | tr \"${chars[*]}\"\
    \ \"${flipped[*]}\"", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", '  echo "$1" | tr "[:upper:]" "[:lower:]" | tr "[:lower:]" "[:upper:]"',
  "  # TODO: flip the case of string.\n  # Hint: use tr.\n  echo \"$1\" | tr \"[:upper:]\"\
    \ \"[:lower:]\" | tr \"[:lower:]\" \"[:upper:]\"", "    local str=$1\n\n    #\
    \ Convert to lowercase\n    str=$(to_lowercase \"$str\")\n\n    # Flip case\n\
    \    local i=0\n    local new_string=\"\"\n    while [[ $i -lt ${#str} ]]; do\n\
    \        local c=${str:$i:1}\n        if [[ \"$c\" =~ [a-z] ]]; then\n       \
    \     new_string+=\"${c^^}\"\n        else\n            new_string+=\"${c,,}\"\
    \n        fi\n        i=$((i+1))\n    done\n\n    echo \"$new_string\"", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'"]
stop_tokens:
- "\n}"

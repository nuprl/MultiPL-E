name: HumanEval_13_greatest_common_divisor
language: sh
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> $(greatest_common_divisor \"3\" \"5\")\n# \"1\"\n# >>> $(greatest_common_divisor\
  \ \"25\" \"15\")\n# \"5\"\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor()\
  \ {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    local quotient\n    local remainder\n    while true; do\n     \
    \   # Use modulus operator to find remainder\n        remainder=$(($1 % $2))\n\
    \        if [ $remainder -eq 0 ]; then\n            # Break if remainder is 0\n\
    \            break\n        fi\n        # Find new divisor\n        quotient=$(($1\
    \ / $2))\n        # Update divisor\n        1=$2\n        # Update dividend\n\
    \        2=$remainder\n    done\n    # Return value\n    echo $2", "    local\
    \ a=\"$1\"\n    local b=\"$2\"\n    if [[ \"$b\" == \"0\" ]]; then\n        echo\
    \ \"$a\"\n    else\n        local remainder=$((a % b))\n        greatest_common_divisor\
    \ \"$b\" \"$remainder\"\n    fi", "    local _a=$1\n    local _b=$2\n    local\
    \ _rest=0\n    local _result=0\n    until [ -z $_a ] || [ -z $_b ]; do\n     \
    \   if [ $_a -gt $_b ]; then\n            let _rest=$_a%$_b\n            _a=$_rest\n\
    \        else\n            let _rest=$_b%$_a\n            _b=$_rest\n        fi\n\
    \    done\n    if [ -z $_a ]; then\n        _result=$_b\n    else\n        _result=$_a\n\
    \    fi\n    echo $_result", "  local a=$1\n  local b=$2\n  local tmp\n  while\
    \ (( b > 0 )); do\n    tmp=$b\n    b=$(( a % b ))\n    a=$tmp\n  done\n  echo\
    \ $a", "  local -r a=\"$1\"\n  local -r b=\"$2\"\n  if [ \"$b\" == \"0\" ]; then\n\
    \    echo \"$a\"\n  else\n    greatest_common_divisor \"$b\" \"$((a % b))\"\n\
    \  fi", "    if [[ \"$1\" == 0 ]]; then\n        echo \"$2\"\n    else\n     \
    \   echo \"$(greatest_common_divisor $(( $2 % $1 )) $1)\"\n    fi", "  if [ \"\
    $1\" -eq \"$2\" ]; then\n    echo \"$1\"\n  elif [ \"$1\" -gt \"$2\" ]; then\n\
    \    local _factor=\"$(factor \"$1\")\"\n    local _commons=\"$(factor \"$2\"\
    )\"\n    local _common_factors=\"$(comm -12 <(echo \"$_factor\") <(echo \"$_commons\"\
    ))\"\n    local _max=\"$(sort -rn <<< \"$_common_factors\" | head -n 1)\"\n  \
    \  echo \"$_max\"\n  else\n    local _factor=\"$(factor \"$2\")\"\n    local _commons=\"\
    $(factor \"$1\")\"\n    local _common_factors=\"$(comm -12 <(echo \"$_factor\"\
    ) <(echo \"$_commons\"))\"\n    local _max=\"$(sort -rn <<< \"$_common_factors\"\
    \ | head -n 1)\"\n    echo \"$_max\"\n  fi", "    if [[ \"$1\" -eq \"$2\" ]];\
    \ then\n        echo \"$1\"\n    elif [[ \"$1\" -gt \"$2\" ]]; then\n        remainder=$((\
    \ $1 % $2 ))\n        if [[ \"$remainder\" -eq 0 ]]; then\n            echo \"\
    $2\"\n        else\n            greatest_common_divisor \"$2\" \"$remainder\"\n\
    \        fi\n    else\n        remainder=$(( $2 % $1 ))\n        if [[ \"$remainder\"\
    \ -eq 0 ]]; then\n            echo \"$1\"\n        else\n            greatest_common_divisor\
    \ \"$1\" \"$remainder\"\n        fi\n    fi", "  local divisor=$1\n  local dividend=$2\n\
    \  local reminder=$((dividend % divisor))\n  if [ $reminder -eq 0 ]; then\n  \
    \  echo $divisor\n  else\n    greatest_common_divisor $reminder $divisor\n  fi",
  "    a=$1\n    b=$2\n    while [ $b -ne 0 ]; do\n        tmp=$b\n        b=$(($a\
    \ % $b))\n        a=$tmp\n    done\n    echo $a", "    local a=$1\n    local b=$2\n\
    \    local c=0\n    while [ $b -ne 0 ]; do\n        c=$b\n        b=$(($a % $b))\n\
    \        a=$c\n    done\n    echo $a", "    local a=$1\n    local b=$2\n    while\
    \ [ $b -ne 0 ]; do\n        local t=$b\n        b=$(($a % $b))\n        a=$t\n\
    \    done\n    echo $a", "    local a=${1}\n    local b=${2}\n    if [ ${a} -lt\
    \ ${b} ]; then\n        a=${b}\n        b=${1}\n    fi\n    while [ ${b} -ne 0\
    \ ]; do\n        a=$(expr ${a} - ${b})\n        if [ ${a} -lt ${b} ]; then\n \
    \           a=${b}\n            b=${a}\n        fi\n    done\n    echo ${a}",
  "    local a=$1\n    local b=$2\n    while [ ! \"$b\" -eq \"0\" ]; do\n        local\
    \ rem=$(($a % $b))\n        a=$b\n        b=$rem\n    done\n    echo $a", "  \
    \  a=$1\n    b=$2\n    while [ $b -ne 0 ]; do\n        remainder=$((a % b))\n\
    \        a=$b\n        b=$remainder\n    done\n    echo $a", "    local a=\"$1\"\
    \n    local b=\"$2\"\n    local remainder=\"$a\"\n    local remainder_\n    while\
    \ [[ $remainder -ne 0 ]]; do\n        remainder_=$remainder\n        remainder=$((a\
    \ % b))\n        a=$b\n        b=$remainder\n    done\n    echo \"$remainder_\"",
  "    if [ \"$1\" -eq 0 ]; then\n        echo \"$2\"\n    else\n        echo \"$(greatest_common_divisor\
    \ \"$(( $2 % $1 ))\" \"$1\")\"\n    fi", "  local -i a=${1}\n  local -i b=${2}\n\
    \  local -i c=0\n  while (( a != 0 ))\n  do\n    c=$a\n    a=$b%$a\n    b=$c\n\
    \  done\n  echo $b", "    local a=$1\n    local b=$2\n    while [ $b -ne 0 ];\
    \ do\n        local r=$((a % b))\n        a=$b\n        b=$r\n    done\n    echo\
    \ $a", "    local a=$1 b=$2;\n    while [[ b != 0 ]]; do\n        let \"temp =\
    \ a % b\" && a=$b && b=$temp;\n    done;\n    echo $a;"]
stop_tokens:
- "\n}"

name: HumanEval_162_string_to_md5
language: sh
prompt: "#!/bin/bash\n# Given a string 'text', return its md5 hash equivalent string.\n\
  # If 'text' is an empty string, return None.\n# >>> $(string_to_md5 \"Hello world\"\
  )\n# \"3e25960a79dbc69b674cd4ec67a72c62\"\n#\n# $1 is a string\nstring_to_md5()\
  \ {\n"
tests: "}\n\ncandidate() {\n    string_to_md5 \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"Hello world\") = \"3e25960a79dbc69b674cd4ec67a72c62\" ]]\n\
  \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"A B C\") = \"0ef78513b0cb8cef12743f5aeb35f888\"\
  \ ]]\n    [[ $(candidate \"password\") = \"5f4dcc3b5aa765d61d8327deb882cf99\" ]]\n\
  }\n\nrun_test"
completions: ["    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo -n \"$1\" | md5sum | cut -d ' ' -f 1\n    fi", "    echo \"$1\" | tr\
    \ -d '\\n' | md5sum | cut -d' ' -f1", "  echo -n \"$1\" | md5sum | awk '{print\
    \ $1}'", "  local text=\"$1\"\n  local md5\n  if [[ -z \"$text\" ]]; then\n  \
    \  echo \"None\"\n  else\n    md5=$(echo -n \"$text\" | md5sum | awk '{print $1}')\n\
    \    echo \"$md5\"\n  fi", "  local input=\"$1\"\n  if [ -z \"$input\" ]; then\n\
    \    echo \"None\"\n  else\n    echo \"$input\" | md5sum | cut -d ' ' -f 1\n \
    \ fi", "  local text=${1}\n  if [[ \"${text}\" == \"\" ]]; then\n    echo \"\"\
    \n  else\n    echo \"${text}\" | md5sum | cut -d \" \" -f 1\n  fi", "    local\
    \ __var=$1\n    local __resultvar=$2\n    if [[ ! -z \"${__var}\" ]]; then\n \
    \       local __out=`echo \"${__var}\" | md5sum | cut -d ' ' -f 1`\n        if\
    \ [[ ! -z \"${__resultvar}\" ]]; then\n            eval $__resultvar=\"'${__out}'\"\
    \n        else\n            echo \"${__out}\"\n        fi\n    fi", "  local original_string\n\
    \  original_string=\"$1\"\n  printf \"%s\" \"$original_string\" | md5sum | cut\
    \ -d' ' -f1", "    if [ $# -eq 0 ]; then\n        echo \"!text\"\n        exit\
    \ 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"!text\"\n        exit\
    \ 1\n    fi\n    echo -n \"$1\" | md5sum | awk '{print $1}'", "  if [ -z \"$1\"\
    \ ]; then\n    printf '%s' \"\"\n  else\n    printf '%s' \"$1\" | \"$PYTHON\"\
    \ -c \"import hashlib; import sys; print(hashlib.md5(sys.stdin.read().encode()).hexdigest())\"\
    \n  fi", "    echo -n \"$1\" | md5sum | awk '{print $1}'", "    echo -n \"$1\"\
    \ | openssl md5 | sed -e 's/.* //'", "    python -c \"import hashlib; print(hashlib.md5('$1'.encode('utf-8')).hexdigest())\"",
  "    echo -n \"$1\" | md5sum | awk '{print $1}'", "  if [ -z \"$1\" ]; then\n  \
    \  echo \"None\"\n  else\n    echo \"$1\" | md5sum | cut -d' ' -f1\n  fi", " \
    \   md5sum <<< \"$1\" | cut -d ' ' -f 1", "    # If 'text' is an empty string,\
    \ return None.\n    if [[ -z \"$1\" ]]; then\n        echo \"\"\n        return\
    \ 0\n    fi\n\n    # Mac OSX sha1sum command is different from GNU sha1sum command\n\
    \    # so the checksum output is different.\n    if [[ \"$(uname)\" == \"Darwin\"\
    \ ]]; then\n        echo \"$1\" | shasum -a 256 | cut -d \" \" -f 1\n    else\n\
    \        echo \"$1\" | sha256sum | cut -d \" \" -f 1\n    fi", "  if [ -z \"$1\"\
    \ ]; then\n    echo \"None\"\n  else\n    echo -n \"$1\" | openssl md5 -hex |\
    \ sed -e 's/^.*= //'\n  fi", "    if [[ -z \"$1\" ]]; then\n        echo \"\"\n\
    \    else\n        echo \"$1\" | md5sum | awk '{print $1}'\n    fi", "    if [\
    \ -z \"$1\" ]; then\n        echo \"\"\n    else\n        echo -n \"$1\" | md5sum\
    \ | awk '{print $1}'\n    fi"]
stop_tokens:
- "\n}"

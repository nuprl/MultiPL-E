language: sh
name: HumanEval_101_words_string
results:
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=\"$1\"\n  local str_arr=()\n  local i=0\n  for word in $str; do\n\
    \    str_arr[$i]=\"\\\"$word\\\"\"\n    i=$((i+1))\n  done\n  echo ${str_arr[@]}\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=\"$1\"\n  echo \"[$(echo \"$string\" | sed -e 's/ /\",\"/g' -e\
    \ 's/,/\",\"/g')]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=\"$1\"\n    local IFS=,\n    local words=($string)\n    local\
    \ array=()\n    for word in \"${words[@]}\"; do\n        word=$(echo \"$word\"\
    \ | sed 's/^ *//g;s/ *$//g')\n        word=\"\\\"$word\\\"\"\n        array+=(\"\
    $word\")\n    done\n    array=(\"${array[@]}\")\n    echo \"${array[@]}\"\n}\n\
    \ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local -a words\n    IFS=$'\\n' read -rd '' -a words <<< \"$(tr ', ' '\\n'\
    \ <<< \"$1\")\"\n    echo -n '['\n    for word in \"${words[@]}\"; do\n      \
    \  echo -n '\"'$word'\"'\n        if [[ $word != \"${words[-1]}\" ]]; then\n \
    \           echo -n ', '\n        fi\n    done\n    echo ']'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words\n  if [[ \"$1\" =~ \",\" ]]; then\n    IFS=, read -ra words <<<\
    \ \"$1\"\n  else\n    IFS=' ' read -ra words <<< \"$1\"\n  fi\n  local quoted_words=()\n\
    \  for word in \"${words[@]}\"; do\n    quoted_words+=(\"\\\"$word\\\"\")\n  done\n\
    \  local words_string\n  words_string=$(IFS=,; echo \"${quoted_words[*]}\")\n\
    \  echo \"[$words_string]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | sed -e 's/ //g' -e 's/,/\" \"/g' -e 's/,/\" \"/g' -e 's/^/\"/'\
    \ -e 's/$/\"/'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$@\" | awk '{for(i=1;i<=NF;i++) {printf(\"\\\"%s\\\" \", $i)}}'\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words\n  local IFS=\",\"\n  for word in $1; do\n    words=(\"${words[@]}\"\
    \ \"\\\"$word\\\"\")\n  done\n  echo ${words[@]}\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  words_array=()\n  for word in $1\n  do\n    words_array+=($word)\n  done\n\
    \  echo ${words_array[@]}\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    printf '[\"%s\"]' $(sed -e 's/,/\",\"/g' <<< $1)\n}\n\ncandidate() {\n  \
    \  words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Change the string to an array and iterate through it\n  for word in $(echo\
    \ $1 | tr -s , | tr , ' '); do\n    # Check if the word is quoted, then print\
    \ it. If not, quote it and print it.\n    [[ ${word:0:1} == '\"' ]] && echo $word\
    \ || echo '\"'$word'\"'\n  done\n}\n\ncandidate() {\n    words_string \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi\
    \ my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  IFS=', ' read -r -a array <<< \"$1\"\n  printf '[%s]\\n' \"${array[@]}\"\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local RESULT=(\"${@:1}\")\n  echo ${RESULT[@]}\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"[${1//, /\\\", \\\"}]\"\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=\"$1\"\n  local words=$(echo \"$str\" | sed -e 's/ /,/g')\n  local\
    \ result=\"[\\\"${words//,/\\\", \\\"}\\\"]\"\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # TODO: your code here\n  echo -n '['\n  for word in $(echo $1 | tr -s ' '\
    \ '\\n' | tr -s ',' '\\n'); do\n    echo -n \"\\\"$word\\\", \"\n  done\n  echo\
    \ -n ']'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [ \"$#\" -eq 1 ]; then\n        local string=$1\n        if [ -n \"$string\"\
    \ ]; then\n            echo -n \"$string\" | awk '{ for (i=1; i<=NF; i++) print\
    \ \"\\\"\"$i\"\\\"\" }'\n        fi\n    fi\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | tr ', ' ' ' | tr -d '\"' | sed 's/\\([^ ]\\)/\"\\1\"/g'\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local IFS=' ,'\n    echo $1 | awk '{for(i=1;i<=NF;i++) print $i}'\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo '[' ${1//[, ]/\"', '\"} ']'\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo -n \"[\"\n  while read -r line; do\n    words=()\n    while IFS= read\
    \ -r -d ' '; do\n      words+=(\"$REPLY\")\n    done <<< \"$line\"\n    echo -n\
    \ \"\\\"${words[0]}\\\"\"\n    unset words[0]\n    for word in \"${words[@]}\"\
    ; do\n      echo -n \", \\\"$word\\\"\"\n    done\n  done <<< \"$1\"\n  echo -n\
    \ \"]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $(echo \"$1\" | tr -s '[:blank:]' ' ' | tr ' ' '\" \"' | sed 's/^/\"/'\
    \ | sed 's/$/\"/' | tr -d ',')\n}\n\ncandidate() {\n    words_string \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi\
    \ my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Omit this line to get a stricter result\n    local string=$(echo $1 | tr\
    \ -d \";, \")\n    local IFS=,\n    declare -a array=($string)\n    echo ${array[@]}\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  words=($(echo $1 | sed -e 's/[, ]/\\n/g'))\n  echo \"[$(IFS=,; echo \"\\\"\
    ${words[*]}\\\"\")]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local split_by_comma=$(echo $1 | tr \",\" \"\\n\")\n    local split_by_space=$(echo\
    \ $split_by_comma | tr \" \" \"\\n\")\n    local filter_empty_array=$(echo $split_by_space\
    \ | tr \"\\n\" \" \")\n    local split_array_with_comma=$(echo $filter_empty_array\
    \ | tr \" \" \",\")\n    echo \"[$split_array_with_comma]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    printf '[\"%s\"]' \"${1//, /\\\",\\\"}\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local words=$(echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n')\n    echo '['\n\
    \    for word in $words; do\n        echo '\"'$word'\"'\n    done\n    echo ']'\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Put your solution code below this line:\n    echo '['${1// /', '}']'\n\n\
    \    # Put your solution code above this line\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Split the string into words\n    local words=$(echo $1 | tr ' ' '\\n' |\
    \ tr ',' '\\n')\n    # Wrap each word in quotes and put it into an array\n   \
    \ words_array=($(for word in $words; do echo \"\\\"$word\\\"\"; done))\n    #\
    \ Echo the array\n    echo ${words_array[@]}\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local words=$(echo \"$1\" | sed 's/,/\\n/g')\n    for word in $words; do\n\
    \        echo \"\\\"$word\\\"\"\n    done\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | sed -e 's/[, ]\\+/\" \"]/g'\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Print the array of words, not one per line\n    # shellcheck disable=SC2068\n\
    \    echo \"$@\" | tr -s '[:space:],' '\\n' | paste -sd '[ %s ]'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # convert the string to an array separated by comma (,)\n  array=$(echo $1\
    \ | tr \" \" \",\")\n  # convert the comma array to a new line separated array\n\
    \  echo \"$array\" | tr \",\" \"\\n\"\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=$1\n\n    # TODO Implement this function\n    echo '[\"hien\"\
    , \"cute\"]'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local str=\"$1\"\n    local arr\n    local i\n    local len\n\n    str=\"\
    ${str// /,}\"\n    IFS=\",\"\n    arr=($str)\n    IFS=\" \"\n    len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        arr[i]=\"\\\"${arr[i]}\\\"\"\n    done\n\
    \    printf \"%s\" \"${arr[@]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi\
    \ my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"`echo \\\"$1\\\" | sed 's/[[:space:]]\\+/,/g'`\"\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | sed 's/\\s\\+/\",\"/g' | sed 's/^/\"/g' | sed 's/$/\"/g'\n}\n\
    \ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=\"$1\"\n  local output=\"\"\n  local word=\"\"\n  local -a words=()\n\
    \n  while [ ${#string} -gt 0 ]; do\n    if [[ \"$string\" =~ ^\\\"([a-zA-Z0-9]+)\\\
    \" ]]; then\n      word=\"${BASH_REMATCH[1]}\"\n      string=\"${string:${#BASH_REMATCH[0]}}\"\
    \n    elif [[ \"$string\" =~ ^[a-zA-Z0-9]+ ]]; then\n      word=\"${BASH_REMATCH[0]}\"\
    \n      string=\"${string:${#BASH_REMATCH[0]}}\"\n    else\n      string=\"${string:1}\"\
    \n    fi\n\n    [ -n \"$word\" ] && {\n      words+=(\\\"$word\\\")\n      word=\"\
    \"\n    }\n  done\n\n  output=\"[${words[*]}]\"\n  echo $output\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local -a words # Declare words as an array\n  IFS=', ' read -r -a words <<<\
    \ \"$1\" # Split $1 into words on commas or spaces\n  printf '[\"%s\"]' \"${words[@]}\"\
    \ # Return the array of words in the format expected\n}\n\ncandidate() {\n   \
    \ words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=\"$1\"\n    local result=\n    for word in $(echo \"$string\"\
    \ | sed -e 's/,/ /g'); do\n        result=\"$result \\\"$word\\\"\"\n    done\n\
    \    echo \"[$result]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"${1//, /\\\", \\\"}\" | sed 's/^/\"/' | sed 's/$/\"/'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # IFS is the internal field separator\n  IFS=\" \";\n  # -a is an array\n \
    \ # $( ) is command substitution\n  # ws is the name of the new array\n  ws=($1);\n\
    \  # declare -p prints the declaration of a variable\n  declare -p ws\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"[$(tr ' ' ',' <<< \"$1\" | sed 's/,/\", \"/g')]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    words=$(sed -E 's/([^, ]+)/\"\\1\"/g' <<< $1)\n    echo \"[$words]\"\n}\n\
    \ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words=($(echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n'))\n  local ret=()\n\
    \  for word in \"${words[@]}\"; do\n    ret+=(\"\\\"$word\\\"\")\n  done\n  echo\
    \ \"${ret[@]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"[$(echo $1 | tr \" \" \",\\n\" | sed 's/^/\"/g' | sed 's/$/\"/g' |\
    \ sed 's/^,/\"/g' | sed 's/$/\"/g')]\"\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"[\"$(echo $1 | sed -e 's/ /\",\"/g' -e 's/,/\", \"/g')\"]\"\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  ## TODO: Implement function\n  # you may use quotes to handle spaces in words\n\
    \  # for example, a word like \"my name\" is two words\n  # depending on the situation,\
    \ you may want to remove the quotes.\n  # Hint: You can use 'tr' to convert all\
    \ commas to spaces\n  ## print the array\n  python -c \"import sys; print('['\
    \ + ','.join(['\\\"{}\\\"'.format(x) for x in sys.argv[1].strip().replace(',',\
    \ ' ').split()]) + ']')\" \"$1\"\n}\n\ncandidate() {\n    words_string \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi\
    \ my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words=$(sed -e 's/\\([^ ][^ ]*\\)/\"\\1\"/g' <<< $1)\n  echo \"[$words]\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | tr \",\" \" \" | tr \" \" \"\\n\" | jq --slurp --raw-input 'split(\"\
    \\n\")'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8y7ygjb3.sh: line 12: jq: command not found

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | sed -e 's/[ ]*,[ ]*/\", \"/g' -e 's/^[ ]*//' -e 's/[ ]*$//' -e\
    \ 's/[ ]\\+/\" \"/g'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [[ -z \"$1\" ]]; then\n        return\n    fi\n\n    # If the string is\
    \ a single word, the value will be surrounded by \"\"\n    # For example:\n  \
    \  # >>> $(words_string \"John\")\n    # ['\"John\"']\n    if [[ \"$1\" =~ ^[a-zA-Z]+$\
    \ ]]; then\n        echo \"[\\\"\"$1\"\\\"]\"\n        return\n    fi\n\n    #\
    \ Get the first word\n    local word=\"$(echo \"$1\" | grep -Eo '^[a-zA-Z]+')\"\
    \n    local rest=\"$(echo \"$1\" | sed 's/^[a-zA-Z]*[ ,]*//')\"\n\n    if [[ -z\
    \ \"$word\" ]]; then\n        return\n    fi\n\n    local words_arr=$(words_string\
    \ \"$rest\")\n    if [[ -z \"$words_arr\" ]]; then\n        echo \"[\\\"\"$word\"\
    \\\"]\"\n    else\n        echo \"[\\\"\"$word\"\\\", $words_arr]\"\n    fi\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local array_of_words\n    local IFS=$'\\n'\n    array_of_words=($(echo $1\
    \ | sed -e 's/[[:space:]]\\+/,/g'))\n    echo ${array_of_words[@]}\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 2
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  printf \"[%s]\" \"$(sed -r 's/ *([, ]+) */\" \"\\1\"/g\" <<< $1)\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpse65xu2r.sh: line 12: unexpected EOF while looking for matching
    `''''

    /tmp/tmpse65xu2r.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 2
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=\"$1\"\n    local words=()\n    local word=\"\"\n    local escaped=false\n\
    \    local double_quote=false\n    local single_quote=false\n    local is_space=false\n\
    \    local is_comma=false\n    local i=0\n    local j=0\n    local len=${#string}\n\
    \    local chr=\"\"\n\n    for ((i=0; i<len; i++)); do\n        chr=\"${string:$i:1}\"\
    \n        is_space=$(is_space \"$chr\")\n        is_comma=$(is_comma \"$chr\"\
    )\n\n        if [[ \"$chr\" == '\\\\' ]]; then\n            escaped=true\n   \
    \     elif [[ \"$chr\" == '\"' ]]; then\n            if [[ \"$double_quote\" ==\
    \ false ]]; then\n                double_quote=true\n            else\n      \
    \          double_quote=false\n            fi\n        elif [[ \"$chr\" == \"\
    '\" ]]; then\n            if [[ \"$single_quote\" == false ]]; then\n        \
    \        single_quote=true\n            else\n                single_quote=false\n\
    \            fi\n        elif [[ \"$is_space\" == true ]] && [[ \"$is_comma\"\
    \ == false ]]; then\n            if [[ \"$single_quote\" == false ]] && [[ \"\
    $double_quote\" == false ]]; then\n                word=\"$(echo \"$word\" | sed\
    \ -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g')\"\n                words+=(\"\
    $word\")\n                word=\"\"\n            else\n                word+=\"\
    $chr\"\n            fi\n        elif [[ \"$is_comma\" == true ]]; then\n     \
    \       if [[ \"$single_quote\" == false ]] && [[ \"$double_quote\" == false ]];\
    \ then\n                word=\"$(echo \"$word\" | sed -e 's/^[[:space:]]*//g'\
    \ -e 's/[[:space:]]*$//g')\"\n                words+=(\"$word\")\n           \
    \     word=\"\"\n            else\n                word+=\"$chr\"\n          \
    \  fi\n        else\n            word+=\"$chr\"\n        fi\n   \n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0b__7aes.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmp0b__7aes.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | awk '{split($0,out,\"[, ]\"); for (i in out) {print \"\\\"\"\
    out[i]\"\\\"\"}}'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" |\n    sed -e 's/\\s/,/g' |\n    awk -F, '{for (i=1; i<=NF; i++)\
    \ printf(i==1?\"[\":\",\"); printf \"\\\"%s\\\"\", $i; print \"]\"}'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    words=()\n    while IFS=$'[,| ]' read -ra word; do\n        words+=(\"\\\"\
    ${word}\\\"\")\n    done <<< \"$1\"\n    echo \"${words[@]}\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  OLDIFS=\"$IFS\"\n  local IFS=\", \"\n  read -r -a array <<<\"$1\"\n  IFS=\"\
    $OLDIFS\"\n  echo \"${array[@]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | sed -e 's/ //g' | tr ',' '\\n' | tr -d '\"' | jq -R 'split(\"\\\
    n\")'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n   \
    \ [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcr6rorry.sh: line 12: jq: command not found

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local IFS=\",\"\n    local word=''\n    local words=('')\n    word=$(echo\
    \ $1 | sed -E 's/[[:space:]]+//g')\n    words=($word)\n    echo ${words[@]}\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | awk '{print \"\\x27\"$1\"\\x27\"\
    }' | xargs\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    awk -F'[, ]' '{print $1}' <<< $1\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | sed -e 's/[ \\t]\\+/,/g' | sed -e 's/^,//' -e 's/,$//'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=\"$1\"\n  echo $(eval echo \"[$(echo $str | sed -E 's/[, ]+/\" \"\
    /g')]\")\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | tr -d \"\\r\" | tr , \" \" | sed 's/[[:space:]]/\\'$'\\n/g' |\
    \ sed 's/.*/\"&\"/'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 0
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    declare -a arr\n    read -a arr <<< $(echo $1 | tr -s ', ' ' ')\n    echo\
    \ ${arr[@]}\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"[$(echo $1 | sed -E 's/[[:space:]]*([^,]+)[[:space:]]*,?[[:space:]]*/\"\
    \\1\" ,/g' | rev | cut -c 2- | rev)]\"\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=$1\n    local pattern='[, ]'\n    local -a array=()\n    local\
    \ word=''\n    local in_word=''\n    for (( i=0; i<${#string}; i++ )); do\n  \
    \      if [[ \"${string:$i:1}\" =~ $pattern ]]; then\n            in_word=''\n\
    \            array+=(\"$word\")\n            word=''\n        else\n         \
    \   in_word=1\n            word=\"$word${string:$i:1}\"\n        fi\n    done\n\
    \    if [[ $in_word ]]; then\n        array+=(\"$word\")\n    fi\n    echo \"\
    ${array[@]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | tr ' ' '\\n' | sed -e 's/^/\"/g' -e 's/$/\"/g' | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo ${1//[, ]/\"', '\"}\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | grep -o -E '[[:alpha:]]+' | tr \"\\n\" \",\" | sed -e 's/,$//'\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [ -z \"$1\" ]; then\n        echo \"Error: function requires 1 parameter\"\
    \n        return 1\n    fi\n\n    # Remove leading and trailing spaces, commas,\
    \ double quotes\n    local stripped_string=$(echo \"$1\" | sed 's/^[ ,\"]*//'\
    \ | sed 's/[ ,\"]*$//')\n\n    # Get words array\n    local words_array=$(sed\
    \ 's/\\([^, ]*\\)/\"\\1\"/g' <<< $stripped_string)\n\n    # Return array\n   \
    \ echo $words_array\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    eval \"echo \\\"[$(sed -e 's/,/\", \"/g' <<< \"$1\")]\\\"\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local -a words_list\n  words_list=($(echo \"$1\" | sed -e 's/[ ,]/\\n/g'))\n\
    \  local words_json\n  words_json=$(python -c \"import json; print json.dumps(${words_list[@]})\"\
    )\n  echo \"$words_json\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "  File \"<string>\", line 1\n    import json; print json.dumps(Hi\n   \
    \                                ^\nSyntaxError: unexpected EOF while parsing\n"
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | sed -E \"s/[ ,]+/\\\" /g\" | sed -E \"s/^/\\\"/g\" | sed -E \"s/$/\\\
    \"/g\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n   \
    \ [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    string=$1\n    # Your code here\n    words_string=$(echo $string | grep -Eo\
    \ \"[[:alpha:]]+\")\n    words_array=$(echo $words_string | sed -E \"s/[[:space:]]+/\\\
    \", \\\"/g\")\n    echo \"[\\\"$words_array\\\"]\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | sed 's/[, ]/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 0
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  if [ $# -ne 1 ]; then\n    echo \"Usage: $(basename $0) STRING\"\n    exit\
    \ 1\n  fi\n\n  # your code goes here\n  # tr is used to transform the characters\
    \ in the argument\n  # [:space:] - space character\n  # [:punct:] - punctuation\
    \ character\n  # tr will replace any punctuation or space character with a single\
    \ space\n  echo $(echo $1 | tr -s '[:punct:] [:space:]' ' ')\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | tr \",\" \"\\n\" | tr \" \" \"\\n\" | tr -d \"\\n\" | tr \"\
    \\\"\" \"'\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local array_of_words\n    local word\n    local i=0\n    IFS=', ' read -r\
    \ -a array_of_words <<< \"$1\"\n    echo -n \"[\"\n    for word in \"${array_of_words[@]}\"\
    ; do\n        echo -n '\"'$word'\"'\n        if [[ $i -lt $(( ${#array_of_words[@]}\
    \ - 1 )) ]]; then\n            echo -n \", \"\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  words=()\n  IFS=$', ' read -r -a words <<< \"$1\"\n  echo -n '['\n  echo -n\
    \ \"${words[0]}\"\n  for word in \"${words[@]:1}\"; do\n    echo -n \", $word\"\
    \n  done\n  echo ']'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | sed 's/\\s*,\\s*/\", \"/g' | sed 's/^/\"/g' | sed 's/$/\"/g'\n}\n\
    \ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  if [ $# -eq 0 ]; then\n    echo \"Usage: $0 string\"\n    return 1\n  fi\n\n\
    \  local string=$1\n  local words=$(tr ' ' '\\n' <<< $string | tr -d ',')\n  local\
    \ words_array=($words)\n  echo '[' ${words_array[@]/#/'\"'} ']'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=${1//[^a-zA-Z0-9\\ ]/}\n  local words=(${string// / })\n  printf\
    \ '%s\\n' \"${words[@]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | tr \", \" \"\\n\" | sed -e 's/^/\"/' -e 's/$/\"/'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | tr -s ', ' '\\n' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n   \
    \ [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"${1//, /\\\", \\\"}\" | sed -e 's/^\"\\(.*\\)\"$/\\[\"\\1\"\\]/'\n}\n\
    \ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=$1\n\n    # Remove space between words\n    local string_words=$(echo\
    \ \"$string\" | tr \" \" \",\")\n\n    # Remove comma at the end\n    local string_words=$(echo\
    \ \"$string_words\" | rev | cut -c 2- | rev)\n\n    # Remove comma at the beginning\n\
    \    local string_words=$(echo \"$string_words\" | cut -c 2-)\n\n    # Split words\n\
    \    local words=$(echo \"$string_words\" | tr \",\" \" \")\n\n    for word in\
    \ $words; do\n        echo '\"'$word'\"'\n    done\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=$1\n  local words=()\n  IFS=',' read -r -a words <<< \"$string\"\
    \n  printf \"[\"\n  printf '\"%s\", ' \"${words[@]}\"\n  printf '\"%s\" ]' \"\
    ${words[-1]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # split string into an array, returns string\n  read -a words <<< $(echo \"\
    ${1}\" | tr -s '[:blank:]' ',')\n  # output array as strings\n  printf \"[\"\n\
    \  printf '\"%s\", ' \"${words[@]}\"\n  printf \"]\"\n}\n\ncandidate() {\n   \
    \ words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # You can write this in one line, but I'm making multiple lines to be more\
    \ readable.\n  #\n  # First we want to change all commas to spaces so the text\
    \ is easier to split into words.\n  # This is the same as $1 | sed 's/,/ /g'\n\
    \  #\n  # Next we want to assign this new string to a variable.\n  # This is the\
    \ same as VAR=\"$( sed ... )\"\n  #\n  # Next we want to split the text into words,\
    \ and assign them to a variable\n  # This is the same as VAR2=\"$( echo \"$VAR\"\
    \ | tr ' ' '\\n' )\"\n  #\n  # Finally we want to print the variable, with each\
    \ word in quotes and separated by commas.\n  # This is the same as echo \"$VAR2\"\
    \ | tr '\\n' ',' | sed 's/,/, /g'\n  VAR=\"$( $1 | sed 's/,/ /g' )\"\n  VAR2=\"\
    $( echo \"$VAR\" | tr ' ' '\\n' )\"\n  echo \"$VAR2\" | tr '\\n' ',' | sed 's/,/,\
    \ /g'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n   \
    \ [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph1zw7i1c.sh: line 25: Hi,: command not found

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local IFS=$', '\n    local words=$1\n    local array=($words)\n    # print\
    \ array items using bash printf\n    printf '\"%s\" ' \"${array[@]}\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | tr -d ' ' | tr ',' ' ' | awk '{print $0}'\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | sed -E 's/[^A-Za-z0-9]+/\\n/g' | sed -E 's/^\\W+//g' | sed\
    \ -E 's/\\W+$//g' | sed -E 's/^/\"/g' | sed -E 's/$/\"/g'\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 0
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words\n  words=($(echo \"$1\" | tr -s ', ' ' '))\n  echo \"${words[@]}\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=\"$1\"\n  local out\n\n  # If IFS was not unset, then it will overwrite\
    \ the local IFS variable of function,\n  # and affect the result of `words_string`\
    \ function.\n  unset IFS\n  # Split string $str by commas and spaces and iterate\
    \ through each word.\n  for word in $(echo \"$str\" | tr \",\" \" \"); do\n  \
    \  # Regex to capture the word which contains alphabets and digits (if any).\n\
    \    local match=$(echo \"$word\" | egrep -o '\\w+')\n    # If a word matches,\
    \ then add it to the output array.\n    if [ \"$match\" ]; then\n      out=\"\
    $out\\\"$match\\\",\"\n    fi\n  done\n\n  # Remove the last comma from the output\
    \ array.\n  echo \"${out%,}\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | sed -e 's/[ ,]\\+/\" \"/g'\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=$1\n  echo \"${str//[, ]/\\|}\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # The \"+\" symbol means \"or\" in regular expressions.\n  local re='([^[:space:]]+)([[:space:]]|$)'\n\
    \  while [[ $1 =~ $re ]]; do\n    local word=\"${BASH_REMATCH[1]}\"\n    echo\
    \ -n '\"'$word'\"'\n    # The \"|\" symbol means \"or\" in regular expressions.\n\
    \    [[ \"${BASH_REMATCH[2]}\" =~ ^[,|]$ ]] && echo -n ', '\n    # The \"-z\"\
    \ parameter to the test command checks whether the string is empty.\n    [[ -z\
    \ \"${BASH_REMATCH[2]}\" ]] && break\n    # # Remove the first word from the string.\n\
    \    # if [[ ${#BASH_REMATCH[0]} -gt ${#word} ]]; then\n    #   echo \"${BASH_REMATCH[0]:${#word}}\"\
    \n    # else\n    #   echo \"${BASH_REMATCH[2]}\"\n    # fi\n    # Assign the\
    \ rest of the string to the variable.\n    1=\"${BASH_REMATCH[2]}\"\n  done\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"${1//[[:space:]]/,}\"\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | sed -e 's/\\s\\+/,/g' | sed -e 's/^\\s*,\\s*//' | sed -e 's/^\\\
    s*//' | sed -e 's/\\s*$//' | sed -e 's/,/\",\"/g' | sed -e 's/^/\"/' | sed -e\
    \ 's/$/\"/'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"[$(sed -E 's/([^, ]+)/\"\\1\"/g' <<< $1)]\"\n}\n\ncandidate() {\n  \
    \  words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 0
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $(grep -o '[^, ]\\+' <<< $1)\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | tr ' ' '\\n' | tr ',' '\\n' | grep '[a-zA-Z]' | tr '\\n' ',' | sed\
    \ 's/,$//'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | tr -s '[, ]' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  sed -E 's/[ \\t,]+/\\n/g' <<< \"$1\" | \\\n    sed -E 's/^/\"/g' | \\\n   \
    \ sed -E 's/$/\"/g' | \\\n    sed -E 's/^/\"/g' | \\\n    sed -E 's/$/\"/g' |\
    \ \\\n    sed -E 's/^/[/g' | \\\n    sed -E 's/$/]/g'\n}\n\ncandidate() {\n  \
    \  words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=$1\n\n    local ret_array=()\n    while read -r word; do\n \
    \       ret_array+=(\"\\\"$word\\\"\")\n    done <<< \"$(echo \"$string\" | tr\
    \ ' ' '\\n' | sed 's/,/\\n/g')\"\n\n    echo \"${ret_array[@]}\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [ -z \"$1\" ]; then\n        printf \"[\"\n    else\n        printf \"\
    [\\\"$1\\\"\"\n    fi\n    shift\n    for word in \"$@\"; do\n        printf \"\
    , \\\"$word\\\"\"\n    done\n    printf \"]\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo '[' $(echo \"$1\" | sed -e 's/\\(.\\)/\"\\1\"/g') ']'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local args=\"$@\"\n    local words=( )\n    local elements=( ${args//,/ }\
    \ )\n    local i=0\n    while [ $i -lt ${#elements[@]} ]; do\n        words[$i]=\"\
    \\\"${elements[$i]}\\\"\"\n        i=$((i+1))\n    done\n    echo \"[${words[@]}]\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  if [[ -z $1 ]]; then\n    return 1\n  fi\n  local string=$1\n  if [[ \"$string\"\
    \ =~ , ]]; then\n    IFS=\",\"\n  else\n    IFS=\" \"\n  fi\n  local words=($string)\n\
    \  echo \"[${words[*]}]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | sed -e 's/\\s*,\\s*/\\n/g' | sed -e 's/\\s*\\s/\\n/g' | sed -e\
    \ 's/^\\s*//g' | sed -e 's/\\s*$//g' | sed -e 's/^/\"/g' | sed -e 's/$/\"/g'\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 2
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # TODO 1: Implement words_string()\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn2zjf0d9.sh: line 13: syntax error near unexpected token `}''

    /tmp/tmpn2zjf0d9.sh: line 13: `}''

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"*(((\\\"$1\\\"//,/)// /))\"\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # No need to declare vars in bash, use spaces instead of tabs, and leave a\n\
    \  # space between test and the brackets\n  local string=\"$1\"\n  local words=()\n\
    \  for word in $(echo \"$string\" | tr , ' '); do\n    words+=(\"\\\"$word\\\"\
    \")\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $(echo \"$1\" | sed 's/\\s\\+,/,/g' | sed 's/\\s\\+/ /g' | tr ',' ' '\
    \ | awk '{for(i=1;i<=NF;i++)print $i}' | sed 's/^[ \\t]*//g' | sed 's/[ \\t]*$//g'\
    \ | sed 's/\\b/\\\"/g' | sed 's/\\b/\\\"/g')\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"String is $1\"\n  echo \"$1\" | tr -s ' ' '\\n' | sed -e 's/.*/\"&\"\
    /' | paste -sd, -\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local arr=()\n  IFS=$' ,' read -r -a arr <<< \"$1\"\n  stringify_array arr\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphp8bf_mn.sh: line 14: stringify_array: command not found

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [[ $# -eq 0 ]]; then\n        echo \"Usage: words_string STRING\"\n  \
    \      return\n    fi\n\n    # Make the string an array of words separated by\
    \ spaces\n    IFS=' ' read -r -a words <<< \"$1\"\n\n    # Then wrap quotes around\
    \ each word\n    for (( i = 0; i < ${#words[@]}; i++ )); do\n        words[$i]=\"\
    \\\"${words[$i]}\\\"\"\n    done\n\n    # Now convert back to a string and print\
    \ it\n    printf \"%s \" \"${words[@]}\"\n    echo\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo -n \"[$(echo \"$1\" | sed 's/\\s\\+/,/g' | sed 's/,/, /g')]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"[$(sed -e 's/[^[:alnum:]]/\\\\\\&/g' -e 's/\\([[:alnum:]]\\)/\"\\\
    1\"/g' <<< \"$1\")]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local words\n    while read word; do\n        words+=($(printf '\"%s\"' \"\
    $word\"))\n    done < <(echo \"$1\" | tr ', ' '\\n')\n    echo \"${words[@]}\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=$1\n    local words=()\n    # Split string into words, use double\
    \ quotes in case of any spaces\n    for word in $(echo $string | sed 's/,/ /g');\
    \ do\n        words+=(\"\\\"$word\\\"\")\n    done\n    # Join array of words\
    \ with commas\n    echo \"${words[@]}\" | sed 's/ /, /g'\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | tr \" \" \",\" | tr \",\" \"\\\",\\\"\" | tr \"[:upper:]\" \"[:lower:]\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local result=()\n    # using bash's extended globbing pattern\n    #  - double-quoted\
    \ expansion for handling whitespace\n    #  - comma-separated groups on which\
    \ to iterate\n    #  - remove empty strings from the list\n    #  - add double\
    \ quotes around each word\n    result=($(shopt -s extglob ; echo \"$1\" | tr ,\
    \ ' '))\n    for i in \"${!result[@]}\"; do\n        result[$i]=\"\\\"${result[$i]}\\\
    \"\"\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=$1\n  local words=($(echo $string | tr \" \" \",\"))\n  local\
    \ words_string=$(printf \"%s,\" \"${words[@]}\")\n  words_string=${words_string::-1}\n\
    \  echo \"[${words_string}]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 2
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"${1}\" | sed -r -e 's/[, ]+/\\n/g' | awk '{printf '\\''\"%s\"',$0}'\
    \ | sed -e 's/^/\\[/' -e 's/$/\\]/'\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyuiqs2i8.sh: line 12: unexpected EOF while looking for matching
    `''''

    /tmp/tmpyuiqs2i8.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 0
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  string=$1\n  declare -a words\n  words=($(echo $string | tr \",\" \"\\n\"))\n\
    \  echo ${words[@]}\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Filter out duplicate spaces, commas and surrounding whitespace.\n    local\
    \ filtered_string=\"$(echo \"$1\" | sed -e 's/[[:space:],]\\+/ /g' -e 's/^[[:space:]]*//'\
    \ -e 's/[[:space:]]*$//')\"\n    # Split the string into individual words.\n \
    \   local words_array=($filtered_string)\n    # Format the string into a list\
    \ of quoted strings.\n    local formatted_string=$(echo $(printf '\"%s\" ' \"\
    ${words_array[@]}\"))\n    # Remove the trailing space.\n    echo ${formatted_string%?}\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | awk 'BEGIN { RS = \"[[:space:]]*[,][[:space:]]*\" } { print\
    \ \"\\\"\"$1\"\\\"\" }'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local re='^(.*)([,\\s]+)(.*)$'\n    local w1 w2 w3\n    if [[ $1 =~ $re ]];\
    \ then\n        w1=\"${BASH_REMATCH[1]}\"\n        w2=\"${BASH_REMATCH[2]}\"\n\
    \        w3=\"${BASH_REMATCH[3]}\"\n        echo \"[\\\"$w1\\\"]$(words_string\
    \ \"$w3\")\"\n    else\n        echo \"\"\n    fi\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  if [[ -z \"$1\" ]]; then\n    return\n  fi\n  # Words are separated by commas\
    \ or spaces\n  # Split words into array using tr, then use mapfile to transform\
    \ that\n  # into an array of strings\n  read -r -a words <<< \"$(tr -s ',' ' '\
    \ <<< \"$1\" | tr -s ' ' ',')\"\n  for index in \"${!words[@]}\"; do\n    words[$index]=\"\
    \\\"${words[$index]}\\\"\"\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local words=$(tr -s '[:space:]' '\\n' <<< \"$1\")\n    local buffer=\"\"\n\
    \    while read -r word; do\n        buffer+=\"$(printf \"\\\"%s\\\"\" \"$word\"\
    ), \"\n    done <<< \"$words\"\n    printf \"[%s]\" \"${buffer%, }\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 2
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # You code here.\n    #\n    # Hint:\n    # This is a simple problem and\
    \ uses bash built-in capabilities. There's no\n    # need to use sed, awk, or\
    \ any external utilities such as grep, wc, etc.\n    # Instead, look for bash\
    \ operators that split strings by a given delimiter.\n    # You will also need\
    \ to know how to combine several strings into one,\n    # to output the results.\
    \ Google for it.\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppex0czwu.sh: line 20: syntax error near unexpected token `}''

    /tmp/tmppex0czwu.sh: line 20: `}''

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"return $1\" | awk '{\n        for (i = 1; i <= NF; i++) {\n      \
    \      printf $i\n            if (i < NF) {\n                printf \" \"\n  \
    \          }\n        }\n    }'\n}\n\ncandidate() {\n    words_string \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi\
    \ my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Replace commas and spaces with a space\n  # and split the words into an array.\n\
    \  local -a words=(${1//[, ]/ })\n  # Convert the array into a string with double\
    \ quotes around each word.\n  local -a args=()\n  for word in \"${words[@]}\"\
    ; do\n    args+=(\"\\\"$word\\\"\")\n  done\n  echo \"${args[@]}\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | awk '{ print $0 }' | sed -e 's/,/ /g' | awk '{ for (i=1; i<=NF; i++)\
    \ print \"\\\"\"$i\"\\\"\" }'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$@\" | sed -e 's/\\s\\+/,/g' | tr -d '[:punct:]' | tr ',' '\\n' |\n\
    \        tr -d '[:space:]' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"[$(sed 's/[^,]\\+/\\\"&\\\"/g' <<< \"$1\")]\"\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [[ $# -eq 0 ]]; then\n        echo '[]'\n    else\n        echo \"['\"\
    $(tr ' ' '\\n' <<< \"$1\" | sed -e \"s/'/'\\\\\\\\''/g\" | paste -s -d \"', '\"\
    )\"']\"\n    fi\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words=$(echo \"$1\" | sed 's/\\s/,/g')\n  echo \"[$words]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local result=()\n    local array=($(echo $1 | sed -E 's/(.*), /\\1 /g'))\n\
    \    for word in \"${array[@]}\"; do\n        if [[ -z $word ]]; then\n      \
    \      continue\n        fi\n        word=\"$(echo $word | sed -E 's/\"(.*)\"\
    /\\1/g')\"\n        result+=($word)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local str=\"\"\n    local words=\"\"\n    local word=\"\"\n    str=$(echo\
    \ $1 | sed 's/,/ /g')\n    for word in $str; do\n        if [ -z \"$words\" ];\
    \ then\n            words=\"'\"$word\"'\"\n        else\n            words=\"\
    $words, '\"$word\"'\"\n        fi\n    done\n    echo \"[$words]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | tr ',' ' ' | tr ' ' '\\n' | sed 's/\\(.*\\)/\"\\1\"/'\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Replace all commas and spaces with newlines\n  local words=\"$(echo \"$1\"\
    \ | tr -s ' ,' '\\n')\"\n  # If word is empty string, skip\n  local output=()\n\
    \  for word in $words; do\n    if [ -z \"$word\" ]; then\n      continue\n   \
    \ fi\n    output+=(\"\\\"$word\\\"\")\n  done\n  echo \"${output[@]}\"\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [[ $# -ne 1 ]]; then\n        echo \"usage: words_string <comma-or-space-separated-string>\"\
    \n        exit 1\n    fi\n    echo -n \"[\"\n    local string=$1\n    local IFS=$',\
    \ '\n    for word in $string; do\n        echo -n '\"'$word'\"'\n        if [[\
    \ $word != $string ]]; then\n            echo -n \", \"\n        fi\n    done\n\
    \    echo \"]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=\"$1\"\n  # read -r -a arr <<< \"${1//[, ]/ }\"\n  read -r -a arr\
    \ <<< $(tr -s '[:blank:]' ' ' <<< \"${str}\")\n  echo ${arr[@]}\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # TODO: implement\n  words=()\n  length=0\n  while read word; do\n    words+=\"\
    \ \\\"$word\\\"\"\n    length=$((length+1))\n  done < <(echo \"$1\" | tr ', '\
    \ '\\n')\n  echo ${words[@]}\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo -n '['\n    echo -n \"${1}\" | sed 's/ /\"\\n\"/g' | sed 's/,/\"\\n\"\
    /g' | sed 's/^/\"/g' | sed 's/$/\"/g' | paste -sd ','\n    echo -n ']'\n}\n\n\
    candidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  awk -F '[ ,]+' '{for (i=1; i<=NF; i++) {print $i}}' <<< \"$1\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | tr ',' ' ' | tr -s ' ' | tr ' ' ','\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  if [ $# -ne 1 ]; then\n    return 1\n  fi\n  echo \"$1\" | tr ' ' '\\n' | sed\
    \ -e 's/,/ /g' | awk '{printf(\"\\\"%s\\\" \", $0)}'\n}\n\ncandidate() {\n   \
    \ words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Use $1 to get the input string\n  # Hint: use echo, sed and tr to change\
    \ the string to a list of quoted words\n  echo $1 | sed 's/, /\\n/g' | sed 's/,/\\\
    n/g' | tr -d '\\n' | sed 's/\\b/\\b\"/g' | sed 's/\\b /\" /g' | sed 's/ /\"/g'\
    \ | sed 's/^/\"/g' | sed 's/$/\"/g'\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo -n \"[\"\n  echo \"$1\" | tr \" \" \",\" | sed 's/,/\",\"/g'\n  echo -n\
    \ \"]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    words_array=()\n    while IFS= read -r -d,; do\n        words_array+=($REPLY)\n\
    \    done <<< \"$1\"\n    echo \"${words_array[@]}\"\n}\n\ncandidate() {\n   \
    \ words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local str_w=\"[\"\n    for word in $1; do\n        str_w=\"$str_w\\\"$word\\\
    \",\"\n    done\n    str_w=\"${str_w%?}]\"\n    echo $str_w\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    IFS=,\n    set -- $1\n    echo \"[$(IFS=\",\"; echo \"$*\")]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 2
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    if [ \"$1\" = \"\" ]; then\n        return 0\n    fi\n    echo $1 | sed -r\
    \ 's/[^, ]+/\\'\"\\\"&\\\"\"\\'/g'\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdtdgswtr.sh: line 15: unexpected EOF while looking for matching
    `''''

    /tmp/tmpdtdgswtr.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"[$(echo $1 | tr -s '[:space:],' ' ' | \\\n        sed -E 's/\\b([a-zA-Z]+)\\\
    b/\\\"\\1\\\"/g')]\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"[$(tr ', ' ' ' <<< $1 | sed -E 's/([^ ]+)/\"\\1\"/g')]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"${@}\" | awk 'BEGIN { RS = \"[, ]\" } {print \"\\\"\"$1\"\\\"\"}'\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=\"$1\"\n  string=\"${string//,/ }\"\n  array=($string)\n  IFS=',\
    \ ' read -r -a array <<< \"$string\"\n  for word in \"${array[@]}\"; do\n    result+=\"\
    \\\"$word\\\", \"\n  done\n  echo \"[${result::-2}]\"\n}\n\ncandidate() {\n  \
    \  words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my\
    \ name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | sed 's/\\([A-Za-z0-9]\\+\\)/\"\\1\"/g'\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local words\n  # words=$(echo $1 | tr \", \" \"|\")\n  words=$(echo $1 | tr\
    \ \", \" \"\\n\")\n  words=$(echo $words | tr \"\\n\" \",\")\n  words=\"[$words]\"\
    \n  echo $words\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo $1 | sed 's/ /\",\"/g' | sed 's/^/\"/' | sed 's/$/\"/'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  words_array=($(echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n'))\n  echo -n '['\n\
    \  for word in \"${words_array[@]}\"; do\n    echo -n '\"'$word'\"'\n    if [[\
    \ $word != \"${words_array[-1]}\" ]]; then\n      echo -n ', '\n    fi\n  done\n\
    \  echo ']'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local input=\"$1\"\n    if [[ $input =~ \",\" ]]; then\n        local re='[^,]+'\n\
    \    else\n        local re='[^ ]+'\n    fi\n    echo $input | grep -Eo $re |\
    \ awk '{print \"\\\"\"$1\"\\\"\"}' | sed 's/^/[/' | sed 's/$/]/'\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"[\\\"$(echo \"$1\" | sed 's/[ ,]/\\\" \\\"/g')\\\"]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | tr \" \" \",\" | tr \",\" \"\\\",\\\"\" | sed \"s/^/[\\\"/\"\
    \ | sed \"s/$/\\\"]/\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local input=\"$1\"\n  words_array=()\n  local delimiter=\",\"\n  if [[ \"$input\"\
    \ =~ \\  ]]; then\n    delimiter=\" \"\n  fi\n  for word in $(echo \"$input\"\
    \ | sed \"s/$delimiter/ /g\"); do\n    words_array+=($(escape_string \"$word\"\
    ))\n  done\n  echo \"${words_array[@]}\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp440kt_ij.sh: line 19: escape_string: command not found

    /tmp/tmp440kt_ij.sh: line 19: escape_string: command not found

    /tmp/tmp440kt_ij.sh: line 19: escape_string: command not found

    /tmp/tmp440kt_ij.sh: line 19: escape_string: command not found

    /tmp/tmp440kt_ij.sh: line 19: escape_string: command not found

    '
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Do something...\n  # Use echo to print answer\n  local string=$1\n  local\
    \ word_array\n  IFS=', ' read -r -a word_array <<< \"$string\"\n  echo \"${word_array[@]}\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Your solution goes here.\n  # Use echo to return your answer.\n  echo ''\n\
    }\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate\
    \ \"One, two, three, four, five, six\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"\
    One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\")\
    \ = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # echo \"$1\" | sed 's/\\s/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g' | sed 's/,\\\
    s/\" \"/g'\n  echo \"$1\" | sed 's/\\s/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'\
    \ | sed 's/,\\s/\" \"/g'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name\
    \ is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"\
    One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my\
    \ name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One\
    \ two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=$1\n  local IFS=$' ,'\n  arr=($str)\n  printf '[\"%s\"]' \"${arr[@]}\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # `|` is the sed delimiter and the `-r` flag allows extended regular expressions.\n\
    \    # The pattern `s/[ ,]+/\", \"/g` replaces each comma and space with the string\
    \ `\", \"`\n    # There should be a space after the `\", \"` so that the output\
    \ is `\"One\", \"two\", \"three\"` and not `\"One\",\"two\",\"three\"`\n    echo\
    \ \"$1\" | sed -r 's/[ ,]+/\", \"/g'\n}\n\ncandidate() {\n    words_string \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") =\
    \ \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo $1 | tr ',' ' ' | tr -s ' ' | tr ' ' '\\n' | while read word; do echo\
    \ \\\"$word\\\"; done\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local IFS=','\n    words=(${1//[[:space:]]/,})\n    echo ${words[@]}\n}\n\
    \ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"\
    One, two, three, four, five, six\") = \"One two three four five six\" ]]\n   \
    \ [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local string=$1\n  echo -n \"$string\" | sed -e 's/,/ /g' | tr -s ' ' | sed\
    \ -e 's/ /\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  OUTPUT=''\n  for word in ${1//, / }; do\n    OUTPUT=\"$OUTPUT \\\"$word\\\"\
    \"\n  done\n  echo -e \"$OUTPUT\"\n}\n\ncandidate() {\n    words_string \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"\
    Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # Convert $1 to an array, split by comma or space\n  IFS=\", \" read -r -a\
    \ array <<< \"$1\"\n  result=()\n  for i in \"${array[@]}\"; do\n    # Create\
    \ a string for each array item, wrapped in quotation marks\n    entry=\"\\\"$i\\\
    \"\"\n    # Add string to the result array\n    result+=(\"$entry\")\n  done\n\
    \  # Print the result array\n  printf \"%s\" \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | awk 'BEGIN { FS = \",\"; ORS = \"\"; } { for (i = 1; i <= NF;\
    \ i++) { if (length(a[i]) > 0) { a[i] = a[i] \",\"; } a[i] = a[i] \"\\\"\" $i\
    \ \"\\\"\"; } } END { printf \"[\" a[1]; for (i = 2; i <= NF; i++) { printf \"\
    , \" a[i]; } printf \"]\"; }'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # $1 is a string\n  _words_string_string=\"$1\"\n  # BASH string manipulation\
    \ magic\n  _words_string_string=\"${_words_string_string//, /,}\"\n  _words_string_string=\"\
    ${_words_string_string//,/', '}\"\n  echo \"[$_words_string_string]\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local res=\"[\"\n  local words=$(echo \"$1\" | tr ', ' '\\n')\n  for word in\
    \ $words; do\n    res+=\"\\\"$word\\\",\"\n  done\n  res=${res%?}\n  res+=\"]\"\
    \n  echo $res\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local __result=$1\n  local -a __list=($(echo $1 | tr -s ', ' '\\n'))\n  echo\
    \ \"[$(echo $(printf \"\\\"%s\\\" \" \"${__list[@]}\"))]\"\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # TODO: implement code here.\n  # Hint: you can use `echo`, `tr`, `awk`...\n\
    \  echo $1 | tr , ' ' | awk '{for(i=1;i<=NF;i++)print $i}'\n}\n\ncandidate() {\n\
    \    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi,\
    \ my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two,\
    \ three, four, five, six\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three,\
    \ four, five, six,\") = \"One two three four five six\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo -n \"[\"\n  while IFS=\" \" read -r word\n  do\n    echo -n \"\\\"${word}\\\
    \", \"\n  done <<< \"$1\"\n  echo -n \"]\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local S=$1\n    S=$(trim_string \"$S\")\n    S=${S//,/ }\n    local words=$(echo\
    \ $S | tr ' ' '\\n')\n    local out=()\n    for word in $words; do\n        out+=\"\
    \\\"$word\\\"\"\n    done\n    echo [${out[@]}]\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy5x1fthz.sh: line 13: trim_string: command not found

    '
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    set -- $1\n    echo '[' ${@/#/\\\"} ']'\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: -1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  local str=$1; shift\n  echo -n \"[\"\n  while [ ${#str} -gt 0 ]; do\n    echo\
    \ -n \"\\\"$(echo \"$str\" | sed 's/^[^\"]*\\(\"[^\"]*\\).*/\\1/')\\\"\"\n   \
    \ str=$(echo \"$str\" | sed 's/^[^\"]*\"[^\"]*\",*//')\n    [ ${#str} -gt 0 ]\
    \ && echo -n \", \"\n  done\n  echo \"]\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=5 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660021758
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  # your code here\n  echo \"words_string() not implemented\"\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021752
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"Not implemented\"\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my\
    \ name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five, six\")\
    \ = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\") =\
    \ \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | xargs printf '\"\
    %s\" ' | tr -d '\\n'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\"\
    \ ]]\n    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n\
    \    [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three\
    \ four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Solution 1\n    # echo $1 | sed -e 's/\\ /,/g' | sed -e 's/,/\", \"/g'\
    \ | sed -e 's/^/\"/' | sed -e 's/$/\"/'\n\n    # Solution 2\n    # echo $1 | sed\
    \ -e 's/\\ /,/g' | sed -e 's/,/\\\", \\\"/g' | sed -e 's/^/\\\"/' | sed -e 's/$/\\\
    \"/'\n\n    # Solution 3\n    # echo $1 | sed -e 's/\\ /,/g' | sed -e 's/,/\\\"\
    , \\\"/g' | sed -e 's/^/\\\"/' | sed -e 's/$/\\\"/'\n\n    # Solution 4\n    echo\
    \ $1 | sed -e 's/\\ /,/g' | sed -e 's/,/\\\", \\\"/g' | sed -e 's/^/\\\"/' | sed\
    \ -e 's/$/\\\"/'\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # your code here\n    echo $(printf '\"%s\" ' $(echo $1 | tr ' ' '\\n' |\
    \ tr ',' '\\n'))\n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n\
    \    [[ $(candidate \"One, two, three, four, five, six\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n   \
    \ [[ $(candidate \"One,, two, three, four, five, six,\") = \"One two three four\
    \ five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed\
    \     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    echo \"{\"$(sed 's/,/, /g' <<< \"$1\")\"}\"\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  words_array=($(echo $1 | tr ', ' ' '))\n  printf '[\"%s\"]' \"${words_array[@]}\"\
    \n}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
    \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
    \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
    \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\"\
    ) = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    # Use the tr command to replace spaces or commas with newlines. Use the\n\
    \    # sort command to sort the lines in alphabetical order, then use the -u\n\
    \    # option to sort uniqely. Finally, use the -z option to print the\n    #\
    \ output separated by null characters instead of newlines. This is what\n    #\
    \ xargs -0 expects in order to do the split.\n    echo \"$1\" | tr -s ', ' '\\\
    n' | sort -u -z | xargs -0 printf '\"%s\" '\n}\n\ncandidate() {\n    words_string\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hi, my name is John\"\
    ) = \"Hi my name is John\" ]]\n    [[ $(candidate \"One, two, three, four, five,\
    \ six\") = \"One two three four five six\" ]]\n    [[ $(candidate \"Hi, my name\"\
    ) = \"Hi my name\" ]]\n    [[ $(candidate \"One,, two, three, four, five, six,\"\
    ) = \"One two three four five six\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n \
    \   [[ $(candidate \"ahmed     , gamal\") = \"ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 1
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | xargs printf '\"%s\" '\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660021753
- exit_code: 0
  program: "#!/bin/bash\n# You will be given a string of words separated by commas\
    \ or spaces. Your task is\n# to split the string into words and return an array\
    \ of the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\"\
    )\n# ['\"Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string\
    \ \"One, two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"',\
    \ '\"four\"', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n\
    \    local string=\"$1\"\n    # For every character in the string...\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        # If the character is a quote...\n\
    \        if [[ ${string:$i:1} == \"\\\"\" ]]; then\n            # echo \"$i\"\n\
    \            # Save the quote index to a local variable\n            local quote_index=$i\n\
    \            # Find the index of the next quote\n            local next_quote_index=$(find_char_index\
    \ ${string:$((i+1))} \"\\\"\")\n            # If the next quote index is not null...\n\
    \            if [[ $next_quote_index ]]; then\n                # Add 1 to the\
    \ quote index\n                next_quote_index=$((next_quote_index+1))\n    \
    \            # Replace the character sequence from the quote to the next quote\n\
    \                # with the string \"word\"\n                string=${string:0:$i}word${string:$((i+next_quote_index))}\n\
    \            fi\n        fi\n    done\n    # Split the string by a space or comma\n\
    \    local array=$(echo $string | tr ' ,' '\\n')\n    # For every item in the\
    \ array...\n    for (( i=0; i<${#array[@]}; i++ )); do\n        # If the item\
    \ is \"word\"...\n        if [[ ${array[$i]} == \"word\" ]]; then\n          \
    \  # Replace the item with the original string in quotes\n            array[$i]=${string:$quote_index:$next_quote_index}\n\
    \        fi\n    done\n    # Return the array\n    echo ${array[@]}\n}\n\ncandidate()\
    \ {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[ $(candidate \"One,\
    \ two, three, four, five, six\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate \"One,,\
    \ two, three, four, five, six,\") = \"One two three four five six\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") = \"\
    ahmed gamal\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660021753

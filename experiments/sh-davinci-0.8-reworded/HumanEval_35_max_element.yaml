name: HumanEval_35_max_element
language: sh
prompt: "#!/bin/bash\n# Return maximum element in the list.\n# >>> $(max_element \"\
  1 2 3\")\n# \"3\"\n# >>> $(max_element \"5 3 -5 2 -3 3 9 0 123 1 -10\")\n# \"123\"\
  \n#\n# $1 is a space-separated list\nmax_element() {\n"
tests: "}\n\ncandidate() {\n    max_element \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 3\") = \"3\" ]]\n    [[ $(candidate \"5 3 -5 2 -3 3 9 0\
  \ 124 1 -10\") = \"124\" ]]\n}\n\nrun_test"
completions: ["    # $1 -> \"${@}\"\n    list=($1)\n    max=${list[0]}\n    for i\
    \ in ${list[@]}; do\n        if [ $i -gt $max ]; then\n            max=$i\n  \
    \      fi\n    done\n    echo $max", "  local max=0\n  for el in $1; do\n    if\
    \ (( $el > $max )); then\n      max=$el\n    fi\n  done\n  echo $max", "  local\
    \ max_value=${1%% *}\n  for value in $1; do\n    if ((value > max_value)); then\n\
    \      max_value=$value\n    fi\n  done\n  echo $max_value", "    for i in $1;\
    \ do\n        if [[ -z $max ]] || [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n    done\n    echo $max", "    echo \"$@\" | tr ' ' '\\n' | sort\
    \ -g | tail -n 1", "  local max=${1%% *}\n  for i in $1; do\n    if [[ $i -gt\
    \ $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max", "    echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1", "    local x\n    local m=\n    for x\
    \ in $1\n    do\n        if [[ -z $m ]] || [[ $x -gt $m ]]\n        then\n   \
    \         m=$x\n        fi\n    done\n    echo $m", "    # Split space-separated\
    \ list into array\n    IFS=\" \" read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n\
    \    for i in \"${arr[@]}\"; do\n        if ((i > max)); then\n            max=\"\
    $i\"\n        fi\n    done\n    echo \"$max\"", "  echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tail -n 1", "  echo \"$*\" | sed 's/ /\\n/g' | sort -n | tail -n\
    \ 1", "    local list=\"$1\"\n    local max\n    max=\"$(echo \"$list\" | head\
    \ -n 1)\"\n    for item in $list; do\n        if [[ \"$item\" -gt \"$max\" ]];\
    \ then\n            max=\"$item\"\n        fi\n    done\n    echo \"$max\"", " \
    \   local max_elem\n    if [[ $# -eq 0 ]]; then\n        max_elem=0\n    else\n\
    \        max_elem=$1\n    fi\n    for elem in $@; do\n        if [[ $elem -gt\
    \ $max_elem ]]; then\n            max_elem=$elem\n        fi\n    done\n    echo\
    \ $max_elem", "  local mx=\"$1\"\n  shift\n  for v in \"$@\"; do\n    [ \"$v\"\
    \ -gt \"$mx\" ] && mx=\"$v\"\n  done\n  echo \"$mx\"", "    echo \"$1\" | tr '\
    \ ' '\\n' | sort -g | tail -n 1", "    echo \"$@\" | tr ' ' '\\n' | sort -g |\
    \ tail -n 1", "    if [ -z \"$1\" ]; then\n        echo \"\"\n        return\n\
    \    fi\n\n    local max=0\n    for element in $1; do\n        if [ \"$max\" -lt\
    \ \"$element\" ]; then\n            max=\"$element\"\n        fi\n    done\n \
    \   echo \"$max\"", "    local NUMBERS=($1)\n    local MAX=${NUMBERS[0]}\n   \
    \ for NUMBER in ${NUMBERS[@]:1}; do\n        if [[ $NUMBER -gt $MAX ]]; then\n\
    \            MAX=$NUMBER\n        fi\n    done\n    echo $MAX", "    echo $1 |\
    \ tr ' ' '\\n' | sort -n | tail -n 1", "    local list=( $1 )\n\n    # Initialize\
    \ max with the first element of the list.\n    local max=${list[0]}\n\n    for\
    \ item in \"${list[@]}\"; do\n        [[ $item -gt $max ]] && max=$item\n    done\n\
    \n    echo $max"]
stop_tokens:
- "\n}"

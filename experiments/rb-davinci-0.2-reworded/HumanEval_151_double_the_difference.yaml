name: HumanEval_151_double_the_difference
language: rb
prompt: "# Given an array of numbers, return the sum of squares of the numbers\n#\
  \ in the array that are odd. Ignore numbers that are negative or not integers.\n\
  # >>> double_the_difference.call([1, 3, 2, 0])\n# 10\n# >>> double_the_difference.call([-1,\
  \ -2, 0])\n# 0\n# >>> double_the_difference.call([9, -2])\n# 81\n# >>> double_the_difference.call([0])\n\
  # 0\n# If the input array is empty, return 0.\ndef double_the_difference(lst)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_double_the_difference\n\
  \    candidate = method(:double_the_difference)\n    assert_equal(0, candidate.call([]))\n\
  \    assert_equal(25, candidate.call([5, 4]))\n    assert_equal(0, candidate.call([0.1,\
  \ 0.2, 0.3]))\n    assert_equal(0, candidate.call([-10, -20, -30]))\n    assert_equal(0,\
  \ candidate.call([-1, -2, 8]))\n    assert_equal(34, candidate.call([0.2, 3, 5]))\n\
  \    assert_equal(165, candidate.call([-9, -7, -5, -3, -1, 1, 3, 5, 7, 9]))\n  end\n\
  end\n"
completions: ["  lst.select { |num| num.odd? && num.is_a?(Integer) && num >= 0 }.map\
    \ { |num| num ** 2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0\
    \ }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |n| n.is_a?(Integer) && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", " \
    \ lst.select { |n| n.is_a?(Integer) && n > 0 }.map { |n| n**2 }.sum\nend", " \
    \ lst.select { |num| num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.sum\n\
    end", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 && x.odd? }.map { |x|\
    \ x**2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x|\
    \ x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x.odd?\
    \ }.map { |x| x**2 }.sum\nend", "  lst.select(&:odd?).map { |n| n**2 }.sum\nend",
  "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x**2 }.reduce(0, :+)\n\
    end", "  sum = 0\n  lst.each do |x|\n    if x.is_a?(Integer) && x > 0\n      sum\
    \ += x ** 2\n    end\n  end\n  sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num|\
    \ num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend",
  "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\n\
    end", "  lst.select { |n| n.is_a?(Integer) && n.odd? }.map { |n| n ** 2 }.sum\n\
    end", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num **\
    \ 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer) && num > 0\
    \ }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num|\
    \ num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend",
  "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num|\
    \ num ** 2 }.reduce(0, :+)\nend", "  sum = 0\n  lst.each do |x|\n    if x.is_a?(Integer)\
    \ && x > 0\n      if x % 2 == 1\n        sum += x ** 2\n      end\n    end\n \
    \ end\n  sum * 2\nend", "  lst.select { |num| num.odd? && num.is_a?(Integer) &&\
    \ num >= 0 }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num|\
    \ num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select\
    \ { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.sum\nend", " \
    \ lst.select{|x| x.is_a?(Integer) && x > 0 && x.odd?}.map{|x| x**2}.reduce(:+)\
    \ || 0\nend", "  lst.select { |x| x.odd? && x.is_a?(Integer) && x >= 0 }.map {\
    \ |x| x**2 }.sum\nend", "  lst.select { |num| num.odd? && num.is_a?(Integer) &&\
    \ num > 0 }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.odd? &&\
    \ num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.sum\nend", "  lst.select\
    \ { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.sum\nend", " \
    \ lst.select { |num| num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.sum\n\
    end", "  sum = 0\n  lst.each do |x|\n    if x.is_a?(Integer) && x > 0\n      if\
    \ x % 2 == 1\n        sum += x ** 2\n      end\n    end\n  end\n  sum * 2\nend",
  "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2\
    \ }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map\
    \ { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select{|x| x.is_a?(Integer)\
    \ && x > 0 && x.odd?}.map{|x| x**2}.reduce(:+) || 0\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", " \
    \ lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x**2 }.sum\nend", " \
    \ lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.sum\n\
    end", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num **\
    \ 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map\
    \ { |x| x**2 }.reduce(0, :+)\nend", "  lst.select{|x| x.is_a?(Integer) && x >\
    \ 0}.map{|x| x**2}.reduce(:+) || 0\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  sum = 0\n  lst.each\
    \ do |num|\n    if num.is_a?(Integer) && num > 0\n      sum += num ** 2 if num.odd?\n\
    \    end\n  end\n  sum\nend", "  lst.select { |num| num.is_a?(Integer) && num\
    \ > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x**2 }.reduce(0, :+)\nend", "  # YOUR CODE HERE\nend",
  "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0,\
    \ :+)\nend", "  sum = 0\n  lst.each do |num|\n    if num.is_a?(Integer) && num\
    \ > 0\n      sum += num ** 2 if num.odd?\n    end\n  end\n  sum\nend", "  lst.select\
    \ { |n| n.is_a?(Integer) && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", " \
    \ lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\n\
    end", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num **\
    \ 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map\
    \ { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) &&\
    \ x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  # your code here\nend", " \
    \ lst.select { |num| num.is_a?(Integer) && num > 0 && num.odd? }\n      .map {\
    \ |num| num ** 2 }\n      .sum\nend", "  lst.select { |n| n.is_a?(Integer) &&\
    \ n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n.odd? }.map { |n| n ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |n| n.is_a?(Integer) && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", " \
    \ sum = 0\n  lst.each do |num|\n    if num.is_a?(Integer) && num > 0\n      sum\
    \ += num**2 if num.odd?\n    end\n  end\n  sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num|\
    \ num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend",
  "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x**2 }.reduce(0, :+)\n\
    end", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |n| n.is_a?(Integer) && n.odd? }.map { |n| n ** 2\
    \ }.sum\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x**2\
    \ }.reduce(0, :+)\nend", "  lst.select { |n| n.is_a?(Integer) && n.odd? }.map\
    \ { |n| n ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer) && num.odd?\
    \ }.map { |num| num ** 2 }.sum\nend", "  lst.select { |n| n.is_a?(Integer) &&\
    \ n.odd? }.map { |n| n ** 2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x**2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  sum = 0\n  lst.each do\
    \ |num|\n    if num.is_a?(Integer) && num > 0\n      if num % 2 == 1\n       \
    \ sum += num ** 2\n      end\n    end\n  end\n  sum\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x**2 }.reduce(0, :+)\nend", "  sum = 0\n\
    \  lst.each do |x|\n    if x.is_a?(Integer) && x > 0\n      sum += x ** 2\n  \
    \  end\n  end\n  sum\nend", "  # your code here\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.odd?\
    \ && num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(:+) || 0\n\
    end", "  return 0 if lst.empty?\n  lst.select { |num| num.is_a?(Integer) && num\
    \ > 0 }.map { |num| num ** 2 }.reduce(:+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x**2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 && num.odd? }\n      .map { |num| num ** 2 }\n      .reduce(0, :+)\n\
    end", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num|\
    \ num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x >\
    \ 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 && x.odd? }.map { |x| x**2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  sum = 0\n  lst.each do |x|\n\
    \    if x.is_a?(Integer) && x > 0\n      if x % 2 == 1\n        sum += x**2\n\
    \      end\n    end\n  end\n  sum\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  return 0 if lst.empty?\n\
    \  lst.select { |num| num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.reduce(:+)\n\
    end", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num| num **\
    \ 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer) && num > 0 }.map { |num|\
    \ num ** 2 }.reduce(0, :+)\nend", "  return 0 if lst.empty?\n  lst.select { |num|\
    \ num.is_a?(Integer) && num.odd? }.map { |num| num**2 }.reduce(:+)\nend", "  lst.select\
    \ { |num| num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\n\
    end", "  if lst.empty?\n    return 0\n  end\n  lst.select! { |x| x.is_a?(Integer)\
    \ && x > 0 }\n  lst.map! { |x| x**2 }\n  lst.select! { |x| x.odd? }\n  lst.sum\n\
    end", "  lst.select { |n| n.is_a?(Integer) && n > 0 }.map { |n| n ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2\
    \ }.reduce(0, :+)\nend", "  lst.select{|x| x.is_a?(Integer) && x > 0 && x.odd?}.map{|x|\
    \ x**2}.reduce(:+) || 0\nend", "  lst.select { |num| num.is_a?(Integer) && num\
    \ > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x.odd? }.map { |x| x ** 2 }.sum\nend", "  return 0 if lst.empty?\n  lst.select\
    \ { |x| x.is_a?(Integer) && x.odd? }.map { |x| x**2 }.reduce(:+)\nend", "  lst.select{|x|\
    \ x.is_a?(Integer) && x > 0 && x.odd?}.map{|x| x**2}.sum\nend", "  lst.select\
    \ { |num| num.odd? && num.integer? && num > 0 }.map { |num| num ** 2 }.reduce(:+)\
    \ || 0\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2\
    \ }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map {\
    \ |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |n| n.is_a?(Integer) && n\
    \ > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |num| num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.sum\nend", " \
    \ return 0 if lst.empty?\n  lst.select { |num| num.is_a?(Integer) && num.odd?\
    \ }.map { |num| num**2 }.sum\nend", "  lst.select { |n| n.is_a?(Integer) && n.odd?\
    \ }.map { |n| n ** 2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer) && x >\
    \ 0 }.map { |x| x**2 }.reduce(0, :+)\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n**2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.odd? && x.integer? }.map { |x| x ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select{|num| num.is_a?(Integer)\
    \ && num > 0 && num.odd?}.map{|num| num**2}.reduce(:+) || 0\nend", "  lst.select\
    \ { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", " \
    \ sum = 0\n  lst.each do |num|\n    if num.is_a?(Integer) && num > 0\n      sum\
    \ += num**2 if num.odd?\n    end\n  end\n  sum\nend", "  lst.select{|x| x.is_a?(Integer)\
    \ && x > 0 && x.odd?}.map{|x| x**2}.sum\nend", "  lst.select{|x| x.is_a?(Integer)\
    \ && x > 0 && x.odd?}.map{|x| x**2}.reduce(:+) || 0\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 && x.odd? }.map { |x| x ** 2 }.sum\nend", "  lst.select\
    \ { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", " \
    \ return 0 if lst.empty?\n  lst.map { |x| x.is_a?(Integer) && x > 0 ? x**2 : 0\
    \ }.reduce(:+)\nend", "  lst.select { |num| num.is_a?(Integer) && num.odd? }.map\
    \ { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer) && num\
    \ > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x**2 }.reduce(0, :+)\nend", "  sum = 0\n\
    \  lst.each do |num|\n    if num.is_a?(Integer) && num.odd?\n      sum += num\
    \ ** 2\n    end\n  end\n  sum\nend", "  sum = 0\n  lst.each do |num|\n    if num.is_a?(Integer)\
    \ && num > 0\n      if num % 2 == 1\n        sum += num ** 2\n      end\n    end\n\
    \  end\n  sum\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x|\
    \ x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0\
    \ }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select{|x| x.is_a?(Integer)\
    \ && x > 0 && x.odd?}.map{|x| x**2}.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |x| x.is_a?(Integer) && x > 0 && x.odd? }.map { |x| x**2 }.sum\nend", "  lst.select\
    \ { |n| n.is_a?(Integer) && n.odd? }.map { |n| n ** 2 }.sum\nend", "  sum = 0\n\
    \  lst.each do |num|\n    if num.is_a?(Integer) && num.odd?\n      sum += num\
    \ ** 2\n    end\n  end\n  sum\nend", "  lst.select { |x| x.is_a?(Integer) && x\
    \ > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |num|\
    \ num.is_a?(Integer) && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend",
  "  sum = 0\n  lst.each do |x|\n    if x.is_a?(Integer) && x > 0\n      sum += x\
    \ ** 2\n    end\n  end\n  sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n.odd? }.map { |n| n ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 && num.odd? }\n      .map { |num| num ** 2 }\n      .sum\nend", " \
    \ lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\n\
    end", "  lst.select { |x| x.is_a?(Integer) && x > 0 && x.odd? }.map { |x| x **\
    \ 2 }.sum\nend", "  lst.select { |i| i.is_a?(Integer) && i > 0 }.map { |i| i**2\
    \ }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 && x.odd?\
    \ }.map { |x| x ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer) &&\
    \ num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select{|x| x.is_a?(Integer)\
    \ && x > 0 && x.odd?}.map{|x| x**2}.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |n| n.is_a?(Integer)\
    \ && n > 0 }.map { |n| n ** 2 }.sum\nend", "  lst.select { |x| x.is_a?(Integer)\
    \ && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num.odd? }.map { |num| num ** 2 }.sum\nend", "  lst.select { |num| num.is_a?(Integer)\
    \ && num > 0 }.map { |num| num ** 2 }.reduce(0, :+)\nend", "  lst.select { |x|\
    \ x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |num| num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.sum\nend", " \
    \ lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\n\
    end", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0,\
    \ :+)\nend", "  lst.select { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2\
    \ }.reduce(0, :+)\nend", "  lst.select { |num| num.is_a?(Integer) && num > 0 &&\
    \ num.odd? }\n      .map { |num| num ** 2 }\n      .sum\nend", "  lst.select {\
    \ |x| x.is_a?(Integer) && x > 0 }.map { |x| x**2 }.reduce(0, :+)\nend", "  lst.select\
    \ { |x| x.is_a?(Integer) && x > 0 }.map { |x| x ** 2 }.reduce(0, :+)\nend", " \
    \ lst.select { |num| num.is_a?(Integer) && num.odd? }.map { |num| num ** 2 }.sum\n\
    end", "  lst.select { |n| n.is_a?(Integer) && n > 0 }.map { |n| n ** 2 }.reduce(0,\
    \ :+)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_118_get_closest_vowel
language: rb
prompt: "# You are given a word. Your task is to find the closest vowel that stands\
  \ between \n# two consonants from the right side of the word (case sensitive).\n\
  # Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
  # find any vowel met the above condition. \n# You may assume that the given string\
  \ contains English letter only.\n# Example:\n# >>> get_closest_vowel.call(\"yogurt\"\
  )\n# \"u\"\n# >>> get_closest_vowel.call(\"FULL\")\n# \"U\"\n# >>> get_closest_vowel.call(\"\
  quick\")\n# \"\"\n# >>> get_closest_vowel.call(\"ab\")\n# \"\"\ndef get_closest_vowel(word)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_get_closest_vowel\n\
  \    candidate = method(:get_closest_vowel)\n    assert_equal(\"u\", candidate.call(\"\
  yogurt\"))\n    assert_equal(\"u\", candidate.call(\"full\"))\n    assert_equal(\"\
  \", candidate.call(\"easy\"))\n    assert_equal(\"\", candidate.call(\"eAsy\"))\n\
  \    assert_equal(\"\", candidate.call(\"ali\"))\n    assert_equal(\"a\", candidate.call(\"\
  bad\"))\n    assert_equal(\"o\", candidate.call(\"most\"))\n    assert_equal(\"\"\
  , candidate.call(\"ab\"))\n    assert_equal(\"\", candidate.call(\"ba\"))\n    assert_equal(\"\
  \", candidate.call(\"quick\"))\n    assert_equal(\"i\", candidate.call(\"anime\"\
  ))\n    assert_equal(\"\", candidate.call(\"Asia\"))\n    assert_equal(\"o\", candidate.call(\"\
  Above\"))\n  end\nend\n"
completions: ["  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ != char && word[-index-2] != nil\n    end\n  end\n  \"\"\nend", "  vowels =\
    \ \"aeiouAEIOU\"\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index == 0\n      return char if\
    \ !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels =\
    \ \"aeiouAEIOU\"\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = \"aeiou\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if index == 0\n      return char if vowels.include?(char)\n\
    \    elsif vowels.include?(char) && !vowels.include?(word[-index - 1])\n     \
    \ return char\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 0 || !vowels.include?(word[-index - 2])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.chars.each_with_index do |char, index|\n   \
    \ if vowels.include?(char)\n      return char if index == 0 || !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ && !vowels.include?(word[-index-2])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.chars.reverse.each_with_index do |char, index|\n   \
    \ if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index - 1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index == 0 || !vowels.include?(word[-index\
    \ - 2])\n    end\n  end\n  ''\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\",\
    \ \"u\"]\n  word.split(\"\").reverse.each_with_index do |letter, index|\n    if\
    \ vowels.include?(letter)\n      if index == 0\n        return \"\"\n      elsif\
    \ vowels.include?(word[-index-1])\n        return \"\"\n      else\n        return\
    \ letter\n      end\n    end\n  end\n  return \"\"\nend", "  vowels = %w(a e i\
    \ o u)\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if word[-index-2] && !vowels.include?(word[-index-2])\n   \
    \ end\n  end\n  \"\"\nend", "  # Your code here\nend", "  vowels = %w(a e i o\
    \ u)\n  word.split('').each_with_index do |char, index|\n    if vowels.include?(char)\n\
    \      if index == 0\n        return \"\"\n      elsif index == word.length -\
    \ 1\n        return \"\"\n      elsif !vowels.include?(word[index - 1]) && !vowels.include?(word[index\
    \ + 1])\n        return char\n      end\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  ''\nend", "  vowels = ['a', 'e', 'i', 'o', 'u']\n \
    \ word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.split(\"\").each_with_index\
    \ do |letter, index|\n    if vowels.include?(letter)\n      return letter if index\
    \ > 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  word.reverse.each_char.with_index\
    \ do |char, index|\n    if char =~ /[aeiou]/\n      return char if word[-index-2]\
    \ =~ /[^aeiou]/\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u A E I\
    \ O U)\n  word.reverse.split('').each_with_index do |char, index|\n    if vowels.include?(char)\n\
    \      if index == 0\n        return \"\"\n      elsif vowels.include?(word[-index\
    \ - 1])\n        return \"\"\n      else\n        return char\n      end\n   \
    \ end\n  end\n  return \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if vowels.include?(word[-index\
    \ - 2])\n    end\n  end\n  \"\"\nend", "  # your code here\nend", "  # your code\
    \ here\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.chars.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif !vowels.include?(word[-index - 1])\n        return\
    \ char\n      end\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n \
    \ word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ && !vowels.include?(word[-index-2])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      if index == 0\n        return\
    \ \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\"\n   \
    \   else\n        return char\n      end\n    end\n  end\n  return \"\"\nend",
  "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if word.reverse[index+1]\
    \ && !vowels.include?(word.reverse[index+1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.split('').each_with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if word.reverse[index + 1] &&\
    \ !vowels.include?(word.reverse[index + 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index > 0\
    \ && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  # your\
    \ code here\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\
    \"\n      else\n        return char\n      end\n    end\n  end\n  return \"\"\n\
    end", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index == 0\n    \
    \  return char if vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend",
  "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index == 0\n      return char\
    \ if !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index > 0\
    \ && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index == 0\n    \
    \  return char if vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend",
  "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index == 0\n    \
    \  return char if vowels.include?(word[-index-1])\n    end\n  end\n  return \"\
    \"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return char\n      elsif vowels.include?(word[-index-1])\n        return char\n\
    \      end\n    end\n  end\n  return \"\"\nend", "  word.reverse.each_char.with_index\
    \ do |char, index|\n    if index == 0\n      return char if char =~ /[aeiou]/\n\
    \    else\n      if char =~ /[aeiou]/\n        return char if word[-index-1] =~\
    \ /[^aeiou]/\n      end\n    end\n  end\n  return \"\"\nend", "  vowels = %w(a\
    \ e i o u A E I O U)\n  vowels_in_word = word.split('').select { |letter| vowels.include?(letter)\
    \ }\n  vowels_in_word.each_with_index do |vowel, index|\n    if index == 0\n \
    \     return vowel if vowels_in_word[index + 1]\n    elsif index == vowels_in_word.length\
    \ - 1\n      return vowel if vowels_in_word[index - 1]\n    else\n      return\
    \ vowel if vowels_in_word[index - 1] && vowels_in_word[index + 1]\n    end\n \
    \ end\n  ''\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.chars.each_with_index do |char, index|\n   \
    \ if vowels.include?(char)\n      if index == 0\n        return \"\"\n      elsif\
    \ vowels.include?(word[-index-1])\n        return \"\"\n      else\n        return\
    \ char\n      end\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u A E\
    \ I O U)\n  word.reverse.chars.each_with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if vowels.include?(word[-index-2])\n    end\n  end\n  \"\"\n\
    end", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n  word = word.split(\"\")\n  word.each_with_index do |letter, index|\n\
    \    if vowels.include?(letter)\n      if index == 0\n        return \"\"\n  \
    \    elsif word[index - 1] == \" \"\n        return \"\"\n      elsif vowels.include?(word[index\
    \ - 1])\n        return \"\"\n      else\n        return letter\n      end\n \
    \   end\n  end\n  return \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.chars.reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index == 0 || !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if vowels.include?(word[-index - 2])\n    end\n  end\n  \"\"\
    \nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index > 0\
    \ && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  word.reverse.each_char.with_index\
    \ do |char, index|\n    if char =~ /[aeiou]/\n      return char if word[-index-2]\
    \ =~ /[^aeiou]/\n    end\n  end\n  return \"\"\nend", "  word.reverse.each_char.with_index\
    \ do |char, index|\n    if char.match(/[aeiou]/i)\n      return char if word[-index-2].match(/[^aeiou]/i)\n\
    \    end\n  end\n  \"\"\nend", "  word.reverse.scan(/[^aeiou]*([aeiou])/).flatten.first\
    \ || \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index !=\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      if index == 0\n        return ''\n\
    \      elsif vowels.include?(word[-index-1])\n        return ''\n      else\n\
    \        return char\n      end\n    end\n  end\n  return ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      if index == 0\n        return \"\"\n    \
    \  elsif vowels.include?(word[-index-1])\n        return \"\"\n      else\n  \
    \      return char\n      end\n    end\n  end\n  return \"\"\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      if index == 0\n        return\
    \ \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\"\n   \
    \   else\n        return char\n      end\n    end\n  end\n  return \"\"\nend",
  "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index > 0\
    \ && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.split('').each_with_index do |letter, index|\n\
    \    if vowels.include?(letter)\n      return letter if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index == 0\n      return char\
    \ if !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index <\
    \ word.length - 1 && !vowels.include?(word[-index - 2])\n    end\n  end\n  ''\n\
    end", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if word.reverse[index\
    \ + 1] && !vowels.include?(word.reverse[index + 1])\n    end\n  end\n  ''\nend",
  "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      if index == word.length - 1\n        return \"\"\n      elsif !vowels.include?(word[word.length\
    \ - index - 2])\n        return char\n      end\n    end\n  end\n  return \"\"\
    \nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  # your\
    \ code here\nend", "  vowels = %w(a e i o u)\n  word.split('').reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return ''\n      elsif vowels.include?(word[-index - 1])\n        return ''\n\
    \      else\n        return char\n      end\n    end\n  end\n  ''\nend", "  vowels\
    \ = \"aeiou\"\n  word.reverse.split(\"\").each_with_index do |char, index|\n \
    \   if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  return \"\"\nend", "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 0 || !vowels.include?(word[-index - 2])\n    end\n  end\n  \"\"\nend", "  #\
    \ TODO: implement this method\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.chars.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  # Your\
    \ code here\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if vowels.include?(word[-index-2])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ =~ /[^aeiou]/i\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.split('').reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif index == 1\n        return \"\"\n      elsif vowels.include?(word[-index-1])\n\
    \        return \"\"\n      else\n        return char\n      end\n    end\n  end\n\
    \  return \"\"\nend", "  vowels = %w(a e i o u)\n  word.split('').reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return ''\n      else\n        return char\n      end\n    end\n  end\n  return\
    \ ''\nend", "  vowels = \"aeiou\"\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if word[-index-2] &&\
    \ !vowels.include?(word[-index-2])\n    end\n  end\n  \"\"\nend", "  vowels =\
    \ %w(a e i o u)\n  word.split('').reverse.each_with_index do |char, index|\n \
    \   if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return ''\n      elsif vowels.include?(word[-index-1])\n        return ''\n\
    \      else\n        return char\n      end\n    end\n  end\n  ''\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index == 0\
    \ || !vowels.include?(word[-index - 2])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index > 0\
    \ && !vowels.include?(word[-index - 1])\n    end\n  end\n  \"\"\nend", "  word.reverse.scan(/[^aeiou]*[aeiou]/).first.chars.last\n\
    end", "  vowels = %w(a e i o u)\n  word.reverse.chars.each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\
    \"\n      else\n        return char\n      end\n    end\n  end\n  return \"\"\n\
    end", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word.reverse[index\
    \ + 1] != nil && !vowels.include?(word.reverse[index + 1])\n      return char\
    \ if word.reverse[index - 1] != nil && !vowels.include?(word.reverse[index - 1])\n\
    \    end\n  end\n  return ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return ''\n      elsif vowels.include?(word[-index-1])\n        return ''\n\
    \      else\n        return char\n      end\n    end\n  end\n  ''\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word = word.split(\"\")\n  word.each_with_index\
    \ do |letter, index|\n    if vowels.include?(letter)\n      if index == 0\n  \
    \      return \"\"\n      elsif index == word.length - 1\n        return \"\"\n\
    \      elsif vowels.include?(word[index - 1])\n        return \"\"\n      elsif\
    \ vowels.include?(word[index + 1])\n        return \"\"\n      else\n        return\
    \ letter\n      end\n    end\n  end\n  return \"\"\nend", "  vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do |char, i|\n\
    \    if vowels.include?(char)\n      return char if word[-i-2] != nil && !vowels.include?(word[-i-2])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ =~ /[^aeiou]/i\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.split('').each_with_index do |letter, index|\n\
    \    if vowels.include?(letter)\n      return letter if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 0\n      return char if !vowels.include?(word[-index-1])\n    end\n  end\n \
    \ \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index == 0\n\
    \      return char if !vowels.include?(word[-index - 2])\n    end\n  end\n  \"\
    \"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |letter,\
    \ index|\n    if vowels.include?(letter)\n      return letter if index > 0 &&\
    \ !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels =\
    \ %w(a e i o u A E I O U)\n  index = word.length - 1\n  while index > 0\n    if\
    \ vowels.include?(word[index])\n      if vowels.include?(word[index - 1])\n  \
    \      index -= 1\n      else\n        return word[index]\n      end\n    end\n\
    \    index -= 1\n  end\n  return \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.chars.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index == 0\n      return char\
    \ if vowels.include?(word[-index - 2])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index == 0 || !vowels.include?(word[-index\
    \ - 2])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.split('').reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.chars.each_with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if word.reverse.chars[index +\
    \ 1] && !vowels.include?(word.reverse.chars[index + 1])\n    end\n  end\n  \"\"\
    \nend", "  vowels = ['a', 'e', 'i', 'o', 'u']\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 0 || !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.split('').each_with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index == 0 || !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = ['a', 'e', 'i', 'o', 'u']\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index !=\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = ['a', 'e', 'i', 'o', 'u']\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ && !vowels.include?(word[-index-2])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, i|\n    if vowels.include?(char)\n\
    \      return char if i > 0 && !vowels.include?(word[-i-1])\n    end\n  end\n\
    \  ''\nend", "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if word[-index-2]\
    \ =~ /[^aeiou]/i\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 0\n      return char if !vowels.include?(word[-index - 1])\n    end\n  end\n\
    \  ''\nend", "  # your code here\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    return char if vowels.include?(char) && vowels.include?(word[-index-2])\n\
    \  end\n  \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    return char if vowels.include?(char) && vowels.include?(word[-index-2])\n\
    \  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.chars.reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\
    \"\n      else\n        return char\n      end\n    end\n  end\n  \"\"\nend",
  "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    return char if vowels.include?(char) && !vowels.include?(word[-index\
    \ - 2])\n  end\n  ''\nend", "  # your code goes here\nend", "  word.reverse.split('').each_with_index\
    \ do |letter, index|\n    if index == 0 && letter =~ /[aeiou]/i\n      return\
    \ letter\n    elsif letter =~ /[aeiou]/i && word[-index-1] =~ /[^aeiou]/i\n  \
    \    return letter\n    end\n  end\n  return \"\"\nend", "  vowels = %w(a e i\
    \ o u)\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if vowels.include?(word[-index-2])\n    end\n  end\n  \"\"\n\
    end", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index <\
    \ word.length - 1 && !vowels.include?(word[word.length - index - 2])\n    end\n\
    \  end\n  ''\nend", "  vowels = ['a', 'e', 'i', 'o', 'u']\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return ''\n      elsif vowels.include?(word[-index - 1])\n        return ''\n\
    \      else\n        return char\n      end\n    end\n  end\n  ''\nend", "  vowels\
    \ = \"aeiou\"\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if vowels.include?(word[-index-2])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n  word.reverse.chars.each_with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 0\n      return char if !vowels.include?(word[-index-1])\n    end\n  end\n \
    \ \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\
    \"\n      else\n        return char\n      end\n    end\n  end\n  return \"\"\n\
    end", "  vowels = \"aeiouAEIOU\"\n  word.split(\"\").reverse.each_with_index do\
    \ |char, index|\n    if vowels.include?(char)\n      return char if index < word.length\
    \ - 1 && !vowels.include?(word[word.length - index - 2])\n    end\n  end\n  \"\
    \"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if word[-index-2] =~\
    \ /[^aeiou]/i\n    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index == 0\n    \
    \  return char if !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend",
  "  vowels = %w(a e i o u)\n  word.reverse.chars.each_with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  word.reverse.split(/[aeiou]/).first.split(/[^aeiou]/).first.reverse\n\
    end", "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      else\n        return char\n      end\n    end\n  end\n \
    \ return \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index ==\
    \ 1\n      return char if vowels.include?(word[-index-2])\n    end\n  end\n  \"\
    \"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if word.reverse[index\
    \ + 1] && !vowels.include?(word.reverse[index + 1])\n    end\n  end\n  ''\nend",
  "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, i|\n  \
    \  if vowels.include?(char)\n      return char if vowels.include?(word[-i - 2])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = \"aeiou\"\n  word.reverse.each_char.with_index\
    \ do |char, i|\n    if vowels.include?(char)\n      return char if word[-i-2]\
    \ && !vowels.include?(word[-i-2])\n    end\n  end\n  \"\"\nend", "  vowels = %w(a\
    \ e i o u)\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if vowels.include?(word[-index - 2])\n    end\n  end\n  ''\n\
    end", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    return char if vowels.include?(char) && vowels.include?(word[-index\
    \ - 2])\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  word.reverse.each_char.with_index\
    \ do |char, index|\n    if char.match(/[aeiou]/i)\n      return char if word[-index\
    \ - 2].match(/[^aeiou]/i)\n    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index - 1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = \"aeiou\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |c, i|\n    if vowels.include?(c)\n      return c if word[-i-2].nil? || !vowels.include?(word[-i-2])\n\
    \    end\n  end\n  ''\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index\
    \ do |letter, index|\n    if vowels.include?(letter)\n      return letter if index\
    \ > 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index == 0\n      return char\
    \ if vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index == 0 || !vowels.include?(word[-index\
    \ - 2])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if vowels.include?(word[-index-2])\n\
    \    end\n  end\n  return \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index-1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = %w(a e i o u)\n  word.chars.reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  # your\
    \ code here\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.split(\"\
    \").each_with_index do |letter, index|\n    if vowels.include?(letter)\n     \
    \ if index == 0\n        return \"\"\n      elsif vowels.include?(word[-index-1])\n\
    \        return \"\"\n      else\n        return letter\n      end\n    end\n\
    \  end\n  return \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u)\n  word.split('').reverse.each_with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    return char if vowels.include?(char) && vowels.include?(word[-index-2])\n\
    \  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.split(\"\
    \").each_with_index do |char, index|\n    if vowels.include?(char)\n      if index\
    \ == 0\n        return \"\"\n      elsif vowels.include?(word[-index-1])\n   \
    \     return \"\"\n      else\n        return char\n      end\n    end\n  end\n\
    \  return \"\"\nend", "  vowels = %w(a e i o u)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "\tvowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tword.reverse.each_char.with_index do\
    \ |char, index|\n\t\tif vowels.include?(char)\n\t\t\treturn char if index == 0\n\
    \t\t\treturn char if !vowels.include?(word[-index-1])\n\t\tend\n\tend\n\t\"\"\n\
    end", "  vowels = %w(a e i o u)\n  word.split('').reverse.each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index == 0\n    \
    \  return char if vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend",
  "  word.reverse.each_char.with_index do |c, i|\n    if c =~ /[aeiou]/\n      return\
    \ c if i == 0 || word[-i-1] =~ /[^aeiou]/\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index do |char, index|\n   \
    \ if vowels.include?(char)\n      if index == 0\n        return \"\"\n      else\n\
    \        return word[-index]\n      end\n    end\n  end\n  return \"\"\nend",
  "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.split(\"\").each_with_index\
    \ do |letter, index|\n    if vowels.include?(letter)\n      if index == 0\n  \
    \      return \"\"\n      elsif vowels.include?(word[-index-1])\n        return\
    \ \"\"\n      else\n        return letter\n      end\n    end\n  end\n  return\
    \ \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index - 1])\n    end\n  end\n  ''\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |letter,\
    \ index|\n    if vowels.include?(letter)\n      return letter if index == 0\n\
    \      return letter if !vowels.include?(word[-index-1])\n    end\n  end\n  ''\n\
    end", "  vowels = \"aeiou\"\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      if index == 0\n        return \"\"\n    \
    \  elsif vowels.include?(word[-index-1])\n        return \"\"\n      else\n  \
    \      return char\n      end\n    end\n  end\n  return \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index do |char, index|\n\
    \    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = \"aeiou\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u)\n  word.reverse.each_char.with_index do |char, index|\n    if\
    \ vowels.include?(char)\n      return char if index != 0 && !vowels.include?(word[-index\
    \ - 1])\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\
    \"\n      else\n        return char\n      end\n    end\n  end\n  return \"\"\n\
    end", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |letter, index|\n    if vowels.include?(letter)\n      if index == 0\n  \
    \      return \"\"\n      elsif vowels.include?(word[-index-1])\n        return\
    \ \"\"\n      else\n        return letter\n      end\n    end\n  end\n  return\
    \ \"\"\nend", "  vowels = \"aeiouAEIOU\"\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  vowels\
    \ = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index == 0\n    \
    \  return char if vowels.include?(word[-index-1])\n    end\n  end\n  ''\nend",
  "  vowels = %w(a e i o u)\n  word.reverse.split('').each_with_index do |char, index|\n\
    \    if vowels.include?(char)\n      if index == 0\n        return ''\n      elsif\
    \ vowels.include?(word[-index-1])\n        return ''\n      else\n        return\
    \ char\n      end\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I\
    \ O U)\n  word.reverse.split('').each_with_index do |char, index|\n    if vowels.include?(char)\n\
    \      if index == word.length - 1\n        return \"\"\n      elsif !vowels.include?(word[word.length\
    \ - index - 2])\n        return char\n      end\n    end\n  end\n  \"\"\nend",
  "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.split(\"\").each_with_index\
    \ do |letter, index|\n    if vowels.include?(letter)\n      if index == 0\n  \
    \      return \"\"\n      elsif vowels.include?(word[-index-1])\n        return\
    \ \"\"\n      else\n        return letter\n      end\n    end\n  end\n  return\
    \ \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  \"\"\nend", "  word.reverse.each_char.with_index\
    \ do |char, index|\n    if char.match(/[aeiou]/i)\n      return char if word[-index-2].match(/[^aeiou]/i)\n\
    \    end\n  end\n  \"\"\nend", "  # your code here\nend", "  vowels = \"aeiou\"\
    \n  word.reverse.each_char.with_index do |char, index|\n    if vowels.include?(char)\n\
    \      return char if index > 0 && !vowels.include?(word[-index - 1])\n    end\n\
    \  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      return char if index >\
    \ 0 && !vowels.include?(word[-index-1])\n    end\n  end\n  return \"\"\nend",
  "  vowels = %w(a e i o u A E I O U)\n  word.chars.reverse.each_with_index do |char,\
    \ index|\n    if vowels.include?(char)\n      return char if index > 0 && !vowels.include?(word[-index-1])\n\
    \    end\n  end\n  \"\"\nend", "  vowels = %w(a e i o u A E I O U)\n  word.reverse.split('').each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return ''\n      else\n        return word[word.length - index - 1]\n     \
    \ end\n    end\n  end\n  ''\nend", "  vowels = %w(a e i o u A E I O U)\n  word.chars.reverse.each_with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif !vowels.include?(word[-index - 1])\n        return\
    \ char\n      end\n    end\n  end\n  \"\"\nend", "  vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n  word.reverse.split(\"\").each_with_index do |letter, index|\n\
    \    if vowels.include?(letter)\n      if index == 0\n        return \"\"\n  \
    \    else\n        if vowels.include?(word[-index-1])\n          return \"\"\n\
    \        else\n          return letter\n        end\n      end\n    end\n  end\n\
    \  return \"\"\nend", "  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  word.reverse.each_char.with_index\
    \ do |char, index|\n    if vowels.include?(char)\n      if index == 0\n      \
    \  return \"\"\n      elsif vowels.include?(word[-index-1])\n        return \"\
    \"\n      else\n        return char\n      end\n    end\n  end\n  return \"\"\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

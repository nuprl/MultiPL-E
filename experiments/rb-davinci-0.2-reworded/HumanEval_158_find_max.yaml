name: HumanEval_158_find_max
language: rb
prompt: "# Write a function that accepts an array of strings.\n# The array contains\
  \ different words. Return the word with maximum number\n# of unique characters.\
  \ If multiple strings have maximum number of unique\n# characters, return the one\
  \ which comes first in lexicographical order.\n# >>> find_max.call([\"name\", \"\
  of\", \"string\"])\n# \"string\"\n# >>> find_max.call([\"name\", \"enam\", \"game\"\
  ])\n# \"enam\"\n# >>> find_max.call([\"aaaaaaa\", \"bb\", \"cc\"])\n# \"aaaaaaa\"\
  \ndef find_max(words)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_max\n\
  \    candidate = method(:find_max)\n    assert_equal(\"string\", candidate.call([\"\
  name\", \"of\", \"string\"]))\n    assert_equal(\"enam\", candidate.call([\"name\"\
  , \"enam\", \"game\"]))\n    assert_equal(\"aaaaaaa\", candidate.call([\"aaaaaaa\"\
  , \"bb\", \"cc\"]))\n    assert_equal(\"abc\", candidate.call([\"abc\", \"cba\"\
  ]))\n    assert_equal(\"footbott\", candidate.call([\"play\", \"this\", \"game\"\
  , \"of\", \"footbott\"]))\n    assert_equal(\"gonna\", candidate.call([\"we\", \"\
  are\", \"gonna\", \"rock\"]))\n    assert_equal(\"nation\", candidate.call([\"we\"\
  , \"are\", \"a\", \"mad\", \"nation\"]))\n    assert_equal(\"this\", candidate.call([\"\
  this\", \"is\", \"a\", \"prrk\"]))\n    assert_equal(\"b\", candidate.call([\"b\"\
  ]))\n    assert_equal(\"play\", candidate.call([\"play\", \"play\", \"play\"]))\n\
  \  end\nend\n"
completions: ["  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = \"\"\n  max_count = 0\n  words.each do |word|\n    if\
    \ word.chars.uniq.count > max_count\n      max_word = word\n      max_count =\
    \ word.chars.uniq.count\n    end\n  end\n  max_word\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  max_word = words.first\n  max_length\
    \ = max_word.length\n  words.each do |word|\n    if word.length > max_length\n\
    \      max_word = word\n      max_length = word.length\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  # TODO: implement\
    \ me\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_count = words.first.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_count\n      max_word\
    \ = word\n      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by {\
    \ |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  max_word = \"\"\n  max_count = 0\n\
    \  words.each do |word|\n    count = word.chars.uniq.count\n    if count > max_count\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by {\
    \ |word| word.chars.uniq.size }\nend", "  max_word = words.first\n  max_count\
    \ = 0\n  words.each do |word|\n    count = word.chars.uniq.count\n    if count\
    \ > max_count\n      max_count = count\n      max_word = word\n    end\n  end\n\
    \  max_word\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  max_word = words.first\n  max_count\
    \ = 0\n  words.each do |word|\n    if word.chars.uniq.count > max_count\n    \
    \  max_count = word.chars.uniq.count\n      max_word = word\n    end\n  end\n\
    \  max_word\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", " \
    \ words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  max_word\
    \ = words.first\n  max_count = 0\n  words.each do |word|\n    count = word.chars.uniq.count\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_count = 0\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_count\n      max_count = word.chars.uniq.count\n      max_word = word\n\
    \    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  max_word = words.first\n  max_count\
    \ = words.first.chars.uniq.count\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_count\n      max_word = word\n      max_count = word.chars.uniq.count\n\
    \    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_count = max_word.chars.uniq.count\n  words.each do |word|\n\
    \    if word.chars.uniq.count > max_count\n      max_word = word\n      max_count\
    \ = word.chars.uniq.count\n    end\n  end\n  max_word\nend", "  max_word = words.first\n\
    \  max_count = max_word.chars.uniq.count\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_count\n      max_word = word\n      max_count = word.chars.uniq.count\n\
    \    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  max_word = words.first\n  max_unique_chars = words.first.chars.uniq.count\n\
    \  words.each do |word|\n    unique_chars = word.chars.uniq.count\n    if unique_chars\
    \ > max_unique_chars\n      max_unique_chars = unique_chars\n      max_word =\
    \ word\n    end\n  end\n  max_word\nend", "  max_word = words.first\n  max_count\
    \ = max_word.chars.uniq.count\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_count\n      max_word = word\n      max_count = word.chars.uniq.count\n\
    \    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  max_word = words.first\n  max_count = 0\n  words.each do |word|\n\
    \    if word.chars.uniq.count > max_count\n      max_count = word.chars.uniq.count\n\
    \      max_word = word\n    end\n  end\n  max_word\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  max_word = words.first\n  max_uniq_chars =\
    \ words.first.chars.uniq.count\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_uniq_chars\n      max_word = word\n      max_uniq_chars = word.chars.uniq.count\n\
    \    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by do |word|\n    word.chars.uniq.count\n\
    \  end\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  max_word = words.first\n  max_unique_chars\
    \ = max_word.chars.uniq.count\n  words.each do |word|\n    unique_chars = word.chars.uniq.count\n\
    \    if unique_chars > max_unique_chars\n      max_word = word\n      max_unique_chars\
    \ = unique_chars\n    end\n  end\n  max_word\nend", "  max_word = words.first\n\
    \  max_count = 0\n  words.each do |word|\n    if word.chars.uniq.count > max_count\n\
    \      max_count = word.chars.uniq.count\n      max_word = word\n    end\n  end\n\
    \  max_word\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_count = max_word.chars.uniq.count\n  words.each do |word|\n\
    \    if word.chars.uniq.count > max_count\n      max_word = word\n      max_count\
    \ = word.chars.uniq.count\n    end\n  end\n  max_word\nend", "  words.max_by {\
    \ |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_count\n      max_word\
    \ = word\n      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word = words.first\n\
    \  max_chars = words.first.chars.uniq.count\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_chars\n      max_word = word\n      max_chars = word.chars.uniq.count\n\
    \    end\n  end\n  max_word\nend", "  max_word = words.max_by { |word| word.chars.uniq.size\
    \ }\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size }\nend",
  "  words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  max_word = words.first\n  max_count = 0\n \
    \ words.each do |word|\n    count = word.chars.uniq.count\n    if count > max_count\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by {\
    \ |word| word.chars.uniq.size }\nend", "  max_word = words.first\n  max_count\
    \ = words.first.chars.uniq.count\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_count\n      max_word = word\n      max_count = word.chars.uniq.count\n\
    \    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_unique_chars = words.first.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_unique_chars\n   \
    \   max_word = word\n      max_unique_chars = word.chars.uniq.count\n    end\n\
    \  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size }\nend",
  "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n  words.each\
    \ do |word|\n    if word.chars.uniq.count > max_count\n      max_word = word\n\
    \      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\nend", " \
    \ words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_count = max_word.chars.uniq.count\n  words.each do |word|\n\
    \    count = word.chars.uniq.count\n    if count > max_count\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  max_word\nend", "  max_word\
    \ = \"\"\n  max_count = 0\n  words.each do |word|\n    count = word.chars.uniq.count\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_count = 0\n  words.each do |word|\n\
    \    unique_chars = word.split('').uniq.count\n    if unique_chars > max_count\n\
    \      max_count = unique_chars\n      max_word = word\n    end\n  end\n  max_word\n\
    end", "  max_word = words.max_by { |word| word.chars.uniq.size }\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by {\
    \ |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_count = 0\n  words.each do |word|\n\
    \    if word.chars.uniq.count > max_count\n      max_count = word.chars.uniq.count\n\
    \      max_word = word\n    end\n  end\n  max_word\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_count = 0\n  words.each do |word|\n    count = word.chars.uniq.count\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_count\n      max_word\
    \ = word\n      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  max_word = words.max_by do |word|\n    word.chars.uniq.count\n  end\n\
    \  max_word\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_unique_chars = words.first.chars.uniq.count\n\
    \  words.each do |word|\n    unique_chars = word.chars.uniq.count\n    if unique_chars\
    \ > max_unique_chars\n      max_unique_chars = unique_chars\n      max_word =\
    \ word\n    end\n  end\n  max_word\nend", "  max_word = words.first\n  max_unique_chars\
    \ = max_word.chars.uniq.count\n  words.each do |word|\n    unique_chars = word.chars.uniq.count\n\
    \    if unique_chars > max_unique_chars\n      max_word = word\n      max_unique_chars\
    \ = unique_chars\n    end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_count\n      max_word\
    \ = word\n      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by {\
    \ |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_count\n      max_word\
    \ = word\n      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word = words.first\n\
    \  max_count = 0\n  words.each do |word|\n    count = word.split('').uniq.count\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  max_word = words.max_by { |word| word.chars.uniq.count\
    \ }\n  words.select { |word| word.chars.uniq.count == max_word.chars.uniq.count\
    \ }.min\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  max_word\
    \ = words.first\n  max_unique_chars = words.first.chars.uniq.count\n  words.each\
    \ do |word|\n    if word.chars.uniq.count > max_unique_chars\n      max_word =\
    \ word\n      max_unique_chars = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n  words.each\
    \ do |word|\n    if word.chars.uniq.count > max_count\n      max_word = word\n\
    \      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\nend", " \
    \ words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = \"\"\n  max_count = 0\n  words.each do |word|\n    count\
    \ = word.chars.uniq.count\n    if count > max_count\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  max_word\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.max_by { |word| word.chars.uniq.size }\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by {\
    \ |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  words.max_by\
    \ { |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.max_by { |word| word.chars.uniq.count }\n  max_word\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.count\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  max_word\
    \ = words.first\n  max_count = words.first.chars.uniq.count\n  words.each do |word|\n\
    \    if word.chars.uniq.count > max_count\n      max_word = word\n      max_count\
    \ = word.chars.uniq.count\n    end\n  end\n  max_word\nend", "  max_word = words.first\n\
    \  max_count = 0\n  words.each do |word|\n    count = word.split('').uniq.count\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  max_word = words.first\n  words.each do |word|\n    if word.chars.uniq.count\
    \ > max_word.chars.uniq.count\n      max_word = word\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word = \"\"\
    \n  max_count = 0\n  words.each do |word|\n    if word.chars.uniq.count > max_count\n\
    \      max_word = word\n      max_count = word.chars.uniq.count\n    end\n  end\n\
    \  max_word\nend", "  max_word = words.first\n  max_count = max_word.chars.uniq.count\n\
    \  words.each do |word|\n    if word.chars.uniq.count > max_count\n      max_word\
    \ = word\n      max_count = word.chars.uniq.count\n    end\n  end\n  max_word\n\
    end", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word = words.first\n\
    \  max_count = 0\n  words.each do |word|\n    if word.chars.uniq.count > max_count\n\
    \      max_count = word.chars.uniq.count\n      max_word = word\n    end\n  end\n\
    \  max_word\nend", "  max_word = words.first\n  max_count = 0\n  words.each do\
    \ |word|\n    count = word.chars.uniq.count\n    if count > max_count\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  max_word\nend", "  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  max_word = words.first\n  max_count\
    \ = max_word.chars.uniq.count\n  words.each do |word|\n    count = word.chars.uniq.count\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_unique_chars = max_word.chars.uniq.size\n  words.each do\
    \ |word|\n    unique_chars = word.chars.uniq.size\n    if unique_chars > max_unique_chars\n\
    \      max_word = word\n      max_unique_chars = unique_chars\n    end\n  end\n\
    \  max_word\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  max_count = max_word.chars.uniq.count\n  words.each do |word|\n\
    \    if word.chars.uniq.count > max_count\n      max_word = word\n      max_count\
    \ = word.chars.uniq.count\n    end\n  end\n  max_word\nend", "  words.max_by {\
    \ |word| word.chars.uniq.count }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.size }\nend", "  max_word\
    \ = words.first\n  words.each do |word|\n    if word.chars.uniq.count > max_word.chars.uniq.count\n\
    \      max_word = word\n    end\n  end\n  max_word\nend", "  max_word = words.first\n\
    \  max_count = 0\n  words.each do |word|\n    if word.chars.uniq.count > max_count\n\
    \      max_count = word.chars.uniq.count\n      max_word = word\n    end\n  end\n\
    \  max_word\nend", "  max_word = words.max_by { |word| word.chars.uniq.count }\n\
    \  max_word\nend", "  max_word = words.first\n  max_count = 0\n  words.each do\
    \ |word|\n    if word.chars.uniq.count > max_count\n      max_count = word.chars.uniq.count\n\
    \      max_word = word\n    end\n  end\n  max_word\nend", "  words.max_by { |word|\
    \ word.chars.uniq.size }\nend", "  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.max_by { |word| word.chars.uniq.count }\nend", "  max_word\
    \ = words.first\n  max_count = count_unique_characters(max_word)\n  words.each\
    \ do |word|\n    unique_count = count_unique_characters(word)\n    if unique_count\
    \ > max_count\n      max_word = word\n      max_count = unique_count\n    end\n\
    \  end\n  max_word\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

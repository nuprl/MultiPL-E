name: HumanEval_105_by_length
language: rb
prompt: "# Given an array of integers, sort the integers that are between 1 and 9\
  \ inclusive,\n# reverse the resulting array, and then replace each digit by its\
  \ corresponding name from\n# \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
  Six\", \"Seven\", \"Eight\", \"Nine\".\n# For example:\n# >>> by_length.call([2,\
  \ 1, 1, 4, 5, 8, 2, 3])\n# [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"\
  Two\", \"One\", \"One\"]\n# If the array is empty, return an empty array:\n# >>>\
  \ by_length.call([])\n# []\n# If the array has any strange number ignore it:\n#\
  \ >>> by_length.call([1, -1, 55])\n# [\"One\"]\ndef by_length(arr)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_by_length\n\
  \    candidate = method(:by_length)\n    assert_equal([\"Eight\", \"Five\", \"Four\"\
  , \"Three\", \"Two\", \"Two\", \"One\", \"One\"], candidate.call([2, 1, 1, 4, 5,\
  \ 8, 2, 3]))\n    assert_equal([], candidate.call([]))\n    assert_equal([\"One\"\
  ], candidate.call([1, -1, 55]))\n    assert_equal([\"Three\", \"Two\", \"One\"],\
  \ candidate.call([1, -1, 3, 2]))\n    assert_equal([\"Nine\", \"Eight\", \"Four\"\
  ], candidate.call([9, 4, 8]))\n  end\nend\n"
completions: ["  arr.select { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One\
    \ Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select { |num|\
    \ (1..9).include?(num) }.sort.reverse.map { |num| num_to_word(num) }\nend", " \
    \ arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", " \
    \ arr.select { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three\
    \ Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\"][x - 1] }\nend", "  arr.select { |n|\
    \ n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six Seven\
    \ Eight Nine)[n - 1] }\nend", "  arr.select { |e| e.between?(1, 9) }.sort.reverse.map\
    \ { |e| e.to_s }\nend", "  arr.select { |x| (1..9).include?(x) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| %w(One Two Three Four Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |i| (1..9).include?(i) }.sort.reverse.map\
    \ { |i| %w(One Two Three Four Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.sort.reverse.map do |num|\n    case num\n    when\
    \ 1\n      \"One\"\n    when 2\n      \"Two\"\n    when 3\n      \"Three\"\n \
    \   when 4\n      \"Four\"\n    when 5\n      \"Five\"\n    when 6\n      \"Six\"\
    \n    when 7\n      \"Seven\"\n    when 8\n      \"Eight\"\n    when 9\n     \
    \ \"Nine\"\n    end\n  end\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.sort.reverse.map do |num|\n    case num\n    when\
    \ 1 then \"One\"\n    when 2 then \"Two\"\n    when 3 then \"Three\"\n    when\
    \ 4 then \"Four\"\n    when 5 then \"Five\"\n    when 6 then \"Six\"\n    when\
    \ 7 then \"Seven\"\n    when 8 then \"Eight\"\n    when 9 then \"Nine\"\n    end\n\
    \  end.compact\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| (1..9).include?(x) }.sort.reverse.map { |x| %w(One Two Three Four Five\
    \ Six Seven Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |i| i.between?(1, 9) }.sort.reverse.map { |i| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[i - 1] }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map\
    \ { |num| num.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select{|x| x.between?(1,9)}.sort.reverse.map{|x|\
    \ [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"][x-1]}\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |e| (1..9).include?(e) }.sort.reverse.map { |e| %w(One Two Three Four Five\
    \ Six Seven Eight Nine)[e - 1] }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.sort.reverse.map do |num|\n    case num\n    when\
    \ 1\n      \"One\"\n    when 2\n      \"Two\"\n    when 3\n      \"Three\"\n \
    \   when 4\n      \"Four\"\n    when 5\n      \"Five\"\n    when 6\n      \"Six\"\
    \n    when 7\n      \"Seven\"\n    when 8\n      \"Eight\"\n    when 9\n     \
    \ \"Nine\"\n    end\n  end\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |e| e.between?(1, 9) }.sort.reverse.map { |e| e.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n|\n    case n\n    when 1 then\
    \ \"One\"\n    when 2 then \"Two\"\n    when 3 then \"Three\"\n    when 4 then\
    \ \"Four\"\n    when 5 then \"Five\"\n    when 6 then \"Six\"\n    when 7 then\
    \ \"Seven\"\n    when 8 then \"Eight\"\n    when 9 then \"Nine\"\n    end\n  }\n\
    end", "  return [] if arr.empty?\n  arr.select { |e| (1..9).include?(e) }.sort.reverse.map\
    \ { |e| e.to_s }.map { |e| e.gsub('1', 'One').gsub('2', 'Two').gsub('3', 'Three').gsub('4',\
    \ 'Four').gsub('5', 'Five').gsub('6', 'Six').gsub('7', 'Seven').gsub('8', 'Eight').gsub('9',\
    \ 'Nine') }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |i| i.between?(1, 9) }.sort.reverse.map { |i| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[i - 1] }\nend", "  # your code here\nend", "  arr.select {\
    \ |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |x| (1..9).include?(x) }.sort.reverse.map { |x| %w(One Two Three Four Five\
    \ Six Seven Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |num| (1..9).include?(num) }.sort.reverse.map { |num| num.to_s }\nend", " \
    \ arr.sort.reverse.map { |num| num.to_s.gsub(/\\d/, 'One' => 'One', 'Two' => 'Two',\
    \ 'Three' => 'Three', 'Four' => 'Four', 'Five' => 'Five', 'Six' => 'Six', 'Seven'\
    \ => 'Seven', 'Eight' => 'Eight', 'Nine' => 'Nine') }\nend", "  arr.select { |x|\
    \ x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x|\
    \ x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six Seven\
    \ Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |e| (1..9).include?(e) }.sort.reverse.map\
    \ { |e| e.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map\
    \ { |num| num.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| (1..9).include?(x) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr = arr.select { |x| x.between?(1, 9) }.sort.reverse\n\
    \  arr.map { |x| x.to_s }.map { |x| x.gsub(/1/, 'One').gsub(/2/, 'Two').gsub(/3/,\
    \ 'Three').gsub(/4/, 'Four').gsub(/5/, 'Five').gsub(/6/, 'Six').gsub(/7/, 'Seven').gsub(/8/,\
    \ 'Eight').gsub(/9/, 'Nine') }\nend", "  return [] if arr.empty?\n  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |i| i.between?(1, 9) }.sort.reverse.map { |i| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[i - 1] }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| (1..9).include?(x) }.sort.reverse.map { |x| %w(One Two Three Four Five\
    \ Six Seven Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |e| e.between?(1, 9) }.sort.reverse.map { |e| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[e - 1] }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map\
    \ do |num|\n    case num\n    when 1 then \"One\"\n    when 2 then \"Two\"\n \
    \   when 3 then \"Three\"\n    when 4 then \"Four\"\n    when 5 then \"Five\"\n\
    \    when 6 then \"Six\"\n    when 7 then \"Seven\"\n    when 8 then \"Eight\"\
    \n    when 9 then \"Nine\"\n    end\n  end\nend", "  arr.select { |n| n.between?(1,\
    \ 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n\
    \ - 1] }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map {\
    \ |num| num.to_s }\nend", "  arr.select { |x| x >= 1 && x <= 9 }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select{|x| x > 0 && x < 10}.sort.reverse.map{|x|\
    \ [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"][x-1]}\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |e| e.between?(1, 9) }.sort.reverse.map\
    \ { |e| %w(One Two Three Four Five Six Seven Eight Nine)[e - 1] }\nend", "  arr.select\
    \ { |num| num.between?(1, 9) }.sort.reverse.map { |num| num_to_word(num) }\nend",
  "  arr.select{|x| x.between?(1,9)}.sort.reverse.map{|x| [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][x-1]}\nend", " \
    \ arr.select { |i| i.between?(1, 9) }.sort.reverse.map { |i| %w(One Two Three\
    \ Four Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x\
    \ - 1] }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map { |i|\
    \ %w(One Two Three Four Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select{|x|\
    \ x.between?(1,9)}.sort.reverse.map{|x| x.to_s.capitalize}\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map\
    \ { |num| num.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select { |e| e.between?(1, 9) }.sort.reverse.map\
    \ { |e| %w(One Two Three Four Five Six Seven Eight Nine)[e - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  #\
    \ your code here\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map\
    \ { |num| num.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map\
    \ { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.sort.reverse.map do |num|\n    case\
    \ num\n    when 1 then \"One\"\n    when 2 then \"Two\"\n    when 3 then \"Three\"\
    \n    when 4 then \"Four\"\n    when 5 then \"Five\"\n    when 6 then \"Six\"\n\
    \    when 7 then \"Seven\"\n    when 8 then \"Eight\"\n    when 9 then \"Nine\"\
    \n    end\n  end.compact\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[x - 1] }\nend", "  arr.select{|x| x.between?(1,9)}.sort.reverse.map{|x|\
    \ x.to_s.capitalize}\nend", "  # your code here\nend", "  arr.select{|x| x.between?(1,9)}.sort.reverse.map{|x|\
    \ [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"][x-1]}\nend", "  arr.sort.reverse.map do |num|\n    case num\n    when\
    \ 1 then \"One\"\n    when 2 then \"Two\"\n    when 3 then \"Three\"\n    when\
    \ 4 then \"Four\"\n    when 5 then \"Five\"\n    when 6 then \"Six\"\n    when\
    \ 7 then \"Seven\"\n    when 8 then \"Eight\"\n    when 9 then \"Nine\"\n    end\n\
    \  end.compact\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |n| (1..9).include?(n) }.sort.reverse.map { |n| %w(One Two Three Four Five\
    \ Six Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |num| num.between?(1, 9) }.sort.reverse.map { |num| num.to_s }\nend", "  arr.select\
    \ { |num| num.between?(1, 9) }.sort.reverse.map { |num| num_to_word(num) }\nend",
  "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map { |i| %w(One Two Three Four\
    \ Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  return [] if arr.empty?\n  arr.select\
    \ { |num| num.between?(1, 9) }.sort.reverse.map { |num| num.to_s }\nend", "  arr.sort.reverse.map\
    \ do |num|\n    case num\n    when 1\n      \"One\"\n    when 2\n      \"Two\"\
    \n    when 3\n      \"Three\"\n    when 4\n      \"Four\"\n    when 5\n      \"\
    Five\"\n    when 6\n      \"Six\"\n    when 7\n      \"Seven\"\n    when 8\n \
    \     \"Eight\"\n    when 9\n      \"Nine\"\n    end\n  end\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |num| num.between?(1, 9) }.sort.reverse.map { |num| num.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][x - 1] }\nend",
  "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", " \
    \ arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s.capitalize\
    \ }\nend", "  arr.sort.reverse.map { |n| n.to_s }.map { |n| n.gsub(/1/, \"One\"\
    ).gsub(/2/, \"Two\").gsub(/3/, \"Three\").gsub(/4/, \"Four\").gsub(/5/, \"Five\"\
    ).gsub(/6/, \"Six\").gsub(/7/, \"Seven\").gsub(/8/, \"Eight\").gsub(/9/, \"Nine\"\
    ) }\nend", "  arr.sort.reverse.map do |num|\n    case num\n    when 1 then \"\
    One\"\n    when 2 then \"Two\"\n    when 3 then \"Three\"\n    when 4 then \"\
    Four\"\n    when 5 then \"Five\"\n    when 6 then \"Six\"\n    when 7 then \"\
    Seven\"\n    when 8 then \"Eight\"\n    when 9 then \"Nine\"\n    end\n  end.compact\n\
    end", "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two\
    \ Three Four Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x\
    \ - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map { |x|\
    \ x.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map { |i|\
    \ %w(One Two Three Four Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select\
    \ { |i| i.between?(1, 9) }.sort.reverse.map { |i| i.to_s }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| i.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |i| i.between?(1, 9) }.sort.reverse.map\
    \ { |i| %w(One Two Three Four Five Six Seven Eight Nine)[i - 1] }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select\
    \ { |i| i.between?(1, 9) }.sort.reverse.map { |i| i.to_s }\nend", "  arr.select\
    \ { |x| x.between?(1, 9) }.sort.reverse.map { |x| [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][x - 1] }\nend",
  "  arr.select { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four\
    \ Five Six Seven Eight Nine)[n - 1] }\nend", "  arr.select { |x| x.between?(1,\
    \ 9) }.sort.reverse.map { |x| x.to_s }\nend", "  arr.select { |n| n.between?(1,\
    \ 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six Seven Eight Nine)[n\
    \ - 1] }\nend", "  arr.select { |num| num.between?(1, 9) }.sort.reverse.map {\
    \ |num| num.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| x.to_s }\nend", "  arr.select { |x| x.between?(1, 9) }.sort.reverse.map\
    \ { |x| %w(One Two Three Four Five Six Seven Eight Nine)[x - 1] }\nend", "  arr.select\
    \ { |n| n.between?(1, 9) }.sort.reverse.map { |n| %w(One Two Three Four Five Six\
    \ Seven Eight Nine)[n - 1] }\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_66_digitSum
language: rb
prompt: "# Task\n# Write a function that takes a string as input and returns the sum\
  \ of the upper characters only'\n# ASCII codes.\n# Examples:\n# >>> digitSum.call(\"\
  \")\n# 0\n# >>> digitSum.call(\"abAB\")\n# 131\n# >>> digitSum.call(\"abcCd\")\n\
  # 67\n# >>> digitSum.call(\"helloE\")\n# 69\n# >>> digitSum.call(\"woArBld\")\n\
  # 131\n# >>> digitSum.call(\"aAaaaXa\")\n# 153\ndef digitSum(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
  \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
  \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
  abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
  \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
  ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
  \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
completions: ["  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |char| char.ord }.select { |ord| ord >= 65 && ord <= 90\
    \ }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <=\
    \ 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90\
    \ }.reduce(:+)\nend", "  s.chars.map(&:ord).select { |x| x.between?(65, 90) }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend",
  "  s.upcase.chars.map { |c| c.ord }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |i| i.between?(65, 90) }.reduce(:+)\nend", "  s.upcase.chars.map\
    \ { |c| c.ord }.sum\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\nend", " \
    \ s.split('').map { |x| x.ord }.select { |x| x >= 65 && x <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend",
  "  s.chars.map(&:ord).select { |c| c >= 65 && c <= 90 }.sum\nend", "  s.split('').map{|x|\
    \ x.ord}.select{|x| x >= 65 && x <= 90}.reduce(:+)\nend", "  s.chars.map { |c|\
    \ c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.select\
    \ { |char| char.upcase == char }.map(&:ord).reduce(:+)\nend", "  s.chars.map {\
    \ |c| c.ord }.select { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.upcase.chars.map\
    \ { |c| c.ord }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c\
    \ > 64 && c < 91 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c|\
    \ c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c\
    \ > 64 && c < 91 }.sum\nend", "  s.chars.map { |x| x.ord }.select { |x| x.between?(65,\
    \ 90) }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 &&\
    \ c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c.between?(65,\
    \ 90) }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c > 64 && c < 91\
    \ }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <=\
    \ 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 &&\
    \ c <= 90 }.reduce(:+)\nend", "  s.scan(/[A-Z]/).map{|x| x.ord}.inject(:+)\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend",
  "  s.chars.map(&:ord).select { |c| c.between?(65, 90) }.sum\nend", "  s.chars.map(&:ord).select\
    \ { |e| e >= 65 && e <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.upcase.chars.map { |c| c.ord\
    \ }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <=\
    \ 90 }.reduce(:+)\nend", "  s.chars.map(&:ord).select { |n| n >= 65 && n <= 90\
    \ }.reduce(:+)\nend", "  s.chars.map(&:ord).select { |i| i >= 65 && i <= 90 }.reduce(:+)\n\
    end", "  s.chars.inject(0) { |sum, c| c.ord.between?(65, 90) ? sum + c.ord : sum\
    \ }\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\n\
    end", "  s.chars.map { |c| c.ord }.select { |n| n >= 65 && n <= 90 }.reduce(:+)\n\
    end", "  s.chars.map{|x| x.ord}.select{|x| x >= 65 && x <= 90}.reduce(:+)\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |x| x.ord }.select { |x| x >= 65 && x <= 90 }.reduce(:+)\nend", "  s.chars.map{|c|\
    \ c.ord}.select{|c| c >= 65 && c <= 90}.sum\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map(&:ord).select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c > 64 && c < 91 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c.between?(65, 90) }.sum\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c|\
    \ c.between?(65, 90) }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.chars.map(&:ord).select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend",
  "  s.chars.map{|x| x.ord}.select{|x| x > 64 && x < 91}.sum\nend", "  s.chars.map{|x|\
    \ x.ord}.select{|x| x >= 65 && x <= 90}.reduce(:+)\nend", "  s.chars.map { |c|\
    \ c.ord }.select { |c| c.between?(65, 90) }.reduce(:+)\nend", "  s.chars.map(&:ord).select\
    \ { |x| x >= 65 && x <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |n| n >= 65 && n <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c.between?(65, 90) }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c > 64 && c < 91 }.reduce(:+)\n\
    end", "  s.scan(/[A-Z]/).map{|x| x.ord}.reduce(:+)\nend", "  s.gsub(/[^A-Z]/,\
    \ '').chars.map(&:ord).sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c\
    \ >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map{|x| x.ord}.select{|x| x\
    \ > 64 && x < 91}.reduce(:+)\nend", "  sum = 0\n  s.each_char do |char|\n    sum\
    \ += char.ord if char.ord >= 65 && char.ord <= 90\n  end\n  sum\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\n\
    end", "  s.chars.map(&:ord).select { |i| i >= 65 && i <= 90 }.sum\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |n| n >= 65 && n <= 90 }.reduce(:+)\nend", "  s.chars.map(&:ord).select\
    \ { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.upcase.chars.map { |c| c.ord\
    \ }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |i| i >= 65 && i <= 90 }.reduce(:+)\n\
    end", "  s.gsub(/[^A-Z]/, '').chars.map(&:ord).reduce(:+)\nend", "  s.scan(/[A-Z]/).map{|i|\
    \ i.ord}.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 &&\
    \ c <= 90 }.reduce(:+)\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\nend",
  "  s.sum { |char| char.ord if char.ord.between?(65, 90) }\nend", "  s.gsub(/[^A-Z]/,\
    \ '').chars.map { |c| c.ord }.reduce(:+)\nend", "  s.chars.map{|c| c.ord}.select{|c|\
    \ c >= 65 && c <= 90}.sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c >=\
    \ 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c|\
    \ c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map(&:ord).select { |c| c\
    \ >= 65 && c <= 90 }.sum\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\nend",
  "  s.chars.map { |c| c.ord }.select { |i| i >= 65 && i <= 90 }.reduce(:+)\nend",
  "  s.upcase.chars.map { |c| c.ord }.sum\nend", "  s.upcase.chars.map { |c| c.ord\
    \ }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <=\
    \ 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c| c > 64 && c < 91 }.reduce(:+)\n\
    end", "  s.chars.map { |x| x.ord }.select { |x| x >= 65 && x <= 90 }.sum\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend", "  s.upcase.chars.map(&:ord).select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.gsub(/[^A-Z]/, '').chars.map(&:ord).reduce(:+)\n\
    end", "  s.scan(/[A-Z]/).map{|x| x.ord}.reduce(:+)\nend", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\n\
    end", "  s.gsub(/[^A-Z]/, '').chars.map(&:ord).reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map {\
    \ |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |char| char.ord }.select { |num| num > 64 && num < 91 }.sum\nend", "  s.chars.map(&:ord).select\
    \ { |x| x >= 65 && x <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.reduce(0) { |sum, c|\
    \ sum + c.ord }\nend", "  s.chars.inject(0) { |sum, c| c.ord.between?(65, 90)\
    \ ? sum + c.ord : sum }\nend", "  s.chars.map { |c| c.ord }.select { |c| c.between?(65,\
    \ 90) }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 &&\
    \ c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select { |c| c.between?(65,\
    \ 90) }.sum\nend", "  s.scan(/[A-Z]/).map{|x| x.ord}.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |i| i >= 65 && i <= 90 }.sum\nend", "  s.chars.map {\
    \ |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map(&:ord).select\
    \ { |i| i >= 65 && i <= 90 }.sum\nend", "  s.gsub(/[^A-Z]/, '').chars.map(&:ord).reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  sum = 0\n  s.each_char do |char|\n    sum += char.ord if char.ord >=\
    \ 65 && char.ord <= 90\n  end\n  sum\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c.between?(65, 90) }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.upcase.chars.map { |x| x.ord\
    \ }.sum\nend", "  s.chars.reduce(0) { |sum, c| sum + c.ord if c =~ /[A-Z]/ }\n\
    end", "  s.chars.map(&:ord).select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend",
  "  s.chars.map { |c| c.ord }.select { |c| c > 64 && c < 91 }.reduce(:+)\nend", " \
    \ s.chars.map(&:ord).select { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |i| i.between?(65, 90) }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map\
    \ { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map(&:ord).select\
    \ { |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.sum\nend", "  s.upcase.chars.map { |c| c.ord }.reduce(:+)\n\
    end", "  s.scan(/[A-Z]/).map(&:ord).reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |n| n >= 65 && n <= 90 }.reduce(:+)\nend", "  s.chars.map{|x| x.ord}.select{|x|\
    \ x >= 65 && x <= 90}.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |x| x.ord }.select { |x|\
    \ x >= 65 && x <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c.between?(65, 90) }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c|\
    \ c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map{|x| x.ord}.select{|x|\
    \ x >= 65 && x <= 90}.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord }.select\
    \ { |c| c.between?(65, 90) }.reduce(:+)\nend", "  s.gsub(/[^A-Z]/, '').chars.map(&:ord).sum\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |i| i >= 65 && i <= 90 }.reduce(:+)\n\
    end", "  s.chars.map { |x| x.ord }.select { |x| x.between?(65, 90) }.reduce(:+)\n\
    end", "  s.chars.map { |c| c.ord }.select { |c| c >= 65 && c <= 90 }.sum\nend",
  "  s.upcase.chars.map { |c| c.ord }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.upcase.chars.map(&:ord).select\
    \ { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  s.scan(/[A-Z]/).map(&:ord).sum\n\
    end", "  s.chars.map{|x| x.ord}.select{|x| x > 64 && x < 91}.reduce(:+)\nend",
  "  s.chars.inject(0) { |sum, c| sum + c.ord }\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |i| i >= 65 && i <= 90 }.reduce(:+)\nend", "  sum = 0\n  s.each_byte\
    \ { |c| sum += c if c >= 65 && c <= 90 }\n  sum\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |c| c.ord\
    \ }.select { |c| c >= 65 && c <= 90 }.reduce(:+)\nend", "  s.chars.map { |char|\
    \ char.ord }.select { |num| num.between?(65, 90) }.reduce(:+)\nend", "  s.chars.map(&:ord).select\
    \ { |i| i >= 65 && i <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select {\
    \ |c| c >= 65 && c <= 90 }.sum\nend", "  s.chars.map { |c| c.ord }.select { |c|\
    \ c >= 65 && c <= 90 }.reduce(:+)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

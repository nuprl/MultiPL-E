name: HumanEval_28_concatenate
language: rb
prompt: "# Concatenate array of strings into a single string\n# >>> concatenate.call([])\n\
  # \"\"\n# >>> concatenate.call([\"a\", \"b\", \"c\"])\n# \"abc\"\ndef concatenate(strings)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_concatenate\n\
  \    candidate = method(:concatenate)\n    assert_equal(\"\", candidate.call([]))\n\
  \    assert_equal(\"xyz\", candidate.call([\"x\", \"y\", \"z\"]))\n    assert_equal(\"\
  xyzwk\", candidate.call([\"x\", \"y\", \"z\", \"w\", \"k\"]))\n  end\nend\n"
completions: ["  strings.join\nend", "  strings.join\nend", "  strings.join\nend",
  "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |acc, string| acc + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.inject(\"\") { |acc, string| acc + string }\n\
    end", "  strings.inject(\"\") { |acc, string| acc + string }\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\") {\
    \ |result, string| result + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\") {\
    \ |acc, string| acc + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |result, string| result + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.inject(:+)\nend", "  strings.join\nend", "  strings.join\nend",
  "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.inject(\"\") { |memo, string| memo + string }\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.inject(:+)\n\
    end", "  strings.inject(:+)\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |acc, string| acc + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.inject('') { |memo, str| memo + str }\n\
    end", "  strings.inject(\"\") { |acc, string| acc + string }\nend", "  strings.join\n\
    end", "  strings.inject(\"\") { |memo, string| memo + string }\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.inject(\"\") { |acc, string|\
    \ acc + string }\nend", "  strings.inject(\"\") { |acc, string| acc + string }\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.inject(\"\") { |memo, string| memo << string }\nend", "  strings.join\n\
    end", "  strings.inject(\"\") { |memo, string| memo + string }\nend", "  strings.join\n\
    end", "  strings.inject(\"\") { |result, string| result + string }\nend", "  strings.inject(\"\
    \") { |memo, string| memo + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.inject(\"\") { |str, s| str << s }\nend",
  "  strings.inject(\"\") { |result, string| result + string }\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.inject(\"\") { |result, string| result\
    \ + string }\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.inject(\"\") { |result, string| result + string }\nend", "  strings.join\n\
    end", "  strings.inject(:+)\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |result, string| result + string }\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.inject(:+)\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", " \
    \ strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |acc, str| acc + str }\nend", "  strings.join\nend", "  strings.join\nend",
  "  strings.join\nend", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |acc, s| acc + s }\nend", "  strings.inject(\"\") { |result, string| result\
    \ + string }\nend", "  strings.join\nend", "  strings.join\nend", "  strings.join\n\
    end", "  strings.join\nend", "  strings.join\nend", "  strings.inject(\"\") {\
    \ |result, string| result + string }\nend", "  strings.join\nend", "  strings.inject(\"\
    \") { |memo, string| memo + string }\nend", "  strings.inject(\"\") { |result,\
    \ string| result + string }\nend", "  strings.join\nend", "  strings.join\nend",
  "  strings.join\nend", "  strings.join\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

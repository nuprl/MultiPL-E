name: HumanEval_159_eat
language: rb
prompt: "# You're a hungry rabbit, and you already have eaten a certain number of\
  \ carrots,\n# but now you need to eat more carrots to complete the day's meals.\n\
  # you should return an array of [ total number of eaten carrots after your meals,\n\
  # the number of carrots left after your meals ]\n# if there are not enough remaining\
  \ carrots, you will eat all remaining carrots, but will still be hungry.\n# Example:\n\
  # >>> eat.call(5, 6, 10)\n# [11, 4]\n# >>> eat.call(4, 8, 9)\n# [12, 1]\n# >>> eat.call(1,\
  \ 10, 10)\n# [11, 0]\n# >>> eat.call(2, 11, 5)\n# [7, 0]\n# Variables:\n# @number\
  \ : integer\n# the number of carrots that you have eaten.\n# @need : integer\n#\
  \ the number of carrots that you need to eat.\n# @remaining : integer\n# the number\
  \ of remaining carrots thet exist in stock\n# Constrain:\n# * 0 <= number <= 1000\n\
  # * 0 <= need <= 1000\n# * 0 <= remaining <= 1000\n# Have fun :)\ndef eat(number,\
  \ need, remaining)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_eat\n\
  \    candidate = method(:eat)\n    assert_equal([11, 4], candidate.call(5, 6, 10))\n\
  \    assert_equal([12, 1], candidate.call(4, 8, 9))\n    assert_equal([11, 0], candidate.call(1,\
  \ 10, 10))\n    assert_equal([7, 0], candidate.call(2, 11, 5))\n    assert_equal([9,\
  \ 2], candidate.call(4, 5, 7))\n    assert_equal([5, 0], candidate.call(4, 5, 1))\n\
  \  end\nend\n"
completions: ["  if number + need > remaining\n    [remaining, 0]\n  else\n    [number\
    \ + need, remaining - (number + need)]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need > remaining\n\
    \    [remaining, 0]\n  else\n    [number + need, remaining - (number + need)]\n\
    \  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  eaten\
    \ = number + need\n  eaten > remaining ? [remaining, 0] : [eaten, remaining -\
    \ eaten]\nend", "  if remaining >= need\n    return [number + need, remaining\
    \ - need]\n  else\n    return [number + remaining, 0]\n  end\nend", "  # your\
    \ code here\nend", "  # your code here\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  # your code here\nend", "  if number + need <= remaining\n  \
    \  [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  [number + need, remaining - need].minmax\nend", "  # your\
    \ code here\nend", "  # your code here\nend", "  if remaining >= need\n    [number\
    \ + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  # your code here\nend", "  if number + need\
    \ > remaining\n    [remaining, 0]\n  else\n    [number + need, remaining - (number\
    \ + need)]\n  end\nend", "  if number + need <= remaining\n    [number + need,\
    \ remaining - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  if number + need > remaining\n    [remaining, 0]\n  else\n  \
    \  [number + need, remaining - (number + need)]\n  end\nend", "  if remaining\
    \ >= need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  # your code here\nend",
  "  # your code here\nend", "  if remaining >= need\n    [number + need, remaining\
    \ - need]\n  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >=\
    \ need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  # your code here\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need > remaining\n\
    \    [remaining, 0]\n  else\n    [number + need, remaining - (number + need)]\n\
    \  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - number - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  # your code here\nend", "  # your code here\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  # your code here\nend", "  if number + need <= remaining\n  \
    \  [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ number + need <= remaining\n    [number + need, remaining - (number + need)]\n\
    \  else\n    [remaining + number, 0]\n  end\nend", "  # your code here\nend",
  "  if number + need > remaining\n    [remaining, 0]\n  else\n    [number + need,\
    \ remaining - (number + need)]\n  end\nend", "  if remaining >= need\n    [number\
    \ + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  eaten = number + need\n  eaten > remaining\
    \ ? [remaining, 0] : [eaten, remaining - eaten]\nend", "  if remaining >= need\n\
    \    [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n\
    \  end\nend", "  # your code here\nend", "  if number + need <= remaining\n  \
    \  [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if number + need > remaining\n    [remaining, 0]\n  else\n\
    \    [number + need, remaining - (number + need)]\n  end\nend", "  # your code\
    \ here\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n \
    \   [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n \
    \ end\nend", "  if number + need <= remaining\n    [number + need, remaining -\
    \ (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if number\
    \ + need <= remaining\n    [number + need, remaining - (number + need)]\n  else\n\
    \    [remaining + number, 0]\n  end\nend", "  if remaining >= need\n    [number\
    \ + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend",
  "  if number + need > remaining\n    return [remaining, 0]\n  else\n    return [number\
    \ + need, remaining - (number + need)]\n  end\nend", "  # your code here\nend",
  "  number + need <= remaining ? [number + need, remaining - (number + need)] : [remaining\
    \ + number, 0]\nend", "  if remaining >= need\n    [number + need, remaining -\
    \ need]\n  else\n    [number + remaining, 0]\n  end\nend", "  if number + need\
    \ <= remaining\n    [number + need, remaining - (number + need)]\n  else\n   \
    \ [remaining + number, 0]\n  end\nend", "  if number + need > remaining\n    [remaining,\
    \ 0]\n  else\n    [number + need, remaining - (number + need)]\n  end\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if remaining >= need\n    return [number +\
    \ need, remaining - need]\n  else\n    return [number + remaining, 0]\n  end\n\
    end", "  if number + need <= remaining\n    [number + need, remaining - (number\
    \ + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  # your code here\n\
    end", "  if number + need <= remaining\n    [number + need, remaining - (number\
    \ + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if remaining\
    \ >= need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n \
    \   [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n \
    \ end\nend", "  # your code here\nend", "  if remaining >= need\n    [number +\
    \ need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend", " \
    \ number + need > remaining ? [remaining, 0] : [number + need, remaining - (number\
    \ + need)]\nend", "  if (number + need) <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ number + need > remaining\n    [remaining, 0]\n  else\n    [number + need, remaining\
    \ - (number + need)]\n  end\nend", "  # your code here\nend", "  if number + need\
    \ > remaining\n    [remaining, 0]\n  else\n    [number + need, remaining - (number\
    \ + need)]\n  end\nend", "  # your code here\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  # your code here\nend",
  "  number + need > remaining ? [remaining, 0] : [number + need, remaining - (number\
    \ + need)]\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n \
    \   [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n \
    \ end\nend", "  if number + need <= remaining\n    [number + need, remaining -\
    \ (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if number\
    \ + need <= remaining\n    [number + need, remaining - (number + need)]\n  else\n\
    \    [remaining + number, 0]\n  end\nend", "  if number + need > remaining\n \
    \   [remaining, 0]\n  else\n    [number + need, remaining - (number + need)]\n\
    \  end\nend", "  if number + need > remaining\n    [remaining, 0]\n  else\n  \
    \  [number + need, remaining - (number + need)]\n  end\nend", "  if number + need\
    \ > remaining\n    [remaining, 0]\n  else\n    [number + need, remaining - (number\
    \ + need)]\n  end\nend", "  # your code here\nend", "  if remaining >= need\n\
    \    [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n\
    \  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  # your\
    \ code here\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  # your code here\nend",
  "  # your code here\nend", "  if remaining >= need\n    [number + need, remaining\
    \ - need]\n  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >=\
    \ need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  number += need\n  number > remaining ? [remaining, 0] :\
    \ [number, remaining - number]\nend", "  if number + need > remaining\n    [remaining,\
    \ 0]\n  else\n    [number + need, remaining - (number + need)]\n  end\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  # Your code here\nend",
  "  # your code here\nend", "  if number + need > remaining\n    [remaining, 0]\n\
    \  else\n    [number + need, remaining - (number + need)]\n  end\nend", "  # your\
    \ code here\nend", "  # your code here\nend", "  if number + need > remaining\n\
    \    [remaining, 0]\n  else\n    [number + need, remaining - (number + need)]\n\
    \  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n \
    \   [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n \
    \ end\nend", "  if number + need <= remaining\n    [number + need, remaining -\
    \ (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if number\
    \ + need <= remaining\n    [number + need, remaining - (number + need)]\n  else\n\
    \    [remaining + number, 0]\n  end\nend", "  if remaining >= need\n    [number\
    \ + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining\
    \ - need]\n  else\n    [number + remaining, 0]\n  end\nend", "  number += need\n\
    \  number > remaining ? [remaining, 0] : [number, remaining - number]\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  # your code here\nend", "  total = number + need\n  if total\
    \ > remaining\n    [remaining, 0]\n  else\n    [total, remaining - total]\n  end\n\
    end", "  if number + need <= remaining\n    [number + need, remaining - (number\
    \ + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  eaten = number\
    \ + need\n  eaten > remaining ? [remaining, 0] : [eaten, remaining - eaten]\n\
    end", "  total = number + need\n  if total > remaining\n    return [remaining,\
    \ 0]\n  else\n    return [total, remaining - total]\n  end\nend", "  if remaining\
    \ >= need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ number + need > remaining\n    [remaining, 0]\n  else\n    [number + need, remaining\
    \ - (number + need)]\n  end\nend", "  if remaining >= need\n    [number + need,\
    \ remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend", "  if remaining\
    \ >= need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n \
    \   [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n \
    \ end\nend", "  if number + need <= remaining\n    [number + need, remaining -\
    \ (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if number\
    \ + need <= remaining\n    [number + need, remaining - (number + need)]\n  else\n\
    \    [remaining + number, 0]\n  end\nend", "  if remaining >= need\n    [number\
    \ + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  # your code here\nend", "  if remaining >=\
    \ need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  # your code here\nend", "  total = number +\
    \ need\n  if total > remaining\n    [remaining, 0]\n  else\n    [total, remaining\
    \ - total]\n  end\nend", "  # TODO: return the number of carrots that you need\
    \ to eat\n  # and the number of remaining carrots\n  if remaining >= need\n  \
    \  [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\n\
    end", "  if remaining >= need\n    [number + need, remaining - need]\n  else\n\
    \    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n    [number\
    \ + need, remaining - need]\n  else\n    [number + remaining, 0]\n  end\nend",
  "  total = number + need\n  if total > remaining\n    [remaining, 0]\n  else\n \
    \   [total, remaining - total]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining\
    \ - need]\n  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >=\
    \ need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  # your code here\nend",
  "  if remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  #your code here\n  if number + need <= remaining\n    [number\
    \ + need, remaining - (number + need)]\n  else\n    [remaining + number, 0]\n\
    \  end\nend", "  if (number + need) <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ number + need > remaining\n    [remaining, 0]\n  else\n    [number + need, remaining\
    \ - (number + need)]\n  end\nend", "  # your code here\nend", "  if number + need\
    \ <= remaining\n    [number + need, remaining - (number + need)]\n  else\n   \
    \ [remaining + number, 0]\n  end\nend", "  if number + need > remaining\n    [remaining,\
    \ 0]\n  else\n    [number + need, remaining - (number + need)]\n  end\nend", " \
    \ if number + need <= remaining\n    [number + need, remaining - (number + need)]\n\
    \  else\n    [remaining + number, 0]\n  end\nend", "  if remaining >= need\n \
    \   [number + need, remaining - need]\n  else\n    [number + remaining, 0]\n \
    \ end\nend", "  if number + need <= remaining\n    [number + need, remaining -\
    \ (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if remaining\
    \ >= need\n    [number + need, remaining - need]\n  else\n    [number + remaining,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining < need\n  \
    \  [number + remaining, 0]\n  else\n    [number + need, remaining - need]\n  end\n\
    end", "  if number + need > remaining\n    [remaining, 0]\n  else\n    [number\
    \ + need, remaining - (number + need)]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if remaining >= need\n    [number + need, remaining - need]\n\
    \  else\n    [number + remaining, 0]\n  end\nend", "  if remaining >= need\n \
    \   return [number + need, remaining - need]\n  else\n    return [number + remaining,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ number + need <= remaining\n    [number + need, remaining - (number + need)]\n\
    \  else\n    [remaining + number, 0]\n  end\nend", "  if number + need <= remaining\n\
    \    [number + need, remaining - (number + need)]\n  else\n    [remaining + number,\
    \ 0]\n  end\nend", "  if number + need <= remaining\n    [number + need, remaining\
    \ - (number + need)]\n  else\n    [remaining + number, 0]\n  end\nend", "  if\
    \ remaining >= need\n    [number + need, remaining - need]\n  else\n    [number\
    \ + remaining, 0]\n  end\nend", "  # your code here\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

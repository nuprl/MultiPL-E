name: HumanEval_117_select_words
language: rb
prompt: "# Given a string s and a natural number n, you have been tasked to implement\
  \ \n# a function that returns an array of all words from string s that contain exactly\
  \ \n# n consonants, in order these words appear in the string s.\n# If the string\
  \ s is empty then the function should return an empty array.\n# Note: you may assume\
  \ the input string contains only letters and spaces.\n# Examples:\n# >>> select_words.call(\"\
  Mary had a little lamb\", 4)\n# [\"little\"]\n# >>> select_words.call(\"Mary had\
  \ a little lamb\", 3)\n# [\"Mary\", \"lamb\"]\n# >>> select_words.call(\"simple\
  \ white space\", 2)\n# []\n# >>> select_words.call(\"Hello world\", 4)\n# [\"world\"\
  ]\n# >>> select_words.call(\"Uncle sam\", 3)\n# [\"Uncle\"]\ndef select_words(s,\
  \ n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_select_words\n\
  \    candidate = method(:select_words)\n    assert_equal([\"little\"], candidate.call(\"\
  Mary had a little lamb\", 4))\n    assert_equal([\"Mary\", \"lamb\"], candidate.call(\"\
  Mary had a little lamb\", 3))\n    assert_equal([], candidate.call(\"simple white\
  \ space\", 2))\n    assert_equal([\"world\"], candidate.call(\"Hello world\", 4))\n\
  \    assert_equal([\"Uncle\"], candidate.call(\"Uncle sam\", 3))\n    assert_equal([],\
  \ candidate.call(\"\", 4))\n    assert_equal([\"b\", \"c\", \"d\", \"f\"], candidate.call(\"\
  a b c d e f\", 1))\n  end\nend\n"
completions: ["  s.split.select { |w| w.count(\"^aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\n\
    end", "  s.split.select { |w| w.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend",
  "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", " \
    \ s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiouAEIOU\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select{|w| w.count(\"aeiou\"\
    ) == n}\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |w| w.count(\"^aeiouAEIOU\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    ^aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  words = s.split(\" \")\n  words.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |w| w.count(\"^aeiou\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"^aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\n\
    end", "  # your code here\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count('bcdfghjklmnpqrstvwxyz')\
    \ == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split(' ').select { |word| word.count('aeiou') == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\n\
    end", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\n\
    end", "  s.split.select { |w| w.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |w| w.count(\"aeiou\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", " \
    \ s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend",
  "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", " \
    \ s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |w| w.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |w| w.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word|\
    \ word.scan(/[^aeiou]/).size == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"^aeiou\") == n\
    \ }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\n\
    end", "  s.split.select { |word| word.count(\"^aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", " \
    \ s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select{|word|\
    \ word.count(\"aeiou\") == n}\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\n\
    end", "  s.split.select { |w| w.count(\"^aeiou\") == n }\nend", "  s.split(\"\
    \ \").select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select {\
    \ |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", " \
    \ s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend",
  "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", " \
    \ s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend",
  "  s.split.select { |w| w.count(\"aeiou\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select{|w| w.count(\"\
    aeiou\") == n}\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"^aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.downcase.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    ^aeiou\") == n }\nend", "  s.split.select { |w| w.count(\"^aeiouAEIOU\") == n\
    \ }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select{|word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n}\nend", "  s.split.select { |word| word.count(\"^aeiou\") == n }\nend",
  "  s.split.select { |w| w.count(\"aeiou\") == n }\nend", "  s.split.select { |word|\
    \ word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split(\" \").select\
    \ { |w| w.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    ^aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n\
    \ }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select{|w| w.count(\"\
    aeiou\") == n}\nend", "  s.split(\" \").select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |w| w.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select{|w|\
    \ w.count(\"bcdfghjklmnpqrstvwxyz\") == n}\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"^aeiou\") == n\
    \ }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") ==\
    \ n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", " \
    \ s.split.select{|word| word.gsub(/[aeiou]/i, '').length == n}\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"^aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\n\
    end", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\n\
    end", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\n\
    end", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\n\
    end", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count('bcdfghjklmnpqrstvwxyz') == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  words = s.split\n\
    \  words.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count('bcdfghjklmnpqrstvwxyz') == n }\nend", "  s.split.select\
    \ { |word| word.count('aeiou') == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend", "  s.split.select { |word| word.count(\"aeiou\") == n }\nend",
  "  s.split.select { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select\
    \ { |word| word.count(\"aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"\
    bcdfghjklmnpqrstvwxyz\") == n }\nend", "  s.split.select { |word| word.count(\"\
    aeiou\") == n }\nend", "  s.split.select { |word| word.count(\"bcdfghjklmnpqrstvwxyz\"\
    ) == n }\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

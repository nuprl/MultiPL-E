name: HumanEval_146_specialFilter
language: rb
prompt: "# Write a function that takes an array of numbers as input and returns \n\
  # the number of elements in the array that are greater than 10 and both \n# first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter.call([15,\
  \ -73, 14, -15])\n# 1\n# >>> specialFilter.call([33, -2, -3, 45, 21, 109])\n# 2\n\
  def specialFilter(nums)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_specialFilter\n\
  \    candidate = method(:specialFilter)\n    assert_equal(0, candidate.call([5,\
  \ -2, 1, -5]))\n    assert_equal(1, candidate.call([15, -73, 14, -15]))\n    assert_equal(2,\
  \ candidate.call([33, -2, -3, 45, 21, 109]))\n    assert_equal(4, candidate.call([43,\
  \ -12, 93, 125, 121, 109]))\n    assert_equal(3, candidate.call([71, -2, -33, 75,\
  \ 21, 19]))\n    assert_equal(0, candidate.call([1]))\n    assert_equal(0, candidate.call([]))\n\
  \  end\nend\n"
completions: ["  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.count\nend", "  nums.select { |num| num >\
    \ 10 && num.digits.first.odd? && num.digits.last.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\n\
    end", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  # your code here\n\
    end", "  nums.select{|num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?}.count\n\
    end", "  nums.count { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |x| x > 10 && x.to_s[0].to_i.odd? && x.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  # your code here\n\
    end", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num.to_s.length > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? && num\
    \ > 10 }.length\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  nums.select { |num| num.to_s.length\
    \ > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? && num > 10 }.length\n\
    end", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "    nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.count\nend", "    nums.select { |num| num\
    \ > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.length\nend", "  nums.select\
    \ { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd? }.size\nend",
  "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.count\nend", "  nums.select { |num| num >\
    \ 10 && num.digits.first.odd? && num.digits.last.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd? }.count\n\
    end", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select{|num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?}.count\n\
    end", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  count = 0\n  nums.each do |num|\n    if num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd?\n      count += 1\n    end\n  end\n  count\nend",
  "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  # Your code here\nend", "  nums.select { |num| num > 10 &&\
    \ num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd? }.count\nend",
  "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.count { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.count { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd? &&\
    \ num.to_s.chars.last.to_i.odd? }.count\nend", "  nums.select { |num| num.to_s.length\
    \ > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? && num > 10 }.count\n\
    end", "  nums.select { |num| num.to_s.size > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ && num > 10 }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select { |num| num > 10 &&\
    \ num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.size > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.size\nend", "  nums.select { |num| num\
    \ > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.count\nend", "  nums.select { |num| num >\
    \ 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd? }.size\nend", " \
    \ nums.count { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }\nend", "  nums.select { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.count\nend", "  nums.select { |num| num.to_s.length\
    \ > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? && num > 10 }.length\n\
    end", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\nend", " \
    \ nums.select { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd? }.count\n\
    end", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ && num > 10 }.length\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select { |num| num > 10 &&\
    \ num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\n\
    end", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |n| n\
    \ > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd? }.size\nend", "  nums.select\
    \ { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd? }.size\nend",
  "  nums.select { |n| n > 10 && n.digits.first.odd? && n.digits.last.odd? }.size\n\
    end", "  nums.select { |num| num.to_s.size > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ && num > 10 }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select { |num| num > 10 &&\
    \ num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\n\
    end", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |n| n > 10 && n.digits.first.odd? && n.digits.last.odd?\
    \ }.count\nend", "  nums.select { |x| x > 10 && x.to_s[0].to_i.odd? && x.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\nend", " \
    \ nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ && num > 10 }.length\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  nums.select { |num| num > 10 && num.to_s.length\
    \ > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.length\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\n\
    end", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\nend", " \
    \ nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.count { |num| num.digits.first.odd? && num.digits.last.odd?\
    \ && num > 10 }\nend", "  nums.select { |n| n > 10 && n.digits.first.odd? && n.digits.last.odd?\
    \ }.size\nend", "  nums.count { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |n| n\
    \ > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd? }.size\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s.length > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.length\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.count\nend", "  nums.select { |num| num >\
    \ 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\n\
    end", "    count = 0\n    nums.each do |num|\n        if num > 10\n          \
    \  if num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\n                count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\n\
    end", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", " \
    \ nums.select { |num| num > 10 && num.to_s.split('').first.to_i.odd? && num.to_s.split('').last.to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |x| x > 10 && x.to_s[0].to_i.odd? && x.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.size\nend", " \
    \ nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.size\nend", "  nums.select { |num| num >\
    \ 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd? }.count\n\
    end", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.digits.first.odd? && num.digits.last.odd? }.size\nend", "  \
    \  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.length\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? &&\
    \ num.to_s[-1].to_i.odd? }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.count\nend", "  count = 0\n  nums.each do |num|\n\
    \    if num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\n      count\
    \ += 1\n    end\n  end\n  count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  count = 0\n  nums.each do |num|\n\
    \    if num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\n      count\
    \ += 1\n    end\n  end\n  count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.size\nend", "  nums.select { |num| num > 10 && num.to_s.length\
    \ > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.length\nend", "  nums.select\
    \ { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd? }.size\nend", " \
    \ nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.count { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd?\
    \ }\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num.to_s.size > 1 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? && num\
    \ > 10 }.size\nend", "  nums.select { |num| num > 10 && num.digits.first.odd?\
    \ && num.digits.last.odd? }.count\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? }.count\nend", "  nums.select { |num| num > 10 &&\
    \ num.digits.first.odd? && num.digits.last.odd? }.size\nend", "  nums.select {\
    \ |n| n > 10 && n.digits.first.odd? && n.digits.last.odd? }.count\nend", "  nums.select\
    \ { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\n\
    end", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |n| n > 10 && n.to_s[0].to_i.odd? && n.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd? }.count\nend", " \
    \ nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd? && num.to_s.chars.last.to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.count\nend", "  nums.select { |num| num.to_s.length > 1 && num.to_s[0].to_i.odd?\
    \ && num.to_s[-1].to_i.odd? && num > 10 }.length\nend", "  nums.select { |num|\
    \ num > 10 && num.digits.first.odd? && num.digits.last.odd? }.size\nend", "  nums.select{|num|\
    \ num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?}.count\nend", " \
    \ nums.select { |num| num > 10 && num.digits.first.odd? && num.digits.last.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s[0].to_i.odd? && num.to_s[-1].to_i.odd?\
    \ }.size\nend", "  nums.select { |num| num > 10 && num.to_s.chars.first.to_i.odd?\
    \ && num.to_s.chars.last.to_i.odd? }.size\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

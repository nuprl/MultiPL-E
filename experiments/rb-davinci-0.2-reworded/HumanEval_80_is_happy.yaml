name: HumanEval_80_is_happy
language: rb
prompt: "# You are given a string s.\n# Your task is to check if the string is haprb\
  \ or not.\n# A string is haprb if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n# For example:\n# >>> is_happy.call(a)\n# false\n# >>> is_happy.call(aa)\n\
  # false\n# >>> is_happy.call(abcd)\n# true\n# >>> is_happy.call(aabb)\n# false\n\
  # >>> is_happy.call(adb)\n# true\n# >>> is_happy.call(xyy)\n# false\ndef is_happy(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_happy\n\
  \    candidate = method(:is_happy)\n    assert_equal(false, candidate.call(\"a\"\
  ))\n    assert_equal(false, candidate.call(\"aa\"))\n    assert_equal(true, candidate.call(\"\
  abcd\"))\n    assert_equal(false, candidate.call(\"aabb\"))\n    assert_equal(true,\
  \ candidate.call(\"adb\"))\n    assert_equal(false, candidate.call(\"xyy\"))\n \
  \   assert_equal(true, candidate.call(\"iopaxpoi\"))\n    assert_equal(false, candidate.call(\"\
  iopaxioi\"))\n  end\nend\n"
completions: ["  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n\
    \    return false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length\
    \ >= 3 && s.scan(/.../).all? { |s| s.chars.uniq.length == 3 }\nend", "  s.length\
    \ >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  # your\
    \ code here\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a\
    \ != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.split('').each_cons(3) do |cons|\n    return false if cons.uniq.length\
    \ != 3\n  end\n  true\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  return\
    \ false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false\
    \ if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  # your code here\nend", "  s.length >=\
    \ 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\nend",
  "  return false if s.length < 3\n  s.split('').each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 &&\
    \ s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\nend", " \
    \ s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a\
    \ != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a,\
    \ b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\nend",
  "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 &&\
    \ s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\nend", " \
    \ return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 &&\
    \ s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\nend", " \
    \ return false if s.length < 3\n  (0..s.length-3).each do |i|\n    return false\
    \ if s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]\n  end\n  true\nend",
  "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  return false if\
    \ s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a ==\
    \ b || b == c || a == c\n  end\n  true\nend", "  return false if s.length < 3\n\
    \  (0..s.length-3).each do |i|\n    return false if s[i] == s[i+1] || s[i] ==\
    \ s[i+2] || s[i+1] == s[i+2]\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  # your code here\nend", " \
    \ return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  return false if\
    \ s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a ==\
    \ b || b == c || a == c\n  end\n  true\nend", "  # your code here\nend", "  s.length\
    \ >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\n\
    end", "  # your code here\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  if s.length < 3\n    return false\n  end\n\
    \  s.each_char.with_index do |char, index|\n    if index < s.length - 2\n    \
    \  if char == s[index + 1] || char == s[index + 2] || s[index + 1] == s[index\
    \ + 2]\n        return false\n      end\n    end\n  end\n  return true\nend",
  "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  return false if\
    \ s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a ==\
    \ b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  if s.length < 3\n    return\
    \ false\n  end\n  s.each_char.with_index do |c, i|\n    if i < s.length - 2\n\
    \      if c == s[i+1] || c == s[i+2] || s[i+1] == s[i+2]\n        return false\n\
    \      end\n    end\n  end\n  return true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.scan(/.../).all?\
    \ { |s| s.chars.uniq.length == 3 }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.scan(/.../).uniq.length\
    \ == s.length / 3\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  return false if s.length < 3\n  (0..s.length-3).each\
    \ do |i|\n    return false if s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]\n\
    \  end\n  true\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.size >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c\
    \ && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3) do\
    \ |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\nend",
  "  return false if s.length < 3\n  s.each_char.each_cons(3).all? { |a, b, c| a !=\
    \ b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.scan(/.../).all?\
    \ { |s| s.chars.uniq.length == 3 }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  return false if s.length < 3\n  s.each_char.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  return\
    \ false if s.length < 3\n  s.split('').each_cons(3) do |a, b, c|\n    return false\
    \ if a == b || b == c || a == c\n  end\n  true\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  (0..s.length-3).each do |i|\n    return false if s[i] == s[i+1] || s[i]\
    \ == s[i+2] || s[i+1] == s[i+2]\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  return false if s.length < 3\n  (0..s.length-3).each\
    \ do |i|\n    return false if s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]\n\
    \  end\n  true\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  return false if s.length < 3\n  s.split('').each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.scan(/.../).all? { |s| s.chars.uniq.length == 3 }\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.split('').each_cons(3).all? { |a,\
    \ b, c| a != b && b != c && a != c }\nend", "  return false if s.length < 3\n\
    \  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b == c ||\
    \ a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all? {\
    \ |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |x, y, z| x != y && y != z && x != z }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  return false if s.size < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length\
    \ >= 3 && s.scan(/.../).all? { |s| s.chars.uniq.length == 3 }\nend", "  s.length\
    \ >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  return false if s.length < 3\n  s.split('').each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length\
    \ >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  (0..s.length-3).each do |i|\n    return\
    \ false if s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  return\
    \ false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false\
    \ if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  (0..s.length-3).each do |i|\n    return false if s[i] == s[i+1] || s[i]\
    \ == s[i+2] || s[i+1] == s[i+2]\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.split('').each_cons(3) do |a, b, c|\n    return false if a == b ||\
    \ b == c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  if s.length < 3\n    return\
    \ false\n  end\n  for i in 0..s.length-3\n    if s[i] == s[i+1] || s[i] == s[i+2]\
    \ || s[i+1] == s[i+2]\n      return false\n    end\n  end\n  return true\nend",
  "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a\
    \ != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a,\
    \ b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\nend",
  "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 &&\
    \ s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\nend", " \
    \ return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  return false if\
    \ s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a ==\
    \ b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  # your code here\nend", " \
    \ s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a\
    \ != c }\nend", "  # your code here\nend", "  if s.length < 3\n    return false\n\
    \  end\n  s.each_char.with_index do |c, i|\n    if i <= s.length - 3\n      if\
    \ c == s[i+1] || c == s[i+2] || s[i+1] == s[i+2]\n        return false\n     \
    \ end\n    end\n  end\n  return true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.scan(/.../).all? { |s|\
    \ s.chars.uniq.length == 3 }\nend", "  return false if s.length < 3\n  s.split('').each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  (0..s.length-3).each do |i|\n    return\
    \ false if s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length\
    \ >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\n\
    end", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b !=\
    \ c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a, b,\
    \ c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.split('').each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  if s.length < 3\n    return\
    \ false\n  end\n  for i in 0..s.length-3\n    if s[i] == s[i+1] || s[i] == s[i+2]\
    \ || s[i+1] == s[i+2]\n      return false\n    end\n  end\n  return true\nend",
  "  # your code here\nend", "  return false if s.length < 3\n  s.chars.each_cons(3)\
    \ do |a, b, c|\n    return false if a == b || b == c || a == c\n  end\n  true\n\
    end", "  return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n \
    \   return false if a == b || b == c || a == c\n  end\n  true\nend", "  return\
    \ false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false\
    \ if a == b || b == c || a == c\n  end\n  true\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.scan(/.../).uniq.length\
    \ == s.length / 3\nend", "  s.length >= 3 && s.split('').each_cons(3).all? { |a,\
    \ b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |x, y, z| x != y && y != z && x != z }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  # your code here\nend", " \
    \ return false if s.length < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return\
    \ false if a == b || b == c || a == c\n  end\n  true\nend", "  s.length >= 3 &&\
    \ s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a != c }\nend", " \
    \ s.length >= 3 && s.chars.each_cons(3).all? { |a, b, c| a != b && b != c && a\
    \ != c }\nend", "  return false if s.length < 3\n  (s.length - 2).times do |i|\n\
    \    return false if s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] == s[i +\
    \ 2]\n  end\n  true\nend", "  s.length >= 3 && s.chars.each_cons(3).all? { |a,\
    \ b, c| a != b && b != c && a != c }\nend", "  s.length >= 3 && s.chars.each_cons(3).all?\
    \ { |a, b, c| a != b && b != c && a != c }\nend", "  return false if s.length\
    \ < 3\n  s.chars.each_cons(3) do |a, b, c|\n    return false if a == b || b ==\
    \ c || a == c\n  end\n  true\nend", "  # your code here\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

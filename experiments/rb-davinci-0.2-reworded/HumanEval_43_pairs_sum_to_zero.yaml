name: HumanEval_43_pairs_sum_to_zero
language: rb
prompt: "# pairs_sum_to_zero takes an array of integers as an input.\n# it returns\
  \ true if there are two distinct elements in the array that\n# sum to zero, and\
  \ false otherwise.\n# >>> pairs_sum_to_zero.call([1, 3, 5, 0])\n# false\n# >>> pairs_sum_to_zero.call([1,\
  \ 3, -2, 1])\n# false\n# >>> pairs_sum_to_zero.call([1, 2, 3, 7])\n# false\n# >>>\
  \ pairs_sum_to_zero.call([2, 4, -5, 3, 5, 7])\n# true\n# >>> pairs_sum_to_zero.call([1])\n\
  # false\ndef pairs_sum_to_zero(l)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_pairs_sum_to_zero\n\
  \    candidate = method(:pairs_sum_to_zero)\n    assert_equal(false, candidate.call([1,\
  \ 3, 5, 0]))\n    assert_equal(false, candidate.call([1, 3, -2, 1]))\n    assert_equal(false,\
  \ candidate.call([1, 2, 3, 7]))\n    assert_equal(true, candidate.call([2, 4, -5,\
  \ 3, 5, 7]))\n    assert_equal(false, candidate.call([1]))\n    assert_equal(true,\
  \ candidate.call([-3, 9, -1, 3, 2, 30]))\n    assert_equal(true, candidate.call([-3,\
  \ 9, -1, 3, 2, 31]))\n    assert_equal(false, candidate.call([-3, 9, -1, 4, 2, 30]))\n\
  \    assert_equal(false, candidate.call([-3, 9, -1, 4, 2, 31]))\n  end\nend\n"
completions: ["  # your code here\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  # your code here\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if x + y == 0 && i != j\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |e1, i|\n    l.each_with_index do |e2, j|\n      return true if e1 + e2 ==\
    \ 0 && i != j\n    end\n  end\n  false\nend", "  l.each_with_index do |e, i|\n\
    \    l.each_with_index do |e2, i2|\n      if i != i2 && e + e2 == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      return true if x + y == 0\
    \ && i != j\n    end\n  end\n  false\nend", "  # TODO: implement this method\n\
    \  l.each_with_index do |el, idx|\n    l.each_with_index do |el2, idx2|\n    \
    \  if el + el2 == 0 && idx != idx2\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      return true if x + y == 0 && i != j\n    end\n  end\n  false\n\
    end", "  # your code here\nend", "  # your code here\nend", "  # TODO: implement\
    \ this method\n  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n\
    \      if i != j && x + y == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do\
    \ |y, j|\n      return true if x + y == 0 && i != j\n    end\n  end\n  false\n\
    end", "  # TODO: implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  # TODO: implement this method\n  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if num + num2\
    \ == 0 && index != index2\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |num, index|\n    l.each_with_index do\
    \ |num2, index2|\n      if num + num2 == 0 && index != index2\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  # TODO: implement\
    \ this method\n  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n\
    \      if i != j && x + y == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |e, i|\n\
    \    l.each_with_index do |e2, i2|\n      if i != i2 && e + e2 == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  # TODO:\
    \ implement this method\n  # l.each_with_index do |x, i|\n  #   l.each_with_index\
    \ do |y, j|\n  #     if i != j && x + y == 0\n  #       return true\n  #     end\n\
    \  #   end\n  # end\n  # return false\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, index|\n \
    \   l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if i\
    \ != j && num + num2 == 0\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |num, index|\n    l.each_with_index do\
    \ |num2, index2|\n      if index != index2 && num + num2 == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if i != j && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n      if i != j\
    \ && x + y == 0\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  # TODO: implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if x + y == 0 && i != j\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  # TODO: implement this method\n  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if x + y == 0 && i != j\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num1, i|\n    l.each_with_index do |num2, j|\n      if num1 + num2 == 0\
    \ && i != j\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  # TODO: implement this method\n  l.each_with_index do |num, index|\n\
    \    l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if i\
    \ != j && num + num2 == 0\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |num1, i|\n    l.each_with_index do |num2,\
    \ j|\n      if i != j && num1 + num2 == 0\n        return true\n      end\n  \
    \  end\n  end\n  return false\nend", "  # TODO: implement this method\nend", " \
    \ # your code here\nend", "  l.each_with_index do |num, index|\n    l.each_with_index\
    \ do |num2, index2|\n      if index != index2 && num + num2 == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  # TODO: implement\
    \ me\nend", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2,\
    \ j|\n      if i != j && num + num2 == 0\n        return true\n      end\n   \
    \ end\n  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      return true if x + y == 0 && i != j\n    end\n  end\n  false\n\
    end", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n \
    \     return true if i != j && num + num2 == 0\n    end\n  end\n  false\nend",
  "  # TODO: implement me!\nend", "  l.each_with_index do |num1, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num1 + num2 == 0\n        return true\n   \
    \   end\n    end\n  end\n  return false\nend", "  # TODO: implement me\nend",
  "  # TODO: implement this method\n  l.each_with_index do |num, index|\n    l.each_with_index\
    \ do |num2, index2|\n      if num + num2 == 0 && index != index2\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, idx|\n    l.each_with_index do |num2, idx2|\n      if idx2 > idx\n\
    \        if num + num2 == 0\n          return true\n        end\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, index|\n\
    \    l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num1, index1|\n    l.each_with_index do |num2, index2|\n\
    \      if index1 != index2 && num1 + num2 == 0\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  # TODO: implement me!\nend", "  # your\
    \ code here\nend", "  l.each_with_index do |num, i|\n    l.each_with_index do\
    \ |num2, j|\n      if i != j && num + num2 == 0\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n\
    \    l.each_with_index do |num2, j|\n      if num + num2 == 0 && i != j\n    \
    \    return true\n      end\n    end\n  end\n  return false\nend", "  # your code\
    \ here\nend", "  l.each_with_index do |num, index|\n    l.each_with_index do |num2,\
    \ index2|\n      if num + num2 == 0 && index != index2\n        return true\n\
    \      end\n    end\n  end\n  return false\nend", "  # your code here\nend", " \
    \ # TODO: implement me\nend", "  l.each_with_index do |num, index|\n    l.each_with_index\
    \ do |num2, index2|\n      if num + num2 == 0 && index != index2\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if index !=\
    \ index2 && num + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  # TODO: implement this method\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      return true if x + y == 0\
    \ && i != j\n    end\n  end\n  false\nend", "  l.each_with_index do |num, index|\n\
    \    l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, index|\n    l.each_with_index do |num2, index2|\n\
    \      if index2 > index\n        if num + num2 == 0\n          return true\n\
    \        end\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if index !=\
    \ index2 && num + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do\
    \ |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  l.each_with_index do |num, index|\n    l.each_with_index\
    \ do |num2, index2|\n      if index2 > index && num + num2 == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  # YOUR CODE HERE\n\
    end", "  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n      if\
    \ i != j && x + y == 0\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2,\
    \ j|\n      if i != j && num + num2 == 0\n        return true\n      end\n   \
    \ end\n  end\n  return false\nend", "  # TODO: implement me!\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if i != j && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if i\
    \ != j && num + num2 == 0\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |e, i|\n    l.each_with_index do |e2, i2|\n\
    \      if i != i2\n        return true if e + e2 == 0\n      end\n    end\n  end\n\
    \  false\nend", "  # TODO: implement this method\n  l.each_with_index do |num,\
    \ i|\n    l.each_with_index do |num2, j|\n      if i != j && num + num2 == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if index !=\
    \ index2 && num + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num1, i|\n\
    \    l.each_with_index do |num2, j|\n      if i != j && num1 + num2 == 0\n   \
    \     return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num1, i|\n    l.each_with_index do |num2, j|\n      if num1 + num2 == 0\
    \ && i != j\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  l.each_with_index do |num, index|\n    l.each_with_index do |num2, index2|\n\
    \      if index2 > index && num + num2 == 0\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  # TODO: implement me\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if num + num2\
    \ == 0 && index != index2\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n\
    \      if i != j && x + y == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  # TODO: implement this method\n  # TODO: implement this\
    \ method\n  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n   \
    \   if i != j && x + y == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  # TODO: implement this method\n  l.each_with_index do\
    \ |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n   \
    \     return true\n      end\n    end\n  end\n  return false\nend", "  # write\
    \ your code here\n  l.each_with_index do |x, i|\n    l.each_with_index do |y,\
    \ j|\n      if i != j && x + y == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  # YOUR CODE HERE\nend", "  # TODO: implement\
    \ this method\n  # l.each_with_index do |num, index|\n  #   if l.include?(-num)\
    \ && l.index(num) != index\n  #     return true\n  #   end\n  # end\n  # return\
    \ false\n  l.each_with_index do |num, index|\n    if l.include?(-num) && l.index(num)\
    \ != index\n      return true\n    end\n  end\n  return false\nend", "  # TODO:\
    \ implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if (x + y == 0) && (i != j)\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  l.each_with_index do |num1, i|\n   \
    \ l.each_with_index do |num2, j|\n      if i != j && num1 + num2 == 0\n      \
    \  return true\n      end\n    end\n  end\n  return false\nend", "  # TODO: implement\
    \ this method\n  l.each_with_index do |num, index|\n    l.each_with_index do |num2,\
    \ index2|\n      if index != index2 && num + num2 == 0\n        return true\n\
    \      end\n    end\n  end\n  return false\nend", "  l.each_with_index do |e,\
    \ i|\n    l.each_with_index do |f, j|\n      return true if e + f == 0 && i !=\
    \ j\n    end\n  end\n  false\nend", "  # TODO: implement this method\n  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if num + num2 == 0 &&\
    \ i != j\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num1, i|\n    l.each_with_index do |num2, j|\n      if\
    \ i != j && num1 + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  # your code here\nend", "  # TODO: implement this method\n\
    \  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if\
    \ num + num2 == 0 && i != j\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  # TODO: implement this method\n  l.each_with_index do\
    \ |e, i|\n    l.each_with_index do |e2, i2|\n      if i != i2\n        if e +\
    \ e2 == 0\n          return true\n        end\n      end\n    end\n  end\n  return\
    \ false\nend", "  # TODO: implement this method\n  l.each_with_index do |x, i|\n\
    \    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if index !=\
    \ index2 && num + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  # TODO: implement me!\nend",
  "  l.each_with_index do |num, index|\n    l.each_with_index do |num2, index2|\n\
    \      if num + num2 == 0 && index != index2\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if x + y == 0 && i != j\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  # TODO: implement this method\n\
    end", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n \
    \     if i != j && num + num2 == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  # your code here\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if num + num2 == 0 &&\
    \ i != j\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  # TODO: implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num1, i|\n    l.each_with_index\
    \ do |num2, j|\n      if num1 + num2 == 0 && i != j\n        return true\n   \
    \   end\n    end\n  end\n  return false\nend", "  # TODO: implement me\nend",
  "  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n      if i != j\
    \ && x + y == 0\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  # your code here\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  # TODO: write your code here\nend", " \
    \ # TODO: implement me\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  # your code here\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if index !=\
    \ index2 && num + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if num + num2 == 0 && i != j\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  # TODO: implement this method\n\
    \  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n      if x +\
    \ y == 0 && i != j\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  l.each_with_index do |num, index|\n    l.each_with_index do |num2, index2|\n\
    \      if index != index2 && num + num2 == 0\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if num + num2 == 0 && i != j\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n\
    \    l.each_with_index do |num2, j|\n      return true if num + num2 == 0 && i\
    \ != j\n    end\n  end\n  false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |e, i|\n\
    \    l.each_with_index do |e2, i2|\n      if i2 > i && e + e2 == 0\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if i != j && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, index|\n    l.each_with_index do |num2, index2|\n\
    \      if index != index2 && num + num2 == 0\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  # TODO: implement me\nend", "  # TODO:\
    \ implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if x + y == 0 && i != j\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num1, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i < j && num1 + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  # your code here\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if i != j && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  # TODO: implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j\n        if x + y == 0\n          return true\n \
    \       end\n      end\n    end\n  end\n  return false\nend", "  # TODO: implement\
    \ this method\n  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n\
    \      if i != j && x + y == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do\
    \ |y, j|\n      return true if x + y == 0 && i != j\n    end\n  end\n  false\n\
    end", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n \
    \     if i != j && num + num2 == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  # TODO: implement this method\n  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if x + y == 0 && i != j\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |e, i|\n    l.each_with_index do |e2, i2|\n      if i2 > i && e + e2 == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  # TODO:\
    \ implement this method\n  l.each_with_index do |num, index|\n    l.each_with_index\
    \ do |num2, index2|\n      if num + num2 == 0 && index != index2\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if i != j && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if i\
    \ != j && num + num2 == 0\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  # TODO: implement this method\n  # l.each_with_index do |x,\
    \ i|\n  #   l.each_with_index do |y, j|\n  #     if x + y == 0 && i != j\n  #\
    \       return true\n  #     end\n  #   end\n  # end\n  # return false\n  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if x + y == 0 && i != j\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if num + num2\
    \ == 0 && index != index2\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n\
    \      return true if x + y == 0 && i != j\n    end\n  end\n  false\nend", " \
    \ l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if\
    \ i != j && num + num2 == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do\
    \ |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      return true if num + num2 == 0 && i != j\n    end\n  end\n\
    \  false\nend", "  # TODO: implement me\nend", "  l.each_with_index do |num, i|\n\
    \    l.each_with_index do |num2, j|\n      if i != j && num + num2 == 0\n    \
    \    return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num, i|\n    l.each_with_index do |num2, j|\n      if num + num2 == 0 &&\
    \ i != j\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |e, i|\n    l.each_with_index do |e2, i2|\n      if i2 >\
    \ i && e + e2 == 0\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  l.each_with_index do |num1, i|\n    l.each_with_index do |num2, j|\n\
    \      if num1 + num2 == 0 && i != j\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, index|\n\
    \    l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n      if i\
    \ != j && num + num2 == 0\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |n, i|\n    l.each_with_index do |m, j|\n\
    \      if i != j && n + m == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  # TODO: implement me\nend", "  l.each_with_index do\
    \ |x, i|\n    l.each_with_index do |y, j|\n      if i != j && x + y == 0\n   \
    \     return true\n      end\n    end\n  end\n  return false\nend", "  # your\
    \ code here\nend", "  l.each_with_index do |x, i|\n    l.each_with_index do |y,\
    \ j|\n      return true if x + y == 0 && i != j\n    end\n  end\n  false\nend",
  "  # your code here\nend", "  l.each_with_index do |e, i|\n    l.each_with_index\
    \ do |e2, i2|\n      if i != i2 && e + e2 == 0\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      return true if x + y == 0 && i != j\n    end\n  end\n  false\n\
    end", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2, j|\n \
    \     if i != j && num + num2 == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  # TODO: implement this method\nend", "  # TODO:\
    \ implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each do |x|\n    l.each do |y|\n  \
    \    if x != y && x + y == 0\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, index|\n\
    \    l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  # TODO: implement this method\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n\
    \    l.each_with_index do |num2, j|\n      return true if num + num2 == 0 && i\
    \ != j\n    end\n  end\n  false\nend", "  l.each_with_index do |num, index|\n\
    \    l.each_with_index do |num2, index2|\n      if index != index2 && num + num2\
    \ == 0\n        return true\n      end\n    end\n  end\n  return false\nend",
  "  l.each_with_index do |x, i|\n    l.each_with_index do |y, j|\n      if i != j\
    \ && x + y == 0\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  # TODO: implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, idx|\n   \
    \ l.each_with_index do |num2, idx2|\n      if idx2 > idx\n        if num + num2\
    \ == 0\n          return true\n        end\n      end\n    end\n  end\n  return\
    \ false\nend", "  # YOUR CODE HERE\nend", "  # your code here\nend", "  l.each_with_index\
    \ do |num, index|\n    l.each_with_index do |num2, index2|\n      if num + num2\
    \ == 0 && index != index2\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index do |num2,\
    \ j|\n      if i != j && num + num2 == 0\n        return true\n      end\n   \
    \ end\n  end\n  return false\nend", "  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |i, index|\n   \
    \ l.each_with_index do |j, index2|\n      if index != index2 && i + j == 0\n \
    \       return true\n      end\n    end\n  end\n  return false\nend", "  # your\
    \ code here\nend", "  l.each_with_index do |e, i|\n    l.each_with_index do |e2,\
    \ i2|\n      if i != i2 && e + e2 == 0\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  l.each_with_index do |e, i|\n    l.each_with_index\
    \ do |f, j|\n      if i != j && e + f == 0\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n\
    \    l.each_with_index do |num2, j|\n      if i != j && num + num2 == 0\n    \
    \    return true\n      end\n    end\n  end\n  return false\nend", "  # TODO:\
    \ implement this method\n  # l.each_with_index do |x, i|\n  #   l.each_with_index\
    \ do |y, j|\n  #     if i != j && x + y == 0\n  #       return true\n  #     end\n\
    \  #   end\n  # end\n  # false\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if i != j && x + y == 0\n        return true\n      end\n \
    \   end\n  end\n  false\nend", "  l.each_with_index do |num, i|\n    l.each_with_index\
    \ do |num2, j|\n      if i != j && num + num2 == 0\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "  l.each_with_index do |num, i|\n\
    \    l.each_with_index do |num2, j|\n      if i != j && num + num2 == 0\n    \
    \    return true\n      end\n    end\n  end\n  return false\nend", "  l.each_with_index\
    \ do |num1, i|\n    l.each_with_index do |num2, j|\n      if num1 + num2 == 0\
    \ && i != j\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  # TODO: implement this method\n  l.each_with_index do |x, i|\n    l.each_with_index\
    \ do |y, j|\n      if x + y == 0 && i != j\n        return true\n      end\n \
    \   end\n  end\n  return false\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

language: java
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() <=\
    \ 1) return 0f;\n        long m = Collections.min(l);\n        long high = Collections.max(l);\n\
    \        return (high - m) / (l.size() - 1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pd9jigw.java:21)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        PriorityQueue<Long>\
    \ p = new PriorityQueue<Long>();\n        for (Long l : l)\n            p.add(l);\n\
    \        long m = (long) p.size(); // median of p is size m\n        if (m % 2\
    \ == 1)\n            m = m + 1;\n        return ((float)p.get((int)m/2)) / (float)m;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2o5i2xk.java:16: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        for (Long l : l)\n                  ^\n/tmp/tmpf2o5i2xk.java:21:\
    \ error: cannot find symbol\n        return ((float)p.get((int)m/2)) / (float)m;\n\
    \                        ^\n  symbol:   method get(int)\n  location: variable\
    \ p of type PriorityQueue<Long>\n2 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Only allow two\
    \ elements so no need to do anything fancy.\n        if (l.size() < 2) {\n   \
    \         // The median is a number if there are two or more numbers, else it's\
    \ a null.\n            return l.size() > 0 ? l.get(0) : null;\n        }\n\n \
    \       // Get the two middle elements.\n        long mid = (long) l.get(l.size()\
    \ / 2);\n        long m = (long) l.get(0);\n        long n = (long) l.get(l.size()\
    \ - 1);\n\n        // Calculate the median.\n        float midM = (float) m;\n\
    \        float midN = (float) n;\n        float midMidM = (float) mid + mid;\n\
    \        float midMidN = (float) mid + n;\n        float midMidMidM = (float)\
    \ mid + mid + mid;\n        float midMidMidN = (float) mid + mid + n;\n\n    \
    \    if (midMidM >= midMidN && midMidM >= midMidMidM) {\n            return midM;\n\
    \        } else if (midMidN >= midMidM && midMidN >= midMidMidN) {\n         \
    \   return midN;\n        } else if (midMidMidM >= midMidN && midMidMidM >= midMidMidN)\
    \ {\n            return midMidM;\n        } else if (midMidN >= midMidM && midMidN\
    \ >= midMidMidN) {\n            return midMidN;\n        } else {\n          \
    \  return midMidMidM;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7w4hjf0.java:47)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().sorted().skip(l.size()/2).findFirst().getAsFloat();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph80lbz1c.java:15: error: cannot find symbol\n        return l.stream().sorted().skip(l.size()/2).findFirst().getAsFloat();\n\
    \                                                               ^\n  symbol: \
    \  method getAsFloat()\n  location: class Optional<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float n = ((float)\
    \ l.size() + (float)1.5f) / 2.f;\n        Collections.sort(l);\n        float\
    \ f = l.get(n);\n        return f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1brlk8o4.java:17: error: incompatible types: possible lossy conversion\
    \ from float to int\n        float f = l.get(n);\n                        ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ throw new NoSuchElementException(\"l cannot be empty\");\n        l.sort((a,\
    \ b) -> Float.compare(b, l.get(0)))\n        \n        return l.stream().filter(n\
    \ -> n % 2 == 0).collect(Collectors.averagingDouble(n)).get(l.size() / 2);\n \
    \   }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7y7ucntf.java:16: error: ';' expected\n        l.sort((a, b) ->\
    \ Float.compare(b, l.get(0)))\n                                              \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010312
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float f = (float)l.stream().sorted((a,\
    \ b) -> a - b).collect(Collectors.summarizingInt(Long::intValue)).average().getAsFloat();\n\
    \        return Math.round(f);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdc3u7zft.java:15: error: incompatible types: bad return type in\
    \ lambda expression\n        float f = (float)l.stream().sorted((a, b) -> a -\
    \ b).collect(Collectors.summarizingInt(Long::intValue)).average().getAsFloat();\n\
    \                                                       ^\n    possible lossy\
    \ conversion from long to int\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return median(l.stream().mapToLong(Long::longValue).toArray(),\
    \ 0f);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphw52napx.java:15: error: method median in class Problem cannot\
    \ be applied to given types;\n        return median(l.stream().mapToLong(Long::longValue).toArray(),\
    \ 0f);\n               ^\n  required: ArrayList<Long>\n  found:    long[],float\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double length =\
    \ l.size();\n        if (length%2 == 0) {\n            int index = length/2;\n\
    \            return (long)(l.get(index) + l.get(index+1));\n        } else {\n\
    \            int index = (length-1)/2;\n            return (long)(l.get(index)\
    \ + l.get(index+1));\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4z2ua59i.java:17: error: incompatible types: possible lossy conversion\
    \ from double to int\n            int index = length/2;\n                    \
    \          ^\n/tmp/tmp4z2ua59i.java:20: error: incompatible types: possible lossy\
    \ conversion from double to int\n            int index = (length-1)/2;\n     \
    \                             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return 0;\n        float pivot = l.get(0);\n        for (long i :\
    \ l)\n            if (i < pivot)\n                swap(l, 0, i);\n        float\
    \ s = 0.0f;\n        for (long i : l)\n            s += i;\n        return s /\
    \ l.size();\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazpshea4.java:20: error: cannot find symbol\n                swap(l,\
    \ 0, i);\n                ^\n  symbol:   method swap(ArrayList<Long>,int,long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ {\n            return Float.NaN;\n        }\n        float x = l.stream().mapToLong(Long::longValue).sorted().skip(l.size()/2).findFirst().getAsFloat();\n\
    \        long n = l.size();\n        if (n < 10) {\n            return x;\n  \
    \      }\n        if (n < 100) {\n            return (long)(x / 10.0);\n     \
    \   }\n        if (n < 10000) {\n            return (long)(x / 100.0);\n     \
    \   }\n        if (n < 100000) {\n            return (long)(x / 10000.0);\n  \
    \      }\n        if (n < 10000000) {\n            return (long)(x / 1000000.0);\n\
    \        }\n        if (n < 100000000) {\n            return (long)(x / 100000000.0);\n\
    \        }\n        if (n < 1000000000) {\n            return (long)(x / 1000000000.0);\n\
    \        }\n        if (n < 10000000000) {\n            return (long)(x / 10000000000.0);\n\
    \        }\n        if (n < 100000000000) {\n            return (long)(x / 100000000000.0);\n\
    \        }\n        if (n < 1000000000000) {\n            return (long)(x / 1000000000000.0);\n\
    \        }\n        if (n < 10000000000000) {\n            return (long)(x / 10000000000000.0);\n\
    \        }\n        if (n < 100000000000000) {\n            return (long)(x /\
    \ 100000000000000.0);\n        }\n        if (n < 1000000000000000) {\n      \
    \      return (long)(x / 1000000000000000.0);\n        }\n        if (n < 10000000000000000)\
    \ {\n            return (long)(x / 10000000000000000.0);\n        }\n        return\
    \ Float.NaN;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_2v_xtp_.java:41: error: integer number too large\n        if (n\
    \ < 10000000000) {\n                ^\n/tmp/tmp_2v_xtp_.java:44: error: integer\
    \ number too large\n        if (n < 100000000000) {\n                ^\n/tmp/tmp_2v_xtp_.java:47:\
    \ error: integer number too large\n        if (n < 1000000000000) {\n        \
    \        ^\n/tmp/tmp_2v_xtp_.java:50: error: integer number too large\n      \
    \  if (n < 10000000000000) {\n                ^\n/tmp/tmp_2v_xtp_.java:53: error:\
    \ integer number too large\n        if (n < 100000000000000) {\n             \
    \   ^\n/tmp/tmp_2v_xtp_.java:56: error: integer number too large\n        if (n\
    \ < 1000000000000000) {\n                ^\n/tmp/tmp_2v_xtp_.java:59: error: integer\
    \ number too large\n        if (n < 10000000000000000) {\n                ^\n\
    7 errors\n"
  stdout: ''
  timestamp: 1660010312
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mediana = (float)l.get(l.size() / 2);\n        return mediana;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvq52hdz.java:21)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ u = new ArrayList<>(l);\n        Collections.sort(u);\n        float x = (float)\
    \ u.get(0);\n        for (Long i: u) { x += (float) i; }\n        return x;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7affu1wo.java:22)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long sum = 0L;\n\
    \        long count = 0L;\n        for (long number : l) {\n            sum +=\
    \ number;\n            count++;\n        }\n        if (count == 0) return 0f;\n\
    \        if (count % 2 == 0) return sum / 2L;\n        else return (sum + l.size()\
    \ / 2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_n_sa4e.java:26)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long sum = l.stream().mapToLong(a\
    \ -> a).sum();\n        if (sum % 2 == 0) {\n            return (float)l.stream().mapToLong(a\
    \ -> a).sorted(Comparator.reverseOrder()).findFirst().get() / 2l;\n        } else\
    \ {\n            return (float)l.stream().mapToLong(a -> a).sorted(Comparator.comparingLong(a\
    \ -> a)).findFirst().get() / 2l;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptn0c2usa.java:17: error: method sorted in interface LongStream\
    \ cannot be applied to given types;\n            return (float)l.stream().mapToLong(a\
    \ -> a).sorted(Comparator.reverseOrder()).findFirst().get() / 2l;\n          \
    \                                            ^\n  required: no arguments\n  found:\
    \    Comparator<T>\n  reason: actual and formal argument lists differ in length\n\
    \  where T is a type-variable:\n    T extends Comparable<? super T>\n/tmp/tmptn0c2usa.java:19:\
    \ error: method sorted in interface LongStream cannot be applied to given types;\n\
    \            return (float)l.stream().mapToLong(a -> a).sorted(Comparator.comparingLong(a\
    \ -> a)).findFirst().get() / 2l;\n                                           \
    \           ^\n  required: no arguments\n  found:    Comparator<Object>\n  reason:\
    \ actual and formal argument lists differ in length\n/tmp/tmptn0c2usa.java:19:\
    \ error: incompatible types: cannot infer type-variable(s) T\n            return\
    \ (float)l.stream().mapToLong(a -> a).sorted(Comparator.comparingLong(a -> a)).findFirst().get()\
    \ / 2l;\n                                                                    \
    \                  ^\n    (argument mismatch; bad return type in lambda expression\n\
    \      Object cannot be converted to long)\n  where T is a type-variable:\n  \
    \  T extends Object declared in method <T>comparingLong(ToLongFunction<? super\
    \ T>)\n3 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        l.sort((a, b) -> Integer.compare(a, b));\n        if (size == 0) {\n\
    \            return 0f;\n        }\n        if (size == 1) {\n            return\
    \ l.get(0f);\n        }\n        int mid = (size - 1) / 2f;\n        if (mid ==\
    \ 0) {\n            return l.get(mid / 2l);\n        }\n        if (mid == size\
    \ / 2f) {\n            return l.get(mid - 1l);\n        }\n        return 0.5f\
    \ * (l.get(mid / 2f) + l.get(mid - 1f));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4_s28tr.java:16: error: incompatible types: Long cannot be converted\
    \ to int\n        l.sort((a, b) -> Integer.compare(a, b));\n                 \
    \                        ^\n/tmp/tmpm4_s28tr.java:21: error: incompatible types:\
    \ possible lossy conversion from float to int\n            return l.get(0f);\n\
    \                         ^\n/tmp/tmpm4_s28tr.java:23: error: incompatible types:\
    \ possible lossy conversion from float to int\n        int mid = (size - 1) /\
    \ 2f;\n                             ^\n/tmp/tmpm4_s28tr.java:25: error: incompatible\
    \ types: possible lossy conversion from long to int\n            return l.get(mid\
    \ / 2l);\n                             ^\n/tmp/tmpm4_s28tr.java:28: error: incompatible\
    \ types: possible lossy conversion from long to int\n            return l.get(mid\
    \ - 1l);\n                             ^\n/tmp/tmpm4_s28tr.java:30: error: incompatible\
    \ types: possible lossy conversion from float to int\n        return 0.5f * (l.get(mid\
    \ / 2f) + l.get(mid - 1f));\n                                 ^\n/tmp/tmpm4_s28tr.java:30:\
    \ error: incompatible types: possible lossy conversion from float to int\n   \
    \     return 0.5f * (l.get(mid / 2f) + l.get(mid - 1f));\n                   \
    \                                ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n7 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        if (size == 0) {\n            throw new IllegalArgumentException(\"Empty\
    \ list.\");\n        }\n\n        l.sort((o1, o2) -> {\n            int cmp =\
    \ o1.longValue() - o2.longValue();\n            if (cmp == 0) {\n            \
    \    return 0;\n            } else if (cmp < 0) {\n                return 1;\n\
    \            } else {\n                return -1;\n            }\n        });\n\
    \        return l.get(size / 2).toFloat();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ud86htc.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int cmp = o1.longValue() - o2.longValue();\n \
    \                                    ^\n/tmp/tmp2ud86htc.java:30: error: cannot\
    \ find symbol\n        return l.get(size / 2).toFloat();\n                   \
    \           ^\n  symbol:   method toFloat()\n  location: class Long\n2 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float[] nums = l.stream().mapToDouble(Long::doubleValue).toArray();\n\
    \        if (nums.length%2 == 0) {\n            return (nums[(nums.length/2)-1]\
    \ + nums[(nums.length/2)])/2;\n        } else {\n            return nums[(nums.length-1)/2];\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3f1x_93g.java:15: error: incompatible types: double[] cannot be\
    \ converted to float[]\n        float[] nums = l.stream().mapToDouble(Long::doubleValue).toArray();\n\
    \                                                                        ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return (Float)0f;\n        if (l.size() == 1L)\n            return\
    \ (Float)l.iterator().next();\n        if (l.size() == 2L)\n            return\
    \ (Float)((l.get(1L) + l.get(2L)) / 2L);\n\n        ArrayList<Long> m = new ArrayList<Long>(l);\n\
    \n        m.remove((long) (m.size() / 2));\n\n        float sum = 0;\n       \
    \ for (long i : m)\n            sum += i;\n        float median = (sum / m.size())\
    \ + ((sum / m.size()) / 2);\n        return median;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppgl7td2y.java:18: error: incompatible types: Long cannot be converted\
    \ to Float\n            return (Float)l.iterator().next();\n                 \
    \                          ^\n/tmp/tmppgl7td2y.java:20: error: incompatible types:\
    \ possible lossy conversion from long to int\n            return (Float)((l.get(1L)\
    \ + l.get(2L)) / 2L);\n                                  ^\n/tmp/tmppgl7td2y.java:20:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        return (Float)((l.get(1L) + l.get(2L)) / 2L);\n                     \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int sz = l.size();\n\
    \        if (sz <= 1)\n            return l.get(0);\n        float mid = (sz -\
    \ 1) / 2;\n        return mid==0? l.get(sz/2) : median(l.get(0), median(l.get(mid),\
    \ l.get(sz - 1)));\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplbbl7z51.java:19: error: incompatible types: possible lossy conversion\
    \ from float to int\n        return mid==0? l.get(sz/2) : median(l.get(0), median(l.get(mid),\
    \ l.get(sz - 1)));\n                                                         \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int len = l.size();\n\
    \        if (len % 2 == 1) {\n            int mid = len / 2;\n            if (l.get(mid).intValue()\
    \ < l.get(mid - 1).intValue()) {\n                return (float) l.get(mid);\n\
    \            } else {\n                return (float) l.get(mid - 1);\n      \
    \      }\n        } else {\n            return (len % 2 == 0) ? (float) l.get(len\
    \ / 2) : ((float) l.get(len / 2) + l.get(len / 2 - 1)) / 2;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7onsfrb8.java:28)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0) {\n            throw new RuntimeException(\"List is empty.\");\n        }\n\
    \n        long a = l.get(0);\n        long b = l.get(l.size() - 1);\n        long\
    \ c = l.stream().mapToLong(Long::longValue).sum() / 2;\n        long d = l.stream().mapToLong(Long::longValue).sorted(Comparator.reverseOrder()).findFirst().get();\n\
    \        long e = l.stream().mapToLong(Long::longValue).sorted(Comparator.comparingLong(Long::longValue).reversed()).findFirst().get();\n\
    \n        if (a > c) {\n            return a;\n        } else if (a < b) {\n \
    \           return c;\n        } else if (b < d) {\n            return b;\n  \
    \      } else {\n            return d;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdlbyqy2o.java:22: error: method sorted in interface LongStream\
    \ cannot be applied to given types;\n        long d = l.stream().mapToLong(Long::longValue).sorted(Comparator.reverseOrder()).findFirst().get();\n\
    \                                                      ^\n  required: no arguments\n\
    \  found:    Comparator<T>\n  reason: actual and formal argument lists differ\
    \ in length\n  where T is a type-variable:\n    T extends Comparable<? super T>\n\
    /tmp/tmpdlbyqy2o.java:23: error: method sorted in interface LongStream cannot\
    \ be applied to given types;\n        long e = l.stream().mapToLong(Long::longValue).sorted(Comparator.comparingLong(Long::longValue).reversed()).findFirst().get();\n\
    \                                                      ^\n  required: no arguments\n\
    \  found:    Comparator<Long>\n  reason: actual and formal argument lists differ\
    \ in length\n2 errors\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // sort ascending\n\
    \        l.sort(null);\n        // get the median value from the sorted array\n\
    \        long mid = l.get(l.size()/2);\n        float retVal = ((float) mid);\n\
    \        // if the size is odd then return mid value\n        return (l.get(l.size()/2)\
    \ == (long)mid ? mid: retVal);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptzdiqkn8.java:25)\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().sorted().skip(l.size()/2-1).filter(v\
    \ -> v%2==0).collect(Collectors.toCollection(ArrayDeque::new)).get(l.size()/2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxedgzzzz.java:15: error: cannot find symbol\n        return l.stream().sorted().skip(l.size()/2-1).filter(v\
    \ -> v%2==0).collect(Collectors.toCollection(ArrayDeque::new)).get(l.size()/2);\n\
    \                                                                            \
    \                                               ^\n  symbol:   method get(int)\n\
    \  location: class ArrayDeque<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ {\n            return Float.NaN;\n        }\n        l.sort((a, b) -> b.compareTo(a));\n\
    \        int mid = l.size() / 2;\n        return l.get(mid);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqcv6ryh.java:24)\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_4gyg67b.java:20)\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return Float.parseFloat(l.stream().sorted().skip(l.size()/2).mapToDouble(l\
    \ -> l.doubleValue()).median().toString());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvs_htshi.java:15: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        return Float.parseFloat(l.stream().sorted().skip(l.size()/2).mapToDouble(l\
    \ -> l.doubleValue()).median().toString());\n                                \
    \                                                 ^\n/tmp/tmpvs_htshi.java:15:\
    \ error: cannot find symbol\n        return Float.parseFloat(l.stream().sorted().skip(l.size()/2).mapToDouble(l\
    \ -> l.doubleValue()).median().toString());\n                                \
    \                                                                      ^\n  symbol:\
    \   method median()\n  location: interface DoubleStream\n2 errors\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        if (l.isEmpty())\n            throw new IllegalArgumentException(\"Cannot\
    \ compute median for empty list.\");\n        int mid = l.size() / 2;\n      \
    \  if (l.size() % 2 == 1)\n            return l.get(mid);\n        else\n    \
    \        return (l.get(mid) + l.get(mid + 1)) / 2f;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbcmgp1f.java:26)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuvxvbodi.java:16: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Use Java 8 streams\
    \ for easier implementation\n        long middle = l.size() / 2;\n        long\
    \ m1 = l.get(middle);\n        long m2 = l.get(middle - 1);\n        return (float)\
    \ (m1 + m2) / 2f;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxyhsiq3.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long m1 = l.get(middle);\n                       \
    \ ^\n/tmp/tmpwxyhsiq3.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long m2 = l.get(middle - 1);\n                   \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long low = Long.MIN_VALUE;\n\
    \        long high = Long.MAX_VALUE;\n        Arrays.sort(l);\n        float pivot\
    \ = l.get(0);\n        float median = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (l.get(i) < pivot) {\n                low = l.get(i);\n\
    \            } else if (l.get(i) > pivot) {\n                high = l.get(i);\n\
    \            } else {\n                median = (low + high) / 2;\n          \
    \      break;\n            }\n        }\n        return Float.parseFloat(String.valueOf(median));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rg62irh.java:17: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float largest =\
    \ Collections.max(l);\n        float smallest = Collections.min(l);\n        return\
    \ (largest + smallest) / 2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0b3ikwg.java:21)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float m = Float.NaN;\n\
    \        l.stream().filter(l -> !Float.isInfinite(l)).sorted().skip(l.size() /\
    \ 2).forEach(l -> {\n            if (!Float.isNaN(l)) {\n                m = l;\n\
    \            }\n        });\n        return m;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpui584utf.java:16: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        l.stream().filter(l -> !Float.isInfinite(l)).sorted().skip(l.size()\
    \ / 2).forEach(l -> {\n                          ^\n/tmp/tmpui584utf.java:16:\
    \ error: variable l is already defined in method median(ArrayList<Long>)\n   \
    \     l.stream().filter(l -> !Float.isInfinite(l)).sorted().skip(l.size() / 2).forEach(l\
    \ -> {\n                                                                     \
    \                    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Stream<Long> stream1\
    \ = l.stream();\n        long min = stream1.min();\n        long max = stream1.max();\n\
    \        return (float)min + (float)((max - min) / 2f);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps9z931_q.java:16: error: method min in interface Stream<T> cannot\
    \ be applied to given types;\n        long min = stream1.min();\n            \
    \              ^\n  required: Comparator<? super Long>\n  found:    no arguments\n\
    \  reason: actual and formal argument lists differ in length\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n/tmp/tmps9z931_q.java:17:\
    \ error: method max in interface Stream<T> cannot be applied to given types;\n\
    \        long max = stream1.max();\n                          ^\n  required: Comparator<?\
    \ super Long>\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n  where T is a type-variable:\n    T extends Object\
    \ declared in interface Stream\n2 errors\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float m = 0;\n \
    \       float a = 0;\n        int c = l.size();\n        if (c % 2 == 0)\n   \
    \         a = l.get(c / 2 - 1);\n        for (int i = 1; i < c; i++)\n       \
    \     a = l.get(i) + a;\n        m = a / 2;\n        return m;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumdizoqy.java:26)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.isEmpty()) {\n            return 0.0f;\n        }\n        return\
    \ l.size() % 2 == 0\n            ? ((float)l.size() - (l.size() / 2.0))\n    \
    \        : (l.get(l.size() / 2.0) + l.get(l.size() / 2.0 - 1));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpenk_9at5.java:20: error: incompatible types: bad type in conditional\
    \ expression\n            ? ((float)l.size() - (l.size() / 2.0))\n           \
    \                    ^\n    possible lossy conversion from double to float\n/tmp/tmpenk_9at5.java:21:\
    \ error: incompatible types: possible lossy conversion from double to int\n  \
    \          : (l.get(l.size() / 2.0) + l.get(l.size() / 2.0 - 1));\n          \
    \                    ^\n/tmp/tmpenk_9at5.java:21: error: incompatible types: possible\
    \ lossy conversion from double to int\n            : (l.get(l.size() / 2.0) +\
    \ l.get(l.size() / 2.0 - 1));\n                                              \
    \              ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Comparator<Long>\
    \ c = Comparator.comparing(Long::longValue);\n        Float mid = l.stream().mapToLong(i\
    \ -> i.longValue()).median().orElse(0.0f);\n        return (l.size() % 2 == 0)\n\
    \                ? ((mid.floatValue() + l.size() / 2.0f) / 2.0f)\n           \
    \     : mid;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp076oeo20.java:16: error: cannot find symbol\n        Float mid\
    \ = l.stream().mapToLong(i -> i.longValue()).median().orElse(0.0f);\n        \
    \                                                    ^\n  symbol:   method median()\n\
    \  location: interface LongStream\n1 error\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.isEmpty()) {\n            return -1f;\n        }\n        return\
    \ ((long) l.get(l.size()/2)) + 0.5f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgu6mlj7o.java:22)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ { return -1f; }\n        Collections.sort(l);\n        return l.get(l.size()/2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjs465i6c.java:21)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long sum = l.get(0);\n\
    \        long count = 0;\n        for (Long i : l) {\n            sum += i;\n\
    \            count++;\n        }\n        float avg = sum / count;\n        if\
    \ (count % 2 == 0)\n            return avg;\n        else\n            return\
    \ avg - float(sum/2 - avg);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpugdm2iwq.java:25: error: '.class' expected\n            return\
    \ avg - float(sum/2 - avg);\n                              ^\n/tmp/tmpugdm2iwq.java:25:\
    \ error: not a statement\n            return avg - float(sum/2 - avg);\n     \
    \                                ^\n/tmp/tmpugdm2iwq.java:25: error: ';' expected\n\
    \            return avg - float(sum/2 - avg);\n                              \
    \            ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        final List<Long>\
    \ data = l.stream().mapToLong(Long::longValue).toList();\n        int l = data.size();\n\
    \        if(l <= 1) return l==0?0f:(1.0f+0.0f)/l;\n        final List<Long> left\
    \ = new ArrayList<Long>(Arrays.asList(data));\n        Collections.sort(left);\n\
    \        final List<Long> right = new ArrayList<Long>(Arrays.asList(data));\n\
    \        Collections.sort(right);\n        final List<Long> mid = left.subList((l-2)/2,\
    \ l);\n        long l = mid.get(0);\n        long r = mid.get(1);\n        while(r\
    \ - l > 1) r = mid.get(1);\n        while(r - l > 1) l = mid.get(0);\n       \
    \ float m = (l+r)/2.0f;\n        if(l - r > 1) m = (l + (r - l))/2.0f;\n     \
    \   return m;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm6klmz5g.java:15: error: cannot find symbol\n        final List<Long>\
    \ data = l.stream().mapToLong(Long::longValue).toList();\n                   \
    \                                                  ^\n  symbol:   method toList()\n\
    \  location: interface LongStream\n/tmp/tmpm6klmz5g.java:16: error: variable l\
    \ is already defined in method median(ArrayList<Long>)\n        int l = data.size();\n\
    \            ^\n/tmp/tmpm6klmz5g.java:18: error: no suitable constructor found\
    \ for ArrayList(List<List<Long>>)\n        final List<Long> left = new ArrayList<Long>(Arrays.asList(data));\n\
    \                                ^\n    constructor ArrayList.ArrayList(int) is\
    \ not applicable\n      (argument mismatch; no instance(s) of type variable(s)\
    \ T exist so that List<T> conforms to int)\n    constructor ArrayList.ArrayList(Collection<?\
    \ extends Long>) is not applicable\n      (argument mismatch; inference variable\
    \ T has incompatible bounds\n          lower bounds: Long,Object\n          lower\
    \ bounds: List<Long>)\n  where T is a type-variable:\n    T extends Object declared\
    \ in method <T>asList(T...)\n/tmp/tmpm6klmz5g.java:20: error: no suitable constructor\
    \ found for ArrayList(List<List<Long>>)\n        final List<Long> right = new\
    \ ArrayList<Long>(Arrays.asList(data));\n                                 ^\n\
    \    constructor ArrayList.ArrayList(int) is not applicable\n      (argument mismatch;\
    \ no instance(s) of type variable(s) T exist so that List<T> conforms to int)\n\
    \    constructor ArrayList.ArrayList(Collection<? extends Long>) is not applicable\n\
    \      (argument mismatch; inference variable T has incompatible bounds\n    \
    \      lower bounds: Long,Object\n          lower bounds: List<Long>)\n  where\
    \ T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n\
    /tmp/tmpm6klmz5g.java:23: error: variable l is already defined in method median(ArrayList<Long>)\n\
    \        long l = mid.get(0);\n             ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // If there is an\
    \ odd number of elements, return the middle element.\n        int size = (int)\
    \ Math.ceil(l.size() / 2.0);\n        float middle = (float) l.get(size) / 2;\n\
    \        if (size % 2 == 0) {\n            return middle;\n        }\n\n     \
    \   // Find the median by partitioning into two halves using the middle element.\n\
    \        List<Float> list1 = new ArrayList<Float>();\n        List<Float> list2\
    \ = new ArrayList<Float>();\n\n        for (int i = 0; i < size; i++) {\n    \
    \        list1.add(l.get(i));\n        }\n        for (int i = 0; i < size; i++)\
    \ {\n            list2.add(l.get(i + size));\n        }\n\n        float median1\
    \ = median(list1);\n        float median2 = median(list2);\n\n        return ((float)\
    \ Math.min(median1, median2));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph9ok89zq.java:27: error: incompatible types: Long cannot be converted\
    \ to Float\n            list1.add(l.get(i));\n                           ^\n/tmp/tmph9ok89zq.java:30:\
    \ error: incompatible types: Long cannot be converted to Float\n            list2.add(l.get(i\
    \ + size));\n                           ^\n/tmp/tmph9ok89zq.java:33: error: incompatible\
    \ types: List<Float> cannot be converted to ArrayList<Long>\n        float median1\
    \ = median(list1);\n                               ^\n/tmp/tmph9ok89zq.java:34:\
    \ error: incompatible types: List<Float> cannot be converted to ArrayList<Long>\n\
    \        float median2 = median(list2);\n                               ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n4 errors\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float[] vals = new\
    \ float[l.size()];\n        for (int i = 0; i < l.size(); i++) {\n           \
    \ vals[i] = l.get(i);\n        }\n        if (vals.length > 1) {\n           \
    \ Arrays.sort(vals);\n        }\n        return vals[l.size() / 2];\n    }\n \
    \   public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsihoj8r.java:26)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long mid = 0;\n\
    \        float midVal = -1;\n        if (l.size() % 2 == 0) {\n            mid\
    \ = l.get(l.size() / 2);\n            midVal = l.get(l.size() / 2 - 1);\n    \
    \    }\n        else {\n            mid = l.get(l.size() / 2 - 1);\n         \
    \   midVal = l.get(l.size() / 2);\n        }\n\n        if (Math.abs(midVal) ==\
    \ mid) {\n            return mid;\n        }\n        else if (Math.abs(midVal\
    \ - mid) < 0.000001f) {\n            return l.get(l.size() / 2);\n        }\n\
    \        else {\n            return midVal;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4nqxw0u.java:37)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double n = l.size();\n\
    \        if (n < 2) {\n            return (long) Double.NaN;\n        }\n    \
    \    double a = Collections.min(l);\n        double b = Collections.max(l);\n\
    \        double x = (b - a) / (double) n;\n        if (x == 1.0f) {\n        \
    \    return (float) a;\n        }\n        double y = 0.5f + (x - 0.5f) * 1.0f;\n\
    \        return (float) y;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5e1u_va.java:29)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float)l.get(l.size()/2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8ps8lwi.java:20)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return (float)0f;\n        long largest = l.get(l.size()-1);\n  \
    \      long smallest = l.get(0);\n        if (largest < smallest)\n          \
    \  Collections.reverse(l);\n        ArrayList<Long> half = new ArrayList<Long>(l.size()/2);\n\
    \        Collections.sort(half);\n        float med = (float)((half.get(half)-l.get(half))/(double)2);\n\
    \        return med;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnddgifp7.java:23: error: incompatible types: ArrayList<Long> cannot\
    \ be converted to int\n        float med = (float)((half.get(half)-l.get(half))/(double)2);\n\
    \                                      ^\n/tmp/tmpnddgifp7.java:23: error: incompatible\
    \ types: ArrayList<Long> cannot be converted to int\n        float med = (float)((half.get(half)-l.get(half))/(double)2);\n\
    \                                                  ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        long sum = 0l;\n        for (int i = 0; i < n; i++) {\n            sum\
    \ += l.get(i);\n        }\n        int k = (int) (sum / n);\n        long sum1\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            sum1 += l.get(i);\n\
    \            if (sum1 <= k) {\n                return (float) sum1;\n        \
    \    }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwo4e99uh.java:32)\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return 0f;\n        int size = (int) Math.ceil((double) l.size() / 2);\n   \
    \     ArrayList<Long> ll = new ArrayList<Long>(l.subList(0, size));\n        ll.sort();\n\
    \        float x = (float) ll.get(size);\n        ll.remove(size);\n        ArrayList<Long>\
    \ ll2 = new ArrayList<Long>(l.subList(0, size));\n        ll2.sort();\n      \
    \  float y = (float) ll2.get(size);\n        return ((x + y) / 2f);\n    }\n \
    \   public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiovkie4k.java:18: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        ll.sort();\n          ^\n  required: Comparator<?\
    \ super Long>\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n  where E is a type-variable:\n    E extends Object\
    \ declared in class ArrayList\n/tmp/tmpiovkie4k.java:22: error: method sort in\
    \ class ArrayList<E> cannot be applied to given types;\n        ll2.sort();\n\
    \           ^\n  required: Comparator<? super Long>\n  found:    no arguments\n\
    \  reason: actual and formal argument lists differ in length\n  where E is a type-variable:\n\
    \    E extends Object declared in class ArrayList\n2 errors\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.comparingLong(Long::longValue));\n\
    \        float a = ((float)(l.size()+1)/(float)l.size());\n        return (l.isEmpty())\
    \ ? 0f : ((float)l.get(l.size()/2))*a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfo1h6311.java:20)\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        if (size == 0) return 0.0f;\n        if (size == 1) return l.get(0);\n\
    \        Arrays.sort(l);\n        float x = (float) l.get(size);\n        int\
    \ half = (int)((size-1)/2);\n        return (x == l.get(half) ? l.get(half) :\
    \ (x == l.get((half+1)) ? l.get((half+1)) : (x == l.get(half-1) ? l.get((half-1))\
    \ : ((float)(Math.round(0.5*size + 1l)))*(l.get(half-1) + l.get(half+1) + l.get(half))/2l)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpud_tpjpp.java:18: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float f = l.stream().mapToInt(Long::intValue).sorted().skip(l.size()\
    \ / 2).findFirst().getAsFloat();\n        if (l.size() == 1) { return f; }\n \
    \       float f0 = l.stream().mapToInt(Long::intValue).sorted().skip(l.size()\
    \ / 4).findFirst().getAsFloat();\n        float f1 = l.stream().mapToInt(Long::intValue).sorted().skip(l.size()\
    \ / 4).skip(l.size() / 2).findFirst().getAsFloat();\n        float f2 = l.stream().mapToInt(Long::intValue).sorted().skip(l.size()\
    \ / 4).skip(l.size() / 2).skip(l.size() / 4).findFirst().getAsFloat();\n     \
    \   if (f == (f + f0 + f1 + f2) / 3) { return f; }\n        else if (f == f0)\
    \ { return f1 }\n        else if (f == f1) { return f2 }\n        else { return\
    \ f }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp99rvk5rx.java:21: error: ';' expected\n        else if (f == f0)\
    \ { return f1 }\n                                     ^\n/tmp/tmp99rvk5rx.java:22:\
    \ error: ';' expected\n        else if (f == f1) { return f2 }\n             \
    \                        ^\n/tmp/tmp99rvk5rx.java:23: error: ';' expected\n  \
    \      else { return f }\n                       ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return null;\n        l.sort(null);\n        int mid = l.size() /\
    \ 2;\n        return (l.get(mid) == null ? null : l.get(mid).floatValue());\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgkmdvypw.java:16: error: incompatible types: <null> cannot be converted\
    \ to float\n            return null;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long total = l.stream().mapToLong(Long::longValue).sum();\n\
    \        if (total % 2 != 0) {\n            return (l.size() > 1) ? ((long) total\
    \ * .5f) / (l.size() - 1) : (l.size() > 1) ? ((long) total * .5f) : 0;\n     \
    \   } else {\n            int half = total / 2;\n            return ((long) total\
    \ * .5f + (long) l.get(l.size() - half)) * .5f\n                    / (l.size()\
    \ + half);\n        }\n    }\n    public static void main(String[] args) {\n \
    \   assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzfu44uca.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int half = total / 2;\n                      \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.comparingLong(Long::longValue).reversed());\n\
    \        return (l.size() % 2 == 0) ? l.get(l.size()/2) : ((l.size() + 1) / 2)\
    \ * l;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphwzjslwy.java:16: error: bad operand types for binary operator\
    \ '*'\n        return (l.size() % 2 == 0) ? l.get(l.size()/2) : ((l.size() + 1)\
    \ / 2) * l;\n                                                                \
    \              ^\n  first type:  int\n  second type: ArrayList<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long low = 0;\n\
    \        long high = l.size() - 1;\n        float med = (low+high)/2;\n      \
    \  for (long i = low; i <= high; i++) {\n            if (l.get(i) >= med) {\n\
    \                low = i;\n            }\n            else if (l.get(i) < med)\
    \ {\n                high = i;\n            }\n        }\n        return l.get(high);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgtoo6s15.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (l.get(i) >= med) {\n                     \
    \ ^\n/tmp/tmpgtoo6s15.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            else if (l.get(i) < med) {\n                 \
    \          ^\n/tmp/tmpgtoo6s15.java:26: error: incompatible types: possible lossy\
    \ conversion from long to int\n        return l.get(high);\n                 \
    \    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int s = l.size();\n\
    \        if (s == 0) throw new IllegalArgumentException(\"Empty list.\");\n  \
    \      if (s == 1) return l.get(0);\n        Collections.sort(l);\n        int\
    \ mid = s / 2;\n        return (float)l.get(mid);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp62z_nnaz.java:24)\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        int size = l.size();\n        if (size == 0) {\n            return (float)0f;\n\
    \        }\n        if (size == 1) {\n            return (float)l.get(0);\n  \
    \      }\n        float middle = (float)size >> 1;\n        float high = l.get(middle\
    \ - 1);\n        float low = l.get(middle);\n        if (low >= high) {\n    \
    \        return (float)low;\n        }\n        l.sort(null);\n        return\
    \ (low + (high - low) / 2f);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwwq28ta.java:23: error: bad operand types for binary operator\
    \ '>>'\n        float middle = (float)size >> 1;\n                           \
    \        ^\n  first type:  float\n  second type: int\n/tmp/tmpnwwq28ta.java:24:\
    \ error: incompatible types: possible lossy conversion from float to int\n   \
    \     float high = l.get(middle - 1);\n                                  ^\n/tmp/tmpnwwq28ta.java:25:\
    \ error: incompatible types: possible lossy conversion from float to int\n   \
    \     float low = l.get(middle);\n                          ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        if (l.size() % 2 == 0) {\n            median = (float) ( l.get(l.size()/2\
    \ - 1) + l.get(l.size()/2) );\n        }\n        else {\n            median =\
    \ (float) ( l.get(l.size()/2 - 1));\n        }\n        return median;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jdo43kj.java:25)\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        long firstHalf = l.subList(l.size() / 2, l.size());\n        return firstHalf.get(firstHalf.size()\
    \ / 2);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ii9smkc.java:16: error: incompatible types: List<Long> cannot\
    \ be converted to long\n        long firstHalf = l.subList(l.size() / 2, l.size());\n\
    \                                  ^\n/tmp/tmp1ii9smkc.java:17: error: long cannot\
    \ be dereferenced\n        return firstHalf.get(firstHalf.size() / 2);\n     \
    \                                 ^\n/tmp/tmp1ii9smkc.java:17: error: long cannot\
    \ be dereferenced\n        return firstHalf.get(firstHalf.size() / 2);\n     \
    \                   ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l == null ||\
    \ l.isEmpty()) return 0f;\n        ArrayList<Long> sorted = new ArrayList<Long>(l);\n\
    \        Collections.sort(sorted);\n        return sorted.get((l.size() - 1l)\
    \ / 2f);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppacx_yqm.java:18: error: incompatible types: possible lossy conversion\
    \ from float to int\n        return sorted.get((l.size() - 1l) / 2f);\n      \
    \                                    ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return (0);\n        float x = (float)((long)(((l.size() % 2 == 0)\
    \ ? l.size()/2 : l.size()/2 - 1)) + 1);\n        return ((l.size() % 2 == 0) ?\
    \ \n                ((l.size() - x)*((float)l.get(l.size()/2))/l.size() + (float)(x*l.size())/l.size()\
    \ + (float)(l.size()/2))/2 : \n                ((l.size() - x)*((float)l.get(l.size()/2))/l.size()\
    \ + (float)(2*x)/l.size() + (float)(l.size()/2))/2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvv3ljbc9.java:23)\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().mapToInt(Long::intValue).summaryStatistics().getAverage();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe7_d29pp.java:15: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return l.stream().mapToInt(Long::intValue).summaryStatistics().getAverage();\n\
    \                                                                            \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Arrays.sort(l);\n\
    \        return l.get(l.size()/2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpowa2p024.java:15: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float min = (float)l.size();\n\
    \        for (Long l : l) {\n            if (l.floatValue() < min) {\n       \
    \         min = l.floatValue();\n            }\n        }\n        float max =\
    \ min / 2.0f;\n        for (Long l : l) {\n            if (l.floatValue() > max)\
    \ {\n                max = l.floatValue();\n            }\n        }\n       \
    \ return (max + min) / 2.0f;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwggavyg_.java:16: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        for (Long l : l) {\n                  ^\n/tmp/tmpwggavyg_.java:22:\
    \ error: variable l is already defined in method median(ArrayList<Long>)\n   \
    \     for (Long l : l) {\n                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double nElements\
    \ = l.size();\n        if(nElements == 0) throw new IllegalArgumentException(\"\
    Median of a empty list\");\n        if(l.size() == 1) return l.get(0);\n     \
    \   List<Long> sortedList = l.stream().sorted(Comparator.comparing(Long::longValue)).collect(Collectors.toList());\n\
    \        float middle = sortedList.get(nElements/2);\n        float median = sortedList.get(nElements\
    \ - 1);\n        return (float) (median + middle);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3iyd4tt.java:19: error: incompatible types: possible lossy conversion\
    \ from double to int\n        float middle = sortedList.get(nElements/2);\n  \
    \                                             ^\n/tmp/tmpp3iyd4tt.java:20: error:\
    \ incompatible types: possible lossy conversion from double to int\n        float\
    \ median = sortedList.get(nElements - 1);\n                                  \
    \              ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().sorted().skip((l.size()\
    \ - 1) / 2).findFirst().get().getAsFloat();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw11yf3g3.java:15: error: cannot find symbol\n        return l.stream().sorted().skip((l.size()\
    \ - 1) / 2).findFirst().get().getAsFloat();\n                                \
    \                                             ^\n  symbol:   method getAsFloat()\n\
    \  location: class Long\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float sumOfElements\
    \ = l.stream().mapToLong(l -> l).sum();\n        return sumOfElements / (l.size()<2?1:l.size()-1);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp61mad77q.java:15: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        float sumOfElements = l.stream().mapToLong(l\
    \ -> l).sum();\n                                                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n < 3) {\n            throw new IllegalArgumentException();\n   \
    \     }\n        l.sort((l1, l2) -> l1.compareTo(l2) > 0 ? 1 : -1);\n        float\
    \ mid = n.floatValue() % 2 == 0 ? l.get(n.intValue() / 2) : (l.get(n.intValue()\
    \ / 2) + l.get(n.intValue() / 2 - 1)) / 2;\n        if (n < 3) {\n           \
    \ return mid;\n        }\n        return n.floatValue() % 2 == 0 ? mid : ((float)(Math.ceil(mid))\
    \ + 0.5f) / 2;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ibhc7b7.java:20: error: int cannot be dereferenced\n        float\
    \ mid = n.floatValue() % 2 == 0 ? l.get(n.intValue() / 2) : (l.get(n.intValue()\
    \ / 2) + l.get(n.intValue() / 2 - 1)) / 2;\n                     ^\n/tmp/tmp1ibhc7b7.java:20:\
    \ error: int cannot be dereferenced\n        float mid = n.floatValue() % 2 ==\
    \ 0 ? l.get(n.intValue() / 2) : (l.get(n.intValue() / 2) + l.get(n.intValue()\
    \ / 2 - 1)) / 2;\n                                                     ^\n/tmp/tmp1ibhc7b7.java:20:\
    \ error: int cannot be dereferenced\n        float mid = n.floatValue() % 2 ==\
    \ 0 ? l.get(n.intValue() / 2) : (l.get(n.intValue() / 2) + l.get(n.intValue()\
    \ / 2 - 1)) / 2;\n                                                           \
    \                     ^\n/tmp/tmp1ibhc7b7.java:20: error: int cannot be dereferenced\n\
    \        float mid = n.floatValue() % 2 == 0 ? l.get(n.intValue() / 2) : (l.get(n.intValue()\
    \ / 2) + l.get(n.intValue() / 2 - 1)) / 2;\n                                 \
    \                                                                         ^\n\
    /tmp/tmp1ibhc7b7.java:24: error: int cannot be dereferenced\n        return n.floatValue()\
    \ % 2 == 0 ? mid : ((float)(Math.ceil(mid)) + 0.5f) / 2;\n                ^\n\
    5 errors\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // If l's size is\
    \ odd, return middle element.\n        if (l.size() % 2 == 1)\n            return\
    \ l.get(l.size() / 2);\n        // If l's size is even, then:\n        // 1. Find\
    \ the middle element.\n        float middle = l.get(l.size() / 2);\n        //\
    \ 2. Count how many elements smaller than middle are in l.\n        int count\
    \ = 0;\n        for (int i : l) {\n            if (i < middle)\n             \
    \   count++;\n        }\n        // 3. Return middle if count is odd, or average\
    \ of middle and middle otherwise.\n        return count % 2 == 0\n           \
    \     ? ((float)middle)\n                : (float)(middle + ((count / 2) % 2 ==\
    \ 0 ? middle : middle));\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu7l4_mxp.java:23: error: incompatible types: Long cannot be converted\
    \ to int\n        for (int i : l) {\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        final int size =\
    \ l.size();\n        if (size == 0) throw new IllegalArgumentException();\n\n\
    \        long mid = size / 2;\n        if (size % 2 == 0)\n            return\
    \ l.get(mid);\n        else\n            return (long) 0.5f * (l.get(mid) + l.get(mid\
    \ + 1));\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuojd2s7c.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            return l.get(mid);\n                         ^\n\
    /tmp/tmpuojd2s7c.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            return (long) 0.5f * (l.get(mid) + l.get(mid +\
    \ 1));\n                                        ^\n/tmp/tmpuojd2s7c.java:22: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \ return (long) 0.5f * (l.get(mid) + l.get(mid + 1));\n                      \
    \                                   ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        final int count\
    \ = l.size();\n        if (count < 1) return 0.0f;\n        Collections.sort(l);\n\
    \        final int mid = count / 2;\n        return (count % 2 == 0) ? l.get(mid)\
    \ + l.get(mid + 1) / 2.0f : l.get(mid);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbjagx6b.java:23)\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = l.get(l.size() - 1);\n        if (l.size() % 2 == 0)\n\
    \            median = (float) l.get(l.size() / 2) + (float) l.get(l.size() / 2\
    \ - 1);\n        return median;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygf6xtf3.java:22)\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float m = Collections.median(l);\n\
    \        return m;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn14xg0re.java:15: error: cannot find symbol\n        float m =\
    \ Collections.median(l);\n                             ^\n  symbol:   method median(ArrayList<Long>)\n\
    \  location: class Collections\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float f = l.get(0);\
    \ // first element\n        for (int i = 1; i < l.size(); ++i) {\n           \
    \ f = ((float)(Math.round(l.get(i))) + f) / 2.0f;\n        }\n        return f;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoj20_4g9.java:22)\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float s = 0.0f;\n\
    \        Collections.sort(l);\n        l.trimToSize();\n        if (l.isEmpty())\
    \ {\n            return s;\n        }\n        s = l.size() / 2;\n        if (l.size()\
    \ % 2 != 0) {\n            s *= 2;\n        }\n        if (l.size() % 2 == 0)\
    \ {\n            s += (l.get(l.size() - 1l) / 2.0f);\n        }\n        return\
    \ s;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkj6ogrg6.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            s += (l.get(l.size() - 1l) / 2.0f);\n        \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().sorted().findFirst().getAsFloat();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz04ly90e.java:15: error: cannot find symbol\n        return l.stream().sorted().findFirst().getAsFloat();\n\
    \                                              ^\n  symbol:   method getAsFloat()\n\
    \  location: class Optional<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ throw new IllegalArgumentException(\"Cannot compute median for empty list.\"\
    );\n\n        // Compute median of first two elements.\n        float mid = l.stream().skip(1).findFirst().getAsFloat();\n\
    \n        // Divide list into two halves and compute median.\n        List<Long>\
    \ middle = l.stream().skip(2).collect(Collectors.toList());\n        float med\
    \ = (middle.size() == 0 ? mid : median(middle)); // median(...) returns double\n\
    \        return med + (mid - med) * (l.size() % 2 == 0 ? 0.5f : -0.5f);\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplatuqb4c.java:18: error: cannot find symbol\n        float mid\
    \ = l.stream().skip(1).findFirst().getAsFloat();\n                           \
    \                       ^\n  symbol:   method getAsFloat()\n  location: class\
    \ Optional<Long>\n/tmp/tmplatuqb4c.java:22: error: incompatible types: List<Long>\
    \ cannot be converted to ArrayList<Long>\n        float med = (middle.size() ==\
    \ 0 ? mid : median(middle)); // median(...) returns double\n                 \
    \                                      ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Arrays.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return l.get(l.size() / 2);\n \
    \       } else {\n            return l.get(l.size() / 2) + l.get(l.size() / 2\
    \ - 1);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpykmdbva8.java:15: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double m = 0.0;\n\
    \        float temp;\n        Collections.sort(l);\n        temp = l.get(l.size()-1);\n\
    \        m = temp;\n        return ((float) m);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0shgosgn.java:23)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // TODO: Implement\
    \ Median\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj44x5j50.java:16: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return (float) Double.NaN;\n        Collections.sort(l);\n        return l.get(l.size()/2)\
    \ == null ? l.size()/2 : l.get(l.size()/2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_xtlujf.java:21)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        if (size == 0)\n            return 0f;\n        float x = (size + 1)/2.f;\n\
    \        Arrays.sort(l);\n        if ((size % 2) == 0) return l.get(size - 1);\n\
    \        else return l.get(size - 1) + x/2.f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp37ka3o9.java:19: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return 0f;\n\n        float sum = 0f;\n        double avg = 0.0;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            sum += (l.get(i) - l.get(i - 1))\
    \ / (float)i;\n            avg += l.get(i) / i;\n        }\n\n        avg = avg\
    \ / l.size();\n\n        return sum == 0 ? avg : (float)(Math.round((long) sum\
    \ * Math.pow(1.0d, 0.5d)) / Math.pow(1.0d, 0.5d));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptait8aaf.java:26: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return sum == 0 ? avg : (float)(Math.round((long)\
    \ sum * Math.pow(1.0d, 0.5d)) / Math.pow(1.0d, 0.5d));\n                     \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Arrays.sort(l);\n\
    \        float halfLength = l.size() / 2;\n        if (halfLength % 2 == 0) {\n\
    \            return (float)((long) l.get(halfLength / 2)).floatValue();\n    \
    \    }\n        float lower = (float)((long) l.get(halfLength - 1)).floatValue();\n\
    \        float upper = (float)((long) l.get(halfLength)).floatValue();\n     \
    \   return (lower + upper) / 2.0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph1q8vil3.java:15: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmph1q8vil3.java:18: error: incompatible types: possible lossy\
    \ conversion from float to int\n            return (float)((long) l.get(halfLength\
    \ / 2)).floatValue();\n                                                   ^\n\
    /tmp/tmph1q8vil3.java:18: error: long cannot be dereferenced\n            return\
    \ (float)((long) l.get(halfLength / 2)).floatValue();\n         "
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        \n        if (l.isEmpty())\n\
    \            return Float.NaN;\n        \n        Collections.sort(l);\n     \
    \   return ((l.size() % 2 == 0) ? l.get(l.size()/2) : (l.get(l.size()/2) - l.get((l.size()/2)-1)))\
    \ / 2;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw99cqmi4.java:23)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        sort(l);\n     \
    \   if (l.size() % 2 == 0) {\n            return (l.get(l.size()/2))/2f;\n   \
    \     } else {\n            int half = Math.floor(l.size()/2);\n            return\
    \ (l.get(half))+(l.get(half+1))/2f;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbwtbr8co.java:15: error: cannot find symbol\n        sort(l);\n\
    \        ^\n  symbol:   method sort(ArrayList<Long>)\n  location: class Problem\n\
    /tmp/tmpbwtbr8co.java:19: error: incompatible types: possible lossy conversion\
    \ from double to int\n            int half = Math.floor(l.size()/2);\n       \
    \                          ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) return\
    \ mid;\n        return (float) (mid + l.get((l.size() - 1) / 2));\n    }\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgpwl3kst.java:21)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float mediana =\
    \ (float)0f;\n        if (l.size() % 2 == 0) {\n            float x = (float)l.stream().sorted().collect(toList()).get(l.size()/2);\n\
    \            mediana = (x) + ((float)l.stream().sorted().collect(toList()).get((l.size()/2)+1));\n\
    \        } else {\n            float x = (float)l.stream().sorted().collect(toList()).get(l.size()/2-1);\n\
    \            mediana = (x) + ((float)l.stream().sorted().collect(toList()).get((l.size()/2)+2));\n\
    \        }\n        return mediana;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfz7hly_c.java:17: error: cannot find symbol\n            float\
    \ x = (float)l.stream().sorted().collect(toList()).get(l.size()/2);\n        \
    \                                                 ^\n  symbol:   method toList()\n\
    \  location: class Problem\n/tmp/tmpfz7hly_c.java:18: error: cannot find symbol\n\
    \            mediana = (x) + ((float)l.stream().sorted().collect(toList()).get((l.size()/2)+1));\n\
    \                                                                ^\n  symbol:\
    \   method toList()\n  location: class Problem\n/tmp/tmpfz7hly_c.java:20: error:\
    \ cannot find symbol\n            float x = (float)l.stream().sorted().collect(toList()).get(l.size()/2-1);\n\
    \                                                         ^\n  symbol:   method\
    \ toList()\n  location: class Problem\n/tmp/tmpfz7hly_c.java:21: error: cannot\
    \ find symbol\n            mediana = (x) + ((float)l.stream().sorted().collect(toList()).get((l.size()/2)+2));\n\
    \                                                                ^\n  symbol:\
    \   method toList()\n  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return Math.max(l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().findFirst().getAsFloat(), l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().skip(50).findFirst().getAsFloat(), l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().skip(50).skip(50).findFirst().getAsFloat());\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd53dfr_y.java:15: error: cannot find symbol\n        return Math.max(l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().findFirst().getAsFloat(), l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().skip(50).findFirst().getAsFloat(), l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().skip(50).skip(50).findFirst().getAsFloat());\n         \
    \                                                                            \
    \               ^\n  symbol:   method getAsFloat()\n  location: class OptionalInt\n\
    /tmp/tmpd53dfr_y.java:15: error: cannot find symbol\n        return Math.max(l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().findFirst().getAsFloat(), l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().skip(50).findFirst().getAsFloat(), l.stream().mapToInt(Long::intValue).filter(i\
    \ -> i > 50).sorted().skip(50).skip(50).findFirst().getAsFloat());\n         \
    \                                                                            \
    \                                                                            \
    \                                       ^\n  symbol:   method getAsFloat()\n \
    \ location: class OptionalInt\n/tmp/tmpd53dfr_y.java:15: error: cannot find symbol\n\
    \        return Math.max(l.stream().mapToInt(Long::intValue).filter(i -> i > 50).sorted().findFirst().getAsFloat(),\
    \ l.stream().mapToInt(Long::intValue).filter(i -> i > 50).sorted().skip(50).findFirst().getAsFloat(),\
    \ l.stream().mapToInt(Long::intValue).filter(i -> i > 50).sorted().skip(50).skip(50).findFirst().getAsFloat());\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \     ^\n  symbol:   method getAsFloat()\n  location: class OptionalInt\n3 errors\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long l = l.get(0);\
    \ // extract the first element\n        int m = 1;\n        if (l == Long.MAX_VALUE)\
    \ {\n            return Float.MAX_VALUE;\n        }\n        while (l > l.get((m\
    \ + 1) & 1)) {\n            m = (m + 1) & 1;\n        }\n        float median\
    \ = ((float) (l + l.get(m)) / 2f);\n        return median;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpor1cp0ff.java:15: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        long l = l.get(0); // extract the first element\n\
    \             ^\n/tmp/tmpor1cp0ff.java:15: error: long cannot be dereferenced\n\
    \        long l = l.get(0); // extract the first element\n                  ^\n\
    /tmp/tmpor1cp0ff.java:20: error: long cannot be dereferenced\n        while (l\
    \ > l.get((m + 1) & 1)) {\n                    ^\n/tmp/tmpor1cp0ff.java:23: error:\
    \ long cannot be dereferenced\n        float median = ((float) (l + l.get(m))\
    \ / 2f);\n                                      ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return 0f;\n        Collections.sort(l);\n        return l.size()\
    \ % 2 == 0? l.get(l.size() / 2): (l.get(l.size() / 2) - l.get(l.size() / 2 - 1));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdukl_vzl.java:21)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        if (l.size() > 1) {\n            return l.get(l.size() / 2);\n      \
    \  }\n        return l.get(0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61xpx_xs.java:23)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        List<Long> sorted\
    \ = l.stream().sorted().collect(Collectors.toList());\n        if (sorted.isEmpty())\
    \ return 0f;\n        if (sorted.size() == 1) return sorted.get(0f);\n       \
    \ int m = (sorted.size() / 2) + 1;\n        if (m < 1 || m > sorted) return 0f;\n\
    \        float low = sorted.subList(0, m).stream().mapToFloat(Long::longValue).average().getAsFloat();\n\
    \        float high = sorted.subList(m, sorted).stream().mapToFloat(Long::longValue).average().getAsFloat();\n\
    \        if (high - low == 0f) {\n            if (sorted.size() % 2 == 0) return\
    \ sorted.get((sorted.size() / 2) - 1l);\n            else return ((float) (sorted.get((sorted.size()\
    \ / 2) + 1l))) - (sorted.get((sorted.size() / 2) - 1l));\n        }\n        else\
    \ return ((float) (low + (high - low) / 2l));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nfrxqv5.java:17: error: incompatible types: possible lossy conversion\
    \ from float to int\n        if (sorted.size() == 1) return sorted.get(0f);\n\
    \                                                  ^\n/tmp/tmp8nfrxqv5.java:19:\
    \ error: bad operand types for binary operator '>'\n        if (m < 1 || m > sorted)\
    \ return 0f;\n                       ^\n  first type:  int\n  second type: List<Long>\n\
    /tmp/tmp8nfrxqv5.java:20: error: cannot find symbol\n        float low = sorted.subList(0,\
    \ m).stream().mapToFloat(Long::longValue).average().getAsFloat();\n          \
    \                                       ^\n  symbol:   method mapToFloat(Long::longValue)\n\
    \  location: interface Stream<Long>\n/tmp/tmp8nfrxqv5.java:21: error: incompatible\
    \ types: List<Long> cannot be converted to int\n        float high = sorted.subList(m,\
    \ sorted).stream().mapToFloat(Long::longValue).average().getAsFloat();\n     \
    \                                  ^\n/tmp/tmp8nfrxqv5.java:23: error: incompatible\
    \ types: possible lossy conversion from long to int\n            if (sorted.size()\
    \ % 2 == 0) return sorted.get((sorted.size() / 2) - 1l);\n                   \
    \                                                           ^\n/tmp/tmp8nfrxqv5.java:24:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        else return ((float) (sorted.get((sorted.size() / 2) + 1l))) - (sorted.get((sorted.size()\
    \ / 2) - 1l));\n                                                             \
    \    ^\n/tmp/tmp8nfrxqv5.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n            else return ((float) (sorted.get((sorted.size()\
    \ / 2) + 1l))) - (sorted.get((sorted.size() / 2) - 1l));\n                   \
    \                                                                            \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n7 errors\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Integer>\
    \ counts = new ArrayList<Integer>();\n        for (Long e : l)\n            counts.add(new\
    \ Integer(1));\n        counts.sort(new Comparator<Integer>() {\n            public\
    \ int compare(Integer o1, Integer o2) {\n                return (int) (o1 - o2);\n\
    \            }\n        });\n        int len = counts.size();\n        if (len\
    \ % 2 != 0)\n            return (counts.get(len / 2) - counts.get(len / 2)) /\
    \ 2.0f;\n        else\n            return (counts.get(len / 2)) + (counts.get(len\
    \ / 2) + counts.get(len / 2)) / 2.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3pgh4mx.java:30)\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float n = l.size();\n\
    \        if (n % 2 == 0) return l.get(n / 2);\n        else return (l.get(n /\
    \ 2) / 2.0 + l.get(n / 2 - 1)) / 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7s3vjg3z.java:16: error: incompatible types: possible lossy conversion\
    \ from float to int\n        if (n % 2 == 0) return l.get(n / 2);\n          \
    \                             ^\n/tmp/tmp7s3vjg3z.java:17: error: incompatible\
    \ types: possible lossy conversion from float to int\n        else return (l.get(n\
    \ / 2) / 2.0 + l.get(n / 2 - 1)) / 2;\n                             ^\n/tmp/tmp7s3vjg3z.java:17:\
    \ error: incompatible types: possible lossy conversion from float to int\n   \
    \     else return (l.get(n / 2) / 2.0 + l.get(n / 2 - 1)) / 2;\n             \
    \                                         ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return Math.round(((long)(Math.max(l.stream().mapToInt(Long::intValue).average()))/2));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjioov_ut.java:15: error: no suitable method found for max(OptionalDouble)\n\
    \        return Math.round(((long)(Math.max(l.stream().mapToInt(Long::intValue).average()))/2));\n\
    \                                      ^\n    method Math.max(int,int) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n    method\
    \ Math.max(long,long) is not applicable\n      (actual and formal argument lists\
    \ differ in length)\n    method Math.max(float,float) is not applicable\n    \
    \  (actual and formal argument lists differ in length)\n    method Math.max(double,double)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return 0f;\n        long largest = l.stream().max(Comparator.naturalOrder()).get();\n\
    \        long smallest = l.stream().min(Comparator.naturalOrder()).get();\n  \
    \      return (float)((largest - smallest)/2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5irhu8ep.java:21)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int half = l.size() / 2;\n        return l.get(half);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpukkf27wk.java:21)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        if (size % 2 == 0) {\n            return (long) Math.ceil(l.get(size\
    \ / 2));\n        }\n        return (long) Math.ceil(((float) l.get(size / 2))\
    \ / 2);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjwp_yxb.java:22)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Sort array list.\n\
    \        l.sort(Comparator.naturalOrder());\n\n        // Calculate mid-point\
    \ of sorted array list.\n        int mid = (l.size() - 1) >> 1;\n\n        //\
    \ If list length is odd, return middle element.\n        if (l.size() & 1)\n \
    \           return l.get(mid);\n\n        // If list length is even, return average\
    \ of middle two.\n        return (l.get(mid + 1) + l.get(mid)) / 2f;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpst4k61eo.java:22: error: incompatible types: int cannot be converted\
    \ to boolean\n        if (l.size() & 1)\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // return Collections.sorted(l)\n\
    \        return Collections.max(l) - Collections.min(l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpszt4qszs.java:19)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_4gyg67b.java:20)\n"
  stdout: ''
  timestamp: 1660010314
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Arrays.sort(l);\n\
    \        float m = (float) l.get(l.size() / 2);\n        return m;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwhf3ltns.java:15: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long largest = 0;\n\
    \        long smallest = Long.MAX_VALUE;\n        for (long i : l) {\n       \
    \     if (i < smallest) smallest = i;\n            if (i > largest) largest =\
    \ i;\n        }\n        float m = largest;\n        if (l.size() % 2 == 1) m\
    \ += (float)(smallest + largest) / 2;\n        float median = (float)m;\n    \
    \    return median;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5ckoyur.java:27)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // write your code\
    \ in Java\n        System.out.println(\"l: \" + l);\n        long sum = 0;\n \
    \       for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \       }\n        float result = sum / l.size();\n        System.out.println(\"\
    sum: \" + sum + \" result: \" + result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0op4y2uw.java:27)\n"
  stdout: 'l: [3, 1, 2, 4, 5]

    sum: 15 result: 3.0

    l: [-10, 4, 6, 1000, 10, 20]

    sum: 1030 result: 171.0

    '
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float total = 0,\
    \ median = Float.NaN;\n        l.forEachOrdered(v -> total += v);\n        int\
    \ halfLen = l.size() / 2;\n        if (l.size() % 2 == 1) {\n            return\
    \ ((total * 0.5f) + l.get(halfLen)) / (halfLen + 1);\n        }\n        else\
    \ {\n            l.sort(Comparator.reverseOrder());\n            float mid = ((total\
    \ * 0.5f) + l.get(halfLen)) / (halfLen + 1);\n            mid = Math.abs(mid);\n\
    \            for (int i = 0; i < l.size(); i++) {\n                float left\
    \ = total - l.get(i);\n                float right = total - l.get(i + 1);\n \
    \               mid = (left + right) / 2;\n                mid = Math.abs(mid);\n\
    \                if (mid <= mid) {\n                    return (total * 0.5f)\
    \ + l.get(i);\n                }\n                else {\n                   \
    \ return (total * 0.5f) + l.get(i + 1);\n                }\n            }\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqe21svr.java:16: error: cannot find symbol\n        l.forEachOrdered(v\
    \ -> total += v);\n         ^\n  symbol:   method forEachOrdered((v)->total +=\
    \ v)\n  location: variable l of type ArrayList<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Check if not\
    \ even number of elements.\n        int size = l.size();\n        if (size % 2\
    \ == 0) return (l.stream().sorted().skip(size / 2).findFirst().get() + (l.size()\
    \ / 2) - 1.0f) / 2.0f;\n        else return (l.stream().sorted().skip(size / 2\
    \ + 1).findFirst().get() + (l.size() / 2) - 1.0f) / 2.0f;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe_snhjf.java:21)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        \n        // get mid-point\n        int size = l.size();\n        if\
    \ (size % 2 == 1) {\n            return (long) (((long) l.get(size/2) + (long)\
    \ l.get(size/2+1)) / 2.0F);\n        } else {\n            return l.get(size/2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0ilna7e.java:27)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        return (len%2 == 0) ? l.get(len/2) : ((len+1)/2-l.get(len/2))\
    \ % 2 == 0 ? (float)l.get(len/2) : ((len+1)/2-l.get(len/2)+0.5f) % 2 == 0 ? (float)l.get(len/2)\
    \ : (float)l.get(len/2-1);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprwc8ixy4.java:21)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // If there is only\
    \ one element, return it.\n        if (l.size() == 1)\n            return l.get(0);\n\
    \        // If there are an even number of elements, the mean is the element at\
    \ midpoint.\n        if (l.size() % 2 == 0)\n            return l.get(l.size()\
    \ / 2);\n        // Otherwise, find the two middle elements.\n        int lo =\
    \ l.size() / 2;\n        int hi = lo + 1;\n        // Recursively find the median\
    \ of middle elements.\n        if (hi - lo == 1) {\n            // Return middle\
    \ element when middle element is itself.\n            return l.get(lo);\n    \
    \    } else {\n            float mid = median(l);\n            if (hi - lo ==\
    \ 2) {\n                // If hi - lo == 2, that means the median was found before\
    \ the\n                // two middle elements.  We want the middle element of\
    \ that\n                // range.\n                return mid;\n            }\
    \ else {\n                // If hi - lo > 2, the median is mid.\n            \
    \    return (float) mid;\n            }\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvrr25g7m.java:42)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float v = (float)l.get(l.size()/2);\n        float f1 = (float)(Math.floor(Math.abs(l.get(l.size()/2))));\n\
    \        float f2 = (float)(Math.ceil(Math.abs(l.get(l.size()/2))));\n       \
    \ float m = (f1 + f2)/2;\n        System.out.println(f1 + \",\" + f2 + \",\" +\
    \ m  + \",\" + Math.abs(l.get(l.size()/2)) + \",\" + Math.abs(f1 + f2));\n   \
    \     if(Math.abs(l.get(l.size()/2)) > Math.abs(f1 + f2))\n            return\
    \ m;\n        else\n            return m;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps99kjum4.java:28)\n"
  stdout: '3.0,3.0,3.0,3,6.0

    10.0,10.0,10.0,10,20.0

    '
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = (float)l.size()/2.0f;\n        return ((l.size() % 2 == 0)?(l.get(l.size()/2)\
    \ - l.get(l.size()/2-1))/2.0f:(l.get(l.size()/2) - l.get(l.size()/2 - 1))/2.0f);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakz78z4g.java:20)\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() % 2\
    \ == 0) return (l.get(l.size() / 2l)) / 2l;\n        else return (l.get(l.size()\
    \ / 2l) + l.get(l.size() / 2l - 1)) / 2l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxzd12lvk.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        if (l.size() % 2 == 0) return (l.get(l.size() / 2l))\
    \ / 2l;\n                                                      ^\n/tmp/tmpxzd12lvk.java:16:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    else return (l.get(l.size() / 2l) + l.get(l.size() / 2l - 1)) / 2l;\n   \
    \                                 ^\n/tmp/tmpxzd12lvk.java:16: error: incompatible\
    \ types: possible lossy conversion from long to int\n        else return (l.get(l.size()\
    \ / 2l) + l.get(l.size() / 2l - 1)) / 2l;\n                                  \
    \                              ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float halfway = (float)(l.size() % 2 == 0)? l.size()/2.0f : (l.size()/2.0)f;\n\
    \        return l.get(halfway);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp90s9iqus.java:16: error: ';' expected\n        float halfway =\
    \ (float)(l.size() % 2 == 0)? l.size()/2.0f : (l.size()/2.0)f;\n             \
    \                                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n == 0) {\n            return Float.NaN;\n        }\n        float\
    \ midpoint = (float) (n * .5);\n        float sum = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            sum += l.get(i);\n        }\n        float mean =\
    \ sum / n;\n        if (n == 1) {\n            return mean;\n        } else {\n\
    \            float variance = 0;\n            for (int i = 0; i < n; i++) {\n\
    \                variance += Math.pow(l.get(i) - mean, 2);\n            }\n  \
    \          return Math.sqrt(variance / n);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpenku6epy.java:32: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return Math.sqrt(variance / n);\n        \
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Sort l into ascending\
    \ order and then use binarySearch to find the median.\n        // A binary search\
    \ is slightly faster than sorting the entire list then sorting it again (a sort\n\
    \        // is O(n log n) but a binary search is O(log n).\n        l.sort((o1,\
    \ o2) -> Float.compare(o2, o1));\n        Float m = l.stream().sorted((o1, o2)\
    \ -> Float.compare(o2, o1)).findFirst().get();\n        return m.floatValue();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf3w2fohc.java:19: error: incompatible types: Long cannot be converted\
    \ to Float\n        Float m = l.stream().sorted((o1, o2) -> Float.compare(o2,\
    \ o1)).findFirst().get();\n                                                  \
    \                                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        if (size == 0) return 0f;\n        if (size == 1) return l.get(0f);\n\
    \n        l.sort(null);\n        if (size % 2 == 1) {\n            return (l.get(size\
    \ / 2l) + l.get(size / 2l)) / 2f;\n        }\n        return (l.get(size / 2l));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcsjtvv8n.java:17: error: incompatible types: possible lossy conversion\
    \ from float to int\n        if (size == 1) return l.get(0f);\n              \
    \                      ^\n/tmp/tmpcsjtvv8n.java:21: error: incompatible types:\
    \ possible lossy conversion from long to int\n            return (l.get(size /\
    \ 2l) + l.get(size / 2l)) / 2f;\n                               ^\n/tmp/tmpcsjtvv8n.java:21:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        return (l.get(size / 2l) + l.get(size / 2l)) / 2f;\n                \
    \                                  ^\n/tmp/tmpcsjtvv8n.java:23: error: incompatible\
    \ types: possible lossy conversion from long to int\n        return (l.get(size\
    \ / 2l));\n                           ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Write your code\
    \ here\n        if(l.isEmpty())\n            return 0;\n        int s = l.size();\n\
    \        float val = (float) l.stream().sorted().skip(s/2).findFirst().getAsDouble();\n\
    \        float m = val*0.5f;\n        return m;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpez11rr43.java:19: error: cannot find symbol\n        float val\
    \ = (float) l.stream().sorted().skip(s/2).findFirst().getAsDouble();\n       \
    \                                                              ^\n  symbol:  \
    \ method getAsDouble()\n  location: class Optional<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.size() / 2;\n        return median;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd52wthzr.java:20)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        if (l.size() % 2 == 0) {\n            return (Float)(l.get(l.size()/2)\
    \ + (l.get(l.size()/2) - l.get(l.size()/2 - 1))) / 2f;\n        }\n        return\
    \ (Float)(l.get(l.size()/2) - l.get(l.size()/2 - 1));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgtbjeshq.java:17: error: incompatible types: long cannot be converted\
    \ to Float\n            return (Float)(l.get(l.size()/2) + (l.get(l.size()/2)\
    \ - l.get(l.size()/2 - 1))) / 2f;\n                          ^\n/tmp/tmpgtbjeshq.java:19:\
    \ error: incompatible types: long cannot be converted to Float\n        return\
    \ (Float)(l.get(l.size()/2) - l.get(l.size()/2 - 1));\n                      ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long mid, i, lo, hi, sum;\n        mid = (long) l.size() / 2;\n     \
    \   sum = 0;\n        i = lo = mid;\n        hi = l.size() - 1;\n        while\
    \ (lo < hi) {\n            sum += l.get(lo++);\n            sum += l.get(hi--);\n\
    \        }\n        median = (float) sum / 2;\n        if (sum % 2 != 0) {\n \
    \           median++;\n        }\n        return median;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0612z4d8.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            sum += l.get(lo++);\n                        \
    \   ^\n/tmp/tmp0612z4d8.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n            sum += l.get(hi--);\n                        \
    \   ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n < 2) return 0f;\n        if (n % 2 == 0) {\n            return\
    \ (l.get(n/2-1) + l.get(n/2+1)) / 2f;\n        } else {\n            return l.get(n\
    \ / 2 - 1) + l.get(n / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhendy_y.java:26)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return 0;\n        float m = l.get(l.size()/2);\n        return Float.isNaN(m)\
    \ ? Float.NaN :m;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpila9jyer.java:20)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        sort(l);\n     \
    \   if (l.size() == 0)\n            return 0f;\n        float a = l.get(l.size()\
    \ / 2);\n        float b = l.get(0);\n        int len = l.size();\n        while\
    \ (len > 1) {\n            if (b < l.get(len / 2))\n                b = l.get(len\
    \ / 2);\n            if (a > l.get(len / 2))\n                a = l.get(len /\
    \ 2);\n            len--;\n        }\n        return (a + b) / 2.0f;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcuqenadt.java:15: error: cannot find symbol\n        sort(l);\n\
    \        ^\n  symbol:   method sort(ArrayList<Long>)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ throw new IllegalArgumentException(\"list cannot be empty\");\n        long\
    \ x = Collections.max(l);\n        long y = Collections.min(l);\n        return\
    \ ((x + y) / 2.0);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_tl844g.java:18: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return ((x + y) / 2.0);\n                    \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return (float)0.0f;\n        float n0 = l.get(0);\n        float\
    \ n = n0;\n        float m = l.get(l.size() - 1);\n        for (int i = 1; i <\
    \ l.size(); i++)\n            if (l.get(i) > m)\n                m = l.get(i);\n\
    \        // return median(l)\n        float center = (m - n) * 0.5f;\n       \
    \ if (n < m)\n            return center + n;\n        return center + m;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqefqtiq.java:30)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            throw new IllegalArgumentException(\"cannot compute median for empty\
    \ list\");\n        if (l.size() == 1)\n            return (l.isEmpty() ? Float.NaN\
    \ :Float.intBitsToFloat(l.size()));\n        Collections.sort(l);\n        double\
    \ center = (l.get(l.size()/2.0) + l.get((l.size()-1)/2.0))/2.0;\n        return\
    \ (Float.intBitsToFloat(l.size()%2==0)? center : center - l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3dvcg1c.java:20: error: incompatible types: possible lossy conversion\
    \ from double to int\n        double center = (l.get(l.size()/2.0) + l.get((l.size()-1)/2.0))/2.0;\n\
    \                                       ^\n/tmp/tmpy3dvcg1c.java:20: error: incompatible\
    \ types: possible lossy conversion from double to int\n        double center =\
    \ (l.get(l.size()/2.0) + l.get((l.size()-1)/2.0))/2.0;\n                     \
    \                                            ^\n/tmp/tmpy3dvcg1c.java:21: error:\
    \ incompatible types: boolean cannot be converted to int\n        return (Float.intBitsToFloat(l.size()%2==0)?\
    \ center : center - l);\n                                               ^\n/tmp/tmpy3dvcg1c.java:21:\
    \ error: incompatible types: bad type in conditional expression\n        return\
    \ (Float.intBitsToFloat(l.size()%2==0)? center : center - l);\n              \
    \                                       ^\n    possible lossy conversion from\
    \ double to float\n/tmp/tmpy3dvcg1c.java:21: error: bad operand types for binary\
    \ operator '-'\n        return (Float.intBitsToFloat(l.size()%2==0)? center :\
    \ center - l);\n                                                             \
    \        ^\n  first type:  double\n  second type: ArrayList<Long>\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    5 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float)(l.get(l.size() / 2)) / 2f;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ku34pwz.java:19)\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float x = l.isEmpty() ? 0 : l.size() / 2;\n        if (l.size() % 2 ==\
    \ 0)\n            return l.get(x);\n        float m = l.get(x) + l.get(x-1);\n\
    \        return m;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdllx4e9z.java:18: error: incompatible types: possible lossy conversion\
    \ from float to int\n            return l.get(x);\n                         ^\n\
    /tmp/tmpdllx4e9z.java:19: error: incompatible types: possible lossy conversion\
    \ from float to int\n        float m = l.get(x) + l.get(x-1);\n              \
    \          ^\n/tmp/tmpdllx4e9z.java:19: error: incompatible types: possible lossy\
    \ conversion from float to int\n        float m = l.get(x) + l.get(x-1);\n   \
    \                                 ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float res = 0;\n\
    \        for (long e : l)\n            res = (res > e) ? res : e;\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9apuzwh8.java:21)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int l = l.size();\n        return l[(l/2)];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcqisu4by.java:16: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        int l = l.size();\n            ^\n/tmp/tmpcqisu4by.java:16:\
    \ error: int cannot be dereferenced\n        int l = l.size();\n             \
    \    ^\n/tmp/tmpcqisu4by.java:17: error: array required, but int found\n     \
    \   return l[(l/2)];\n                ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return Collections.binarySearch(l, l.size()/2, (l1, l2) -> l1.compareTo(l2)/2).floatValue()\n\
    \            + (l.size()/2 + 1l)/2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb7kkypyo.java:16: error: incompatible types: INT#1 cannot be converted\
    \ to CAP#1\n        return Collections.binarySearch(l, l.size()/2, (l1, l2) ->\
    \ l1.compareTo(l2)/2).floatValue()\n                                         \
    \                                       ^\n  where CAP#1 is a fresh type-variable:\n\
    \    CAP#1 extends INT#3 from capture of ? extends INT#3\n  where INT#1,INT#2,INT#3\
    \ are intersection types:\n    INT#1 extends Number,Comparable<? extends INT#2>,Constable,ConstantDesc\n\
    \    INT#2 extends Number,Comparable<?>,Constable,ConstantDesc\n    INT#3 extends\
    \ Number,Comparable<?>,Constable,ConstantDesc\n/tmp/tmpb7kkypyo.java:16: error:\
    \ int cannot be dereferenced\n        return Collections.binarySearch(l, l.size()/2,\
    \ (l1, l2) -> l1.compareTo(l2)/2).floatValue()\n                             \
    \                                                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() % 2\
    \ != 0) {\n            return (float) l.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList().get(l.size()\
    \ / 2 + 1)).getValue();\n        } else {\n            return (0.5f * l.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList().get(l.size()\
    \ / 2)).getValue() + 0.5f);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmbyotmcw.java:16: error: cannot find symbol\n            return\
    \ (float) l.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList().get(l.size()\
    \ / 2 + 1)).getValue();\n                                                    \
    \                                               ^\n  symbol:   method get(int)\n\
    \  location: interface Collector<Object,CAP#1,List<Object>>\n  where CAP#1 is\
    \ a fresh type-variable:\n    CAP#1 extends Object from capture of ?\n/tmp/tmpmbyotmcw.java:18:\
    \ error: cannot find symbol\n            return (0.5f * l.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList().get(l.size()\
    \ / 2)).getValue() + 0.5f);\n                                                \
    \                                                   ^\n  symbol:   method get(int)\n\
    \  location: interface Collector<Object,CAP#1,List<Object>>\n  where CAP#1 is\
    \ a fresh type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() == 0)\n            return (float)0;\n\n        int n = l.size();\n\
    \n        if (n < 2)\n            return (float)l.get(0);\n\n        return (float)((n\
    \ + 1) / 2.0f) * (l.get(n / 2) - l.get((n + 1) / 2));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpox2vds0m.java:27)\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float res = 0f;\n\
    \        Collections.sort(l);\n        if (l.size() > 1) {\n            int mid\
    \ = l.size() / 2;\n            res = l.get(mid);\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpty_i8jqu.java:25)\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return 0f;\n\n        long n = l.size();\n        double p = ((double)l.get(0))\
    \ / (double)n;\n\n        for (long i = 1; i < n; i++)\n            if (l.get(i)\
    \ < p)\n                p = l.get(i);\n\n        return (float)p;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpthk2msl3.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (l.get(i) < p)\n                      ^\n/tmp/tmpthk2msl3.java:23:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \            p = l.get(i);\n                          ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return Collections.binarySearch(l, l.size()/2f) == -1 ? l.size() / 2f\
    \ : (float)Collections.binarySearch(l, l.size()/2f, Comparator.naturalOrder())+1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo7t6l2el.java:16: error: no suitable method found for binarySearch(ArrayList<Long>,float)\n\
    \        return Collections.binarySearch(l, l.size()/2f) == -1 ? l.size() / 2f\
    \ : (float)Collections.binarySearch(l, l.size()/2f, Comparator.naturalOrder())+1;\n\
    \                          ^\n    method Collections.<T#1>binarySearch(List<?\
    \ extends Comparable<? super T#1>>,T#1) is not applicable\n      (inference variable\
    \ T#1 has incompatible bounds\n        lower bounds: Long,Object\n        lower\
    \ bounds: Float)\n    method Collections.<T#2>binarySearch(List<? extends T#2>,T#2,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>binarySearch(List<?\
    \ extends Comparable<? super T#1>>,T#1)\n    T#2 extends Object declared in method\
    \ <T#2>binarySearch(List<? extends T#2>,T#2,Comparator<? super T#2>)\n/tmp/tmpo7t6l2el.java:16:\
    \ error: no suitable method found for binarySearch(ArrayList<Long>,float,Comparator<T#1>)\n\
    \        return Collections.binarySearch(l, l.size()/2f) == -1 ? l.size() / 2f\
    \ : (float)Collections.binarySearch(l, l.size()/2f, Comparator.naturalOrder())+1;\n\
    \                                                                            \
    \                      ^\n    method Collections.<T#2>binarySearch(List<? extends\
    \ Comparable<? super T#2>>,T#2) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Collections.<T#3>binarySearch(List<? extends T#3>,T#3,Comparator<? super T#3>)\
    \ is not applicable\n      (inference variable T#4 has incompatible bounds\n \
    \       lower bounds: Long,Float,Comparable<? super T#4>\n        lower bounds:\
    \ Long,Float,T#3)\n  where T#1,T#2,T#3,T#4 are type-variables:\n    T#1 extends\
    \ Comparable<? super T#1>\n    T#2 extends Object declared in method <T#2>binarySearch(List<?\
    \ extends Comparable<? super T#2>>,T#2)\n    T#3 extends Object declared in method\
    \ <T#3>binarySearch"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = 0;\n        int size = 0;\n        float prev = (float)l.stream().reduce((n1,n2)\
    \ -> n1+n2) / 2;\n        for (long i : l) {\n            if (i > (float)prev)\
    \ {\n                prev = (float)i;\n                size = 1;\n           \
    \ } else {\n                size++;\n            }\n        }\n        float current\
    \ = prev;\n        for (int i = 1; i < size; i++) {\n            if (i > (float)prev)\
    \ {\n                median += (float)prev;\n                prev = (float)l.stream().filter((n1,n2)\
    \ -> n1 == n2).mapToLong((n2) -> n2).reduce((n1,n2) -> n1+n2) / 2;\n         \
    \   } else {\n                median += (float)current;\n                current\
    \ = l.stream().filter((n1,n2) -> n1 == n2).mapToLong((n2) -> n2).reduce((n1,n2)\
    \ -> n1+n2) / 2;\n            }\n        }\n        return median;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptd69fudp.java:18: error: incompatible types: Optional<Long> cannot\
    \ be converted to float\n        float prev = (float)l.stream().reduce((n1,n2)\
    \ -> n1+n2) / 2;\n                                             ^\n/tmp/tmptd69fudp.java:31:\
    \ error: incompatible types: incompatible parameter types in lambda expression\n\
    \                prev = (float)l.stream().filter((n1,n2) -> n1 == n2).mapToLong((n2)\
    \ -> n2).reduce((n1,n2) -> n1+n2) / 2;\n                                     \
    \           ^\n/tmp/tmptd69fudp.java:34: error: incompatible types: incompatible\
    \ parameter types in lambda expression\n                current = l.stream().filter((n1,n2)\
    \ -> n1 == n2).mapToLong((n2) -> n2).reduce((n1,n2) -> n1+n2) / 2;\n         \
    \                                   ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float med = 0f;\n\
    \        if (l.isEmpty()) {\n            return med;\n        }\n        l.sort((a,\
    \ b) -> a.compareTo(b));\n        int size = l.size();\n        if (size == 0)\
    \ {\n            return med;\n        }\n        long mid = l.size() / 2l;\n \
    \       if (size == 1l) {\n            if (l.get(0) == mid) {\n              \
    \  return mid;\n            } else {\n                return med;\n          \
    \  }\n        }\n        if (size == 2l) {\n            if (l.get(0) == mid &&\
    \ l.get(1) == mid) {\n                return mid;\n            } else {\n    \
    \            return med;\n            }\n        }\n        if (size == 3l) {\n\
    \            if (l.get(0) == mid && l.get(1) == mid && l.get(2) == mid) {\n  \
    \              return mid;\n            } else {\n                return med;\n\
    \            }\n        }\n        if (size == 4l) {\n            if (l.get(0)\
    \ == mid && l.get(1) == mid && l.get(2) == mid && l.get(3) == mid) {\n       \
    \         return mid;\n            } else {\n                return med;\n   \
    \         }\n        }\n        if (size == 5l) {\n            if (l.get(0) ==\
    \ mid && l.get(1) == mid && l.get(2) == mid && l.get(3) == mid && l.get(4) ==\
    \ mid) {\n                return mid;\n            } else {\n                return\
    \ med;\n            }\n        }\n        if (size == 6l) {\n            if (l.get(0)\
    \ == mid && l.get(1) == mid && l.get(2) == mid && l.get(3) == mid && l.get(4)\
    \ == mid && l.get(5) == mid) {\n                return mid;\n            } else\
    \ {\n                return med;\n            }\n        }\n        if (size ==\
    \ 7l) {\n            if (l.get(0) == mid && l.get(1) == mid && l.get(2) == mid\
    \ && l.get(3) == mid && l.get(4) == mid && l.get(5) == mid && l.get(6) == mid)\
    \ {\n                return mid;\n            } else {\n                return\
    \ med;\n            }\n        }\n        if (size == 8l) {\n            if (l.get(0)\
    \ == mid && l.get(1) == mid && l.get(2) == mid && l.get(3) == mid && l.get(4)\
    \ == mid && l.get(5) == mid && l.get(6) == mid && l.get(7) == mid) {\n       \
    \         return mid;\n            } else {\n                return med;\n   \
    \         }\n        }\n        if (size == 9l) {\n            if (l.get(0) ==\
    \ mid && l.get(1) == mid && l.get(2) == mid && l.get(3) == mid && l.get(4) ==\
    \ mid && l.get(5) == mid && l.get(6) == \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4vqmc4h.java:83: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmph4vqmc4h.java:84: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float m = 0;\n \
    \       List<Float> flist = new ArrayList<Float>();\n        for (long e : l)\
    \ {\n            flist.add(Float.valueOf(e));\n        }\n        Collections.sort(flist);\n\
    \        int len = flist.size();\n        if (len % 2 == 1) {\n            m =\
    \ flist.get(len / 2);\n        }\n        else {\n            m = ((float) flist.get(len\
    \ / 2)) + ((float) flist.get(len / 2 - 1));\n        }\n        return m;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60k6nbxw.java:32)\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = 0.0f;\n        if (l.size() > 1) {\n            median\
    \ = ((float)l.get(l.size() - 1l)) / 2l;\n        } else {\n            median\
    \ = ((float)l.get(0l)) / 2l;\n        }\n        return median;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphrye2wfb.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            median = ((float)l.get(l.size() - 1l)) / 2l;\n\
    \                                            ^\n/tmp/tmphrye2wfb.java:20: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \ median = ((float)l.get(0l)) / 2l;\n                                   ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n < 2) return 0f;\n        Arrays.sort(l);\n        return (n + 1)\
    \ / (float) n;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ydea_iv.java:17: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long x = l.stream().mapToLong(Long::longValue).sum()\
    \ / l.size();\n        if (l instanceof TreeSet) {\n            TreeSet<Long>\
    \ sortedSet = (TreeSet<Long>) l;\n            int middle = (int) (l.size() / 2);\n\
    \            int firstMiddle = middle - 1;\n            long firstMiddleValue\
    \ = sortedSet.first();\n            long secondMiddleValue = sortedSet.last();\n\
    \            if (firstMiddleValue >= secondMiddleValue) {\n                long\
    \ firstMiddleMiddle = firstMiddleValue + secondMiddleValue;\n                sortedSet.remove(firstMiddleMiddle);\n\
    \                sortedSet.add(firstMiddleMiddle);\n            }\n          \
    \  else {\n                long secondMiddleMiddle = secondMiddleValue + firstMiddleValue;\n\
    \                sortedSet.remove(secondMiddleMiddle);\n                sortedSet.add(secondMiddleMiddle);\n\
    \            }\n            float median = ((float) firstMiddleMiddle) / (float)\
    \ (sortedSet.first() + sortedSet.last());\n            return median;\n      \
    \  }\n        else {\n            float median = ((float) l.stream().mapToLong(Long::longValue).sum()\
    \ / l.size()) / 2.0f;\n            return median;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1qix4jz.java:16: error: incompatible types: ArrayList<Long> cannot\
    \ be converted to TreeSet\n        if (l instanceof TreeSet) {\n            ^\n\
    /tmp/tmpc1qix4jz.java:17: error: incompatible types: ArrayList<Long> cannot be\
    \ converted to TreeSet<Long>\n            TreeSet<Long> sortedSet = (TreeSet<Long>)\
    \ l;\n                                                      ^\n/tmp/tmpc1qix4jz.java:32:\
    \ error: cannot find symbol\n            float median = ((float) firstMiddleMiddle)\
    \ / (float) (sortedSet.first() + sortedSet.last());\n                        \
    \            ^\n  symbol:   variable firstMiddleMiddle\n  location: class Problem\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return Collections.nCopies(l.size()/2,\
    \ (long)l.stream().min(Comparator.naturalOrder()).orElse(-1l))\n             \
    \   .stream()\n                .mapToLong(i -> l.get(i))\n                .average()\n\
    \                .getAsFloat();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoouuj97r.java:17: error: incompatible types: Long cannot be converted\
    \ to int\n                .mapToLong(i -> l.get(i))\n                        \
    \              ^\n/tmp/tmpoouuj97r.java:19: error: cannot find symbol\n      \
    \          .getAsFloat();\n                ^\n  symbol:   method getAsFloat()\n\
    \  location: class OptionalDouble\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long n = l.size();\n\
    \        if (n < 2) { \n            return 0.0f;\n        }\n        long half\
    \ = n / 2l;\n        long q1 = l.get(0);\n        long q2 = l.get(half);\n   \
    \     float v = (q1 + q2) / 2.0f;\n        if (n == 1l) {\n            return\
    \ v;\n        }\n        if (q1 > q2) { \n            return v;\n        }\n \
    \       long half1 = half + 1l;\n        long q11 = l.get(half1);\n        long\
    \ q22 = l.get(n - half);\n        float v1 = (q11 + q22) / 2.0f;\n        if (q11\
    \ > q22) {\n            return v1;\n        }\n        float v2 = (q1 + q2) /\
    \ 2.0f;\n        return (v1 + v2) / 2.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5rfjl5xm.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long q2 = l.get(half);\n                        ^\n\
    /tmp/tmp5rfjl5xm.java:30: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long q11 = l.get(half1);\n                       \
    \  ^\n/tmp/tmp5rfjl5xm.java:31: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long q22 = l.get(n - half);\n                    \
    \       ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double median =\
    \ 0;\n        l.sort(null);\n        if (l.size() % 2 == 0) {\n            median\
    \ = ((double) l.get((l.size() - 1) / 2)) + l.get((l.size() - 1) / 2 + 1);\n  \
    \      }\n        else {\n            median = l.get((l.size() - 1) / 2);\n  \
    \      }\n        return (float) median;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2tknhnek.java:27)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long[] arr = new\
    \ long[l.size()];\n        for (int i = 0; i < l.size(); i++)\n            arr[i]\
    \ = l.get(i);\n        Arrays.sort(arr);\n        if (arr.length > 1) {\n    \
    \        return (arr[l.size() / 2]);\n        } else {\n            return (long)\
    \ l.get(0);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19cn0xw1.java:27)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Sort the array.\n\
    \        Collections.sort(l);\n        // If the array is even size, take the\
    \ second element.\n        if (l.size() % 2 == 0) {\n            return l.get(l.size()\
    \ / 2);\n        }\n        // If the array is odd size, take the middle element.\n\
    \        return l.get(l.size() / 2 - 1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_qhvudep.java:25)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double size = l.size();\n\
    \        if (size == 0) {\n            return 0.0f;\n        }\n        long a\
    \ = l.get(size / 2);\n        long b = l.get(size - 1);\n        double diff =\
    \ b - a;\n        if (diff > 0) {\n            return (float)(a + b) / 2;\n  \
    \      } else {\n            return a;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptgedpue1.java:19: error: incompatible types: possible lossy conversion\
    \ from double to int\n        long a = l.get(size / 2);\n                    \
    \        ^\n/tmp/tmptgedpue1.java:20: error: incompatible types: possible lossy\
    \ conversion from double to int\n        long b = l.get(size - 1);\n         \
    \                   ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float f = 0.0f;\n\
    \        float average = (float)(l.size()) / 2.0f;\n        for (Long e : l) {\n\
    \            f += Math.abs(e - average);\n        }\n        return f;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh8v678_.java:23)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long count = (long)\
    \ l.stream().mapToLong(l -> l).count();\n        if (count % 2 == 1) {\n     \
    \       return (long) l.stream().sorted((a, b) -> a - b).skip(count / 2).findFirst().get();\n\
    \        } else {\n            return (long) l.stream().sorted((a, b) -> b - a).skip(count\
    \ / 2).findFirst().get();\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4cpcrag_.java:15: error: variable l is already defined in method\
    \ median(ArrayList<Long>)\n        long count = (long) l.stream().mapToLong(l\
    \ -> l).count();\n                                                 ^\n/tmp/tmp4cpcrag_.java:17:\
    \ error: incompatible types: bad return type in lambda expression\n          \
    \  return (long) l.stream().sorted((a, b) -> a - b).skip(count / 2).findFirst().get();\n\
    \                                                        ^\n    possible lossy\
    \ conversion from long to int\n/tmp/tmp4cpcrag_.java:19: error: incompatible types:\
    \ bad return type in lambda expression\n            return (long) l.stream().sorted((a,\
    \ b) -> b - a).skip(count / 2).findFirst().get();\n                          \
    \                              ^\n    possible lossy conversion from long to int\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) - l.get(l.size()\
    \ / 2 - 1));\n        } else {\n            return l.get(l.size() / 2);\n    \
    \    }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkp4e9zlr.java:24)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // sort the list\
    \ using Collections.sort(l)\n        Collections.sort(l);\n        // find midpoint\
    \ by dividing by two\n        int m = (int)(l.size() / 2.0);\n        // check\
    \ all but mid element\n        for (int i = 0, j = 0; i < l.size(); i++) {\n \
    \           if (i != m)\n                j++;\n            // if element == mid\
    \ element then return the midpoint\n            if (l.get(i) == l.get(m)) {\n\
    \                return (float) l.get(m);\n            }\n        }\n        //\
    \ return the average of all elements except the midpoint\n        return (float)\
    \ (((double)m) / (l.size() - 1));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx_xuh4t8.java:33)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float f = l.get(l.size()\
    \ / 2);\n        l.subList(l.size() / 2, l.size()).clear();\n        l.add(l);\n\
    \        return f;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoxonf1n7.java:17: error: incompatible types: ArrayList<Long> cannot\
    \ be converted to Long\n        l.add(l);\n              ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0)\n            throw new IllegalArgumentException(\"List is empty.\");\n  \
    \      Collections.sort(l);\n        if (l.size() == 1)\n            return l.get(0);\n\
    \        return (float) l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz74t5agh.java:24)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float minValue =\
    \ l.isEmpty() ? 0f : Float.MAX_VALUE;\n        float maxValue = 0f;\n        for\
    \ (Long value : l) {\n            if (value < minValue) minValue = value;\n  \
    \          if (value > maxValue) maxValue = value;\n        }\n        return\
    \ Float.intBitsToFloat(\n            ((float) l.size() - 1L) / 2L\n          \
    \  + (float) (l.size() % 2 == 0 ? Float.intBitsToFloat(maxValue) - Float.intBitsToFloat(minValue)\
    \ : Float.intBitsToFloat(maxValue) + Float.intBitsToFloat(minValue)) / 2L\n  \
    \      );\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptli82h8l.java:23: error: incompatible types: possible lossy conversion\
    \ from float to int\n            + (float) (l.size() % 2 == 0 ? Float.intBitsToFloat(maxValue)\
    \ - Float.intBitsToFloat(minValue) : Float.intBitsToFloat(maxValue) + Float.intBitsToFloat(minValue))\
    \ / 2L\n                                                                ^\n/tmp/tmptli82h8l.java:23:\
    \ error: incompatible types: possible lossy conversion from float to int\n   \
    \         + (float) (l.size() % 2 == 0 ? Float.intBitsToFloat(maxValue) - Float.intBitsToFloat(minValue)\
    \ : Float.intBitsToFloat(maxValue) + Float.intBitsToFloat(minValue)) / 2L\n  \
    \                                                                            \
    \                   ^\n/tmp/tmptli82h8l.java:23: error: incompatible types: possible\
    \ lossy conversion from float to int\n            + (float) (l.size() % 2 == 0\
    \ ? Float.intBitsToFloat(maxValue) - Float.intBitsToFloat(minValue) : Float.intBitsToFloat(maxValue)\
    \ + Float.intBitsToFloat(minValue)) / 2L\n                                   \
    \                                                                            \
    \                   ^\n/tmp/tmptli82h8l.java:23: error: incompatible types: possible\
    \ lossy conversion from float to int\n            + (float) (l.size() % 2 == 0\
    \ ? Float.intBitsToFloat(maxValue) - Float.intBitsToFloat(minValue) : Float.intBitsToFloat(maxValue)\
    \ + Float.intBitsToFloat(minValue)) / 2L\n                                   \
    \                                                                            \
    \                                                    ^\n/tmp/tmptli82h8l.java:23:\
    \ error: incompatible types: possible lossy conversion from float to int\n   \
    \         + (float) (l.size() % 2 == 0 ? Float.intBitsToFloat(maxValue) - Float.intBitsToFloat(minValue)\
    \ : Float.intBitsToFloat(maxValue) + Float.intBitsToFloat(minValue)) / 2L\n  \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Return median\
    \ of elements in the array list l.\n        double m = Double.NaN;\n        if\
    \ (l.size() > 0) {\n            m = l.stream().mapToDouble(value -> (double) value).sorted().skip(l.size()\
    \ / 2).get().doubleValue();\n        }\n        return m;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj1wepuyv.java:18: error: cannot find symbol\n            m = l.stream().mapToDouble(value\
    \ -> (double) value).sorted().skip(l.size() / 2).get().doubleValue();\n      \
    \                                                                            \
    \         ^\n  symbol:   method get()\n  location: interface DoubleStream\n/tmp/tmpj1wepuyv.java:20:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        return m;\n               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Set<Long> sorted\
    \ = new TreeSet<>(l);\n        float median = sorted.isEmpty() ? 0.0f : (float)\
    \ sorted.first();\n        sorted.forEach(l -> { \n            if (l.intValue()\
    \ == sorted.size() - 1) { \n                median = l.floatValue();\n       \
    \     }\n        });\n        return median;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp36vek68.java:16: error: cannot find symbol\n        float median\
    \ = sorted.isEmpty() ? 0.0f : (float) sorted.first();\n                      \
    \                                         ^\n  symbol:   method first()\n  location:\
    \ variable sorted of type Set<Long>\n/tmp/tmpp36vek68.java:17: error: variable\
    \ l is already defined in method median(ArrayList<Long>)\n        sorted.forEach(l\
    \ -> { \n                       ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float result = (float)0;\n\
    \        if (l.size() % 2 == 0) {\n            result += (Float)(l.get(l.size()\
    \ / 2));\n            result /= 2;\n        } else {\n            result += l.get(l.size()\
    \ / 2);\n            result /= 2;\n            result -= (Float)(l.get(l.size()\
    \ / 2 + 1));\n            result /= 2;\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyyu85cm8.java:17: error: incompatible types: Long cannot be converted\
    \ to Float\n            result += (Float)(l.get(l.size() / 2));\n            \
    \                 ^\n/tmp/tmpyyu85cm8.java:22: error: incompatible types: Long\
    \ cannot be converted to Float\n            result -= (Float)(l.get(l.size() /\
    \ 2 + 1));\n                             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ {\n            return (float) 0;\n        }\n        Collections.sort(l);\n\
    \        return ((long) l.get(l.size() / 2)) / (float) 2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzz0pwsd.java:22)\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long sum = 0;\n\
    \        for(Long d : l)\n            sum += d;\n        if(l.size() == 0)\n \
    \           return 0;\n        return Float.intBitsToFloat((float) sum / l.size());\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpktfj0hy0.java:20: error: incompatible types: possible lossy conversion\
    \ from float to int\n        return Float.intBitsToFloat((float) sum / l.size());\n\
    \                                                ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010322
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return 0f;\n        \n        Collections.sort(l);\n        \n        // get\
    \ the midpoint\n        float mid = l.get(l.size() / 2);\n        \n        //\
    \ find the median of the remaining elements\n        float medianValue = 0.0f;\n\
    \        for (long e : l) {\n            if (e < mid) {\n                medianValue\
    \ += e;\n            } else {\n                medianValue -= e;\n           \
    \ }\n        }\n        \n        // return the median\n        return medianValue;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpen2xr4jb.java:36)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        PriorityQueue<Long>\
    \ pQueue = new PriorityQueue<>(l);\n        Arrays.sort(l);\n        if (pQueue.isEmpty())\
    \ {\n            return (float)0;\n        }\n        long median = 0;\n     \
    \   while (true) {\n            long x = 0;\n            if (pQueue.isEmpty())\
    \ {\n                return (float) x;\n            }\n            long y = pQueue.poll();\n\
    \            if (y < x) {\n                median = y;\n            } else {\n\
    \                median = x;\n            }\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnppes9s3.java:16: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int mid = (int)l.size()/2;\n\
    \        return (l.get(mid) + (l.get((mid+1)>>1)>>1)/2f + (l.get((mid+1)>>2)>>2)/2f\
    \ + (l.get((mid+1)>>3)>>3)/2f + (l.get((mid+1)>>4)>>4)/2f + (l.get((mid+1)>>5)>>5)/2f\
    \ + (l.get((mid+1)>>6)>>6)/2f + (l.get((mid+1)>>7)>>7)/2f + (l.get((mid+1)>>8)>>8)/2f\
    \ + (l.get((mid+1)>>9)>>9)/2f + (l.get((mid+1)>>10)>>10)/2f + (l.get((mid+1)>>11)>>11)/2f)*.5f;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgk2zx4ty.java:19)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long n = l.size();\n\
    \        if (n > 0) {\n            int half = n / 2;\n            if (n % 2 ==\
    \ 1) {\n                return (Long) l.get(half);\n            } else {\n   \
    \             float m = (long) l.get(half);\n                for (int i = half\
    \ + 1; i <= half; i++) {\n                    m = (m - l.get(i)) / (i - half);\n\
    \                    if (Math.abs(m) < 0.0001f) {\n                        break;\n\
    \                    }\n                }\n                return m;\n       \
    \     }\n        } else {\n            return (long) 0.5f;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmwb5fgxu.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int half = n / 2;\n                         ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = l.get(l.size()/2);\n        return median;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz076tsnl.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long size = l.size();\n\
    \        if (size % 2 == 1) {\n            return l.get(size / 2 - 1l) + l.get(size\
    \ / 2l);\n        }\n        else {\n            long mid = size >> 1l;\n    \
    \        long half = size / 2l;\n            if (l.get(mid) <= l.get(half)) {\n\
    \                return l.get(mid);\n            }\n            else {\n     \
    \           return l.get(half);\n            }\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp73v3jt0p.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n            return l.get(size / 2 - 1l) + l.get(size / 2l);\n\
    \                                  ^\n/tmp/tmp73v3jt0p.java:17: error: incompatible\
    \ types: possible lossy conversion from long to int\n            return l.get(size\
    \ / 2 - 1l) + l.get(size / 2l);\n                                            \
    \         ^\n/tmp/tmp73v3jt0p.java:22: error: incompatible types: possible lossy\
    \ conversion from long to int\n            if (l.get(mid) <= l.get(half)) {\n\
    \                      ^\n/tmp/tmp73v3jt0p.java:22: error: incompatible types:\
    \ possible lossy conversion from long to int\n            if (l.get(mid) <= l.get(half))\
    \ {\n                                    ^\n/tmp/tmp73v3jt0p.java:23: error: incompatible\
    \ types: possible lossy conversion from long to int\n                return l.get(mid);\n\
    \                             ^\n/tmp/tmp73v3jt0p.java:26: error: incompatible\
    \ types: possible lossy conversion from long to int\n                return l.get(half);\n\
    \                             ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n6 errors\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        float median;\n        median = l.get(l.size()/2);\n        return median;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshuzd8qp.java:22)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float) l.stream().skip((l.size()-1) / 2).findFirst().get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_88qbuv.java:20)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return Float.intBitsToFloat(Collections.max(l))\n\
    \                - Float.intBitsToFloat(Collections.min(l));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxog2ej1a.java:15: error: incompatible types: inferred type does\
    \ not conform to upper bound(s)\n        return Float.intBitsToFloat(Collections.max(l))\n\
    \                    ^\n    inferred: Long\n    upper bound(s): Integer,Comparable<?\
    \ super Long>,Long,Object\n/tmp/tmpxog2ej1a.java:16: error: incompatible types:\
    \ inferred type does not conform to upper bound(s)\n                - Float.intBitsToFloat(Collections.min(l));\n\
    \                       ^\n    inferred: Long\n    upper bound(s): Integer,Comparable<?\
    \ super Long>,Long,Object\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return 0.0f;\n        Arrays.sort(l);\n        long middle = l.get(l.size()\
    \ / 2);\n        if (l.size() % 2 == 0) {\n            return (float) middle;\n\
    \        } else {\n            return (l.size() % 2 == 1) ? ((float) middle +\
    \ l.get(l.size() / 3)) : (float) middle - l.get(l.size() / 3);\n        }\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_7x0neo6.java:17: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long largest = 0,\
    \ secondLargest = 0, thirdLargest = 0, median = 0;\n\n        for (Long e : l)\
    \ {\n            if (e > largest) {\n                secondLargest = thirdLargest\
    \ = largest;\n                thirdLargest = e;\n            } else if (e > secondLargest)\
    \ {\n                secondLargest = e;\n            } else if (e > thirdLargest)\
    \ {\n                thirdLargest = e;\n            }\n            largest = e;\n\
    \        }\n\n        if (largest < secondLargest && largest < thirdLargest)\n\
    \            return thirdLargest;\n\n        if (secondLargest < largest && secondLargest\
    \ < thirdLargest)\n            return secondLargest;\n\n        return largest;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpetrkf5q7.java:38)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float mid = 0.0;\n\
    \        float a1 = (l.size() > 1) ? l.get(0l) / 2.0f : 0.0f;\n        float a2\
    \ = (l.size() > 2) ? l.get(1l) / 2.0f : 0.0f;\n        float a3 = (l.size() >\
    \ 3) ? l.get(2l) / 2.0f : 0.0f;\n        float a4 = (l.size() > 4) ? l.get(3l)\
    \ / 2.0f : 0.0f;\n        float a5 = (l.size() > 5) ? l.get(4l) / 2.0f : 0.0f;\n\
    \        float a6 = (l.size() > 6) ? l.get(5l) / 2.0f : 0.0f;\n        float a7\
    \ = (l.size() > 7) ? l.get(6l) / 2.0f : 0.0f;\n        float a8 = (l.size() >\
    \ 8) ? l.get(7l) / 2.0f : 0.0f;\n        float a9 = (l.size() > 9) ? l.get(8l)\
    \ / 2.0f : 0.0f;\n        float a10 = (l.size() > 10) ? l.get(9l) / 2.0f : 0.0f;\n\
    \        float a11 = (l.size() > 11) ? l.get(10l) / 2.0f : 0.0f;\n        float\
    \ a12 = (l.size() > 12) ? l.get(11l) / 2.0f : 0.0f;\n        float a13 = (l.size()\
    \ > 13) ? l.get(12l) / 2.0f : 0.0f;\n        float a14 = (l.size() > 14) ? l.get(13l)\
    \ / 2.0f : 0.0f;\n        float a15 = (l.size() > 15) ? l.get(14l) / 2.0f : 0.0f;\n\
    \        float a16 = (l.size() > 16) ? l.get(15l) / 2.0f : 0.0f;\n        float\
    \ a17 = (l.size() > 17) ? l.get(16l) / 2.0f : 0.0f;\n        float a18 = (l.size()\
    \ > 18) ? l.get(17l) / 2.0f : 0.0f;\n        float a19 = (l.size() > 19) ? l.get(18l)\
    \ / 2.0f : 0.0f;\n        float a20 = (l.size() > 20) ? l.get(19l) / 2.0f : 0.0f;\n\
    \        float a21 = (l.size() > 21) ? l.get(20l) / 2.0f : 0.0f;\n        float\
    \ a22 = (l.size() > 22) ? l.get(21l) / 2.0f : 0.0f;\n        float a23 = (l.size()\
    \ > 23) ? l.get(22l) / 2.0f : 0.0f;\n        float a24 = (l.size() > 24) ? l.get(23l)\
    \ / 2.0f : 0.0f;\n        float a25 = (l.size() > 25) ? l\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7fr9uqtt.java:40: error: : expected\n        float a25 = (l.size()\
    \ > 25) ? l\n                                       ^\n/tmp/tmp7fr9uqtt.java:41:\
    \ error: illegal start of expression\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median_val = l.get(l.size() / 2);\n        float max_val = l.get(l.size()\
    \ - 1);\n        return max_val - median_val >= 0? median_val : max_val + median_val;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp213u2x_u.java:22)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float max = 0f;\n\
    \        float min = Float.MAX_VALUE;\n        Iterator<Long> it = l.iterator();\n\
    \        while (it.hasNext()) {\n            float num = (float)it.next();\n \
    \           if (num > max) {\n                max = num;\n            }\n    \
    \        if (num < min) {\n                min = num;\n            }\n       \
    \ }\n        return (max - min) / 2.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xs6hff8.java:30)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long sum=0;\n  \
    \      for (int i = 0; i < l.size(); i++) {\n            sum+=l.get(i);\n    \
    \    }\n        float x=(float)sum/(float)l.size();\n        return x;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kvvxwt7.java:24)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float) l.size()%2 == 0? l.get(l.size()/2) : (float)(l.get(l.size()/2-1)+l.get(l.size()/2))/2f;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphwv5ncwo.java:19)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float fMedian;\n\
    \        float fMax;\n        int iMiddleIndex;\n        float fMiddleElement;\n\
    \        int iMinIndex;\n        float fMinElement;\n        int iMaxIndex;\n\
    \        float fMaxElement;\n\n        // Sort the list\n        l.stream().sorted().collect(Collectors.toList());\n\
    \n        // Find median\n        if (l.size() % 2 == 0) {\n            fMaxElement\
    \ = l.get(l.size()/2);\n            iMaxIndex = l.size()/2;\n        } else {\n\
    \            fMaxElement = l.get(l.size()/2 - 1);\n            iMaxIndex = l.size()/2\
    \ + 1;\n        }\n\n        fMinElement = l.get((l.size()/2) + 1);\n        iMinIndex\
    \ = (l.size()/2) + 1;\n\n        if ((l.size()%2 == 1) || (l.size() == 1)) {\n\
    \            fMedian = (float) l.get(0);\n        } else {\n            fMedian\
    \ = (float) (((l.get(iMaxIndex - 1) + (l.get(iMaxIndex - 1) + l.get(iMinIndex)))\
    \ / 2));\n        }\n\n        return fMedian;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1iltubz.java:49)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Float n = null;\n\
    \        if (l.size() % 2 != 0) {\n            n = l.stream().sorted(Comparator.comparing(x\
    \ -> ((Integer) x))).mapToInt(x -> (Integer) x).average().getAsFloat();\n    \
    \    } else {\n            n = l.stream().sorted(Comparator.comparing(x -> ((Integer)\
    \ x))).mapToInt(x -> (Integer) x).findFirst().getAsFloat();\n        }\n     \
    \   return n;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnx8k93bn.java:17: error: incompatible types: Long cannot be converted\
    \ to Integer\n            n = l.stream().sorted(Comparator.comparing(x -> ((Integer)\
    \ x))).mapToInt(x -> (Integer) x).average().getAsFloat();\n                  \
    \                                                     ^\n/tmp/tmpnx8k93bn.java:17:\
    \ error: incompatible types: Long cannot be converted to Integer\n           \
    \ n = l.stream().sorted(Comparator.comparing(x -> ((Integer) x))).mapToInt(x ->\
    \ (Integer) x).average().getAsFloat();\n                                     \
    \                                                               ^\n/tmp/tmpnx8k93bn.java:17:\
    \ error: cannot find symbol\n            n = l.stream().sorted(Comparator.comparing(x\
    \ -> ((Integer) x))).mapToInt(x -> (Integer) x).average().getAsFloat();\n    \
    \                                                                            \
    \                                ^\n  symbol:   method getAsFloat()\n  location:\
    \ class OptionalDouble\n/tmp/tmpnx8k93bn.java:19: error: incompatible types: Long\
    \ cannot be converted to Integer\n            n = l.stream().sorted(Comparator.comparing(x\
    \ -> ((Integer) x))).mapToInt(x -> (Integer) x).findFirst().getAsFloat();\n  \
    \                                                                     ^\n/tmp/tmpnx8k93bn.java:19:\
    \ error: incompatible types: Long cannot be converted to Integer\n           \
    \ n = l.stream().sorted(Comparator.comparing(x -> ((Integer) x))).mapToInt(x ->\
    \ (Integer) x).findFirst().getAsFloat();\n                                   \
    \                                                                 ^\n/tmp/tmpnx8k93bn.java:19:\
    \ error: cannot find symbol\n            n = l.stream().sorted(Comparator.comparing(x\
    \ -> ((Integer) x))).mapToInt(x -> (Integer) x).findFirst().getAsFloat();\n  \
    \                                                                            \
    \                                    ^\n  symbol:   method getAsFloat()\n  location:\
    \ class OptionalInt\n6 errors\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l == null ||\
    \ l.isEmpty()) return 0f;\n        l.sort(Comparator.reverseOrder());\n      \
    \  int size = l.size();\n        if (size % 2 == 0) {\n            return (size/2)+l.get(size/2);\n\
    \        }\n        return (size/2)+l.get(size/2-1);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe062yov0.java:24)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float sorted = (float)\
    \ l.stream().sorted().toArray(size -> new Long[size]).get(l.size() / 2);\n   \
    \     float median = (sorted)/2l;\n        return median;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlnjs8iw.java:15: error: cannot find symbol\n        float sorted\
    \ = (float) l.stream().sorted().toArray(size -> new Long[size]).get(l.size() /\
    \ 2);\n                                                                      \
    \            ^\n  symbol:   method get(int)\n  location: class Long[]\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() % 2\
    \ == 0) return (l.stream().sorted((o1, o2) -> Integer.compare(o2, o1)).skip(l.size()\
    \ / 2).findFirst().get()).floatValue();\n        else return (l.stream().sorted((o1,\
    \ o2) -> Integer.compare(o2, o1)).skip(l.size() / 2 + 1).findFirst().get()).floatValue();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmmpqvj71.java:15: error: incompatible types: Long cannot be converted\
    \ to int\n        if (l.size() % 2 == 0) return (l.stream().sorted((o1, o2) ->\
    \ Integer.compare(o2, o1)).skip(l.size() / 2).findFirst().get()).floatValue();\n\
    \                                                                            \
    \         ^\n/tmp/tmpmmpqvj71.java:16: error: incompatible types: Long cannot\
    \ be converted to int\n        else return (l.stream().sorted((o1, o2) -> Integer.compare(o2,\
    \ o1)).skip(l.size() / 2 + 1).findFirst().get()).floatValue();\n             \
    \                                                      ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        boolean even = l.size()\
    \ % 2 == 0;\n        float a = even == true ? l.get(l.size() / 2) - l.get(l.size()\
    \ / 2 - 1) : l.get(l.size() / 2) / 2;\n        if (even == true && l.size() >\
    \ 1)\n            return median(l);\n        if (even == false)\n            return\
    \ a;\n        return 0.5f * (a + median(Arrays.copyOfRange(l, l.size() / 2, l.size())));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp03y4ebtp.java:21: error: no suitable method found for copyOfRange(ArrayList<Long>,int,int)\n\
    \        return 0.5f * (a + median(Arrays.copyOfRange(l, l.size() / 2, l.size())));\n\
    \                                        ^\n    method Arrays.<T#1>copyOfRange(T#1[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<Long> cannot be converted to T#1[]))\n    method Arrays.<T#2,U>copyOfRange(U[],int,int,Class<?\
    \ extends T#2[]>) is not applicable\n      (cannot infer type-variable(s) T#2,U\n\
    \        (actual and formal argument lists differ in length))\n    method Arrays.copyOfRange(byte[],int,int)\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.copyOfRange(short[],int,int) is not applicable\n\
    \      (argument mismatch; ArrayList<Long> cannot be converted to short[])\n \
    \   method Arrays.copyOfRange(int[],int,int) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to int[])\n    method Arrays.copyOfRange(long[],int,int)\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to long[])\n    method Arrays.copyOfRange(char[],int,int) is not applicable\n\
    \      (argument mismatch; ArrayList<Long> cannot be converted to char[])\n  \
    \  method Arrays.copyOfRange(float[],int,int) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.copyOfRange(double[],int,int)\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.copyOfRange(boolean[],int,int) is not applicable\n\
    \      (argument mismatch; ArrayList<Long> cannot be converted to boolean[])\n\
    \  where T#1,T#2,U are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>copyOfRange(T#1[],int,int)\n    T#2 extends Object declared in method <T#2,U>copyOfRange(U[],int,int,Class<?\
    \ extends T#2[]>)\n    U extends Object declared in method <T#2,U>copyOfRange(U[],int,int,Class<?\
    \ extends T#2[]>)\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Objects.requireNonNull(l);\n\
    \        if (l.isEmpty()) {\n            return 0f;\n        }\n        final\
    \ int n = l.size();\n        if (n / 2 == 0) {\n            LongSummaryStatistics\
    \ s = l.stream().mapToLong(Long::longValue).summaryStatistics();\n           \
    \ float x = s.getAverage();\n            return x;\n        }\n        float x\
    \ = (l.get(n / 2 - 1) + l.get(n / 2)) / 2f;\n        return Math.round(x);\n \
    \   }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprni5juxi.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float x = s.getAverage();\n              \
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        Arrays.sort(l);\n        float result = l.get(n - 1);\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4q4yc355.java:16: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Set<Long> set =\
    \ new HashSet<Long>(l);\n        Collections.sort(set);\n        return set.size()\
    \ == 0 ? 0f : (float) set.size() / 2f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3jk1rake.java:16: error: no suitable method found for sort(Set<Long>)\n\
    \        Collections.sort(set);\n                   ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; Set<Long> cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return Collections.sorted(l)[(l.size()\
    \ + 1) / 2]f;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe9u4t44e.java:15: error: ';' expected\n        return Collections.sorted(l)[(l.size()\
    \ + 1) / 2]f;\n                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double sum = 0.0;\n\
    \        if (l.size() == 0) return 0f;\n        double median;\n        median\
    \ = l.get(l.size() / 2);\n        l.forEach(n -> sum += n);\n        if (sum <\
    \ 0) return 0f;\n        if (sum > l.size() * 0.5) median = (l.size() * 0.5d)\
    \ - sum;\n        return Math.round(median);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9rt64u5q.java:19: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        l.forEach(n -> sum +=\
    \ n);\n                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ {\n            throw new NoSuchElementException(\"The list is empty.\");\n \
    \       }\n\n        Collections.sort(l);\n\n        // return middle of the list\n\
    \        float sum = 0f;\n        int size = l.size();\n        if (size % 2 ==\
    \ 0) {\n            sum = (float)l.get(size / 2l);\n        } else {\n       \
    \     sum = (float)l.get(size / 2l + 1);\n        }\n\n        return (float)sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88xd72kj.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            sum = (float)l.get(size / 2l);\n             \
    \                       ^\n/tmp/tmp88xd72kj.java:27: error: incompatible types:\
    \ possible lossy conversion from long to int\n            sum = (float)l.get(size\
    \ / 2l + 1);\n                                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (i % 2 == 0) {\n                even.add(i);\n\
    \            }\n            else {\n                odd.add(i);\n            }\n\
    \        }\n        if (even.size() > odd.size()) {\n            return Collections.max(even);\n\
    \        }\n        else {\n            return Collections.max(odd);\n       \
    \ }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9q7fxmb5.java:33)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float result = Collections.max(l).floatValue()\
    \ - Collections.min(l).floatValue();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6pxdckh3.java:19)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.stream().sorted().collect(Collectors.toList()).get(l.size()/2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoizasjk1.java:16: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float) l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl5y_7l7i.java:20)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ {\n            return (float) 0f;\n        }\n        long sum = 0L;\n     \
    \   long count = 0;\n        for (Long value : l) {\n            sum += value;\n\
    \            ++count;\n        }\n        if (count == 0) {\n            return\
    \ (float) 0f;\n        }\n        float avg = sum / count;\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(l);\n        result.sort(Comparator.comparing(Long::longValue));\n\
    \        int middle = result.size() / 2;\n        if (count % 2 == 0) {\n    \
    \        return (result.get(middle) + result.get(middle - 1)) / 2f;\n        }\
    \ else {\n            return result.get(middle);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        final int length\
    \ = l.size();\n        if (length == 0) {\n            throw new RuntimeException(\"\
    Can't divide by zero\");\n        }\n        if (length == 1) {\n            return\
    \ l.get(0);\n        }\n        float median = (float) length / 2.0f;\n      \
    \  for (int i = 0; i < length; i++) {\n            final float v = l.get(i);\n\
    \            if (i == 0) {\n                median = v;\n            } else {\n\
    \                if (v > median) {\n                    median = v;\n        \
    \        }\n            }\n        }\n        return median;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1mcbk8b.java:36)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return 0f;\n\n        final float l0 = l.get(0);\n        final float\
    \ l1 = l.get(1);\n\n        boolean first = true;\n\n        float median;\n \
    \       if (l0 < l1) {\n            median = l0;\n            for (int i = 2;\
    \ i < l.size(); i++) {\n                final float current = l.get(i);\n    \
    \            final float next = l.get(i + 1);\n\n                if (current <\
    \ median) {\n                    median = current;\n                    first\
    \ = i == 2;\n                }\n                else if (current == median &&\
    \ next > median) {\n                    median = next;\n                    first\
    \ = i == 2;\n                }\n            }\n        }\n        else {\n   \
    \         median = l1;\n            for (int i = 2; i < l.size(); i++) {\n   \
    \             final float current = l.get(i);\n                final float next\
    \ = l.get(i + 1);\n\n                if (current > median) {\n               \
    \     median = current;\n                    first = i == 2;\n               \
    \ }\n                else if (current == median && next < median) {\n        \
    \            median = next;\n                    first = i == 2;\n           \
    \     }\n            }\n        }\n\n        if (l.size() % 2 == 1)\n        \
    \    return median;\n\n        final int mid = l.size() / 2;\n        final float\
    \ m1 = l.get(mid);\n        final float m2 = l.get(mid + 1);\n\n        if (m1\
    \ < m2)\n            return median;\n        else\n            return (mid + 0.5f);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 5 out of bounds for length 5\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.median(tmpg3lp1vdw.java:44)\n\tat Problem.main(tmpg3lp1vdw.java:70)\n"
  stdout: ''
  timestamp: 1660010325
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        double median =\
    \ 0;\n        long count = 0;\n        for (long x: l) {\n            count +=\
    \ x;\n        }\n        if (count == 0) return 0;\n        long center = count\
    \ / 2;\n        double diff = 0;\n        for (long x: l) {\n            diff\
    \ += Math.abs(x - center);\n        }\n        float difff = Float.valueOf(diff).floatValue();\n\
    \        if (difff > 1) return (float)center;\n        else return (float)center\
    \ + difff / 2;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfhpgf63y.java:26: error: no suitable method found for valueOf(double)\n\
    \        float difff = Float.valueOf(diff).floatValue();\n                   \
    \        ^\n    method Float.valueOf(String) is not applicable\n      (argument\
    \ mismatch; double cannot be converted to String)\n    method Float.valueOf(float)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ double to float)\n1 error\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float low = 0f,\
    \ high = 0f;\n        if (l.isEmpty()) return 0f;\n        float m = l.size();\n\
    \        if (l.size() % 2 == 1) return (l.get(l.size()/2) +\n                l.get((l.size()/2)\
    \ + 1)) / 2f;\n        low = (float)l.get(l.size()/2 - 1);\n        high = (float)l.get(l.size()/2);\n\
    \        float v = ((float)low+high)/2;\n        while (low < high) {\n      \
    \      while (low < high && high <= m-1) {\n                mid = low+((high-low)/2);\n\
    \                if (v < l.get(mid)) high = mid;\n                else low = mid\
    \ + 1;\n            }\n            if (low == high) low++;\n            mid =\
    \ low+((high-low)/2);\n            if (v < l.get(mid)) low = mid;\n          \
    \  else high = mid - 1;\n        }\n        return low;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfpkteb3i.java:25: error: cannot find symbol\n                mid\
    \ = low+((high-low)/2);\n                ^\n  symbol:   variable mid\n  location:\
    \ class Problem\n/tmp/tmpfpkteb3i.java:26: error: cannot find symbol\n       \
    \         if (v < l.get(mid)) high = mid;\n                              ^\n \
    \ symbol:   variable mid\n  location: class Problem\n/tmp/tmpfpkteb3i.java:26:\
    \ error: cannot find symbol\n                if (v < l.get(mid)) high = mid;\n\
    \                                           ^\n  symbol:   variable mid\n  location:\
    \ class Problem\n/tmp/tmpfpkteb3i.java:27: error: cannot find symbol\n       \
    \         else low = mid + 1;\n                           ^\n  symbol:   variable\
    \ mid\n  location: class Problem\n/tmp/tmpfpkteb3i.java:30: error: cannot find\
    \ symbol\n            mid = low+((high-low)/2);\n            ^\n  symbol:   variable\
    \ mid\n  location: class Problem\n/tmp/tmpfpkteb3i.java:31: error: cannot find\
    \ symbol\n            if (v < l.get(mid)) low = mid;\n                       \
    \   ^\n  symbol:   variable mid\n  location: class Problem\n/tmp/tmpfpkteb3i.java:31:\
    \ error: cannot find symbol\n            if (v < l.get(mid)) low = mid;\n    \
    \                                  ^\n  symbol:   variable mid\n  location: class\
    \ Problem\n/tmp/tmpfpkteb3i.java:32: error: cannot find symbol\n            else\
    \ high = mid - 1;\n                        ^\n  symbol:   variable mid\n  location:\
    \ class Problem\n8 errors\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            throw new NoSuchElementException(\"Collection is empty.\");\n   \
    \     Collections.sort(l);\n        float v = l.get(l.size()/2);\n        if (l.size()\
    \ == 1) {\n            return (float)v;\n        } else {\n            return\
    \ (l.size() > 1) ? (float)(v+l.get(l.size()/2)) : ((float)l.get(l.size()/2) -\
    \ v);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ikh9pl.java:26)\n"
  stdout: ''
  timestamp: 1660010324

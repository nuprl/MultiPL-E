language: java
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0L;\n        for (String word : S.split(\"[?!.]\"))\n            if (word.equals(\"\
    I\"))\n                boredoms++;\n        return boredoms;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl33itolj.java:27)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        int i = 0;\n        while (i < S.length()) {\n            char ch = S.charAt(i);\n\
    \            if (ch == '.') {\n                int j = i;\n                boolean\
    \ foundStart = false;\n                while (j < S.length() && !foundStart) {\n\
    \                    char next = S.charAt(j);\n                    if (next ==\
    \ '.') {\n                        foundStart = true;\n                    } else\
    \ if (next == '?' || next == '!') {\n                        foundStart = true;\n\
    \                    } else {\n                        j++;\n                \
    \    }\n                }\n                if (foundStart) {\n               \
    \     count++;\n                    i = j;\n                }\n            } else\
    \ if (ch == '?' || ch == '!') {\n                int j = i;\n                boolean\
    \ foundEnd = false;\n                while (j < S.length() && !foundEnd) {\n \
    \                   char next = S.charAt(j);\n                    if (next ==\
    \ '.' || next == '?' || next == '!') {\n                        foundEnd = true;\n\
    \                    } else {\n                        j++;\n                \
    \    }\n                }\n                if (foundEnd) {\n                 \
    \   count++;\n                    i = j;\n                }\n            }\n \
    \           i++;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nxf7viu.java:61)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0l;\n        if (S != null && S.length() > 0) {\n            S = S.toLowerCase();\n\
    \            for (String word : S.split(\"[\\\\.\\\\?!]\")) {\n              \
    \  if (word.startsWith(\"i\")) {\n                    boredomCount++;\n      \
    \          }\n            }\n        }\n        return boredomCount;\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vsbuwfu.java:31)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words=S.split(\"\
    \\\\.|\\\\?|!\");\n        long bored=0;\n        for (String w : words) {\n \
    \           if (w.equalsIgnoreCase(\"I\")) {\n                bored++;\n     \
    \       }\n        }\n        return bored;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgbvgmu5.java:30)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        \n        Set<String> words = Arrays.stream(S.split(\" \")).map(String::trim).collect(Collectors.toSet());\n\
    \        \n        boolean wordStartsWithI = words.stream().anyMatch(s -> s.startsWith(\"\
    I\"));\n        if (wordStartsWithI) {\n            boredoms = 1;\n        }\n\
    \        \n        return boredoms;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnd1zpkq2.java:31)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> boredoms\
    \ = new TreeSet<String>();\n        boredoms.add(\"I\");\n\n        long result\
    \ = 0;\n        for (String sentence : S.split(\"\\\\.|\\\\?|\\\\!\")) {\n   \
    \         if (boredoms.contains(sentence.substring(0,1))) {\n                result++;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wcts73h.java:31)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] sentence\
    \ = S.split(\"[.?!]\");\n        int boredom = 0;\n        for (String word :\
    \ sentence) {\n            if (word.equals(\"I\")) {\n                boredom++;\n\
    \            }\n        }\n        return (long) boredom;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1y7m4nzd.java:30)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        char[] sarr = S.toCharArray();\n        if (sarr.length == 0)\
    \ {\n            return boredoms;\n        }\n\n        for (char letter : sarr)\
    \ {\n            if (letter == '.') {\n                if (sarr.length == 1) {\n\
    \                    return boredoms;\n                }\n                boredoms\
    \ += 1;\n            } else if (letter == '?' || letter == '!') {\n          \
    \      if (sarr.length == 1) {\n                    return boredoms;\n       \
    \         }\n                boredoms += 1;\n            } else if (letter ==\
    \ 'I') {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rizaoki.java:43)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[.?!]\");\n        long boredWords = Arrays.stream(words).filter(w\
    \ -> w.equals(\"I\")).count();\n        return boredWords;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5bchs6nt.java:25)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredom =\
    \ 0;\n        String sentence = \"\";\n        String[] lines = S.split(\"\\\\\
    .|\\\\?|\\\\!\");\n        for(int i=0; i<lines.length; i++) {\n            sentence\
    \ += lines[i] + \".\";\n            if(lines[i].startsWith(\"I\")) {\n       \
    \         boredom++;\n            }\n        }\n        return boredom;\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3pid10z.java:31)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        HashSet<String>\
    \ boredoms = new HashSet<>();\n        int counter = 0;\n        for(int i=0;i<S.length();i++){\n\
    \            char c = S.charAt(i);\n            if(c == '.' || c == '?' || c ==\
    \ '!'){\n                boredoms.add(c+S.substring(i));\n            }\n    \
    \    }\n        return boredoms.stream().filter(s -> s.equals(\"I\")).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fcol0ew.java:31)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i) !=\
    \ 'I') break;\n            if (S.charAt(i) == 'I' && S.charAt(i + 1) != 'I' &&\
    \ S.charAt(i + 2) != 'I') {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2rtw73h4.java:29)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return getBoredoms(S).length();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpli6xnbzx.java:18: error: cannot find symbol\n        return getBoredoms(S).length();\n\
    \               ^\n  symbol:   method getBoredoms(String)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        HashSet<String>\
    \ set = new HashSet<>();\n        set.add(S);\n        int boredom = 0;\n    \
    \    for (int i = 0; i < S.length(); i++) {\n            String word = \"\" +\
    \ S.charAt(i);\n            if (set.contains(word)) {\n                boredom++;\n\
    \            }\n        }\n        return boredom;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvb5a5jyl.java:32)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.split(\"\
    \\\\.|\\\\?|\\\\!\").filter(x -> x.equals(\"I\")).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5_be43ib.java:18: error: cannot find symbol\n        return S.split(\"\
    \\\\.|\\\\?|\\\\!\").filter(x -> x.equals(\"I\")).count();\n                 \
    \                    ^\n  symbol:   method filter((x)->x.equals(\"I\"))\n  location:\
    \ class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long bored = 0;\n\
    \        String[] words =\n            S.toLowerCase().replaceAll(\"[\\\\?\\\\\
    .\\\\!]\", \" \").trim().split(\" \");\n        for(String word : words) {\n \
    \           if (word.equals(\"i\")) {\n                bored++;\n            }\n\
    \        }\n        return bored;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7scjcfx.java:34)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String words[]\
    \ = S.split(\"[.?!]\");\n        ArrayList boredList = new ArrayList();\n    \
    \    for (String str : words) {\n            if (str.startsWith(\"I\")){\n   \
    \             boredList.add(str);\n            }\n        }\n        return boredList.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplw6_8u_g.java:29)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int counter =\
    \ 0;\n        \n        \n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ecc31nd.java:21: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code here\n\
    \        long boredomCount = 0l;\n        String[] sentences = S.split(\"[?.!]\"\
    );\n        for (String sentence : sentences) {\n            if (sentence.startsWith(\"\
    I\"))\n                boredomCount++;\n        }\n        return boredomCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpta24zhr1.java:29)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredom =\
    \ 0;\n        Set<String> set = new HashSet<String>();\n        set.add(\"I\"\
    );\n        for (String s : S.split(\"[.?!]\")){\n            boredom += set.stream().filter(s\
    \ -> s.equalsIgnoreCase(s)).count();\n        }\n        return boredom;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqkx186lf.java:22: error: variable s is already defined in method\
    \ isBored(String)\n            boredom += set.stream().filter(s -> s.equalsIgnoreCase(s)).count();\n\
    \                                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        String sentence = S;\n        String [] sentenceArray = sentence.split(\"\
    \ \");\n        for(String s: sentenceArray) {\n            char first = s.charAt(0);\n\
    \            if(Character.toString(first).equals(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe233m4pv.java:31)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> SList\
    \ = Arrays.asList(S.split(\"[.?!]\"));\n        Collections.shuffle(SList);\n\
    \        long count = 0;\n        for(String s : SList) {\n            if(s.startsWith(\"\
    I\"))\n                count++;\n        }\n        return count;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkkjrdp4v.java:29)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return ((S.contains(\"\
    .\")) ? 1 : 0) + ((S.contains(\"?\")) ? 1 : 0) + ((S.contains(\"!\")) ? 1 : 0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqia4s6.java:22)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // The input S\
    \ is in string format\n        String boredomSentence = \"I\";\n        long counter\
    \ = 0;\n        if (S == null || S.isEmpty()) {\n            return 0;\n     \
    \   }\n        // Split each word in the given input string \n        String[]\
    \ words = S.split(\"\\\\s+\");\n        for (String word : words) {\n        \
    \    if (word.equalsIgnoreCase(boredomSentence)) {\n                counter++;\n\
    \            }\n        }\n        return counter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpxl6691.java:39)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> words\
    \ = Arrays.asList(S.split(\" \"));\n        Arrays.sort(words);\n        long\
    \ sum = 0;\n        for (String w: words) {\n            if (w.equals(\"I\") ||\
    \ w.equals(\"we\") || w.equals(\"He\") || w.equals(\"she\") || w.equals(\"they\"\
    ) || w.equals(\"The\") || w.equals(\"a\") || w.equals(\"an\")) {\n           \
    \     sum++;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8tifawqr.java:19: error: no suitable method found for sort(List<String>)\n\
    \        Arrays.sort(words);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; List<String> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ List<String> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; List<String> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; List<String> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; List<String> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; List<String> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; List<String> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; List<String> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i)\
    \ == 'I') {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwshiam2o.java:28)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long bored = 0;\n\
    \        for (String word: S.split(\"[.?!]\")) {\n            if (word.startsWith(\"\
    I\")) {\n                bored += 1;\n            }\n        }\n        return\
    \ bored;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplnmf_yj7.java:28)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> words\
    \ = Arrays.asList(S.split(\"[,.?!]\"));\n        Stream<String> boredom = words.stream()\n\
    \            .filter(w -> w.equals(\"I\"))\n            .collect(Collectors.toList());\n\
    \        return boredom.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpymuykksw.java:21: error: incompatible types: inference variable\
    \ R has incompatible bounds\n            .collect(Collectors.toList());\n    \
    \                ^\n    equality constraints: List<T#2>\n    lower bounds: Stream<String>,Object\n\
    \  where R,A,T#1,T#2 are type-variables:\n    R extends Object declared in method\
    \ <R,A>collect(Collector<? super T#1,A,R>)\n    A extends Object declared in method\
    \ <R,A>collect(Collector<? super T#1,A,R>)\n    T#1 extends Object declared in\
    \ interface Stream\n    T#2 extends Object declared in method <T#2>toList()\n\
    /tmp/tmpymuykksw.java:22: error: cannot find symbol\n        return boredom.size();\n\
    \                      ^\n  symbol:   method size()\n  location: variable boredom\
    \ of type Stream<String>\n2 errors\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long ans = 0;\n\
    \        char[] chars = s.toCharArray();\n        for (char c : chars) {\n   \
    \         String s = String.valueOf(c);\n            if(s.equals(\"I\"))\n   \
    \             ans += (long) 1;\n        }\n        return ans;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb2uplavw.java:19: error: cannot find symbol\n        char[] chars\
    \ = s.toCharArray();\n                       ^\n  symbol:   variable s\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        for (String s : S.split(\"(?=[\\\\.,!?])\")) {\n            if (s.startsWith(\"\
    I\"))\n                count++;\n        }\n        return (long) count;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm83p13u_.java:27)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count=0;\n\
    \        // Your code goes here\n        String str=S.toLowerCase();\n       \
    \ for(int i=0;i<str.length();i++) {\n            char c=str.charAt(i);\n     \
    \       if(Character.isLetter(c)&&c=='i')\n                count++;\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt62jon7i.java:30)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long[] counts\
    \ = new long[100];\n        List<String> words = Arrays.asList(S.split(\"[\\.?!]\"\
    ));\n        for(String word : words){\n            counts[word.charAt(0) - 'A']++;\n\
    \        }\n        return Arrays.stream(counts).filter(n -> n < 10).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpteji_al8.java:19: error: illegal escape character\n        List<String>\
    \ words = Arrays.asList(S.split(\"[\\.?!]\"));\n                             \
    \                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] S = S.split(\"\
    [.?!]\");\n        long result = 0;\n        for (String str : S)\n          \
    \  if (str.startsWith(\"I\"))\n                result += 1;\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dcbim6z.java:18: error: variable S is already defined in method\
    \ isBored(String)\n        String[] S = S.split(\"[.?!]\");\n                \
    \ ^\n/tmp/tmp8dcbim6z.java:18: error: cannot find symbol\n        String[] S =\
    \ S.split(\"[.?!]\");\n                      ^\n  symbol:   method split(String)\n\
    \  location: variable S of type String[]\n2 errors\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        StringTokenizer\
    \ tokens = new StringTokenizer(S);\n        ArrayList<String> aList = new ArrayList<String>(50);\n\
    \        boolean flag = false;\n        for(int i=0;i<50;i++){\n            aList.add(\"\
    I\");\n        }\n        while(tokens.hasMoreTokens()){\n            String word\
    \ = tokens.nextToken();\n            if(word.equals(\".\")||word.equals(\"?\"\
    )||word.equals(\"!\")){\n                flag = true;\n                break;\n\
    \            }\n            String boredom = \"I\";\n            int count = 0;\n\
    \            for(int i=0;i<aList.size();i++){\n                String temp = aList.get(i);\n\
    \                if(word.equals(temp)){\n                    count++;\n      \
    \              break;\n                }\n            }\n            if(flag){\n\
    \                flag = false;\n            }\n            else{\n           \
    \     boredom += count;\n            }\n            aList.add(boredom);\n    \
    \    }\n        return (long) aList.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0p55xop.java:50)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 0l;\n        for (String word : S.split(\" \")) {\n            if (word.equals(\"\
    I\")) {\n                result += 1;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppenegv6o.java:32)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount=0;\n\
    \        String[] words=S.split(\"[.?!]\");\n        for(String word:words){\n\
    \            if(word.equals(\"I\"))\n            boredomCount++;\n        }\n\
    \        return boredomCount;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmcynqdf.java:29)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        if (S.startsWith(\"\
    I\")) {\n            long a = S.length() - 1;\n            StringBuilder b = new\
    \ StringBuilder();\n            String last = \"\";\n            while (a > 0)\
    \ {\n                if (S.charAt(a) == '?') {\n                    if (last ==\
    \ '.' || last == '!' || last == '?') {\n                        b.deleteCharAt(a);\n\
    \                        a--;\n                        last = \"\";\n        \
    \            } else {\n                        b.deleteCharAt(a);\n          \
    \              a--;\n                    }\n                } else if (S.charAt(a)\
    \ == '.' || S.charAt(a) == '!') {\n                    last = S.charAt(a);\n \
    \                   b.deleteCharAt(a);\n                    a--;\n           \
    \     } else {\n                    a--;\n                }\n            }\n \
    \           long count = b.length();\n            b.deleteCharAt(0);\n       \
    \     long count = 0;\n            String s = b.toString();\n            String[]\
    \ tokens = s.split(\"\\\\s+\");\n            long l = 0;\n            for (String\
    \ token: tokens) {\n                if (token.equals(\"I\")) {\n             \
    \       ++l;\n                }\n            }\n            return l;\n      \
    \  } else {\n            return 0;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2esspbi3.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n                if (S.charAt(a) == '?') {\n              \
    \               ^\n/tmp/tmp2esspbi3.java:24: error: bad operand types for binary\
    \ operator '=='\n                    if (last == '.' || last == '!' || last ==\
    \ '?') {\n                             ^\n  first type:  String\n  second type:\
    \ char\n/tmp/tmp2esspbi3.java:24: error: bad operand types for binary operator\
    \ '=='\n                    if (last == '.' || last == '!' || last == '?') {\n\
    \                                            ^\n  first type:  String\n  second\
    \ type: char\n/tmp/tmp2esspbi3.java:24: error: bad operand types for binary operator\
    \ '=='\n                    if (last == '.' || last == '!' || last == '?') {\n\
    \                                                           ^\n  first type: \
    \ String\n  second type: char\n/tmp/tmp2esspbi3.java:25: error: incompatible types:\
    \ possible lossy conversion from long to int\n                        b.deleteCharAt(a);\n\
    \                                       ^\n/tmp/tmp2esspbi3.java:29: error: incompatible\
    \ types: possible lossy conversion from long to int\n                        b.deleteCharAt(a);\n\
    \                                       ^\n/tmp/tmp2esspbi3.java:32: error: incompatible\
    \ types: possible lossy conversion from long to int\n                } else if\
    \ (S.charAt(a) == '.' || S.charAt(a) == '!') {\n                             \
    \       ^\n/tmp/tmp2esspbi3.java:32: error: incompatible types: possible lossy\
    \ conversion from long to int\n                } else if (S.charAt(a) == '.' ||\
    \ S.charAt(a) == '!') {\n                                                    \
    \      ^\n/tmp/tmp2esspbi3.java:33: error: incompatible types: possible lossy\
    \ conversion from long to int\n                    last = S.charAt(a);\n     \
    \                               ^\n/tmp/tmp2esspbi3.java:34: error: incompatible\
    \ types: possible lossy conversion from long to int\n                    b.deleteCharAt(a);\n\
    \                                   ^\n/tmp/tmp2esspbi3.java:42: error: variable "
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0l;\n\
    \        for(String w : S.split(\"[?!.]\")) {\n            if(w.startsWith(\"\
    I\"))\n                count++;\n        }\n        return count;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykg5ld3y.java:27)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] tokens\
    \ = S.split(\" \");\n        long n = (long) 0;\n        for (String word : tokens)\
    \ {\n            String upperCaseWord = word.toUpperCase();\n            if (word.startsWith(\"\
    I\") && upperCaseWord.startsWith(\"I\")) {\n                n++;\n           \
    \ }\n        }\n        return n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdsmgwsq.java:30)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int boredomCount\
    \ = 0;\n        int index = -1;\n        long boredomNum = 0;\n        boolean\
    \ isSent = false;\n        boolean isComma = false;\n        for(int i = 0;i <\
    \ S.length();i++) {\n            if(S.charAt(i) == '.' || S.charAt(i) == '?' ||\
    \ S.charAt(i) == '!') {\n                if(isComma) {\n                    isComma\
    \ = false;\n                    continue;\n                }\n               \
    \ if(S.charAt(i) == '.') {\n                    isSent = false;\n            \
    \    }\n                if(!isSent) {\n                    isSent = true;\n  \
    \                  index = i;\n                    continue;\n               \
    \ }\n                if(S.charAt(i) == '?') {\n                    isSent = false;\n\
    \                }\n                if(!isSent) {\n                    isSent\
    \ = true;\n                    index = i;\n                    continue;\n   \
    \             }\n                if(S.charAt(i) == '!') {\n                  \
    \  isSent = false;\n                }\n                if(!isSent) {\n       \
    \             isSent = true;\n                    index = i;\n               \
    \     continue;\n                }\n                isComma = true;\n        \
    \        continue;\n            }\n            if(S.charAt(i) == 'I') {\n    \
    \            boredomCount++;\n                boredomNum = boredomCount * 2;\n\
    \                if(S.charAt(index) == '.') {\n                    boredomNum--;\n\
    \                }\n                if(S.charAt(index) == '?') {\n           \
    \         boredomNum--;\n                }\n                if(S.charAt(index)\
    \ == '!') {\n                    boredomNum--;\n                }\n          \
    \      if(S.charAt(index) != 'I') {\n                    boredomNum--;\n     \
    \           }\n                continue;\n            }\n            if(S.charAt(i)\
    \ == ',') {\n                boredomCount++;\n                boredomNum = boredomCount\
    \ * 2;\n                if(S.charAt(index) == '.') {\n                    boredomNum--;\n\
    \                }\n                if(S.charAt(index) == '?') {\n           \
    \         boredomNum--;\n                }\n                if(S.charAt(index)\
    \ == '!') {\n                    boredomNum--;\n                }\n          \
    \      if(S.charAt(index) != ',') {\n                    boredomNum--;\n     \
    \           }\n                continue;\n            }\n        }\n        return\
    \ boredomNum;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: -1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.isBored(tmp2xshrnkn.java:59)\n\
    \tat Problem.main(tmp2xshrnkn.java:95)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredom =\
    \ 0L;\n        boolean begin = false;\n        for (String word : S.split(\"[.?!]\"\
    ))\n            if (begin)\n                boredom += begin;\n            if\
    \ (word.equals(\"I\"))\n                begin = true;\n            else\n    \
    \            begin = false;\n        return boredom;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_31kmif9.java:22: error: bad operand types for binary operator\
    \ '+'\n                boredom += begin;\n                        ^\n  first type:\
    \  long\n  second type: boolean\n/tmp/tmp_31kmif9.java:23: error: cannot find\
    \ symbol\n            if (word.equals(\"I\"))\n                ^\n  symbol:  \
    \ variable word\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i) ==\
    \ 'I') {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptv7_quh8.java:28)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String firstWord\
    \ = S.substring(0,1);\n        if(S.length()==0) return 0l;\n        boolean firstI\
    \ = S.startsWith(\"I\");\n        boolean firstT = S.startsWith(\"T\");\n    \
    \    boolean firstE = S.startsWith(\"E\");\n        boolean firstH = S.startsWith(\"\
    H\");\n        boolean firstD = S.startsWith(\"D\");\n        boolean firstB =\
    \ S.startsWith(\"B\");\n        boolean firstY = S.startsWith(\"Y\");\n      \
    \  boolean firstP = S.startsWith(\"P\");\n        boolean firstS = S.startsWith(\"\
    S\");\n        boolean firstR = S.startsWith(\"R\");\n        boolean firstO =\
    \ S.startsWith(\"O\");\n        boolean firstQ = S.startsWith(\"Q\");\n      \
    \  boolean firstM = S.startsWith(\"M\");\n        boolean firstG = S.startsWith(\"\
    G\");\n        boolean firstIA = S.startsWith(\"IA\");\n        boolean firstIW\
    \ = S.startsWith(\"IW\");\n        boolean firstIC = S.startsWith(\"IC\");\n \
    \       boolean firstII = S.startsWith(\"II\");\n        boolean firstIH = S.startsWith(\"\
    IH\");\n        boolean firstIS = S.startsWith(\"IS\");\n        boolean firstIIA\
    \ = S.startsWith(\"IIA\");\n        boolean firstIIW = S.startsWith(\"IIW\");\n\
    \        boolean firstIIH = S.startsWith(\"IIH\");\n        boolean firstIII =\
    \ S.startsWith(\"III\");\n        boolean firstIID = S.startsWith(\"IID\");\n\
    \        boolean firstIIE = S.startsWith(\"IIE\");\n        boolean firstIIE =\
    \ S.startsWith(\"IIE\");\n        boolean firstIV = S.startsWith(\"IV\");\n  \
    \      boolean firstV = S.startsWith(\"V\");\n        boolean firstVI = S.startsWith(\"\
    VI\");\n        boolean firstVII = S.startsWith(\"VII\");\n        boolean firstIY\
    \ = S.startsWith(\"IY\");\n        boolean firstIF = S.startsWith(\"IF\");\n \
    \       boolean firstIEH = S.startsWith(\"IEH\");\n        boolean firstIJ = S.startsWith(\"\
    IJ\");\n        boolean firstIVY = S.startsWith(\"IVY\");\n        boolean firstIAY\
    \ = S.startsWith(\"IAY\");\n        boolean firstIAJ = S.startsWith(\"IAJ\");\n\
    \        boolean firstICH = S.startsWith(\"ICH\");\n        boolean firstICJ =\
    \ S.startsWith(\"ICJ\n    }\n    public static void main(String[] args) {\n  \
    \  assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd2a0f9zm.java:59: error: unclosed string literal\n        boolean\
    \ firstICJ = S.startsWith(\"ICJ\n                                        ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.length()\
    \ - (S.toLowerCase().startsWith(\"i'm\") ? 0 : 1);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ecr07eb.java:21)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Split string\
    \ on period, question mark, or exclamation mark\n        String[] sentences =\
    \ s.split(\"[.?!]\");\n        ArrayList bored = new ArrayList();\n        ArrayList\
    \ boredCount = new ArrayList();\n        // If first word is \"I\", then return\
    \ count\n        bored.add(S);\n        // If first word is anything but \"I\"\
    , then add to boredCount and return count\n        boredCount.add(S);\n      \
    \  Set<String> words = new HashSet<>();\n        for (String s : sentences) {\n\
    \            words.add(s);\n        }\n        for (String w : words) {\n    \
    \        if (w.startsWith(\"I\")) {\n                return boredCount.size();\n\
    \            }\n            else {\n                bored.add(w);\n          \
    \  }\n        }\n        // All words start with \"I\"\n        return boredCount.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5g2x3j0j.java:19: error: cannot find symbol\n        String[] sentences\
    \ = s.split(\"[.?!]\");\n                             ^\n  symbol:   variable\
    \ s\n  location: class Problem\nNote: /tmp/tmp5g2x3j0j.java uses unchecked or\
    \ unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        if (S.contains(\".\")) {\n            boredoms += S.split(\"\\\
    \\.\").length;\n        }\n        if (S.contains(\"?\")) {\n            boredoms\
    \ += S.split(\"?\").length;\n        }\n        if (S.contains(\"!\")) {\n   \
    \         boredoms += S.split(\"!\").length;\n        }\n        return boredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.regex.PatternSyntaxException: Dangling\
    \ meta character '?' near index 0\n?\n^\n\tat java.base/java.util.regex.Pattern.error(Pattern.java:2028)\n\
    \tat java.base/java.util.regex.Pattern.sequence(Pattern.java:2203)\n\tat java.base/java.util.regex.Pattern.expr(Pattern.java:2069)\n\
    \tat java.base/java.util.regex.Pattern.compile(Pattern.java:1783)\n\tat java.base/java.util.regex.Pattern.<init>(Pattern.java:1430)\n\
    \tat java.base/java.util.regex.Pattern.compile(Pattern.java:1069)\n\tat java.base/java.lang.String.split(String.java:3153)\n\
    \tat java.base/java.lang.String.split(String.java:3199)\n\tat Problem.isBored(tmpwn1bujo5.java:23)\n\
    \tat Problem.main(tmpwn1bujo5.java:32)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code here\n\
    \        // This will be a very large string\n        // It will be broken into\
    \ two parts by the '.', '?' or '!' delimeter\n        // The first part is the\
    \ boredom itself\n        // The second part is the sentence which starts with\
    \ \"I\"\n        \n        // Split string by delimiter\n        // Then filter\
    \ out the sentences\n        List<String> sentences = S.split(\"[.?!]\");\n  \
    \      \n        // Find boredom by sentence\n        long boredom = 0;\n    \
    \    \n        for (String sentence : sentences) {\n            if (sentence.startsWith(\"\
    I\")) {\n                boredom++;\n            }\n        }\n        return\
    \ boredom;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp50hrg0bu.java:26: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> sentences = S.split(\"[.?!]\"\
    );\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> boredoms\
    \ = new HashSet<String>(Arrays.asList(\"I\",\n            \"is\", \"am\", \"are\"\
    , \"was\", \"were\",\n            \"am\", \"i\", \"are\",\n            \"do\"\
    , \"did\",\n            \"not\", \"does\", \"doesnt\", \"doesnt\", \"didnt\",\
    \ \"doe\",\n            \"have\", \"has\", \"had\", \"have\", \"have\", \"have\"\
    ,\n            \"has\", \"not\", \"is\", \"it\", \"its\", \"its\",\n         \
    \   \"does\", \"did\",\n            \"are\", \"is\", \"have\",\n            \"\
    was\", \"were\", \"was\", \"were\",\n            \"am\", \"are\", \"was\", \"\
    were\",\n            \"am\", \"i\", \"are\",\n            \"do\", \"did\",\n \
    \           \"not\", \"does\", \"doesnt\", \"doesnt\", \"didnt\", \"doe\",\n \
    \           \"have\", \"has\", \"had\", \"have\", \"have\", \"have\",\n      \
    \      \"has\", \"not\", \"is\", \"it\", \"its\", \"its\",\n            \"does\"\
    , \"did\",\n            \"are\", \"is\", \"have\",\n            \"was\", \"were\"\
    , \"was\", \"were\",\n            \"am\", \"are\", \"was\", \"were\",\n      \
    \      \"am\", \"i\", \"are\",\n            \"do\", \"did\",\n            \"not\"\
    , \"does\", \"doesnt\", \"doesnt\", \"didnt\", \"doe\",\n            \"have\"\
    , \"has\", \"had\", \"have\", \"have\", \"have\",\n            \"has\", \"not\"\
    , \"is\", \"it\", \"its\", \"its\",\n            \"does\", \"did\",\n        \
    \    \"are\", \"is\", \"have\",\n            \"was\", \"were\", \"was\", \"were\"\
    ,\n            \"am\", \"are\", \"was\", \"were\",\n            \"am\", \"i\"\
    , \"are\",\n            \"do\", \"did\",\n            \"not\", \"does\", \"doesnt\"\
    , \"doesnt\", \"didnt\", \"doe\",\n            \"have\", \"has\", \"had\", \"\
    have\", \"have\", \"have\",\n            \"has\", \"not\", \"is\", \"it\", \"\
    its\", \"its\",\n            \"does\", \"did\"));\n        long boredom = boredoms.stream()\n\
    \            .filter(s -> s.startsWith(\"I\"))\n            .count();\n      \
    \  return boredom;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1pijvgp.java:59)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        List<String> sentences = Arrays.asList(S.split(\"[. ?!]\"));\n      \
    \  for (String sentence : sentences) {\n            if (sentence.startsWith(\"\
    I\"))\n                count++;\n        }\n        return count;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8l1zjzjv.java:28)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Long result =\
    \ 0l;\n        for (String sentence: S.split(\"[.?!]\"))\n            if (sentence.startsWith(\"\
    I\"))\n                result++;\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaytfkp43.java:26)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long[] freq =\
    \ new long[3];\n        int count = 0;\n        S.toLowerCase();\n        for(String\
    \ w : S.split(\" \")) {\n            w.toLowerCase();\n            if(\"i\".equals(w))\
    \ {\n                freq[0] += 1;\n            } else if(\"hello\".equals(w))\
    \ {\n                freq[1] += 1;\n            } else if(\"this\".equals(w))\
    \ {\n                freq[2] += 1;\n            }\n        }\n        return Arrays.stream(freq).reduce((a,\
    \ b) -> a + b).longValue();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq5kj1i2t.java:31: error: cannot find symbol\n        return Arrays.stream(freq).reduce((a,\
    \ b) -> a + b).longValue();\n                                                \
    \          ^\n  symbol:   method longValue()\n  location: class OptionalLong\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms=0;\n\
    \        for(int i=0; i<S.length(); i++)\n            if(S.charAt(i)=='I')\n \
    \               boredoms++;\n        return boredoms;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4dj_y7am.java:26)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        int flag=0;\n        String boredomArray[]=new String[5];\n  \
    \      String boredomSentences=\".?!\";\n        int numOfWords=S.length();\n\
    \        for(int i=0;i<numOfWords;i++){\n            if((S.charAt(i)=='.')||(S.charAt(i)=='.')||(S.charAt(i)=='.')||(S.charAt(i)=='.')||(S.charAt(i)=='.')||(S.charAt(i)=='?')||(S.charAt(i)=='?')||(S.charAt(i)=='?')||(S.charAt(i)=='!')||(S.charAt(i)=='!')||(S.charAt(i)=='!')||(S.charAt(i)=='!'))\n\
    \            {\n                flag++;\n                boredomArray[flag]=S.charAt(i);\n\
    \            }\n        }\n        for(int i=0;i<numOfWords;i++){\n          \
    \  if(boredomArray[i].equals(\"I\")&&((S.charAt(i)=='!')||(S.charAt(i)=='?'))){\n\
    \                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjjhwai1.java:27: error: incompatible types: char cannot be converted\
    \ to String\n                boredomArray[flag]=S.charAt(i);\n               \
    \                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int boredoms =\
    \ 0;\n        S += \".\";\n        String[] words = S.split(\"[.?!]\");\n    \
    \    for (String w : words) {\n            if (w.startsWith(\"I\")) {\n      \
    \          boredoms += 1;\n            }\n        }\n        return (long) boredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lsicmod.java:30)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        ArrayList boredArray\
    \ = new ArrayList();\n        ArrayList boredArray2 = new ArrayList();\n     \
    \   ArrayList boredArray3 = new ArrayList();\n        String boredString = null;\n\
    \        String boredString2 = null;\n        String boredString3 = null;\n  \
    \      boolean bored = false;\n        int count = 0;\n        char boredChar;\n\
    \        char boredChar2;\n        char boredChar3;\n        try {\n         \
    \   StringTokenizer St = new StringTokenizer(S, \".?!\");\n            while (St.hasMoreTokens())\
    \ {\n                boredString = \"\";\n                boredString2 = \"\"\
    ;\n                boredString3 = \"\";\n                bored = false;\n    \
    \            count = 0;\n                boredChar = St.nextToken().charAt(0);\n\
    \                boredChar2 = St.nextToken().charAt(0);\n                boredChar3\
    \ = St.nextToken().charAt(0);\n                for (int i = 0; i < St.countTokens();\
    \ i++) {\n                    if (St.nextToken().equals(\".\")) {\n          \
    \              boredString += St.nextToken();\n                    }\n       \
    \             if (St.nextToken().equals(\"?\")) {\n                        boredString2\
    \ += St.nextToken();\n                    }\n                    if (St.nextToken().equals(\"\
    !\")) {\n                        boredString3 += St.nextToken();\n           \
    \         }\n                }\n                if (boredChar == 'I') {\n    \
    \                if (boredString.equals(\".\")) {\n                        bored\
    \ = true;\n                        count++;\n                    }\n         \
    \           if (boredString2.equals(\".\")) {\n                        bored =\
    \ true;\n                        count++;\n                    }\n           \
    \         if (boredString3.equals(\".\")) {\n                        bored = true;\n\
    \                        count++;\n                    }\n                }\n\
    \                if (boredChar2 == 'I') {\n                    if (boredString.equals(\"\
    .\")) {\n                        bored = true;\n                        count++;\n\
    \                    }\n                    if (boredString2.equals(\".\")) {\n\
    \                        bored = true;\n                        count++;\n   \
    \                 }\n                    if (boredString3.equals(\".\")) {\n \
    \                       bored = true;\n                        count++;\n    \
    \                }\n                }\n                if (boredChar3 == 'I')\
    \ {\n                    if (boredString.equals(\".\")) {\n                  \
    \      bored = true;\n                        count++;\n                    }\n\
    \                    if (boredString2.equals(\".\")) {\n                     \
    \   bored = true;\n                        count++;\n                    }\n \
    \                   if (boredString3.equals(\".\")) {\n                      \
    \  bored = true;\n                        count++;\n                    }\n  \
    \              }\n                boredArray.add(bored);\n                boredArray2.add(bored);\n\
    \                boredArray3.add(bored\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv6hx5ejc.java:95: error: ')' expected\n                boredArray3.add(bored\n\
    \                                     ^\n/tmp/tmpv6hx5ejc.java:97: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n/tmp/tmpv6hx5ejc.java:29:\
    \ error: 'try' without 'catch', 'finally' or resource declarations\n        try\
    \ {\n        ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String boredom\
    \ = new String(new char[]{s.charAt(0), s.charAt(1), s.charAt(2), s.charAt(3)});\n\
    \        return boredom.matches(\"I.*\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjb21cnyx.java:18: error: cannot find symbol\n        String boredom\
    \ = new String(new char[]{s.charAt(0), s.charAt(1), s.charAt(2), s.charAt(3)});\n\
    \                                               ^\n  symbol:   variable s\n  location:\
    \ class Problem\n/tmp/tmpjb21cnyx.java:18: error: cannot find symbol\n       \
    \ String boredom = new String(new char[]{s.charAt(0), s.charAt(1), s.charAt(2),\
    \ s.charAt(3)});\n                                                           \
    \ ^\n  symbol:   variable s\n  location: class Problem\n/tmp/tmpjb21cnyx.java:18:\
    \ error: cannot find symbol\n        String boredom = new String(new char[]{s.charAt(0),\
    \ s.charAt(1), s.charAt(2), s.charAt(3)});\n                                 \
    \                                        ^\n  symbol:   variable s\n  location:\
    \ class Problem\n/tmp/tmpjb21cnyx.java:18: error: cannot find symbol\n       \
    \ String boredom = new String(new char[]{s.charAt(0), s.charAt(1), s.charAt(2),\
    \ s.charAt(3)});\n                                                           \
    \                           ^\n  symbol:   variable s\n  location: class Problem\n\
    /tmp/tmpjb21cnyx.java:19: error: incompatible types: boolean cannot be converted\
    \ to long\n        return boredom.matches(\"I.*\");\n                        \
    \      ^\n5 errors\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        ArrayList<String>\
    \ arr1 = new ArrayList<>();\n        ArrayList<String> arr2 = new ArrayList<>();\n\
    \        for (String i : S.split(\"[. ?!]\"))\n            if (i.startsWith(\"\
    I\"))\n                arr1.add(i);\n            if (i.startsWith(\"How\"))\n\
    \                arr2.add(i);\n            long ans = 0;\n            for (String\
    \ i : arr1)\n                ans += countI(i);\n            for (String i : arr2)\n\
    \                ans += countHow(i);\n            return ans;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqjac7f_g.java:23: error: cannot find symbol\n            if (i.startsWith(\"\
    How\"))\n                ^\n  symbol:   variable i\n  location: class Problem\n\
    /tmp/tmpqjac7f_g.java:24: error: cannot find symbol\n                arr2.add(i);\n\
    \                         ^\n  symbol:   variable i\n  location: class Problem\n\
    /tmp/tmpqjac7f_g.java:27: error: cannot find symbol\n                ans += countI(i);\n\
    \                       ^\n  symbol:   method countI(String)\n  location: class\
    \ Problem\n/tmp/tmpqjac7f_g.java:29: error: cannot find symbol\n             \
    \   ans += countHow(i);\n                       ^\n  symbol:   method countHow(String)\n\
    \  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.chars().filter(c\
    \ -> c == '.' || c == '?' || c == '!').count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzcrr9ac.java:22)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] split\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        long count=0l\n        for(String\
    \ s: split){\n            if(s.equals(\"I\")){\n                count++;\n   \
    \         }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsfzk7msy.java:19: error: ';' expected\n        long count=0l\n\
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        // Create a Set<String> for the boredom words found\n        Set<String>\
    \ boredomWords = new HashSet<>();\n        boredomWords.add(\"I\");\n        //\
    \ Create an empty HashSet<String> for the found boredom words\n        Set<String>\
    \ foundBoredomWords = new HashSet<>();\n        // Create a HashMap<String, long>\
    \ where we store the boredom words\n        Map<String, long> boredomWordsCount\
    \ = new HashMap<>();\n        // Go through each word in the given string.\n \
    \       for (String word : S.split(\"\\\\s+\")) {\n            // If the word\
    \ starts with an uppercase letter,\n            // check if it starts with an\
    \ uppercase letter\n            // and add it to the boredomWords set.\n     \
    \       if (word.charAt(0) == word.charAt(0).toUpperCase()) {\n              \
    \  if (boredomWords.contains(word.substring(1))) {\n                    boredomWordsCount.put(word,\
    \ boredomWordsCount.get(word) + 1);\n                } else {\n              \
    \      foundBoredomWords.add(word.substring(1));\n                }\n        \
    \    } else {\n                // Check if word is a boredom word\n          \
    \      if (boredomWords.contains(word)) {\n                    boredomWordsCount.put(word,\
    \ boredomWordsCount.get(word) + 1);\n                } else {\n              \
    \      foundBoredomWords.add(word);\n                }\n            }\n      \
    \  }\n        // Create a set of the boredom words\n        Set<String> boredomWordsFound\
    \ = new HashSet<>(boredomWordsCount.keySet());\n        // Check if the set of\
    \ the found boredom words are equal\n        // to the boredom words found during\
    \ the previous loop.\n        boolean boredomWordsFoundEqual = true;\n       \
    \ for (String word : foundBoredomWords) {\n            if (!boredomWordsFound.contains(word))\
    \ {\n                boredomWordsFoundEqual = false;\n            }\n        }\n\
    \        if (boredomWordsFoundEqual) {\n            // If the set of the found\
    \ boredom words are equal to\n            // the boredom words found during the\
    \ previous loop,\n            // then add 1 to the count variable.\n         \
    \   count = boredomWordsCount.values().stream().mapToLong(Long::longValue).sum();\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp50qher1p.java:25: error: unexpected type\n        Map<String, long>\
    \ boredomWordsCount = new HashMap<>();\n                    ^\n  required: reference\n\
    \  found:    long\n/tmp/tmp50qher1p.java:31: error: char cannot be dereferenced\n\
    \            if (word.charAt(0) == word.charAt(0).toUpperCase()) {\n         \
    \                                       ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[.?!]\");\n        long count = 0; for (String word : words) {\n\
    \            if (word.equals(\"I\")) count++;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzyu8_n6k.java:27)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0;\n        boolean isBored = false;\n        for(int i=0; i < S.length();\
    \ i++) {\n            if(S.charAt(i) == '.' || S.charAt(i) == '?' || S.charAt(i)\
    \ == '!') {\n                isBored = true;\n                break;\n       \
    \     }\n        }\n        if(isBored) {\n            boredomCount = 1;\n   \
    \     }\n        return boredomCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplw7phwv8.java:33)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        S += \" \";\n\
    \        S = S.toLowerCase();\n        Map<String,Integer> count = new HashMap<>();\n\
    \        String[] words = S.split(\" \");\n        for (String word : words) {\n\
    \            Integer c = count.get(word);\n            if (c == null)\n      \
    \          c = 1;\n            else\n                c++;\n            count.put(word,c);\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        for (String\
    \ word : count.keySet()) {\n            if (sb.length()>0) {\n               \
    \ sb.append(' ');\n            }\n            sb.append(word);\n            sb.append(\"\
    \ (\" ).append(count.getOrDefault(word,0)).append(')');\n        }\n        System.out.println(sb.toString());\n\
    \        return count.getOrDefault(\"I\",0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcov241df.java:44)\n"
  stdout: 'world (1) hello (1)

    the (1) sky (1) blue? (1) is (1)

    love (1) ! (1) i (1) it (1)

    '
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code goes\
    \ here\n        Map<String, Long> map = new HashMap<String, Long>();\n       \
    \ for(String sentence : S.split(\"[.!?]\")){\n            if(sentence.startsWith(\"\
    I\")){\n                map.put(sentence, map.getOrDefault(sentence, 0L) + 1);\n\
    \            }\n        }\n        return map.get(\"I\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Long.longValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.isBored(tmpl73iagci.java:25)\n\tat Problem.main(tmpl73iagci.java:28)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String boredoms\
    \ = {\"I\", \"I!\", \"I'm\", \"I'll\", \"I've\", \"I'll've\", \"I'd\", \"I'd've\"\
    , \"I'll\", \"I'll've\", \"I'lld\", \"I'lld've\", \"You\", \"You're\", \"You'd\"\
    , \"You'd've\", \"You're've\", \"You're'd\"}; // create a list of boredom sentences\
    \ to check against\n        long boredomCount = 0;\n        for(int i = 0; i<S.length();\
    \ i++){\n            if(S.charAt(i) == '.' || S.charAt(i) == '?' || S.charAt(i)\
    \ == '!') {\n                boredomCount++;\n                for(int j = 0; j<boredoms.length;\
    \ j++){\n                    if(S.charAt(i) == boredoms[j]) {\n              \
    \          break;\n                    }\n                }\n            }\n \
    \       }\n        return boredomCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmxvuuacl.java:18: error: illegal initializer for String\n     \
    \   String boredoms = {\"I\", \"I!\", \"I'm\", \"I'll\", \"I've\", \"I'll've\"\
    , \"I'd\", \"I'd've\", \"I'll\", \"I'll've\", \"I'lld\", \"I'lld've\", \"You\"\
    , \"You're\", \"You'd\", \"You'd've\", \"You're've\", \"You're'd\"}; // create\
    \ a list of boredom sentences to check against\n                          ^\n\
    /tmp/tmpmxvuuacl.java:23: error: cannot find symbol\n                for(int j\
    \ = 0; j<boredoms.length; j++){\n                                         ^\n\
    \  symbol:   variable length\n  location: variable boredoms of type String\n/tmp/tmpmxvuuacl.java:24:\
    \ error: array required, but String found\n                    if(S.charAt(i)\
    \ == boredoms[j]) {\n                                              ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long nBoredoms\
    \ = 0;\n        if (S.length() >= 1)\n            if (S.startsWith(\"I\"))\n \
    \               nBoredoms += 1;\n            else\n                for (String\
    \ s : S.split(\"[.?!]\"))\n                    if (s.startsWith(\"I\"))\n    \
    \                    nBoredoms += 1;\n        return nBoredoms;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6x4lgez.java:30)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // TODO: Your\
    \ code here\n        String[] arr = S.split(\"[.?!]\");\n        long[] boredom\
    \ = new long[arr.length];\n        int count = 0;\n        for(String s: arr){\n\
    \            if(s.equals(\"I\")){\n                boredom[count]++;\n       \
    \         count++;\n            }\n        }\n        return boredom[arr.length-1];\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptq7dr82i.java:33)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        StringBuilder\
    \ boredom = new StringBuilder();\n        for(String word: S.split(\" \")){\n\
    \            if(word.equals(\"I\"))\n                boredom.append(word).append(\"\
    \ \");\n        }\n        long count = new Long(boredom.length());\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfyvsof1s.java:29)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Convert the\
    \ string into a list of tokens, splitting on \".?!\"\n        List<String> tokens\
    \ = S.split(\"[\\\\.\\\\?!]\");\n        // For each token, check if it starts\
    \ with \"I\"\n        long count = 0l;\n        for (String token : tokens) {\n\
    \            if (token.startsWith(\"I\")) {\n                count++;\n      \
    \      }\n        }\n        return (long) count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyaaaloy.java:19: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> tokens = S.split(\"[\\\\.\\\\\
    ?!]\");\n                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long counter =\
    \ 0;\n        for (String t : S.split(\"(?<=[.?!])\")){\n            if (t.equals(\"\
    I\")){\n                counter++;\n            }\n        }\n        return (counter);\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqdoqspd.java:29)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        HashMap<String,\
    \ Long> map = new HashMap<>();\n        Arrays.stream(S.split(\"[.?!]\")).forEach(s\
    \ -> map.put(s, map.containsKey(s) ? (long) (map.get(s) + 1) : (long) 1));\n \
    \       return map.get(\"I\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Long.longValue()\" because the return value of \"java.util.HashMap.get(Object)\"\
    \ is null\n\tat Problem.isBored(tmp8qmg7vxz.java:20)\n\tat Problem.main(tmp8qmg7vxz.java:23)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.contains(\"\
    I\");\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxw9v1ezn.java:18: error: incompatible types: boolean cannot be\
    \ converted to long\n        return S.contains(\"I\");\n                     \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        String[] sentence = S.split(\"[.?!]\");\n        for (String s : sentence)\
    \ {\n            if (s.startsWith(\"I\"))\n                count++;\n        }\n\
    \        return (long)count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6q5y1yd7.java:28)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0;\n        // Loop over each word\n        for (String word : S.split(\"\
    [^ !?.]+\")) {\n            // Skip blank words\n            if (!word.isEmpty())\
    \ boredomCount++;\n        }\n        return boredomCount;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplv8j9or0.java:27)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Stream<String>\
    \ stream = S.split(\" \");\n        long count = 0;\n        stream.forEach(s\
    \ -> {\n            if (s.startsWith(\"I\")) {\n                count++;\n   \
    \         }\n        });\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphk8v2q3w.java:18: error: incompatible types: String[] cannot be\
    \ converted to Stream<String>\n        Stream<String> stream = S.split(\" \");\n\
    \                                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Split the string\
    \ into single words\n        String[] wordsS = S.split(\"[.,?!]\");\n        long\
    \ boredomCount = 0;\n        for (String wordS2 : wordsS) {\n            if (wordS2.equalsIgnoreCase(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6cmtui5h.java:31)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long bored = 0;\n\
    \        // You need to write an efficient implementation of this function.\n\
    \        for (String str : S.split(\"[.?!]\")) {\n            if (str.equals(\"\
    I\"))\n                bored++;\n        }\n        return bored;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2q0tc53t.java:29)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.split(\"\
    \ \").stream().filter(w -> w.startsWith(\"I\")).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw8u5x7a_.java:18: error: cannot find symbol\n        return S.split(\"\
    \ \").stream().filter(w -> w.startsWith(\"I\")).count();\n                   \
    \        ^\n  symbol:   method stream()\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        ArrayList < String\
    \ > list = new ArrayList < > ();\n        for (int i = 0; i < S.length(); i++)\
    \ {\n            if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \      list.add(S.substring(i, i + 1));\n            }\n        }\n        long\
    \ result = list.stream().filter(s -> s.startsWith(\"I\")).count();\n        list.clear();\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1g7xrosi.java:20: error: array required, but String found\n   \
    \         if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n                 ^\n\
    /tmp/tmp1g7xrosi.java:20: error: array required, but String found\n          \
    \  if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n                        \
    \        ^\n/tmp/tmp1g7xrosi.java:20: error: array required, but String found\n\
    \            if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n              \
    \                                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\" \");\n        Arrays.sort(words);\n        for (String word : words)\
    \ {\n            if (word.equals(\"I\")) {\n                return words.length();\n\
    \            }\n        }\n        return (words.length());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj8erbls5.java:22: error: cannot find symbol\n                return\
    \ words.length();\n                            ^\n  symbol:   method length()\n\
    \  location: variable words of type String[]\n/tmp/tmpj8erbls5.java:25: error:\
    \ cannot find symbol\n        return (words.length());\n                     ^\n\
    \  symbol:   method length()\n  location: variable words of type String[]\n2 errors\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] S = S.split(\"\
    \ \");\n        Set<String> s = new HashSet<String>();\n        for(String str:\
    \ S) {\n            if(str.equals(\"I\")) {\n                s.add(str);\n   \
    \         }\n        }\n        return s.size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9hqbiv4a.java:18: error: variable S is already defined in method\
    \ isBored(String)\n        String[] S = S.split(\" \");\n                 ^\n\
    /tmp/tmp9hqbiv4a.java:18: error: cannot find symbol\n        String[] S = S.split(\"\
    \ \");\n                      ^\n  symbol:   method split(String)\n  location:\
    \ variable S of type String[]\n2 errors\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> set\
    \ = new HashSet<String>();\n        for(String s:S.split(\"[.?!]\")){\n      \
    \      set.add(s);\n        }\n        long count = 0;\n        for(String s:set){\n\
    \            if(s.equals(\"I\")){\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahj4hy4l.java:33)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int n = 0;\n \
    \       for(int i=0;i<S.length();i++){\n            if(S.charAt(i)=='I'&&(S.charAt(i+1)=='!'||S.charAt(i+1)=='.'||S.charAt(i+1)=='?'))\
    \ n++;\n        }\n        return n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hza1b0b.java:27)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 0;\n        String word = \"I\";\n        for (String s : S.split(\" \")) {\n\
    \            if (s.equals(word)) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpus08fe8x.java:33)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 1;\n\
    \        for( int i = 0; i < S.length(); i++ ) {\n            if( (S.charAt(i)\
    \ == 'I') && (S.charAt(i+1) == '|') && (S.charAt(i+2) == '!') ) {\n          \
    \      count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97e9s0sc.java:27)\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0,\
    \ start = 0, end = 0, length = 0, last = 0;\n        for(int i = 0; i < S.length();\
    \ i++) {\n            if(S.charAt(i) == ' ' || S.charAt(i) == '.' || S.charAt(i)\
    \ == '?' || S.charAt(i) == '!') {\n                count++;\n            } else\
    \ if(S.charAt(i) == '.' || S.charAt(i) == '!') {\n                if(last == 0)\
    \ {\n                    start = i;\n                } else if(last == 1) {\n\
    \                    end = i;\n                    length = end - start;\n   \
    \             } else if(last == 2) {\n                    end = i;\n         \
    \           length = end - start;\n                }\n                last = 0;\n\
    \            } else if(S.charAt(i) == '?') {\n                last = 1;\n    \
    \        } else if(S.charAt(i) == '!') {\n                last = 2;\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq1kz9bju.java:42)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int counter =\
    \ 0;\n        for (char ch : S.toCharArray()) {\n            boolean isBored =\
    \ false;\n            switch (ch) {\n                case '.':\n             \
    \       isBored = true;\n                    break;\n                case '?':\n\
    \                    isBored = true;\n                    break;\n           \
    \     case '!':\n                    isBored = true;\n                    break;\n\
    \            }\n            if (isBored == true) {\n                counter++;\n\
    \            }\n        }\n        return counter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5j6hlary.java:40)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 1;\n        String []words = S.split(\" \");\n        for (String word : words)\
    \ {\n            if (!word.equals(\"I\")) {\n                result = result +\
    \ (word.equals(\".\") || word.equals(\"?\") || word.equals(\"!\"));\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn1_zluu_.java:22: error: bad operand types for binary operator\
    \ '+'\n                result = result + (word.equals(\".\") || word.equals(\"\
    ?\") || word.equals(\"!\"));\n                                ^\n  first type:\
    \  long\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660010873
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] arr =\
    \ S.split(\"\\\\.|\\\\?|!\");\n        int boredom = 0;\n        for(String s\
    \ : arr) {\n            if(s.equals(\"I\")) boredom++;\n        }\n        return\
    \ boredom;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3kwvdohr.java:28)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> boredomSet\
    \ = new HashSet<>();\n        for(String word : S.split(\"\\\\.\")) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredomSet.add(word);\n \
    \           }\n        }\n        return boredomSet.size();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpktjxpo8w.java:28)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        if (S.isEmpty())\
    \ return 0;\n        long n = 0;\n        for (int i = 0; i < S.length(); i++)\
    \ {\n            if (S.charAt(i) == '.') {\n                ++n;\n           \
    \ }\n            if (S.charAt(i) == '?') {\n                ++n;\n           \
    \ }\n            if (S.charAt(i) == '!') {\n                ++n;\n           \
    \ }\n        }\n        return n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3sco4v26.java:35)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = (long)\
    \ 0;\n        String[] tokens = S.split(Pattern.quote(\".\"));\n        for (String\
    \ t : tokens) {\n            if (t.startsWith(\"I\"))\n                count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vmxqclj.java:19: error: cannot find symbol\n        String[] tokens\
    \ = S.split(Pattern.quote(\".\"));\n                                  ^\n  symbol:\
    \   variable Pattern\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0l;\n        Set<String> set = new HashSet<>();\n        for(String s: S.split(\"\
    [.?!]\")) {\n            set.add(s);\n        }\n        for (String s: set) {\n\
    \            if(s.startsWith(\"I\")) boredomCount++;\n        }\n        return\
    \ boredomCount;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6wzb63wd.java:30)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i)\
    \ == 'I')\n                boredoms = boredoms + 1;\n        }\n        return\
    \ boredoms;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl7q20xs.java:27)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.split(\"\
    \\\\.|\\\\?|\\\\!\")\n                .filter(s -> s.startsWith(\"I\"))\n    \
    \            .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe1rekgvt.java:19: error: cannot find symbol\n                .filter(s\
    \ -> s.startsWith(\"I\"))\n                ^\n  symbol:   method filter((s)->s.sta[...](\"\
    I\"))\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count= 0;\n\
    \        for (int i=0; i<S.length(); i++) {\n            if ((S.charAt(i) == 'i')\
    \ || (S.charAt(i) == 'I')) {\n                count++;\n            }\n      \
    \  }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf4ph6q28.java:28)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Split your\
    \ string at '?', '!' and '. '\n        // Note that split() returns an ArrayList\
    \ of Strings\n        // Each string in the ArrayList starts with the \"word\"\
    \ before it\n        // The first word is the boredom word\n        ArrayList\
    \ words = S.split(\"[?.!]\");\n\n        // Create a map of boredom words with\
    \ their count\n        HashMap hm = new HashMap();\n        for (String word :\
    \ words) {\n            String key = word.toLowerCase();\n            Integer\
    \ count = 0;\n            if (hm.containsKey(key)) {\n                // Increase\
    \ the count\n                count = (Integer) hm.get(key);\n            }\n \
    \           // Add the word and count\n            hm.put(key, count);\n     \
    \   }\n\n        // Return the count of boredom words\n        return hm.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjwujeh2a.java:22: error: incompatible types: String[] cannot be\
    \ converted to ArrayList\n        ArrayList words = S.split(\"[?.!]\");\n    \
    \                             ^\n/tmp/tmpjwujeh2a.java:26: error: incompatible\
    \ types: Object cannot be converted to String\n        for (String word : words)\
    \ {\n                           ^\nNote: /tmp/tmpjwujeh2a.java uses unchecked\
    \ or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long answer =\
    \ 0;\n        for(String s:S.split(\"[.?!]\")){\n            if(s.startsWith(\"\
    I\")){\n                answer++;\n            }\n        }\n        return answer;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7c5modo.java:28)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.split(\"\
    [.?!]\").filter(w -> w.equals(\"I\")).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbp6h6zdk.java:18: error: cannot find symbol\n        return S.split(\"\
    [.?!]\").filter(w -> w.equals(\"I\")).count();\n                             \
    \  ^\n  symbol:   method filter((w)->w.equals(\"I\"))\n  location: class String[]\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> set\
    \ = new HashSet<>();\n        String[] words = S.split(\"[.?!]\");\n        for(String\
    \ w : words)\n            if(w.equals(\"I\"))\n                set.add(w);\n \
    \       long ans = 0;\n        for(String w : set)\n            if(S.startsWith(w))\n\
    \                ans++;\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4p3sett8.java:32)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.stream().filter(s\
    \ -> s.startsWith(\"I\")).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48m4kfca.java:18: error: cannot find symbol\n        return S.stream().filter(s\
    \ -> s.startsWith(\"I\")).count();\n                ^\n  symbol:   method stream()\n\
    \  location: variable S of type String\n1 error\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0L;\n        for (String sentence : splitSentencesToTokens(S)) {\n       \
    \     boredoms += sentenceToBoredom(sentence);\n        }\n        return boredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_t_ld5sn.java:19: error: cannot find symbol\n        for (String\
    \ sentence : splitSentencesToTokens(S)) {\n                               ^\n\
    \  symbol:   method splitSentencesToTokens(String)\n  location: class Problem\n\
    /tmp/tmp_t_ld5sn.java:20: error: cannot find symbol\n            boredoms += sentenceToBoredom(sentence);\n\
    \                        ^\n  symbol:   method sentenceToBoredom(String)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        for (String word : S.split(\"\\\\.\")) {\n            if (word.equals(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qjxhh4w.java:29)\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> boredoms\
    \ = new HashSet<>();\n        String[] parts = S.split(\"\\\\.|\\\\?|!\");\n \
    \       for(String part : parts) {\n            boredoms.add(part);\n        }\n\
    \        long boredom = 0L;\n        for(String boredomText : boredoms) {\n  \
    \          boredom += S.indexOf(boredomText) != -1;\n        }\n        return\
    \ boredom;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3x8lnqby.java:25: error: bad operand types for binary operator\
    \ '+'\n            boredom += S.indexOf(boredomText) != -1;\n                \
    \    ^\n  first type:  long\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        String[] words = S.split(\" \");\n        for (String w: words)\
    \ {\n            if (w.equals(\"I\"))\n                boredoms++;\n        }\n\
    \        return boredoms;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluip0bxk.java:32)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Declare and\
    \ initialize variables\n        long countBoredoms = 0;\n        char boredomStart\
    \ = 'I';\n        char boredomEnd = '.';\n        String regex = \"\\\\s*\"+boredomStart+\"\
    \\\\s*\"+boredomEnd+\"\\\\s*\";\n        Pattern pattern = Pattern.compile(regex);\n\
    \        Matcher matcher = pattern.matcher(S);\n        if (matcher.find()) {\n\
    \            countBoredoms += 1;\n        }\n        return countBoredoms;\n \
    \   }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj9amenff.java:23: error: cannot find symbol\n        Pattern pattern\
    \ = Pattern.compile(regex);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpj9amenff.java:23: error: cannot find symbol\n       \
    \ Pattern pattern = Pattern.compile(regex);\n                          ^\n  symbol:\
    \   variable Pattern\n  location: class Problem\n/tmp/tmpj9amenff.java:24: error:\
    \ cannot find symbol\n        Matcher matcher = pattern.matcher(S);\n        ^\n\
    \  symbol:   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n      long boredoms =\
    \ 0;\n      int i = S.indexOf(\" \");\n      if(i==0) return boredoms;\n     \
    \ String word = S.substring(0,i);\n      word = word.toLowerCase().replaceAll(\"\
    \\\\?\\\\.\",\".\");\n      word = word.replaceAll(\"\\\\!\\\\.\",\".\");\n  \
    \    word = word.replaceAll(\"\\\\?\\\\.\",\".\");\n      word = word.replaceAll(\"\
    \\\\.\\\\!\",\".\");\n      if(word.equals(\"i\")) boredoms ++;\n      for(int\
    \ j=0; j<word.length(); j++)\n      {\n        if(word.charAt(j)=='.') boredoms\
    \ ++;\n      }\n      return boredoms;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 3\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.isBored(tmpqrc74n79.java:21)\n\
    \tat Problem.main(tmpqrc74n79.java:37)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        \n        // Your\
    \ code goes here!\n        \n        Set<String> s= new HashSet<String>(Arrays.asList(S.split(\"\
    \\\\.|\\\\?|\\\\!\")))\n        long count=0;\n        \n        for (String i:s)\
    \ {\n            if(i.equals(\"I\"))\n                count++;\n        }\n  \
    \      \n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsdd_sdg5.java:21: error: ';' expected\n        Set<String> s= new\
    \ HashSet<String>(Arrays.asList(S.split(\"\\\\.|\\\\?|\\\\!\")))\n           \
    \                                                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 0;\n        for(int i = 0; i < S.length(); i++){\n            if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!'){\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj_rdmky0.java:20: error: array required, but String found\n   \
    \         if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n                ^\n\
    /tmp/tmpj_rdmky0.java:20: error: array required, but String found\n          \
    \  if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n                          \
    \     ^\n/tmp/tmpj_rdmky0.java:20: error: array required, but String found\n \
    \           if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n                 \
    \                             ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] arr =\
    \ S.split(\"[.!?]+\");\n        long boredomCount = 0;\n        for (int i = 0;\
    \ i < arr.length; i++) {\n            if (arr[i].startsWith(\"I\")) {\n      \
    \          boredomCount++;\n            }\n        }\n        return boredomCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2wd4pohc.java:29)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0, i = 'I';\n        String pattern = \"^[\" + i + \".!?]+$\";\n        String[]\
    \ words = S.split(pattern);\n        for (String word : words) {\n           \
    \ if (word.startsWith(i))\n                boredoms++;\n        }\n        return\
    \ (boredoms);\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdqvjdhqf.java:22: error: incompatible types: long cannot be converted\
    \ to String\n            if (word.startsWith(i))\n                           \
    \     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        for(int i = 0; i < S.length(); i++) {\n            if(S.charAt(i) ==\
    \ 'I') {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphv500u9n.java:28)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.chars().filter(ch\
    \ -> ch == '.' || ch == '?' || ch == '!').count() > 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppt2tmyw5.java:18: error: incompatible types: boolean cannot be\
    \ converted to long\n        return S.chars().filter(ch -> ch == '.' || ch ==\
    \ '?' || ch == '!').count() > 1;\n                                           \
    \                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        for (String word : S.split(\" \")) {\n            String[] boredoms =\
    \ {\".\", \"?\", \"!\", \"I\"};\n            if (boredoms.contains(word)) {\n\
    \                count += 1;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3c7gjl7b.java:21: error: cannot find symbol\n            if (boredoms.contains(word))\
    \ {\n                        ^\n  symbol:   method contains(String)\n  location:\
    \ variable boredoms of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        if (S.startsWith(\"\
    I\")) {\n            return 1l;\n        }\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3c4q0703.java:25)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> sentences\
    \ = Arrays.asList(S.split(\"\\\\.\"));\n        long answer = 0;\n        \n \
    \       for (int i = 0; i < sentences.size(); i++) {\n            sentences.set(i,\
    \ sentences.get(i).replaceAll(\"(?i)^i\", \"\"));\n        }\n\n        for (String\
    \ sentence : sentences) {\n            if (sentence.startsWith(\"I\")) {\n   \
    \             answer += 1;\n            }\n        }\n\n        return answer;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6npn1bjs.java:36)\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code here!\n\
    \        Set<String> sentence = S.split(\"[.?!]\");\n        long count = 0;\n\
    \        for (String word : sentence) {\n            if (word.equals(\"I\"))\n\
    \                count++;\n        }\n        return (count);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0679tqkb.java:19: error: incompatible types: String[] cannot be\
    \ converted to Set<String>\n        Set<String> sentence = S.split(\"[.?!]\");\n\
    \                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.chars().filter(c\
    \ -> c == '.' || c == '?' || c == '!').count() -\n            S.startsWith(\"\
    I\".chars()).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzawvsb3f.java:19: error: incompatible types: IntStream cannot be\
    \ converted to String\n            S.startsWith(\"I\".chars()).count();\n    \
    \                              ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.toCharArray()\n\
    \                    .filter(s -> !s.equals(\".\") && !s.equals(\"?\") && !s.equals(\"\
    !\"))\n                    .map(String::toUpperCase)\n                    .map(String::charAt)\n\
    \                    .filter(s -> s.equals(\"I\"))\n                    .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdxr18399.java:19: error: cannot find symbol\n                 \
    \   .filter(s -> !s.equals(\".\") && !s.equals(\"?\") && !s.equals(\"!\"))\n \
    \                   ^\n  symbol:   method filter((s)->!s.eq[...](\"!\"))\n  location:\
    \ class char[]\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 1;\n\
    \        for (String w : S.split(\" \")) {\n            if (w.equals(\"I\")) {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblz1lay3.java:27)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int cnt=0;\n \
    \       for (String str : S.split(\" \")) {\n            if (str.startsWith(\"\
    I\")) {\n                cnt++;\n            }\n        }\n        return cnt;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwqwwn_gp.java:28)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        \n        String[] s = S.split(\" \");\n        for (int i = 0;\
    \ i < s.length; i++)\n            if (s[i].equals(\"I\"))\n                boredoms++;\n\
    \        return boredoms;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqfhiljfi.java:32)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[.!?]\");\n        for (String word : words) {\n            if (word.equalsIgnoreCase(\"\
    I\"))\n                return (long)(words.length);\n        }\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe3bycc_d.java:28)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Declare and\
    \ initialize variables\n        String boredom = new String();\n        long boredomCount\
    \ = 0;\n        int i = 0;\n        // Your code goes here\n        while(i <\
    \ S.length()) {\n            if(S.charAt(i) == '?' || S.charAt(i) == '!') {\n\
    \                if(boredom.length() != 0) {\n                    boredomCount\
    \ = boredomCount + 1;\n                }\n                boredom = new String();\n\
    \            }\n            else if(S.charAt(i) == '.') {\n                boredom\
    \ = boredom + S.charAt(i);\n            }\n            else if(S.charAt(i) ==\
    \ 'I') {\n                if(boredom.length() != 0) {\n                    boredomCount\
    \ = boredomCount + 1;\n                }\n                boredom = new String();\n\
    \            }\n            i++;\n        }\n        return boredomCount;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptu2hodly.java:46)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return isBored(S,\
    \ new HashSet<>());\n    }\n    public static void main(String[] args) {\n   \
    \ assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkvdvhzy2.java:18: error: method isBored in class Problem cannot\
    \ be applied to given types;\n        return isBored(S, new HashSet<>());\n  \
    \             ^\n  required: String\n  found:    String,HashSet<Object>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0;\n        for (String s : S.split(\"[.?!]\")) {\n            if (s.startsWith(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmrtzpy9m.java:28)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 0l;\n        String[] tokens = S.split(\" \");\n        for (String word : tokens)\
    \ {\n            if (word.equals(\"I\")) {\n                result += 1;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrhmqf82.java:33)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        HashMap<String,Long>\
    \ counts = new HashMap<String,Long>();\n        for (String sentence : S.split(\"\
    [.?!]\")) {\n            String[] tokens = sentence.split(\"\\\\s+\");\n     \
    \       for (String token : tokens) {\n                if (token.equals(\"I\"\
    )) {\n                    Long count = counts.get(token);\n                  \
    \  counts.put(token,(count==null?1:count+1));\n                }\n           \
    \ }\n        }\n        long boredoms = Long.MIN_VALUE;\n        for (Long count\
    \ : counts.values()) {\n            boredoms = Math.max(boredoms, count);\n  \
    \      }\n        return boredoms;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65ekvbjn.java:35)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count=0;\n\
    \        String[] words=S.split(\" \");\n        for (String w:words) {\n    \
    \        if(w.startsWith(\"I\")){\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd2ql_rn_.java:29)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String words =\
    \ S.split(\" \");\n        long boredoms = Long.MAX_VALUE;\n        for(String\
    \ word: words){\n            boolean isBored = word.equals(\"I\") && !word.toLowerCase().equals(\"\
    i\");\n            if(isBored) boredoms += 1;\n        }\n        return boredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsckuq23u.java:18: error: incompatible types: String[] cannot be\
    \ converted to String\n        String words = S.split(\" \");\n              \
    \                ^\n/tmp/tmpsckuq23u.java:20: error: for-each not applicable to\
    \ expression type\n        for(String word: words){\n                        \
    \ ^\n  required: array or java.lang.Iterable\n  found:    String\n2 errors\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code here.\n\
    \        return S.split(\".|\\\\?|\\\\!\")\n                .map(s -> s.startsWith(\"\
    I\"))\n                .filter(x -> x).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytce30_l.java:20: error: cannot find symbol\n                .map(s\
    \ -> s.startsWith(\"I\"))\n                ^\n  symbol:   method map((s)->s.sta[...](\"\
    I\"))\n  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0;\n        int startI = 0;\n        String s = S;\n        String word =\
    \ \"I\";\n        char firstChar = s.charAt(0);\n        do {\n            startI\
    \ = s.indexOf(word);\n            if (startI > 0) {\n                boredomCount++;\n\
    \                s = s.substring(startI + 1);\n            } else {\n        \
    \        s = \"\";\n            }\n            word = firstChar;\n           \
    \ firstChar = s.charAt(0);\n        } while (s.equals(\"\"));\n        return\
    \ boredomCount;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6nky3lhn.java:31: error: incompatible types: char cannot be converted\
    \ to String\n            word = firstChar;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] Sarray\
    \ = S.split(\"[.,!?]\\\\s\");\n        Map<String, Long> Swords = new TreeMap<>();\n\
    \        for(String s : Sarray) {\n            String word = s.substring(0, s.length()\
    \ - 1);\n            Long count = Swords.get(word);\n            if (count ==\
    \ null) {\n                count = 1L;\n            } else {\n               \
    \ count += 1;\n            }\n            Swords.put(word, count);\n        }\n\
    \        return Swords.keySet().stream().map(s -> s.equals(s.substring(0, s.length()\
    \ - 1)) ? Swords.get(s) : 0L).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphmsvoyjb.java:30: error: cannot find symbol\n        return Swords.keySet().stream().map(s\
    \ -> s.equals(s.substring(0, s.length() - 1)) ? Swords.get(s) : 0L).sum();\n \
    \                                                                            \
    \                                  ^\n  symbol:   method sum()\n  location: interface\
    \ Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> list\
    \ = Arrays.asList(S.split(\" \"));\n        long count = 0;\n        \n      \
    \  for(String str : list){\n            if(str.equals(\"I\")){\n             \
    \   count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7uspt8hj.java:34)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Split the sentence\
    \ into words\n        String[] words = S.toLowerCase().replaceAll(\"[^\\\\w]\"\
    , \"\").toLowerCase().split(\" \");\n        \n        // Return number of boredoms\
    \ with the first word being \"I\"\n        return Arrays.stream(words).filter(w\
    \ -> w.equals(\"i\")).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcj292j7.java:27)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.chars().filter(x\
    \ -> x == '.' || x == '?' || x == '!')\n                .mapToLong(x -> 1)\n \
    \               .sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgd_nb2r.java:24)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        for(String word : S.split(\" \")) {\n            if(word.startsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return (Long)\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphz240_qh.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n        return (Long) count;\n                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] sentence\
    \ = S.split(\"\\\\.|\\\\?|\\\\!\");\n        long boredomCount = 0L;\n       \
    \ for (String s : sentence) {\n            if (s.equals(\"I\")) {\n          \
    \      boredomCount = boredomCount + 1L;\n            }\n        }\n        return\
    \ boredomCount;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ptyd9tq.java:30)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long ans = 0;\n\
    \        try (BufferedReader br = new BufferedReader(new StringReader(S))) {\n\
    \            String line;\n            while ((line = br.readLine()) != null)\
    \ {\n                String first = line.toLowerCase().substring(0, 5);\n    \
    \            String rest = line.toLowerCase().substring(5 + first.length());\n\
    \                ans += rest.equals(\".\") ? 1 : 0;\n                ans += rest.equals(\"\
    ?\") ? 1 : 0;\n                ans += rest.equals(\"!\") ? 1 : 0;\n          \
    \  }\n        } catch (IOException e) {\n            // TODO Auto-generated catch\
    \ block\n            e.printStackTrace();\n        }\n        return ans;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 5, length 3\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.isBored(tmpwk1vzyvm.java:22)\n\
    \tat Problem.main(tmpwk1vzyvm.java:38)\n"
  stdout: ''
  timestamp: 1660010876
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long bored = 0;\n\
    \        String[] words = S.split(\" \");\n        for(String word : words) {\n\
    \            if(word.equals(\"I\")) {\n                bored += 1;\n         \
    \   }\n        }\n        return bored;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ssccm0l.java:33)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[.?!]\");\n        long count = 0;\n        for (String word : words)\
    \ {\n            if (word.startsWith(\"I\")) {\n                count++;\n   \
    \         }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgl_52anx.java:29)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        String[] sentence = S.split(\"[.!?]\\\\s*\");\n        for (String\
    \ s : sentence) {\n            if (s.equals(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm4vuev3w.java:30)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 0;\n        StringBuilder boredomWords = new StringBuilder();\n        for (char\
    \ c : S.toCharArray()) {\n            if (c == ' ') {\n                boredomWords.append('\
    \ ');\n            } else if (c == '.') {\n                boredomWords.append('.');\n\
    \            } else if (c == '?' || c == '!') {\n                boredomWords.append('?');\n\
    \            } else if (c == 'I') {\n                boredomWords.append('I');\n\
    \            } else if (c != 'I') {\n                boredomWords.append(' ');\n\
    \            }\n        }\n        \n        return boredomWords.toString().split(\"\
    \\\\s+\").filter(x -> !x.isEmpty()).length;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkk6ly852.java:34: error: cannot find symbol\n        return boredomWords.toString().split(\"\
    \\\\s+\").filter(x -> !x.isEmpty()).length;\n                                \
    \                    ^\n  symbol:   method filter((x)->!x.isEmpty())\n  location:\
    \ class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Long result =\
    \ (Long) null;\n        String[] sentence = S.split(\"\\\\.|\\\\?|\\\\!\");\n\
    \        for(int i=0;i<sentence.length;i++)\n        {\n            if(sentence[i].equals(\"\
    I\"))\n            {\n                result++;\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Long.longValue()\" because \"<local1>\" is null\n\tat Problem.isBored(tmpjji2qst7.java:27)\n\
    \tat Problem.main(tmpjji2qst7.java:30)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> tokenSet\
    \ = new HashSet<String>();\n        \n        \n        Set<String> boredomTokens\
    \ = new HashSet<String>();\n        \n        for (int i = 0; i < S.length();\
    \ i++) {\n            if (S.charAt(i) != 'I') {\n                String tokenS\
    \ = \".\" + S.substring(i);\n                tokenSet.add(tokenS);\n         \
    \       boredomTokens.add(\".\" + S.substring(i));\n                \n       \
    \     }\n        }\n        \n        \n        \n        \n        long count\
    \ = 0;\n        \n        \n        \n        for (String token : tokenSet) {\n\
    \            \n            String boredomToken = boredomTokens.stream()\n    \
    \                .filter(x -> x.contains(token))\n                    .findFirst()\n\
    \                    .get();\n            \n            if (boredomToken.startsWith(\"\
    .\")) {\n                count++;\n            }\n        }\n        \n      \
    \  \n        \n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dkfs0pe.java:56)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count=0;\n\
    \        String s=\"\";\n        String []arr=S.split(\"[.,?!]\");\n        for\
    \ (int i=0; i<arr.length; i++) {\n            if(arr[i].equals(\"I\"))\n     \
    \           count=count+1;\n        }\n        return (Long)count;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5iq_z7ad.java:25: error: incompatible types: int cannot be converted\
    \ to Long\n        return (Long)count;\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long numBoredoms\
    \ = 0;\n        for (String word : S.split(\"[.?!]\")){\n            if (word.equals(\"\
    I\")){\n                numBoredoms ++;\n            }\n        }\n        return\
    \ numBoredoms;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjgpjtfzu.java:29)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // The input is\
    \ a string which consists of words delimited by '.', '?' or '!'\n        // An\
    \ example is \"Hello world\" (0l)\n        String[] words = S.split(\" \");\n\
    \        // The output is a long which represent the number of boredom in the\
    \ input string\n        // An example is (Hello.world(0)(1))\n        long output\
    \ = 0;\n        for (String word : words) {\n            // If the word starts\
    \ with \"I\" then we count this word\n            if (word.startsWith(\"I\"))\
    \ {\n                output++;\n            }\n        }\n        // The output\
    \ is 1 if the input string consists of 1 or more boredom else 0\n        return\
    \ output == 0 ? 0 : 1L;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf0dtw2_b.java:35)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        for(int i = 0; i < S.length(); i++)\n            if(S.charAt(i) == '.'\
    \ || S.charAt(i) == '?' || S.charAt(i) == '!')\n                count++;\n   \
    \     return count;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptdhthryp.java:26)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.split(\"\
    \\\\.|?|!\").stream().filter(x->\"I\".equals(x.toLowerCase())).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi5sfu2fc.java:18: error: cannot find symbol\n        return S.split(\"\
    \\\\.|?|!\").stream().filter(x->\"I\".equals(x.toLowerCase())).count();\n    \
    \                             ^\n  symbol:   method stream()\n  location: class\
    \ String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\" \");\n        return words.stream()\n                .map(w ->\
    \ isBored(w))\n                .filter(x -> x != -1)\n                .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z9h02tl.java:19: error: cannot find symbol\n        return words.stream()\n\
    \                    ^\n  symbol:   method stream()\n  location: variable words\
    \ of type String[]\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] A = S.split(\"\
    [. ?!]\");\n        int count = 0;\n        Arrays.stream(A).forEach(x -> {\n\
    \            if(x == \"I\")\n                count++;\n        });\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn6_tm1a.java:22: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n                count++;\n  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[.?!]\");\n        long count = 0l;\n        for (String word :\
    \ words) {\n            if (word.equals(\"I\"))\n                count++;\n  \
    \      }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzwo8les.java:29)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbwpcrlz.java:24)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String p = \"\
    I\";\n        Map<String, Long> map = new HashMap<>();\n        String[] ws =\
    \ S.split(\"\\\\.|\\\\?|\\\\!\");\n        for (String w : ws) {\n           \
    \ Long cnt = map.get(w);\n            if (cnt == null) {\n                cnt\
    \ = 1l;\n            }\n            map.put(w, cnt + 1l);\n        }\n       \
    \ long count = 0;\n        map.forEach((k, v) -> {\n            if (v.longValue()\
    \ == 1) {\n                count++;\n            }\n        });\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpml31t18d.java:31: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n                count++;\n  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count=0;\n\
    \        S.chars().filter(c -> c=='!' || c=='.' || c=='.' || c=='?').forEach(c->count++);\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9_xowm5v.java:19: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        S.chars().filter(c ->\
    \ c=='!' || c=='.' || c=='.' || c=='?').forEach(c->count++);\n               \
    \                                                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n      final StringTokenizer\
    \ st = new StringTokenizer(S, \".?!\");\n      long result = 0;\n      while (st.hasMoreTokens())\
    \ {\n        if (st.nextToken().equals(\"I\")) {\n          result++;\n      \
    \  }\n      }\n      return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0r8npp44.java:30)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long[] boredoms\
    \ = {0l,1l};\n        Stream<String> stream = Arrays.stream(S.split(\"[.!?]\\\\\
    s*\"));\n        stream.map(x -> x.trim())\n            .filter(x -> x.startsWith(\"\
    I\"))\n            .forEach(x -> boredoms[0]++);\n        return boredoms[0];\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnusklt5w.java:27)\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.split(\"\
    [.?!]\").length\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6d535tt9.java:18: error: ';' expected\n        return S.split(\"\
    [.?!]\").length\n                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // your code:\n\
    \        ArrayList B = new ArrayList();\n        ArrayList P = new ArrayList();\n\
    \        ArrayList I = new ArrayList();\n        ArrayList E = new ArrayList();\n\
    \        ArrayList T = new ArrayList();\n        ArrayList O = new ArrayList();\n\
    \        ArrayList S = new ArrayList();\n        ArrayList D = new ArrayList();\n\
    \        ArrayList H = new ArrayList();\n        ArrayList L = new ArrayList();\n\
    \        ArrayList N = new ArrayList();\n        ArrayList P = new ArrayList();\n\
    \        ArrayList C = new ArrayList();\n        ArrayList L = new ArrayList();\n\
    \        ArrayList W = new ArrayList();\n        ArrayList O = new ArrayList();\n\
    \        ArrayList U = new ArrayList();\n        ArrayList M = new ArrayList();\n\
    \        ArrayList Y = new ArrayList();\n        ArrayList R = new ArrayList();\n\
    \        ArrayList G = new ArrayList();\n        ArrayList F = new ArrayList();\n\
    \        ArrayList P = new ArrayList();\n        ArrayList T = new ArrayList();\n\
    \        ArrayList N = new ArrayList();\n        ArrayList G = new ArrayList();\n\
    \        ArrayList E = new ArrayList();\n        ArrayList W = new ArrayList();\n\
    \        ArrayList O = new ArrayList();\n        ArrayList S = new ArrayList();\n\
    \        ArrayList D = new ArrayList();\n        ArrayList F = new ArrayList();\n\
    \        ArrayList C = new ArrayList();\n        ArrayList M = new ArrayList();\n\
    \        ArrayList H = new ArrayList();\n        ArrayList L = new ArrayList();\n\
    \        ArrayList N = new ArrayList();\n        ArrayList R = new ArrayList();\n\
    \        ArrayList Y = new ArrayList();\n        ArrayList P = new ArrayList();\n\
    \        ArrayList T = new ArrayList();\n        ArrayList N = new ArrayList();\n\
    \        ArrayList G = new ArrayList();\n        ArrayList E = new ArrayList();\n\
    \        ArrayList W = new ArrayList();\n        ArrayList O = new ArrayList();\n\
    \        ArrayList S = new ArrayList();\n        ArrayList D = new ArrayList();\n\
    \        ArrayList F = new ArrayList();\n        ArrayList C = new ArrayList();\n\
    \        ArrayList M = new ArrayList();\n        ArrayList H = new ArrayList();\n\
    \        ArrayList L = new ArrayList();\n        ArrayList N = new ArrayList();\n\
    \        ArrayList R = new ArrayList();\n        ArrayList Y = new ArrayList();\n\
    \        ArrayList P\n    }\n    public static void main(String[] args) {\n  \
    \  assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt52jivjh.java:75: error: ';' expected\n        ArrayList P\n  \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0;\n        List<String> list = new ArrayList<>(Arrays.asList(S.split(\"[.?!]\"\
    )));\n        for (String s : list) {\n            if (s.startsWith(\"I\")) {\n\
    \                boredomCount++;\n            }\n        }\n        return boredomCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchy3amhi.java:29)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(Pattern.quote(\".\"));\n        Arrays.sort(words);\n        for(int\
    \ i = 0; i < words.length - 1; ++i) {\n            String w = words[i];\n    \
    \        if (w.equals(\"I\"))\n                return (long) 1;\n        }\n \
    \       return (long) 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqi6fkjbs.java:18: error: cannot find symbol\n        String[] words\
    \ = S.split(Pattern.quote(\".\"));\n                                 ^\n  symbol:\
    \   variable Pattern\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> sentences\
    \ = S.split(\"[.!?]\\\\s+\");\n        long bored = 0;\n        for (String sentence\
    \ : sentences) {\n            bored += sentence.startsWith(\"I\");\n        }\n\
    \        return bored;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt3nv2lg8.java:18: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> sentences = S.split(\"[.!?]\\\
    \\s+\");\n                                        ^\n/tmp/tmpt3nv2lg8.java:21:\
    \ error: bad operand types for binary operator '+'\n            bored += sentence.startsWith(\"\
    I\");\n                  ^\n  first type:  long\n  second type: boolean\n2 errors\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> set=new\
    \ HashSet<>();\n        String[] words=S.split(\" \");\n        for (String word\
    \ : words) {\n            if (!set.contains(word)) {\n                if (word.startsWith(\"\
    I\"))\n                    set.add(word);\n            }\n        }\n        return\
    \ set.size();\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp781u17xb.java:30)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int bored = 0;\n\
    \        String[] words = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for (String\
    \ word : words)\n            if (word.startsWith(\"I\"))\n                bored\
    \ += 1;\n        return bored;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvo_jigqv.java:27)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        StringTokenizer\
    \ st = new StringTokenizer(S);\n        long count = 1;\n        while (st.hasMoreTokens())\
    \ {\n            if (st.nextToken().equals(\"I\"))\n                count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpde3x07to.java:27)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> boredoms\
    \ = new HashSet<>();\n        if (S.equals(\".\")) return 0L;\n        String[]\
    \ words = S.split(\" \");\n        for (String w : words) {\n            if (w.equals(\"\
    .\")) continue;\n            if (w.equals(\"?\"))\n                boredoms.add(\"\
    ?\");\n            else if (w.equals(\"!\")) boredoms.add(\"!\");\n          \
    \  else if (w.equals(\"I\")) boredoms.add(\"I\");\n            else boredoms.add(\"\
    .\");\n        }\n        long ans = 1L;\n        for (String w : words) {\n \
    \           boredoms.remove(w);\n            ans *= 1L;\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_hi9_bq.java:37)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i)\
    \ == '.') {\n                boredoms = boredoms + 1;\n            }\n       \
    \     if (S.charAt(i) == '?' || S.charAt(i) == '!') {\n                boredoms\
    \ = boredoms + 1;\n            }\n        }\n        return boredoms;\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdz30cik_.java:31)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long num = 0;\n\
    \        for (String str : S.split(\"[.?!]\")) {\n            if (str.equals(\"\
    I\")) {\n                num++;\n            }\n        }\n        return num;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4sa3h9o8.java:29)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        final Pattern\
    \ p = Pattern.compile(\"\\\\B[I].+?\\\\B\", Pattern.DOTALL);\n        final Matcher\
    \ m = p.matcher(S);\n        final long result = 0;\n        while (m.find())\
    \ {\n            result++;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbsm9xhfv.java:18: error: cannot find symbol\n        final Pattern\
    \ p = Pattern.compile(\"\\\\B[I].+?\\\\B\", Pattern.DOTALL);\n              ^\n\
    \  symbol:   class Pattern\n  location: class Problem\n/tmp/tmpbsm9xhfv.java:18:\
    \ error: cannot find symbol\n        final Pattern p = Pattern.compile(\"\\\\\
    B[I].+?\\\\B\", Pattern.DOTALL);\n                                           \
    \               ^\n  symbol:   variable Pattern\n  location: class Problem\n/tmp/tmpbsm9xhfv.java:18:\
    \ error: cannot find symbol\n        final Pattern p = Pattern.compile(\"\\\\\
    B[I].+?\\\\B\", Pattern.DOTALL);\n                          ^\n  symbol:   variable\
    \ Pattern\n  location: class Problem\n/tmp/tmpbsm9xhfv.java:19: error: cannot\
    \ find symbol\n        final Matcher m = p.matcher(S);\n              ^\n  symbol:\
    \   class Matcher\n  location: class Problem\n/tmp/tmpbsm9xhfv.java:22: error:\
    \ cannot assign a value to final variable result\n            result++;\n    \
    \        ^\n5 errors\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n      long b = 0;\n  \
    \    for (String line : S.split(\"\\\\.|\\\\?|\\\\!\")){\n        for (String\
    \ word : line.split(\"\\\\. |\\\\? |\\\\!\")){\n          if (word.equals(\"I\"\
    )){\n            b++;\n          }\n        }\n      }\n      return b;\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi8l81hvm.java:31)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> words\
    \ = S.split(\"[.?!]\");\n        long count = 0;\n        for(String word : words)\
    \ {\n            if(word.equals(\"I\")) count++;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjan4r51k.java:18: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> words = S.split(\"[.?!]\");\n\
    \                                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count=0;\n\
    \        for(String item: S.split(\" \")){\n            if(item.startsWith(\"\
    I\"))\n                count++;\n        }\n        return count;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjair75qc.java:27)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long numBoredoms\
    \ = 0;\n        String[] strArr = S.split(\"[.?!]\");\n        for (String str\
    \ : strArr) {\n            if (str.equalsIgnoreCase(\"I\")) {\n              \
    \  numBoredoms += 1;\n            }\n        }\n        return numBoredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf256e_gi.java:30)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = S.length();\n\
    \        String[] words = S.split(\"\\\\.|\\\\?|\\\\!\");\n        Arrays.stream(words).forEach\
    \ (word -> {\n            if (word.equals(\"I\")) {\n                count++;\n\
    \            }\n        });\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyjk1vdxg.java:22: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n                count++;\n  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0l;\n\
    \        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i) ==\
    \ 'I') {\n                if (S.charAt(i + 1) == '!') {\n                    count\
    \ += (S.length() - i - 2l) / 3l;\n                } else if (S.charAt(i + 1) ==\
    \ '?') {\n                    count += (S.length() - i - 2l) / 2l;\n         \
    \       } else {\n                    count += (S.length() - i - 2l) / 1l;\n \
    \               }\n            }\n        }\n        return (count) * 1l;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7714u7y7.java:34)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long[] words =\
    \ new long[S.length()];\n        long count = 0;\n        for(int i=0;i<S.length();i++)\
    \ {\n            char c = S.charAt(i);\n            if(c=='.' || c=='?' || c=='!')\
    \ {\n                words[i] += 1;\n                count += 1;\n           \
    \ }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbc3pwe6h.java:31)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[\\.\\?\\!]+\");\n        long count = 0;\n        for (String word\
    \ : words)\n            if (word.equals(\"I\")) count++;\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptqw3rgjf.java:18: error: illegal escape character\n        String[]\
    \ words = S.split(\"[\\.\\?\\!]+\");\n                                    ^\n\
    /tmp/tmptqw3rgjf.java:18: error: illegal escape character\n        String[] words\
    \ = S.split(\"[\\.\\?\\!]+\");\n                                      ^\n/tmp/tmptqw3rgjf.java:18:\
    \ error: illegal escape character\n        String[] words = S.split(\"[\\.\\?\\\
    !]+\");\n                                        ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        String[] words = S.split(\"\\\\.|\\\\?|\\\\!\");\n        for (String\
    \ w : words) {\n            if (w.startsWith(\"I\")) {\n                count\
    \ += 1;\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwx7qevrf.java:29)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return S.chars()\n\
    \                .filter(e -> e == '.')\n                .filter(e -> e == '?')\n\
    \                .filter(e -> e == '!')\n                .count();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6l9qtw_o.java:27)\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0l;\n        if (S.isEmpty()) {\n            return boredomCount;\n      \
    \  }\n        S = S.toLowerCase();\n        S = S.trim();\n        char[] arr\
    \ = S.toCharArray();\n        Arrays.stream(arr).filter(p -> p == 'i' || p ==\
    \ 'I')\n                .forEach(p -> boredomCount++);\n        return boredomCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9_3n3vkz.java:25: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(arr).filter(p -> p == 'i' || p == 'I')\n              ^\n\
    \    method Arrays.<T#1>stream(T#1[]) is not applicable\n      (inference variable\
    \ T#1 has incompatible bounds\n        equality constraints: char\n        lower\
    \ bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int) is not applicable\n\
    \      (cannot infer type-variable(s) T#2\n        (actual and formal argument\
    \ lists differ in length))\n    method Arrays.stream(int[]) is not applicable\n\
    \      (argument mismatch; char[] cannot be converted to int[])\n    method Arrays.stream(long[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to long[])\n\
    \    method Arrays.stream(double[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to double[])\n  where T#1,T#2 are type-variables:\n\
    \    T#1 extends Object declared in method <T#1>stream(T#1[])\n    T#2 extends\
    \ Object declared in method <T#2>stream(T#2[],int,int)\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> boredoms\
    \ = new HashSet<>();\n        List<String> sentence = Arrays.stream(S.replaceAll(\"\
    [?.!]\", \"\").split(\" \")).collect(Collectors.toList());\n        Arrays.stream(sentence).forEach(boredoms::add);\n\
    \        return boredoms.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0isaa_eo.java:20: error: no suitable method found for stream(List<String>)\n\
    \        Arrays.stream(sentence).forEach(boredoms::add);\n              ^\n  \
    \  method Arrays.<T#1>stream(T#1[]) is not applicable\n      (cannot infer type-variable(s)\
    \ T#1\n        (argument mismatch; List<String> cannot be converted to T#1[]))\n\
    \    method Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot\
    \ infer type-variable(s) T#2\n        (actual and formal argument lists differ\
    \ in length))\n    method Arrays.stream(int[]) is not applicable\n      (argument\
    \ mismatch; List<String> cannot be converted to int[])\n    method Arrays.stream(long[])\
    \ is not applicable\n      (argument mismatch; List<String> cannot be converted\
    \ to long[])\n    method Arrays.stream(double[]) is not applicable\n      (argument\
    \ mismatch; List<String> cannot be converted to double[])\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>stream(T#1[])\n\
    \    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long count = 0;\n\
    \        String[] words = S.split(\"[.,?!]\");\n        for(String word : words)\
    \ {\n            if(word.equals(\"I\")) {\n                count++;\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yx1xeuv.java:30)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code goes\
    \ here\n        String[] words = S.split(\" \");\n        long boredomCount =\
    \ 0;\n        for(String word:words)\n            if(word.equals(\"I\"))\n   \
    \             boredomCount++;\n        return boredomCount;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66saioar.java:32)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int count = 0;\n\
    \        for (int i = 0; i < S.length(); i++) {\n            if (S.charAt(i) ==\
    \ 'I') {\n                count++;\n            }\n        }\n        return (long)\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fb966xa.java:28)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code goes\
    \ here\n        long[] ans = {0};\n        String[] temp = new String[3];\n  \
    \      temp[0] = S.substring(0,1);\n        temp[1] = S.substring(0,4);\n    \
    \    temp[2] = S.substring(0,6);\n        if(temp[0].equals(\"I\")){\n       \
    \     ans[0]=ans[0]+1;\n        }\n        return ans[0];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptgl_p4s2.java:31)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        //TODO: Write\
    \ a recursive solution here\n        try{\n        long l = 0;\n        if(S.startsWith(\"\
    I\")){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n\
    \        if(S.startsWith(\"a\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"the\")){\n            l = l+1;\n \
    \           System.out.print(\"1\");\n        }\n        if(S.startsWith(\"a\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"to\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"the\")){\n            l = l+1;\n \
    \           System.out.print(\"1\");\n        }\n        if(S.startsWith(\"a\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"an\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"a\")){\n            l = l+1;\n   \
    \         System.out.print(\"1\");\n        }\n        if(S.startsWith(\"to\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"a\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"in\")){\n            l = l+1;\n  \
    \          System.out.print(\"1\");\n        }\n        if(S.startsWith(\"a\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"for\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"a\")){\n            l = l+1;\n   \
    \         System.out.print(\"1\");\n        }\n        if(S.startsWith(\"an\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"a\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"to\")){\n            l = l+1;\n  \
    \          System.out.print(\"1\");\n        }\n        if(S.startsWith(\"a\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"in\")){\n            l = l+1;\n            System.out.print(\"\
    1\");\n        }\n        if(S.startsWith(\"a\")){\n            l = l+1;\n   \
    \         System.out.print(\"1\");\n        }\n        if(S.startsWith(\"for\"\
    )){\n            l = l+1;\n            System.out.print(\"1\");\n        }\n \
    \       if(S.startsWith(\"a\")){\n            l = \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n   \
    \ assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love\
    \ It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmgkfrjpf.java:111: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpmgkfrjpf.java:112: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpmgkfrjpf.java:19: error: 'try'\
    \ without 'catch', 'finally' or resource declarations\n        try{\n        ^\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        ArrayList boredoms\
    \ = new ArrayList();\n        String word;\n        for(int i = 0; i < S.length();\
    \ i++) {\n            boredoms.add(S[i]);\n        }\n        boredoms.add(\"\
    I\");\n        long boredomCount = 0;\n        for(int i = 0; i < boredoms.size();\
    \ i++) {\n            word = boredoms.get(i);\n            if(word.equals(\"I\"\
    )) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuvp21a__.java:21: error: array required, but String found\n   \
    \         boredoms.add(S[i]);\n                          ^\n/tmp/tmpuvp21a__.java:26:\
    \ error: incompatible types: Object cannot be converted to String\n          \
    \  word = boredoms.get(i);\n                               ^\nNote: /tmp/tmpuvp21a__.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\n2 errors\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long result =\
    \ 0;\n        for (String w : S.split(\"[.?!]\"))\n            if (w.equals(\"\
    I\"))\n                result++;\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpty5ecf_x.java:27)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] words\
    \ = S.split(\"[. ?!]\");\n        long numBoredoms = 0;\n        for (int i=0;\
    \ i<words.length; i++) {\n            if (words[i].startsWith(\"I\")) {\n    \
    \            numBoredoms++;\n            }\n        }\n        return (numBoredoms);\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2lg1q73.java:29)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        for(int i=0; i<S.length(); i++) {\n            if(S.charAt(i)\
    \ == 'i') {\n                boredoms += 1;\n            }\n        }\n      \
    \  return boredoms;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmg6_0nt.java:29)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredomCount\
    \ = 0l;\n        String[] lines = S.split(\"[.?!]+\");\n        for (String s\
    \ : lines) {\n            if (s.startsWith(\"I\")) {\n                boredomCount++;\n\
    \            }\n        }\n        return boredomCount;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj373zhp.java:29)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long ans = 0;\n\
    \        // Implement the solution here\n        S += \"\";\n        char[] C\
    \ = S.toCharArray();\n        Arrays.sort(C);\n        for(int i = 1; i < C.length;\
    \ i++){\n            if(C[i - 1] == 'I' && C[i] == '.' || C[i - 1] == '!' || C[i]\
    \ == '?')\n                ans++;\n        }\n        return ans;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm155rw6t.java:31)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] tokens\
    \ = S.split(\"[\\.\\?\\!]+\");\n        long boredoms = 0L;\n        for (String\
    \ tok: tokens) {\n            if (tok.startsWith(\"I\"))\n                boredoms\
    \ += 1;\n        }\n        return boredoms;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq06l3dm.java:18: error: illegal escape character\n        String[]\
    \ tokens = S.split(\"[\\.\\?\\!]+\");\n                                     ^\n\
    /tmp/tmpdq06l3dm.java:18: error: illegal escape character\n        String[] tokens\
    \ = S.split(\"[\\.\\?\\!]+\");\n                                       ^\n/tmp/tmpdq06l3dm.java:18:\
    \ error: illegal escape character\n        String[] tokens = S.split(\"[\\.\\\
    ?\\!]+\");\n                                         ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        int I = S.indexOf(\"\
    I\");\n        int E = S.indexOf(\".\", I);\n        int A = S.indexOf(\"?\",\
    \ E);\n        int O = S.indexOf(\"!\", E);\n        return (S.charAt(I) == 'I')\
    \ ? (1l) : ((S.charAt(A) == '.') + (S.charAt(O) == '.') + (S.charAt(E) == '?'));\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkcznw8l_.java:22: error: bad operand types for binary operator\
    \ '+'\n        return (S.charAt(I) == 'I') ? (1l) : ((S.charAt(A) == '.') + (S.charAt(O)\
    \ == '.') + (S.charAt(E) == '?'));\n                                         \
    \                          ^\n  first type:  boolean\n  second type: boolean\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long boredoms\
    \ = 0;\n        // Create a stream of sentences from the string and filter out\
    \ all sentences\n        // that start with the word \"I\".\n        Stream<String>\
    \ sentences = Arrays.stream(new StringTokenizer(S, \" .?,!\"))\n             \
    \   .filter(s -> s.startsWith(\"I\"));\n\n        // Count how many sentences\
    \ start with the word \"I\"\n        long count = sentences.count();\n       \
    \ // Return the boredom count\n        return boredoms;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkkak1kdi.java:21: error: no suitable method found for stream(StringTokenizer)\n\
    \        Stream<String> sentences = Arrays.stream(new StringTokenizer(S, \" .?,!\"\
    ))\n                                         ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; StringTokenizer cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; StringTokenizer cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; StringTokenizer cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; StringTokenizer cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        long countI =\
    \ 0;\n        long countDot = 0;\n        long countQuestion = 0;\n        long\
    \ countExclamation = 0;\n        long countSpace = 0;\n        StringTokenizer\
    \ st = new StringTokenizer(S);\n        while (st.hasMoreTokens()) {\n       \
    \     String word = st.nextToken();\n            if(word.equals(\"I\")) {\n  \
    \              countI++;\n            }\n            else if(word.equals(\".\"\
    )) {\n                countDot++;\n            }\n            else if(word.equals(\"\
    ?\")) {\n                countQuestion++;\n            }\n            else if(word.equals(\"\
    !\")) {\n                countExclamation++;\n            }\n            else\
    \ if(word.equals(\" \")) {\n                countSpace++;\n            }\n   \
    \     }\n        return countI + countDot + countQuestion + countExclamation +\
    \ countSpace;\n    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuo2k_15z.java:47)\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        // Your code here.\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgcaf2o9p.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        List<String> list\
    \ = S.split(\"[.?!]\");\n        long boredCount = 0;\n        boolean isBored\
    \ = false;\n        for(String word : list) {\n            if(word.equals(\"I\"\
    )) {\n                isBored = true;\n            } else {\n                isBored\
    \ = false;\n            }\n            boredCount += isBored;\n        }\n   \
    \     return boredCount;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp89ymmhp1.java:18: error: incompatible types: String[] cannot be\
    \ converted to List<String>\n        List<String> list = S.split(\"[.?!]\");\n\
    \                                   ^\n/tmp/tmp89ymmhp1.java:27: error: bad operand\
    \ types for binary operator '+'\n            boredCount += isBored;\n        \
    \               ^\n  first type:  long\n  second type: boolean\n2 errors\n"
  stdout: ''
  timestamp: 1660010879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        Set<String> set\
    \ = new HashSet<String>();\n        StringBuilder str = new StringBuilder();\n\
    \        Set<Character> chars = new HashSet<Character>();\n        int count =\
    \ 0;\n        for(String ss : S.split(Pattern.quote(\".?!\"))) {\n           \
    \ if(!ss.isEmpty()) set.add(ss);\n        }\n        for(String ss : set) {\n\
    \            str.append(ss);\n            str.append(\" \");\n            for(int\
    \ i = str.length() - 1; i >= 0; i--) {\n                if(chars.contains(str.charAt(i)))\
    \ {\n                    count++;\n                    break;\n              \
    \  }\n            }\n        }\n        return (long) count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjmtdj12s.java:22: error: cannot find symbol\n        for(String\
    \ ss : S.split(Pattern.quote(\".?!\"))) {\n                                ^\n\
    \  symbol:   variable Pattern\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010879

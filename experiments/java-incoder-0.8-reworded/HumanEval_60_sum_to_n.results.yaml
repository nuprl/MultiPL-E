language: java
name: HumanEval_60_sum_to_n
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long s = 1;\n        for (long i = 2; i <= n; i++) {\n            s *=\
    \ i;\n        }\n        return s;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcw3kbcs5.java:29)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // TODO: implement!\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmnalra3y.java:25)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++)\n            sum\
    \ += i;\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return n > 0 ? sumToN(n - 1) + n : n;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 1l) return 0l;\n        return n.stream().reduce(0l, (n1, n2)\
    \ -> n1 + n2);\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9o03suct.java:22: error: long cannot be dereferenced\n        return\
    \ n.stream().reduce(0l, (n1, n2) -> n1 + n2);\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 2; i <= n; i = i + 1) {\n      \
    \      sum = sum + i;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpub8vy5i4.java:28)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return (1l).multiply(n).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpelwh9wfx.java:21: error: long cannot be dereferenced\n        return\
    \ (1l).multiply(n).sum();\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 0) {\n            throw new IllegalArgumentException();\n   \
    \     }\n\n        if (n == 0) {\n            return 0;\n        }\n\n       \
    \ return Stream.iterate(1, (n) -> n + 1).reduce(0, (n, i) -> i);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3t4j2g52.java:29: error: variable n is already defined in method\
    \ sumToN(long)\n        return Stream.iterate(1, (n) -> n + 1).reduce(0, (n, i)\
    \ -> i);\n                                  ^\n/tmp/tmp3t4j2g52.java:29: error:\
    \ variable n is already defined in method sumToN(long)\n        return Stream.iterate(1,\
    \ (n) -> n + 1).reduce(0, (n, i) -> i);\n                                    \
    \                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1, n -> n + 1).limit(n).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz3ozsmpn.java:21: error: variable n is already defined in method\
    \ sumToN(long)\n        return Stream.iterate(1, n -> n + 1).limit(n).sum();\n\
    \                                 ^\n/tmp/tmpz3ozsmpn.java:21: error: cannot find\
    \ symbol\n        return Stream.iterate(1, n -> n + 1).limit(n).sum();\n     \
    \                                                ^\n  symbol:   method sum()\n\
    \  location: interface Stream<Integer>\n2 errors\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n<1l) return 1l;\n        return n*(n+1)/2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // write your code here\n        if (n < 1l) return 1l;\n        long\
    \ sum = 0;\n        for(long i = 1l; i< n; ++i) sum += i;\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyzpm5tyk.java:28)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i < n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnxw2jqmc.java:28)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return n*n;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbyiq3_fo.java:25)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1;\n        while (n > 1) {\n            sum += n--;\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(0, i -> i + 1).limit(n).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqqpkfqg8.java:21: error: cannot find symbol\n        return Stream.iterate(0,\
    \ i -> i + 1).limit(n).sum();\n                                              \
    \       ^\n  symbol:   method sum()\n  location: interface Stream<Integer>\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // We use a Stream, so the result can be lazily calculated when needed.\n\
    \        return Stream.iterate(1, n -> n + 1).limit(n).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppwfw6i2o.java:22: error: variable n is already defined in method\
    \ sumToN(long)\n        return Stream.iterate(1, n -> n + 1).limit(n).sum();\n\
    \                                 ^\n/tmp/tmppwfw6i2o.java:22: error: cannot find\
    \ symbol\n        return Stream.iterate(1, n -> n + 1).limit(n).sum();\n     \
    \                                                ^\n  symbol:   method sum()\n\
    \  location: interface Stream<Integer>\n2 errors\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 10l) {\n            return n + 1l;\n        } else if (n < 100l)\
    \ {\n            return sumToN(n * 10l) + n + 1l;\n        } else if (n < 1000l)\
    \ {\n            return sumToN(n * 100l) + sumToN(n * 10l) + n + 1l;\n       \
    \ } else {\n            return sumToN(n * 1000l) + sumToN(n * 100l) + sumToN(n\
    \ * 10l) + sumToN(n * 10l) + n + 1l;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1dixrze.java:32)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        long k = n;\n        while(k >= 1) {\n       \
    \     sum += k;\n            k--;\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 0)\n            throw new IllegalArgumentException(\"n must\
    \ be positive\");\n        long sum = 1;\n        for (int i = 1; i <= n; i++)\
    \ {\n            sum += i;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2iuoe26.java:30)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        int sum = 0;\n        for (long i = 1; i <= n; i++)\n            sum\
    \ += i;\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ *= i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprvtsanoa.java:29)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.range(1, n).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp00czrejf.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).sum();\n            \
    \                      ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.range(1, n).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp00czrejf.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).sum();\n            \
    \                      ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long s = n;\n        for (int i = 1; i < n; i++) {\n            s = s\
    \ + i;\n        }\n        return s;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1;\n        for (int i=1; i<=n; i++) {\n            sum +=\
    \ i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjtwhzf1q.java:28)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        while (n > 0) {\n            sum += n;\n     \
    \       n -= 1;\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your code in Java (or Ruby, or C#, or...)\n        if (n ==\
    \ 1L) return 1L;\n        long result = 1L;\n        for (long i = 1L; i <= n;\
    \ i++) {\n            result += (long)i;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemho1unj.java:31)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n)\n            .mapToLong(i -> i)\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo0x913o7.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n)\n             \
    \                           ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfv4w6_1.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).sum();\n      \
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if(n==0l) {\n            return 1l;\n        }\n        return n.add((sumToN(n.subtract(1l))).subtract(1l));\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpupiahu77.java:24: error: long cannot be dereferenced\n        return\
    \ n.add((sumToN(n.subtract(1l))).subtract(1l));\n                ^\n/tmp/tmpupiahu77.java:24:\
    \ error: long cannot be dereferenced\n        return n.add((sumToN(n.subtract(1l))).subtract(1l));\n\
    \                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0)\n            return 0;\n        long a = n;\n        while\
    \ (a > 0) {\n            a -= 1;\n            n += 1;\n        }\n        return\
    \ n;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xjai7bd.java:31)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return sumToN(n, 1l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf25_pu4k.java:21: error: method sumToN in class Problem cannot\
    \ be applied to given types;\n        return sumToN(n, 1l);\n               ^\n\
    \  required: long\n  found:    long,long\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).reduce(0, (a, b) -> a + b);\n    }\n\
    \    public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3c8d22n2.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).reduce(0, (a, b)\
    \ -> a + b);\n                                        ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(long i = 2; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq81syi8l.java:28)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // TODO: Complete this function\n        BigInteger sum = new BigInteger(\"\
    1\");\n        for (long i = 1; i < n; i++) {\n            BigInteger d = new\
    \ BigInteger(String.valueOf(i - 1));\n            BigInteger res = d.multiply(sum);\n\
    \            sum = sum.add(res);\n        }\n        return sum.longValue();\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptywd622i.java:32)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        final long cache[] = new long[] {0L};\n        return LongStream.range(1,\
    \ n).mapToLong(cache::add).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9fr4fnyu.java:22: error: invalid method reference\n        return\
    \ LongStream.range(1, n).mapToLong(cache::add).sum();\n                      \
    \                          ^\n  cannot find symbol\n    symbol:   method add()\n\
    \    location: class long[]\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 1) return 1l;\n        return n * sumToN(n - 1l);\n    }\n \
    \   public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6p6209o.java:26)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        List<Long> numbers = List.of(1l, 2l, 3l, 4l, 5l);\n        long total\
    \ = numbers.stream().reduce((a, b) -> a + b).toLong();\n        if (n >= total)\n\
    \            return n;\n        return total - n;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwhafcu_.java:22: error: cannot find symbol\n        long total\
    \ = numbers.stream().reduce((a, b) -> a + b).toLong();\n                     \
    \                                        ^\n  symbol:   method toLong()\n  location:\
    \ class Optional<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 0) {\n            throw new IllegalArgumentException(\"n must\
    \ be positive\");\n        }\n        // Sum all numbers until n >= 1\n      \
    \  long sum = 0;\n        while (n > 0) {\n            sum += n;\n           \
    \ n--;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1;\n        for (int i = 1; i <= n; ++i) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxxtpkka7.java:28)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        ArrayList<Long> sums = new ArrayList<Long>();\n        long sum = n;\n\
    \        while (sum > 1) {\n            sums.add(sum);\n            sum /= 10;\n\
    \        }\n        return sums.get(0) + sums.get(1);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 0 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.sumToN(tmptz5rjtqg.java:27)\n\tat Problem.main(tmptz5rjtqg.java:30)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long result = 1l;\n        for (long i = 1l; i <= n; i++) {\n       \
    \     result *= i;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi5lkhdlj.java:29)\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i < n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnxw2jqmc.java:28)\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long x = 0;\n        for (long i = 1; i <= n; i++) {\n            x +=\
    \ i;\n        }\n        return x;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(int i = 1; i <= n; i++){\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp938r0bef.java:28)\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your code here\n        long sum = 0;\n        for(int i = 1;\
    \ i <= n; i++){\n            sum += i;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010867
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) sum += i;\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return sumToN(n, (n == -1l) ? 0l : ((n == 1l) ? 1l : n));\n    }\n  \
    \  public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77r_f554.java:21: error: method sumToN in class Problem cannot\
    \ be applied to given types;\n        return sumToN(n, (n == -1l) ? 0l : ((n ==\
    \ 1l) ? 1l : n));\n               ^\n  required: long\n  found:    long,long\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 1)\n            return 1;\n        long s = 1;\n        for\
    \ (long i = 1; i < n; i++)\n            s += i;\n        return s;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb6rprle.java:30)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n)\n                .mapToLong(i->i)\n\
    \                .sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp458ru9w7.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n)\n             \
    \                           ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(n+n, (m)->m%2==1?m-n:m+1)\n            .takeWhile((n)->n<=n)\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfeditvxs.java:22: error: variable n is already defined in method\
    \ sumToN(long)\n            .takeWhile((n)->n<=n)\n                        ^\n\
    /tmp/tmpfeditvxs.java:23: error: cannot find symbol\n            .sum();\n   \
    \         ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n2 errors\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0; \n        for(long i=1; i<=n; i++)\n            sum +=\
    \ i;\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(int i = 1; i < n; n++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3zeycmb.java:28)\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1l, (longToSupplier) n -> n + 1)\n            \
    \    .limit(n)\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0e04ih62.java:21: error: cannot find symbol\n        return Stream.iterate(1l,\
    \ (longToSupplier) n -> n + 1)\n                                   ^\n  symbol:\
    \   class longToSupplier\n  location: class Problem\n/tmp/tmp0e04ih62.java:21:\
    \ error: variable n is already defined in method sumToN(long)\n        return\
    \ Stream.iterate(1l, (longToSupplier) n -> n + 1)\n                          \
    \                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return StreamSupport.stream(new Supplier<Long>() {\n            public\
    \ Long get() {\n                long result = 1l;\n                for (long i\
    \ = 1l; i <= n; i++) {\n                    result += i;\n                }\n\
    \                return result;\n            }\n        }, false).reduce(1l, Long::sum);\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9b1c9hia.java:21: error: cannot find symbol\n        return StreamSupport.stream(new\
    \ Supplier<Long>() {\n                                        ^\n  symbol:   class\
    \ Supplier\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporsymqu3.java:28)\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Summation\n        long sum = 0;\n        for (long i = 1; i <= n;\
    \ i++) {\n            sum += i;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long ans = 1l;\n        for(long i = 1l; i <= n; i++) ans += i;\n   \
    \     return ans;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxr5vmuvs.java:26)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfv4w6_1.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).sum();\n      \
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        int c = 0; int sum = 0;\n        while (c++ < n) {\n            sum +=\
    \ c;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1l,n).sum()l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp43xy2q45.java:21: error: ';' expected\n        return IntStream.rangeClosed(1l,n).sum()l;\n\
    \                                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010867
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = n + 1;\n        for (long i = 2l; i <= n; i++) {\n       \
    \     sum -= i;\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp44_i24zg.java:28)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0) return 0;\n        long sum = 0;\n        for (int i = 1;\
    \ i <= n; ++i) {\n            sum += i;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 0)\n            throw new IllegalArgumentException(\"n must\
    \ be positive\");\n        long sum = 1;\n        while (--n >= 0)\n         \
    \   sum *= n + 1;\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfw5huk5m.java:30)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 0)\n            throw new IllegalArgumentException();\n    \
    \    else\n            return (1l << n)\n                    .filter((l) -> (l\
    \ < 1l))\n                    .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp39g421ge.java:25: error: long cannot be dereferenced\n        \
    \            .filter((l) -> (l < 1l))\n                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        int sum = 0;\n        for (long i = 1; i <= n; i++) sum += i;\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 1) return 1l;\n        if (n % 2 == 0) return n * sumToN(n -\
    \ 1l);\n        return sumToN(n / 2l) * sumToN(n % 2l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3omviht.java:27)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long n1 = (n * (long)Math.pow(10, 9l)) / 10l;\n        long n2 = (n *\
    \ (long)Math.pow(10, 6l)) / 10l;\n        long n3 = (n * (long)Math.pow(10, 3l))\
    \ / 10l;\n        long n4 = (n * (long)Math.pow(10, 1l)) / 10l;\n        return\
    \ (n1 + n2 + n3 + n4) / 4;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilm79xdx.java:28)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // A variable to hold the running sum.\n        long sum = 0L;\n\n  \
    \      // Loop n-1 times and calculate the sum.\n        for (int i = 1; i < n;\
    \ i++) {\n            sum += i;\n        }\n\n        // Return the running sum.\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf4rd816t.java:33)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfv4w6_1.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).sum();\n      \
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfv4w6_1.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).sum();\n      \
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).mapToLong(i->i).sum();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq98yh2bm.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).mapToLong(i->i).sum();\n\
    \                                        ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long s = 1;\n        for (long i = 1; i <= n; i++) {\n            s +=\
    \ i;\n        }\n        return s;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1cd1h1yg.java:28)\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(n,1),1),2),3),4),5),6),7),8);\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfbj71ic7.java:21: error: ')' expected\n        return Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(Math.addExact(n,1),1),2),3),4),5),6),7),8);\n\
    \                                                                            \
    \                                                                            \
    \                               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 0l) {\n            throw new IllegalArgumentException(\"n must\
    \ be positive\");\n        }\n        long sum = 0l;\n        for (int i = 1l;\
    \ i <= n; i++) {\n            sum += i;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5csado3n.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = 1l; i <= n; i++) {\n                \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(0, i -> i + 1)\n            .limit(n)\n       \
    \     .sum();\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2pznr4dr.java:23: error: cannot find symbol\n            .sum();\n\
    \            ^\n  symbol:   method sum()\n  location: interface Stream<Integer>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1l; i <= n; ++i) sum += i;\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Math.pow(10, n);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujrcx2pz.java:21: error: incompatible types: possible lossy conversion\
    \ from double to long\n        return Math.pow(10, n);\n                     \
    \  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Create a BigInteger from the input number.\n        BigInteger number\
    \ = BigInteger.valueOf(n);\n        // Create a BigDecimal by multiplying the\
    \ input number with 10.\n        BigDecimal ten = BigDecimal.valueOf(10);\n  \
    \      BigDecimal result = number.multiply(ten);\n        // Return the result\
    \ as an integer.\n        return result.intValueExact();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptq76glgf.java:25: error: no suitable method found for multiply(BigDecimal)\n\
    \        BigDecimal result = number.multiply(ten);\n                         \
    \         ^\n    method BigInteger.multiply(BigInteger) is not applicable\n  \
    \    (argument mismatch; BigDecimal cannot be converted to BigInteger)\n    method\
    \ BigInteger.multiply(long) is not applicable\n      (argument mismatch; BigDecimal\
    \ cannot be converted to long)\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        int count = 0;\n        while (n > 0) {\n            n -= 1;\n      \
    \      count += 1;\n        }\n        return (1l << (count - 1)) + sumToN(count);\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.java:26)\n\tat Problem.sumToN(tmp2mxzaha_.java:26)\n\
    \tat Problem.sumToN(tmp2mxzaha_.j"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Math.pow(n, 2);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp__3pqak0.java:21: error: incompatible types: possible lossy conversion\
    \ from double to long\n        return Math.pow(n, 2);\n                      \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long total = 0;\n        for (long i = 1; i <= n; i++) {\n          \
    \  total += i;\n        }\n        return total;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010802
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 1l)\n            return n; \n        long total = 1l;\n    \
    \    for (long i = 1l; i <= n; i++) {\n            total += i;\n        }\n  \
    \      return total;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo49yrpjn.java:31)\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.range(1, n).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp00czrejf.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).sum();\n            \
    \                      ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1l, (long.sumOfDouble(it->(double)it)))\n     \
    \           .limit(n)\n                .mapToLong(it->(double)it)\n          \
    \      .sum();\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf4ft4knv.java:21: error: class expected\n        return Stream.iterate(1l,\
    \ (long.sumOfDouble(it->(double)it)))\n                                      \
    \  ^\n/tmp/tmpf4ft4knv.java:21: error: ')' expected\n        return Stream.iterate(1l,\
    \ (long.sumOfDouble(it->(double)it)))\n                                      \
    \             ^\n/tmp/tmpf4ft4knv.java:21: error: not a statement\n        return\
    \ Stream.iterate(1l, (long.sumOfDouble(it->(double)it)))\n                   \
    \                                 ^\n/tmp/tmpf4ft4knv.java:21: error: ';' expected\n\
    \        return Stream.iterate(1l, (long.sumOfDouble(it->(double)it)))\n     \
    \                                                             ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long[] nums = Arrays.stream(Long.valueOf(n.toString()).split(\"\")).mapToLong(Long::valueOf).toArray();\n\
    \        long num = 0;\n        for (int i = 0; i < nums.length - 1; ++i) {\n\
    \            num = nums[i] + nums[i + 1];\n        }\n        return num;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(sumToN((1l)) ==\
    \ (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv8jqo304.java:21: error: long cannot be dereferenced\n        long[]\
    \ nums = Arrays.stream(Long.valueOf(n.toString()).split(\"\")).mapToLong(Long::valueOf).toArray();\n\
    \                                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long a = (long) Integer.MAX_VALUE;\n        for (long b = 1; b <= n;\
    \ b++) {\n            a += b;\n        }\n        return a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfnstreo.java:28)\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0) return 0;\n        long total = 0;\n        for (int i =\
    \ 1; i <=n; i++){\n            total = total + i;\n        }\n        return total;\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 1l) {\n            throw new IllegalArgumentException(\"n must\
    \ be >= 1\");\n        }\n        if (n == 1l) {\n            return 1l;\n   \
    \     }\n        long sum = 0l;\n        for (long i = 1l; i <= n; i++) {\n  \
    \          sum += i;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(long i = 1;;i++) {\n            sum += i;\n\
    \            if(sum > n) break;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0sx50qn.java:29)\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (; n != 0; n--) {\n            sum += n;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        final long res = 1;\n        long cur = n;\n        while (cur > 0) {\n\
    \            res += cur;\n            cur /= 10;\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmper19wa8i.java:24: error: cannot assign a value to final variable\
    \ res\n            res += cur;\n            ^\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write code here.\n        if (n < 1) {\n            return 0l;\n \
    \       }\n        return IntStream.range(1, n).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3_s7tsq.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).sum();\n            \
    \                      ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your Java here.\n        int start = 1;\n        int end = n;\n\
    \        int sum = 0;\n        for(int i = start; i<=end; i++)\n        {\n  \
    \          sum += i;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppa0cefc3.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int end = n;\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) sum += i;\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // base case: when n is 1\n        if (n == 1l) return 1l;\n        //\
    \ recursive case: add n to the sum of the preceding numbers\n        long sum\
    \ = 0;\n        while (n > 0l) {\n            sum += n--;\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ = sum * i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgir0d2fl.java:29)\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your code here!\n        return (n);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdszpk72m.java:26)\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 2l)\n            return (1l);\n        long sum = 0l;\n     \
    \   for (long i = 1l; i <= n; ++i)\n            sum += i;\n        return (sum);\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return sum_to_n(n);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpajl_fra6.java:21: error: cannot find symbol\n        return sum_to_n(n);\n\
    \               ^\n  symbol:   method sum_to_n(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010869
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0l) {\n            return 0l;\n        }\n        long sum =\
    \ 0l;\n        for (long i = 1; i <= n; i++) {\n            sum = sum + i;\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.range(1, n).reduce(0, (i, j) -> i + j);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnlw8gd_v.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).reduce(0, (i, j) -> i\
    \ + j);\n                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 2l) return n;\n        return n*(n + 1l) + sumToN(n + 1l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\tat Problem.sumToN(tmp8i6wqkgr.java:22)\n\
    \tat Problem.sumToN(tmp8i6wqkgr.j"
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        Set<Long> s = new HashSet<>();\n        long result = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            s.add(i);\n            result += i;\n\
    \        }\n        // convert back to a tuple in order to\n        // make sure\
    \ we only add n to the sum once\n        // but also not accidentally add twice\
    \ to the sum\n        // e.g. if you sum from 1 through 100 we would add 1\n \
    \       // but also 111 which would add two to sum\n        return (long) s.toArray().stream().flatMap(x\
    \ -> Arrays.stream(new long[]{x}).mapToLong(x -> x + 1l)).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkpuuhl1o.java:32: error: cannot find symbol\n        return (long)\
    \ s.toArray().stream().flatMap(x -> Arrays.stream(new long[]{x}).mapToLong(x ->\
    \ x + 1l)).sum();\n                                 ^\n  symbol:   method stream()\n\
    \  location: class Object[]\n/tmp/tmpkpuuhl1o.java:32: error: cannot find symbol\n\
    \        return (long) s.toArray().stream().flatMap(x -> Arrays.stream(new long[]{x}).mapToLong(x\
    \ -> x + 1l)).sum();\n                                                       \
    \                             ^\n  symbol:   method mapToLong((x)->x + 1L)\n \
    \ location: interface LongStream\n2 errors\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if ((n<=0l))\n            return 0l;\n        else\n            return\
    \ n*(3l)+sumToN(n-3l);\n    }\n    public static void main(String[] args) {\n\
    \    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnv3zwugw.java:27)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return LongStream.range(1, n).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdri0411o.java:24)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1l, i -> n + i)\n                .limit(n)\n  \
    \              .sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2p7jgf5r.java:23: error: cannot find symbol\n                .sum();\n\
    \                ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return n.reduce(BigInteger::add);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjhfrjng.java:21: error: long cannot be dereferenced\n        return\
    \ n.reduce(BigInteger::add);\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1l, i -> i + 1).limit(n).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqz09umhy.java:21: error: cannot find symbol\n        return Stream.iterate(1l,\
    \ i -> i + 1).limit(n).sum();\n                                              \
    \        ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(n, (n, i) -> n + i).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ysf673b.java:21: error: no suitable method found for iterate(long,(n,i)->n\
    \ + i)\n        return Stream.iterate(n, (n, i) -> n + i).sum();\n           \
    \          ^\n    method Stream.<T#1>iterate(T#1,UnaryOperator<T#1>) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; incompatible\
    \ parameter types in lambda expression))\n    method Stream.<T#2>iterate(T#2,Predicate<?\
    \ super T#2>,UnaryOperator<T#2>) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>iterate(T#1,UnaryOperator<T#1>)\n\
    \    T#2 extends Object declared in method <T#2>iterate(T#2,Predicate<? super\
    \ T#2>,UnaryOperator<T#2>)\n/tmp/tmp_ysf673b.java:21: error: variable n is already\
    \ defined in method sumToN(long)\n        return Stream.iterate(n, (n, i) -> n\
    \ + i).sum();\n                                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = n;\n        for(int i = 1l; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp71j_4kxu.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = 1l; i <= n; i++) {\n                 \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 1l;\n        for (long i = 1l; i <= n; i++) {\n          \
    \  sum += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66t2tuen.java:28)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0; // sum is initialized to zero\n        long limit = n;\
    \ // limit is the largest number to be considered\n        while (limit > 0) {\n\
    \            sum += limit;\n            limit--;\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(int i=1; i<=n; i++) {\n            sum +=\
    \ i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long nMax = (long) Math.pow(2, n) - 1;\n        long sum = 0;\n     \
    \   for (long i = 1; i <= nMax; i++) {\n            sum += i;\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu61wj3f1.java:30)\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++)\n            sum\
    \ += i;\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.range(1, n).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp00czrejf.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).sum();\n            \
    \                      ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 0) throw new RuntimeException(\"negative\");\n        if (n ==\
    \ 0) return 0l;\n        long sum = 0;\n        for (long i = 1; i <= n; i++)\
    \ {\n            sum += i;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long s = LongStream.rangeClosed(1l, n).sum();\n        if (n < 0) {\n\
    \            s *= -1;\n        }\n        return s;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return LongStream.rangeClosed(1, n).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010801
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        Set<Long> s = Stream.iterate(1l, l -> l + 1).limit(n).toSet();\n    \
    \    return s.stream().reduce(Math::addExact).toLong();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprng_1n8g.java:21: error: cannot find symbol\n        Set<Long>\
    \ s = Stream.iterate(1l, l -> l + 1).limit(n).toSet();\n                     \
    \                                        ^\n  symbol:   method toSet()\n  location:\
    \ interface Stream<Long>\n/tmp/tmprng_1n8g.java:22: error: cannot find symbol\n\
    \        return s.stream().reduce(Math::addExact).toLong();\n                \
    \                                ^\n  symbol:   method toLong()\n  location: class\
    \ Optional<Long>\n2 errors\n"
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(long i = 1; i <= n; i++) sum += i;\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010870
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; ++i) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 1l)\n            return 0l;\n        if (n < 3l)\n          \
    \  return (long) (n + n);\n        if (n < 5l)\n            return 5l;\n     \
    \   if (n < 10l)\n            return 10l;\n        if (n < 20l)\n            return\
    \ 15l;\n        if (n < 30l)\n            return 30l;\n        if (n < 40l)\n\
    \            return 55l;\n        return 110l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxo6m0ej1.java:38)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.range(1, n).reduce(0, (a, b) -> a + b);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqjbciigy.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1, n).reduce(0, (a, b) -> a\
    \ + b);\n                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your code here\n        ArrayList<Long> arr = new ArrayList<>();\n\
    \        long result = 0;\n        for(long i=1;i<=n;i++) {\n            arr.add(i);\n\
    \        }\n        Arrays.sort(arr);\n        for(int i=arr.size()-1;i>0;i--)\
    \ {\n            result = result + arr.get(i);\n        }\n        \n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2nm9t90.java:27: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(arr);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0L;\n        while (n > 0) {\n            sum += (n--);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1l,i -> i+1l).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsamhpvs9.java:21: error: cannot find symbol\n        return Stream.iterate(1l,i\
    \ -> i+1l).sum();\n                                           ^\n  symbol:   method\
    \ sum()\n  location: interface Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (; n > 0; n--) {\n            sum += n;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0) return 1l;\n        return n + sumToN(n - 1l);\n    }\n \
    \   public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi3qs6sq.java:25)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 1l) { return 1l; }\n        if (n == 0l) { return 0l; }\n  \
    \      long sum = 0l;\n        for (long i = 2l; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe872lzs.java:31)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return LongStream.rangeClosed(1, n).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010801
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.generate(() -> {\n            long sum = 0;\n         \
    \   while (n > 0) {\n                sum += n;\n                n--;\n       \
    \     }\n            return sum;\n        }).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps2y1jckc.java:28: error: cannot find symbol\n        }).sum();\n\
    \          ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = n;\n        while ((n /= 10) > 0) {\n            sum *= 10l;\n\
    \            sum += n--;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgb9ko7ql.java:30)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long result = 1l;\n        while (n > 0) {\n            result += (n\
    \ & 1l);\n            n >>>= 1;\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyiru670s.java:29)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = (1l);\n        for (long i = (1l); i >= n; i--) {\n      \
    \      sum = sum * ((i + 1l));\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z3vy_6f.java:28)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 1l) {\n            return 1l;\n        }\n        return n *\
    \ sumToN(n - 1l);\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwahfgh8o.java:28)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i < n; i *= 3) {\n          \
    \  sum += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgweq0ex2.java:28)\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 1l) {\n            return 0l;\n        }\n        long sum =\
    \ 0l;\n        long currentNumber = 1l;\n        while (n > 0) {\n           \
    \ sum += currentNumber;\n            currentNumber++;\n            n--;\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n = n / 10;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbvu79dz.java:30)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(long i=1;i<=n;i++) {\n            sum += i;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return n.stream()\n                .map(i -> (long) (i + 1))\n      \
    \          .reduce((i1, i2) -> i1 + i2)\n                .orElseThrow(() -> new\
    \ RuntimeException(\"n must be larger than zero\"));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsi_jcrg6.java:21: error: long cannot be dereferenced\n        return\
    \ n.stream()\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010871
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long result = 0;\n        for (long i = 1; i <= n; ++i) {\n         \
    \   result += i;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your code here.\n        return n*n;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1c2gra4.java:26)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n <= 1l) {\n            return n;\n        } else {\n           \
    \ return n % 2 == 0\n                ? sumToN(n / 2)\n                : sumToN(n\
    \ - 1l) * (1l) + sumToN(n / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0c2oggi_.java:31)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n<0) throw new IllegalArgumentException();\n        if (n==0) return\
    \ 1;\n        return n * sumToN(n-1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqd920fj5.java:27)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Write your logic here\n        if(n==0) return 0;\n        if(n==1)\
    \ return 1;\n        if(n==2) return 2;\n        if(n<2l) return Long.MAX_VALUE;\n\
    \        if(n<3l) return Long.MIN_VALUE;\n        return ((long) sumToN(n/2)+n%2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp8u5bb2i.java:31)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0)\n            return 0;\n        if (n < 0)\n            throw\
    \ new IllegalArgumentException();\n        long sum = 0;\n        for (long i\
    \ = 1; i <= n; i++)\n            sum += i;\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for(int i = 1; i <= n; i++) sum += i;\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        while (n > 0) {\n            sum += n;\n     \
    \       n -= 1;\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return (1l * (1l * n));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccg0_7dg.java:25)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfv4w6_1.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).sum();\n      \
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010866
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010798
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(n, (long i) -> i + 1)\n                    .limit(n)\n\
    \                    .sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfp1bo9a.java:21: error: no suitable method found for iterate(long,(long\
    \ i)->i + 1)\n        return Stream.iterate(n, (long i) -> i + 1)\n          \
    \           ^\n    method Stream.<T#1>iterate(T#1,UnaryOperator<T#1>) is not applicable\n\
    \      (inference variable T#1 has incompatible bounds\n        equality constraints:\
    \ long\n        lower bounds: Object)\n    method Stream.<T#2>iterate(T#2,Predicate<?\
    \ super T#2>,UnaryOperator<T#2>) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>iterate(T#1,UnaryOperator<T#1>)\n\
    \    T#2 extends Object declared in method <T#2>iterate(T#2,Predicate<? super\
    \ T#2>,UnaryOperator<T#2>)\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1l, i -> i + 1).takeWhile(i -> i <= n).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6t6aiws7.java:21: error: cannot find symbol\n        return Stream.iterate(1l,\
    \ i -> i + 1).takeWhile(i -> i <= n).sum();\n                                \
    \                                    ^\n  symbol:   method sum()\n  location:\
    \ interface Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return n <= 0l ? 0l : n * (long) Math.pow(1l, n - 1l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1s545sxw.java:25)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0l;\n        for(int i = 1l ; i<n; ++i) {\n            sum\
    \ = sum + i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnhtp63sq.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = 1l ; i<n; ++i) {\n                   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n\
    \    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n \
    \   assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i < n; i++) sum += i;\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mndg283.java:26)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return\
    \ n + sumToN(n - 1);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l))\
    \ == (66l));\n    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l))\
    \ == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(0, i -> i + 1).takeWhile(i -> i <= n).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps97vk6ni.java:21: error: cannot find symbol\n        return Stream.iterate(0,\
    \ i -> i + 1).takeWhile(i -> i <= n).sum();\n                                \
    \                                   ^\n  symbol:   method sum()\n  location: interface\
    \ Stream<Integer>\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return Stream.iterate(1, n -> n + 1).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1zw7uxjf.java:21: error: variable n is already defined in method\
    \ sumToN(long)\n        return Stream.iterate(1, n -> n + 1).sum();\n        \
    \                         ^\n/tmp/tmp1zw7uxjf.java:21: error: cannot find symbol\n\
    \        return Stream.iterate(1, n -> n + 1).sum();\n                       \
    \                     ^\n  symbol:   method sum()\n  location: interface Stream<Integer>\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return LongStream.rangeClosed(1, n).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010801
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n < 0L) {\n            throw new IllegalArgumentException();\n  \
    \      }\n        if (n == 0L) {\n            return 0L;\n        }\n        return\
    \ Stream.iterate(1L, i -> i + 1).limit(n).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpokua9j_j.java:27: error: cannot find symbol\n        return Stream.iterate(1L,\
    \ i -> i + 1).limit(n).sum();\n                                              \
    \        ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        List<Long> result = new ArrayList<>();\n        for(int i = 0; i <= n;\
    \ i++) {\n            result.add(1l);\n        }\n        return LongStream.range(1l,n).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp567vqfve.java:28)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        return IntStream.rangeClosed(1, n).reduce(0, (acc, x) -> acc+x);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(sumToN((1l)) ==\
    \ (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp83s6r26_.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.rangeClosed(1, n).reduce(0, (acc,\
    \ x) -> acc+x);\n                                        ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0) return 0;\n        return n + (sumToN(n - 1));\n    }\n \
    \   public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (; n > 0; n--) {\n            sum += n;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010871
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i < n; ++i)\n            sum\
    \ += i;\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l)) == (21l));\n \
    \   assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) == (465l));\n  \
    \  assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpls7bocq8.java:27)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // Java 8 introduced the reduce method, which makes this a lot easier!\n\
    \        return (n == 0) ? 1l : n.stream().reduce(1l, Long::sum);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n\
    \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n   \
    \ assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphaju373q.java:22: error: long cannot be dereferenced\n        return\
    \ (n == 0) ? 1l : n.stream().reduce(1l, Long::sum);\n                        \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        long sum = 0;\n        for (long i = 1; i <= n; i++) sum += i;\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        if (n == 0l) {\n            return 0l;\n        }\n        long n1 =\
    \ 1l;\n        while (n1 > n) {\n            n1 <<= 1;\n        }\n        return\
    \ n1 * (n1 - 1l);\n    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
    \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
    \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhqq6j9j.java:31)\n"
  stdout: ''
  timestamp: 1660010872
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
    \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
    \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
    \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n\
    \        // sum is one less than n plus one more than n\n        long sum = (n\
    \ - 1) + n + 1;\n        // This sums up to n, so this is just n + n + 1\n   \
    \     // But we also add one because we start from n+1 and we want\n        //\
    \ to make sure that we get n back.\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sumToN((1l)) == (1l));\n    assert(sumToN((6l))\
    \ == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l)) ==\
    \ (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvo_kc69i.java:29)\n"
  stdout: ''
  timestamp: 1660010872

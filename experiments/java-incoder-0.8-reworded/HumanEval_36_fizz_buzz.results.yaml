language: java
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return n < 10l\
    \ ? 1l :\n            n.mod(11l) == 7l ? 1l : \n            n.mod(13l) == 7l ?\
    \ 1l : \n            fizzBuzz(n / 10l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_keg5eks.java:18: error: long cannot be dereferenced\n        \
    \    n.mod(11l) == 7l ? 1l : \n             ^\n/tmp/tmp_keg5eks.java:19: error:\
    \ long cannot be dereferenced\n            n.mod(13l) == 7l ? 1l : \n        \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        for(int i = 0; i<=n;i++){\n            if(i % 11 == 0 || i % 13\
    \ == 0){\n                result++;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnr3khh1k.java:26)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0l;\n        long counter = 1l;\n        for (long i = n; i > 0; i--) {\n  \
    \          if (i % 11 == 0 && i % 13 == 0) {\n                counter += 1;\n\
    \            }\n            if (i % 11 == 0) {\n                result += counter;\n\
    \                counter = 1l;\n            }\n            if (i % 13 == 0) {\n\
    \                result += counter;\n                counter = 1l;\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5g8f2y9i.java:35)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0, max = (n-1) / 11+1;\n        for (int i=0; i<=max; i++) {\n            if\
    \ (n % 11 == 0 && n % 13 == 0) {\n                count++;\n            }\n  \
    \          if (i % 11 == 0 && i % 13 == 0) {\n                count++;\n     \
    \       }\n            if (i % 11 == 0) {\n                count++;\n        \
    \    }\n            if (i % 13 == 0) {\n                count++;\n           \
    \ }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppr15_hp4.java:35)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ (n < 0) ? -n : n;\n        if (count > 100000000l) throw new IllegalArgumentException(\"\
    Input value too large for long.\");\n        String pattern = String.format(\"\
    (\\\\d{{%d}}(?:\\\\d{{%d}})?)\", ((int)'7') - 1, ((int)'7') - 1);\n        long\
    \ totalCount = 0;\n        long count = 0;\n        for (int i = 0; i < 100000000;\
    \ i++) {\n            String s = String.format(\"%0\" + String.format(pattern,\
    \ ((int)'7') - 1 - i) + \"d\", i);\n            Matcher matcher = Pattern.compile(pattern).matcher(s);\n\
    \            if (matcher.find()) {\n                count++;\n               \
    \ if (count % 11 == 0) totalCount++;\n                if (count % 13 == 0) totalCount++;\n\
    \            }\n        }\n        return (long)totalCount;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5r44ynad.java:21: error: variable count is already defined in method\
    \ fizzBuzz(long)\n        long count = 0;\n             ^\n/tmp/tmp5r44ynad.java:24:\
    \ error: cannot find symbol\n            Matcher matcher = Pattern.compile(pattern).matcher(s);\n\
    \            ^\n  symbol:   class Matcher\n  location: class Problem\n/tmp/tmp5r44ynad.java:24:\
    \ error: cannot find symbol\n            Matcher matcher = Pattern.compile(pattern).matcher(s);\n\
    \                              ^\n  symbol:   variable Pattern\n  location: class\
    \ Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int count = 0;\n\
    \        for (long i = n; i > 0; i /= 11l) {\n            if ((i % 11l) == 7l)\
    \ {\n                count += 1;\n            }\n            if (i % 13l == 7l)\
    \ {\n                count += 1;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0dwrmjm.java:31)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        ArrayList list\
    \ = new ArrayList();\n        int count1=0, count2=0, count3=0, count4=0, count5=0,\
    \ count6=0, count7=0;\n        for(long i=1; i<= n; i++) {\n            long temp;\n\
    \            if(i%11==0) {\n                count1++;\n                if((i%13)!=0)\
    \ {\n                    count2++;\n                    if((i%17)!=0) {\n    \
    \                    count3++;\n                        if((i%19)!=0) {\n    \
    \                        count4++;\n                            if((i%23)!=0)\
    \ {\n                                count5++;\n                             \
    \   if((i%29)!=0) {\n                                    count6++;\n         \
    \                           if((i%35)!=0) {\n                                \
    \        count7++;\n                                        temp=1;\n        \
    \                                break;\n                                    }\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n        if(count1==count2==count3==count4==count5==count6==count7) {\n\
    \            list.add(1);\n        }\n        else if(count1>count2==count3>count4==count5==count6==count7)\
    \ {\n            list.add(2);\n        }\n        else if(count2>count1==count3>count4==count5==count6==count7)\
    \ {\n            list.add(3);\n        }\n        else if(count3>count2==count1>count4==count5==count6==count7)\
    \ {\n            list.add(4);\n        }\n        else if(count4>count2==count3>count1==count5==count6==count7)\
    \ {\n            list.add(5);\n        }\n        else if(count5==count4==count3==count1==count2==count6==count7)\
    \ {\n            list.add(6);\n        }\n        else if(count6==count5==count4==count3==count1==count2==count7)\
    \ {\n            list.add(7);\n        }\n        else if(count7==count6==count5==count4==count3==count1==count2)\
    \ {\n            list.add(8);\n        }\n        else if(count7==count6==count5==count4==count3==count1)\
    \ {\n            list.add(9);\n        }\n        else if(count7==count6==count5==count4==count3)\
    \ {\n            list.add(10);\n        }\n        else if(count7==count6==count5==count4==count3==count1)\
    \ {\n            list.add(11);\n        }\n        else if(count7==count6==count5==count4==count3)\
    \ {\n            list.add(\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo9zn2s3p.java:80: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpo9zn2s3p.java:81: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        for (long i = 2; i <= n; i += 11) {\n            if (i % 11 == 0)\
    \ result += (i / 11 + 1);\n            if (i % 13 == 0) result += (i / 13 + 1);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptg_h0is9.java:25)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long cnt = 0;\n\
    \        long[] nums = LongStream.rangeClosed(n, Integer.MAX_VALUE).boxed().toArray();\n\
    \        for (int i : nums) {\n            cnt += isFizzBuzz(i);\n        }\n\
    \        return cnt;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n  \
    \  assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n \
    \   assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmput4g3uk6.java:18: error: incompatible types: Object[] cannot be\
    \ converted to long[]\n        long[] nums = LongStream.rangeClosed(n, Integer.MAX_VALUE).boxed().toArray();\n\
    \                                                                            \
    \      ^\n/tmp/tmput4g3uk6.java:19: error: incompatible types: possible lossy\
    \ conversion from long to int\n        for (int i : nums) {\n                \
    \     ^\n/tmp/tmput4g3uk6.java:20: error: cannot find symbol\n            cnt\
    \ += isFizzBuzz(i);\n                   ^\n  symbol:   method isFizzBuzz(int)\n\
    \  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        Set<Long> set = new HashSet<>();\n        while (n != 0) {\n   \
    \         long div = n / 11;\n            if (div == 13 || div == 0) break;\n\
    \            if (set.contains(div)) count++;\n            set.add(div);\n    \
    \        n = div;\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvy0xy1vp.java:30)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n <= 1) return\
    \ 0;\n        if (n % 11 == 0 || n % 13 == 0) return (n % 7 == 0) ? n : 0;\n \
    \       return fizzBuzz((n - 3) / 7) * 7 + fizzBuzz((n - 3) / 3);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprpg2xe6p.java:23)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fizz = 0;\n\
    \        long buzz = 0;\n        long answer = 0;\n\n        boolean isFizz =\
    \ false;\n        boolean isBuzz = false;\n\n        while (n!=0){\n         \
    \   long rem=n%10;\n            if(n%11==0 || n%13==0){\n                if(rem==7){\n\
    \                    isFizz=true;\n                }else if(rem==5){\n       \
    \             isBuzz=true;\n                }\n            }\n            long\
    \ temp=n;\n            n=n/10;\n            answer += temp;\n        }\n     \
    \   if(isFizz){\n            fizz++;\n        }\n        if(isBuzz){\n       \
    \     buzz++;\n        }\n        if(fizz+buzz>0){\n            answer++;\n  \
    \      }\n\n        return answer;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2n5cyg0l.java:50)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return IntStream.range(0,\
    \ n).filter(i -> i % 11 == 0 || i % 13 == 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx0tainp6.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(0, n).filter(i -> i % 11 ==\
    \ 0 || i % 13 == 0).count();\n                                  ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n > 0) {\n            if ((n & 1) == 0) {\n             \
    \   if ((n & 12) == 0) {\n                    if ((n & 34) == 0) {\n         \
    \               count++;\n                    }\n                }\n         \
    \   }\n            n >>>= 1;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpvfoxud.java:32)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // write your\
    \ code here\n        // 7 is the only digit that appears multiple times in numbers\
    \ less than n\n        long count = 7;\n        for (long i = 50l; i <= n; i+=11l)\
    \ {\n            if (i % 11 == 0) count++;\n            if (i % 13 == 0) count++;\n\
    \            if (count == 7) return i;\n        }\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiipvtd_a.java:28)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long ans = 0;\n\
    \        if (n < 10) {\n            ans += 1;\n        }\n        if (n < 100)\
    \ {\n            ans += 2;\n        }\n        if (n < 1000) {\n            ans\
    \ += 3;\n        }\n        if (n < 10000) {\n            ans += 4;\n        }\n\
    \        if (n < 100000) {\n            ans += 5;\n        }\n        if (n <\
    \ 1000000) {\n            ans += 6;\n        }\n        if (n < 100000000) {\n\
    \            ans += 7;\n        }\n        if (n < 1000000000) {\n           \
    \ ans += 8;\n        }\n        if (n < 10000000000) {\n            ans += 9;\n\
    \        }\n        if (n < 100000000000) {\n            ans += 10;\n        }\n\
    \        if (n < 1000000000000) {\n            ans += 11;\n        }\n       \
    \ if (n < 10000000000000) {\n            ans += 12;\n        }\n        if (n\
    \ < 100000000000000) {\n            ans += 13;\n        }\n        if (n < 1000000000000000)\
    \ {\n            ans += 14;\n        }\n        if (n < 10000000000000000) {\n\
    \            ans += 15;\n        }\n        if (n < 100000000000000000) {\n  \
    \          ans += 16;\n        }\n        if (n < 1000000000000000001) {\n   \
    \         ans += 17;\n        }\n        if (n < 1000000000000000002) {\n    \
    \        ans += 18;\n        }\n        if (n < 1000000000000000003) {\n     \
    \       ans += 19;\n        }\n        if (n < 1000000000000000004) {\n      \
    \      ans += 20;\n        }\n        if (n < 1000000000000000005) {\n       \
    \     ans += 21;\n        }\n        if (n < 1000000000000000006) {\n        \
    \    ans += 22;\n        }\n        if (n < 1000000000000000007) {\n         \
    \   ans += 23;\n        }\n        if (n < 1000000000000000008) {\n          \
    \  ans += 24;\n        }\n        if (n < 1000000000000000009) {\n           \
    \ ans += 25;\n        }\n        if (n < 1000000000000000010) {\n            ans\
    \ += 26;\n        }\n        if (n < 1000000000000000011) {\n            ans +=\
    \ 27;\n        }\n        if (n < 1000000000000000012) {\n            ans += 28;\n\
    \        }\n        if (n < 1000000000000000013) {\n            ans += 29;\n \
    \       }\n        if (n < 1000000000000000014) {\n            ans += 30;\n  \
    \      }\n        if (n < 1000000000000000015) {\n            ans += 31;\n   \
    \     }\n        if (n < 1000000000000000016) {\n            ans += 32;\n    \
    \    }\n        if (n < 1000000000000000017) {\n            ans += 33;\n     \
    \   }\n        if (n < 1000000000000000018) {\n            ans += 34;\n      \
    \  }\n        if (n < 1000000000000000019) {\n            ans += 35;\n       \
    \ }\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ov2jnn6.java:42: error: integer number too large\n        if (n\
    \ < 10000000000) {\n                ^\n/tmp/tmp9ov2jnn6.java:45: error: integer\
    \ number too large\n        if (n < 100000000000) {\n                ^\n/tmp/tmp9ov2jnn6.java:48:\
    \ error: integer number too large\n        if (n < 1000000000000) {\n        \
    \        ^\n/tmp/tmp9ov2jnn6.java:51: error: integer number too large\n      \
    \  if (n < 10000000000000) {\n                ^\n/tmp/tmp9ov2jnn6.java:54: error:\
    \ integer number too large\n        if (n < 100000000000000) {\n             \
    \   ^\n/tmp/tmp9ov2jnn6.java:57: error: integer number too large\n        if (n\
    \ < 1000000000000000) {\n                ^\n/tmp/tmp9ov2jnn6.java:60: error: integer\
    \ number too large\n        if (n < 10000000000000000) {\n                ^\n\
    /tmp/tmp9ov2jnn6.java:63: error: integer number too large\n        if (n < 100000000000000000)\
    \ {\n                ^\n/tmp/tmp9ov2jnn6.java:66: error: integer number too large\n\
    \        if (n < 1000000000000000001) {\n                ^\n/tmp/tmp9ov2jnn6.java:69:\
    \ error: integer number too large\n        if (n < 1000000000000000002) {\n  \
    \              ^\n/tmp/tmp9ov2jnn6.java:72: error: integer number too large\n\
    \        if (n < 1000000000000000003) {\n                ^\n/tmp/tmp9ov2jnn6.java:75:\
    \ error: integer number too large\n        if (n < 1000000000000000004) {\n  \
    \              ^\n/tmp/tmp9ov2jnn6.java:78: error: integer number too large\n\
    \        if (n < 1000000000000000005) {\n                ^\n/tmp/tmp9ov2jnn6.java:81:\
    \ error: integer number too large\n        if (n < 1000000000000000006) {\n  \
    \              ^\n/tmp/tmp9ov2jnn6.java:84: error: integer number too large\n\
    \        if (n < 1000000000000000007) {\n                ^\n/tmp/tmp9ov2jnn6.java:87:\
    \ error: integer number too large\n        if (n < 1000000000000000008) {\n  \
    \              ^\n/tmp/tmp9ov2jnn6.java:90: error: integer number too large\n\
    \        if (n < 1000000000000000009) {\n                ^\n/tmp/tmp9ov2jnn6.java:93:\
    \ error: integer number too large\n        if (n < 1000000000000000010) {\n  \
    \              ^\n/tmp/tmp9ov2jn"
  stdout: ''
  timestamp: 1660011749
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        do {\n            long num = n;\n            while (num > 0) {\n\
    \                if (num % 11 == 0 || num % 13 == 0) {\n                    count++;\n\
    \                }\n                num = num / 11;\n            }\n         \
    \   n = n;\n        } while (n != 1l);\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long num = 0;\n\
    \        long digit = 7;\n        while (n > 0) {\n            int remainder =\
    \ n % 10;\n            if (remainder == digit) {\n                num ++;\n  \
    \          }\n            n = n / 10;\n        }\n        return num;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqdkji_4q.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int remainder = n % 10;\n                    \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) return\
    \ n;\n        if (n % 11 == 0 || n % 13 == 0) return (long) (10 * fizzBuzz(n /\
    \ 10) + n % 10);\n        return fizzBuzz(n / 10) + n % 10;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3pzqzwyl.java:22)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long nDivisor\
    \ = n%11 == 0 || n%13 == 0 ? 11 : 13;\n        long nMinusOne = n - 1;\n     \
    \   long nFive = n%5;\n        return (nMinusOne / nDivisor)%15 == 0 ? nMinusOne\
    \ % nDivisor : fizzBuzz(nMinusOne);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5mgk_qf.java:23)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while ((n % 11 == 0 || n % 13 == 0) && n < 10000000000000000l) {\n\
    \            if ((n / 11 % 11 == 0 || n / 13 % 13 == 0) && n % 11 == 0 && n %\
    \ 13 == 0) {\n                count++;\n            }\n            n = n/10;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9d4jo578.java:28)\n"
  stdout: ''
  timestamp: 1660011750
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        final BigInteger\
    \ BIG_ONE = BigInteger.valueOf(1);\n        if (n < 0 || n > 100) {\n        \
    \    return 0;\n        }\n        if (n % 11 == 0) {\n            return 1;\n\
    \        }\n        if (n % 13 == 0) {\n            return 2;\n        }\n   \
    \     if (n % 11 != 0 && n % 13 != 0) {\n            return 3;\n        }\n  \
    \      final BigInteger BIG_TWO = BigInteger.valueOf(2);\n        final BigInteger\
    \ BIG_THREE = BigInteger.valueOf(3);\n        final BigInteger BIG_FOUR = BigInteger.valueOf(4);\n\
    \        final BigInteger BIG_FIVE = BigInteger.valueOf(5);\n        final BigInteger\
    \ BIG_SIX = BigInteger.valueOf(6);\n        final BigInteger BIG_SEVEN = BigInteger.valueOf(7);\n\
    \        final BigInteger BIG_EIGHT = BigInteger.valueOf(8);\n        final BigInteger\
    \ BIG_NINE = BigInteger.valueOf(9);\n        final BigInteger BIG_EIGHTY = BIG_EIGHT.multiply(BIG_ONE).add(BIG_THREE);\n\
    \        final BigInteger BIG_THREEY = BIG_THREE.multiply(BIG_ONE).add(BIG_FOUR);\n\
    \        final BigInteger BIG_FOURY = BIG_FOUR.multiply(BIG_ONE).add(BIG_FIVE);\n\
    \        final BigInteger BIG_FIVEY = BIG_FIVE.multiply(BIG_ONE).add(BIG_SIX);\n\
    \        final BigInteger BIG_SIXY = BIG_SIX.multiply(BIG_ONE).add(BIG_SEVEN);\n\
    \        final BigInteger BIG_SEVENY = BIG_SEVEN.multiply(BIG_ONE).add(BIG_EIGHT);\n\
    \        final BigInteger BIG_ELEVENY = BIG_NINE.multiply(BIG_ONE).add(BIG_EIGHTY);\n\
    \        final BigInteger BIG_OCTONEY = BIG_ELEVENY.multiply(BIG_ONE).add(BIG_THREEY);\n\
    \        final BigInteger BIG_ELEVEN = BIG_OCTONEY.multiply(BIG_ONE).add(BIG_FOURY);\n\
    \        final BigInteger BIG_FIVEN = BIG_ELEVEN.multiply(BIG_ONE).add(BIG_FIVEY);\n\
    \        final BigInteger BIG_SIX = BIG_FIVEN.multiply(BIG_ONE).add(BIG_SIXY);\n\
    \        final BigInteger BIG_SEVEN = BIG_SIX.multiply(BIG_ONE).add(BIG_SEVENY);\n\
    \        final BigInteger BIG_ZERO = BigInteger.valueOf(0);\n        final BigInteger\
    \ BIG_TWO = BIG_ZERO.multiply(\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7j59qeo6.java:52: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011749
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int count = 0;\n\
    \        while (n>0 && n%11==0 || n%13==0) {\n            if (n%11==0) n = (n/11)*11;\n\
    \            if (n%13==0) n = (n/13)*13;\n            count++;\n        }\n  \
    \      return count;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n  \
    \  assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n \
    \   assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long res = 0;\n\
    \        for (long i = 100; i <= n; i++) {\n            long count = 0;\n    \
    \        if (i%11==0 || i%13==0) {\n                count++;\n            }\n\
    \            long temp = (i%11==0 && i%13==0)? i : i*2;\n            while (temp>100)\
    \ {\n                temp/=10;\n                count++;\n            }\n    \
    \        if (count==7 || count==13) res++;\n        }\n        return res;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo3vqhcpo.java:34)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n>0) {\n            count++;\n            n = n / 10;\n \
    \       }\n        if (count % 3 == 0 || count % 5 == 0) {\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3lpinyc3.java:28)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        final int max\
    \ = (int) Math.sqrt(n);\n        final int min = (int) Math.sqrt(n);\n       \
    \ return IntStream.rangeClosed(1, max).filter(i -> i % 11 == 0 || i % 13 == 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqlbu2qk.java:23)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0l;\n        for (int i = 1l; i <= Math.sqrt(n); ++i) {\n            if (n %\
    \ i == 0l && i % 11 == 0l && i % 13 == 0l) {\n                ++result;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqebx41rd.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = 1l; i <= Math.sqrt(n); ++i) {\n     \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int count = 0;\n\
    \        if (n < 10) {\n            count++;\n        } else if (n < 100) {\n\
    \            if (n % 11 == 0)\n                count++;\n            else if (n\
    \ % 13 == 0)\n                count++;\n        }\n        return count;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1pjdhu5b.java:30)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long sum=0;\n\
    \        long dividend=n;\n        while(dividend>0){\n            int remainder=dividend%10;\n\
    \            if((remainder==7)){\n                sum+=1;\n            }\n   \
    \         dividend=dividend/10;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgri0p0dg.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int remainder=dividend%10;\n                 \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ 7);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmonn3x3y.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, 7);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 100000)\n\
    \            System.out.println(\"0\");\n        else if (n < 10000000)\n    \
    \        System.out.println(\"2\");\n        else if (n < 1000000000)\n      \
    \      System.out.println(\"3\");\n        else if (n < 1000000000000l)\n    \
    \        System.out.println(\"5\");\n        else if (n < 1000000000000000l)\n\
    \            System.out.println(\"7\");\n        else\n            System.out.println(\"\
    8\");\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuw_zrf81.java:33)\n"
  stdout: '0

    0

    '
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        boolean even\
    \ = (n / 10) % 2 == 0;\n        if (even) {\n            if (n % 10 != 7) return\
    \ 1l;\n            return fizzBuzz((n / 10l));\n        }\n        if (n % 10\
    \ != 7) return 1l;\n        if (n % 100 == 11) {\n            return fizzBuzz((n\
    \ / 100l));\n        }\n        if (n % 100 == 13) {\n            return fizzBuzz((n\
    \ / 100l));\n        }\n        return 1l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn11qamto.java:32)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 1;\n        for (int i = 1l; i <=n; i++) {\n            if (i % 11l == 7l ||\
    \ i % 13l == 7l) {\n                count++;\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmr7d98e2.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = 1l; i <=n; i++) {\n                 \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fizz = n\
    \ + 11l, buzz = n + 13l, fizzBuzz = fizz + buzz;\n        return fizzBuzz % 11\
    \ == 0 ? fizzBuzz : 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu8wy7k0.java:22)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        ArrayList<Integer>\
    \ arr1 = new ArrayList<Integer>();\n        ArrayList<Integer> arr2 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> arr3 = new ArrayList<Integer>();\n        long x =\
    \ 0;\n        while(true){\n            if((n%11==0)&&(n%13==0)){\n          \
    \      break;\n            }\n            arr1.add(n);\n            if((n%11!=0)||(n%13!=0)){\n\
    \                x++;\n            }\n            n = n/11;\n        }\n     \
    \   for(int i=0;i<arr1.size();i++){\n            arr2.add(arr1.get(i));\n    \
    \    }\n        for(int i=0;i<arr2.size();i++){\n            if((arr2.get(i)%11==0)&&(arr2.get(i)%13==0)){\n\
    \                break;\n            }\n            arr3.add(arr2.get(i));\n \
    \       }\n        for(int i=0;i<arr3.size();i++){\n            if((arr3.get(i)%11!=0)||(arr3.get(i)%13!=0)){\n\
    \                x++;\n            }\n        }\n        return x;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpap8cml5_.java:25: error: incompatible types: long cannot be converted\
    \ to Integer\n            arr1.add(n);\n                     ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        if (n > 100) {\n            n -= 100;\n        }\n        if (n\
    \ % 11 == 0 && n % 13 == 0) {\n            result++;\n        }\n        if (n\
    \ % 11 == 0) {\n            result++;\n        }\n        if (n % 13 == 0) {\n\
    \            result++;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjp1s6nji.java:34)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long[] x = new\
    \ long[10];\n        long fizz = fizzDivisor(x);\n        long buzz = buzzDivisor(x);\n\
    \n        if (n % fizz != 0) {\n            return 0;\n        }\n\n        if\
    \ (n % buzz != 0) {\n            return 0;\n        }\n\n        if (fizz == 0\
    \ && buzz == 0) {\n            return 1;\n        }\n\n        long counter =\
    \ 0;\n\n        for (long i = 1; i < n; i++) {\n            counter = i * 11 +\
    \ 13 * counter;\n        }\n\n        return counter;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpae5wdmsx.java:18: error: cannot find symbol\n        long fizz\
    \ = fizzDivisor(x);\n                    ^\n  symbol:   method fizzDivisor(long[])\n\
    \  location: class Problem\n/tmp/tmpae5wdmsx.java:19: error: cannot find symbol\n\
    \        long buzz = buzzDivisor(x);\n                    ^\n  symbol:   method\
    \ buzzDivisor(long[])\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        final boolean\
    \ divisibleBy11 = n % 11 == 0;\n        final boolean divisibleBy13 = n % 13 ==\
    \ 0;\n        final String pattern;\n        if (divisibleBy13 && divisibleBy11)\
    \ {\n            pattern = \"11\";\n        } else if (divisibleBy11) {\n    \
    \        pattern = \"13\";\n        } else if (divisibleBy13) {\n            pattern\
    \ = \"7\";\n        } else {\n            pattern = \"0\";\n        }\n      \
    \  final long count = LongStream\n            .range(0, n)\n            .filter(i\
    \ -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i %\
    \ 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n           \
    \ .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 ==\
    \ 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n  \
    \          .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i ->\
    \ i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13\
    \ == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i\
    \ -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i %\
    \ 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n           \
    \ .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 ==\
    \ 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n  \
    \          .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i ->\
    \ i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13\
    \ == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i\
    \ -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i %\
    \ 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n           \
    \ .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 ==\
    \ 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n  \
    \          .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i ->\
    \ i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i % 13\
    \ == 0)\n            .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .filter(i\
    \ -> i % 11 == 0 || i % 13 == 0)\n            .filter(i -> i % 11 == 0 || i %\
    \ 13 == 0)\n\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ela8aa9.java:62: error: ';' expected\n            .filter(i ->\
    \ i % 11 == 0 || i % 13 == 0)\n                                              \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long n2 = n;\n\
    \        long n3 = n2;\n        long n5 = n3;\n        long n7 = n5;\n       \
    \ long n9 = n7;\n        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n      \
    \  n9 = n9;\n        long n10 = n5;\n        n3 = n3;\n        n5 = n5;\n    \
    \    n7 = n7;\n        n9 = n9;\n        n10 = n5;\n        n3 = n3;\n       \
    \ n5 = n5;\n        n7 = n7;\n        n9 = n9;\n        n10 = n5;\n        n3\
    \ = n3;\n        n5 = n5;\n        n7 = n7;\n        n9 = n9;\n        n10 = n5;\n\
    \        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n        n9 = n9;\n    \
    \    n10 = n5;\n        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n       \
    \ n9 = n9;\n        n10 = n5;\n        n3 = n3;\n        n5 = n5;\n        n7\
    \ = n7;\n        n9 = n9;\n        n10 = n5;\n        n3 = n3;\n        n5 = n5;\n\
    \        n7 = n7;\n        n9 = n9;\n        n10 = n5;\n        n3 = n3;\n   \
    \     n5 = n5;\n        n7 = n7;\n        n9 = n9;\n        n10 = n5;\n      \
    \  n3 = n3;\n        n5 = n5;\n        n7 = n7;\n        n9 = n9;\n        n10\
    \ = n5;\n        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n        n9 = n9;\n\
    \        n10 = n5;\n        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n   \
    \     n9 = n9;\n        n10 = n5;\n        n3 = n3;\n        n5 = n5;\n      \
    \  n7 = n7;\n        n9 = n9;\n        n10 = n5;\n        n3 = n3;\n        n5\
    \ = n5;\n        n7 = n7;\n        n9 = n9;\n        n10 = n5;\n        n3 = n3;\n\
    \        n5 = n5;\n        n7 = n7;\n        n9 = n9;\n        n10 = n5;\n   \
    \     n3 = n3;\n        n5 = n5;\n        n7 = n7;\n        n9 = n9;\n       \
    \ n10 = n5;\n        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n        n9\
    \ = n9;\n        n10 = n5;\n        n3 = n3;\n        n5 = n5;\n        n7 = n7;\n\
    \        n9 = n9;\n        n10 = n5;\n        n3 = n3;\n        n5 = n5;\n   \
    \     n7 = n7;\n        n9 = n9;\n        n10 = n5;\n        n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptlcb58lu.java:117: error: not a statement\n        n\n        ^\n\
    /tmp/tmptlcb58lu.java:117: error: ';' expected\n        n\n         ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n % 11 ==\
    \ 0 || n % 13 == 0) return LongStream.range(1, n).filter(i -> i % 11 == 0 || i\
    \ % 13 == 0).count();\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ga8hxp4.java:22)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long[] digits\
    \ = {0l, 1l, 2l, 3l, 4l, 5l, 6l, 7l, 8l, 9l};\n        long count = 0;\n     \
    \   long last = 0;\n        long next = 0;\n        for(long i = n; ; ) {\n  \
    \          if(last % 11 == 0 && next % 13 == 0) {\n                count++;\n\
    \            } else {\n                if(last % 11 != 0 && next % 11 == 0) {\n\
    \                    count++;\n                } else if(last % 11 == 0 && next\
    \ % 11 != 0) {\n                    count++;\n                } else {\n     \
    \               if(last % 13 != 0 && next % 13 != 0) {\n                     \
    \   count++;\n                    } else {\n                        last = next;\n\
    \                        next = (last + next) / 2;\n                    }\n  \
    \              }\n            }\n            if(next == i) {\n               \
    \ break;\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // The digit\
    \ 7 is a special case since it is divisible by 11 or 13 by definition.\n     \
    \   if (n % 11 == 0 || n % 13 == 0)\n            return n;\n        if (n < 1000000000\
    \ || n < 99999999999)\n            return fizzBuzz(n * 11);\n        if (n < 100000000000000L)\
    \ {\n            long ret = 0;\n            while (n > 0) {\n                ret\
    \ += n % 10;\n                n /= 10;\n            }\n            return ret;\n\
    \        }\n        if (n >= 1000000000000000L) {\n            long ret = 0;\n\
    \            while (n > 0) {\n                ret += n % 10;\n               \
    \ n /= 10;\n            }\n            return ret;\n        }\n        if (n >=\
    \ 10000000000000000L) {\n            long ret = 0;\n            while (n > 0)\
    \ {\n                ret += n % 10;\n                n /= 10;\n            }\n\
    \            return ret;\n        }\n        if (n >= 100000000000000000L) {\n\
    \            long ret = 0;\n            while (n > 0) {\n                ret +=\
    \ n % 10;\n                n /= 10;\n            }\n            return ret;\n\
    \        }\n        if (n >= 10000000000000000L) {\n            long ret = 0;\n\
    \            while (n > 0) {\n                ret += n % 10;\n               \
    \ n /= 10;\n            }\n            return ret;\n        }\n        if (n >=\
    \ 100000000000000000L) {\n            long ret = 0;\n            while (n > 0)\
    \ {\n                ret += n % 10;\n                n /= 10;\n            }\n\
    \            return ret;\n        }\n        if (n >= 10000000000000000L) {\n\
    \            long ret = 0;\n            while (n > 0) {\n                ret +=\
    \ n % 10;\n                n /= 10;\n            }\n            return ret;\n\
    \        }\n        if (n >= 100000000000000000L) {\n            long ret = 0;\n\
    \            while (n > 0) {\n                ret += n % 10;\n               \
    \ n /= 10;\n            }\n            return ret;\n        }\n        if (n >=\
    \ 10000000000000000L) {\n            long ret = 0;\n            while (n > 0)\
    \ {\n                ret += n % 10;\n                n /= 10;\n            }\n\
    \            return ret;\n        }\n        if (n >= 100000000000000000L) {\n\
    \            long ret = 0;\n            while (n > 0) {\n                ret +=\
    \ n % 10;\n                n /= 10;\n            }\n            return ret;\n\
    \        }\n        if (n >= 10000000000000000L) {\n            long ret = 0;\n\
    \            while (n > 0) {\n                ret += n % 10;\n               \
    \ n /= 10;\n            }\n            return ret;\n        }\n        if (n >=\
    \ 100000000000000000L) {\n            long ret = 0;\n            while (n > 0)\
    \ {\n                ret += n % 10;\n                n /= 10;\n            }\n\
    \            return ret;\n        }\n        if (n >= 10000000000000000L) {\n\
    \            long ret = 0;\n            while (n > 0) {\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmlmbulk4.java:20: error: integer number too large\n        if (n\
    \ < 1000000000 || n < 99999999999)\n                                  ^\n/tmp/tmpmlmbulk4.java:122:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ 7);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmonn3x3y.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, 7);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        long remainder;\n        if (n < 0) {\n            throw new IllegalArgumentException(\"\
    fizzBuzz expects n >= 0\");\n        } else if (n == 0) {\n            result\
    \ = 0;\n        } else if (n / 10 > 0) {\n            throw new IllegalArgumentException(\"\
    fizzBuzz expects n / 10 >= 0\");\n        } else {\n            remainder = n\
    \ % 10;\n            if (remainder == 7) {\n                result += 1;\n   \
    \         }\n            long counter = n - remainder;\n            if (counter\
    \ / 11 > 0) {\n                result += 1;\n            }\n            if (counter\
    \ / 13 > 0) {\n                result += 1;\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: fizzBuzz\
    \ expects n / 10 >= 0\n\tat Problem.fizzBuzz(tmp9ghqwold.java:24)\n\tat Problem.main(tmp9ghqwold.java:41)\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,0l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg9xfy4sp.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n,0l);\n               ^\n\
    \  required: long\n  found:    long,long\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011751
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i <= n; i += 11l) if (i % 11 == 0) count++;\n \
    \       for (long i = 1; i <= n; i += 13) if (i % 13 == 0) count++;\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqtte37l.java:24)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        for (int i = n; i >= 10; i /= 10) {\n            if (i % 11 == 0\
    \ || i % 13 == 0) {\n                result ++;\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n \
    \   assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqvzfo6mr.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = n; i >= 10; i /= 10) {\n            \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if ((n & 1) ==\
    \ 0) return 0;\n        if ((n & 2) == 0) return 1;\n        if ((n & 4) == 0)\
    \ return 1;\n        if ((n & 8) == 0) return 1;\n        if ((n & 16) == 0) return\
    \ 1;\n        if ((n & 32) == 0) return 1;\n        if ((n & 64) == 0) return\
    \ 1;\n        if ((n & 128) == 0) return 1;\n        if ((n & 256) == 0) return\
    \ 1;\n        if ((n & 512) == 0) return 1;\n        if ((n & 1024) == 0) return\
    \ 1;\n        if ((n & 2048) == 0) return 1;\n        if ((n & 4096) == 0) return\
    \ 1;\n        if ((n & 8192) == 0) return 1;\n        if ((n & 16384) == 0) return\
    \ 1;\n        if ((n & 32768) == 0) return 1;\n        if ((n & 65536) == 0) return\
    \ 1;\n        if ((n & 131072) == 0) return 1;\n        if ((n & 262144) == 0)\
    \ return 1;\n        if ((n & 524288) == 0) return 1;\n        if ((n & 1048576)\
    \ == 0) return 1;\n        if ((n & 2097152) == 0) return 1;\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84l10v97.java:43)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        // if n is a multiple of 11 or 13\n        if ((n % 11) == 0 ||\
    \ n % 13 == 0) {\n            // count how often the digit 7 appears in n\n  \
    \          while (n != 0) {\n                if (n % 10 == 7) {\n            \
    \        count++;\n                }\n                n /= 10;\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbdmrlsy_.java:32)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long counter\
    \ = 0;\n        while ((n % 11l) != 0l || (n % 13l) != 0l) {\n            n =\
    \ n / 10l;\n            counter++;\n        }\n        return counter;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xti0ua6.java:25)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long num = 0;\n\
    \        while(n != 0) {\n            num = n % 10;\n            if(num == 7){\n\
    \                break;\n            }\n            n = n/10;\n        }\n   \
    \     return num;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpizi1t550.java:28)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fizzBuzz\
    \ = 0;\n        while (n > 0) {\n            if (n % 11 == 0 || n % 13 == 0) {\n\
    \                fizzBuzz++;\n            }\n            n /= 11;\n          \
    \  n /= 13;\n        }\n        return fizzBuzz;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_tfewux.java:29)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long n2 = n /\
    \ 11l;\n        n %= 11l;\n        long n3 = n / 13l;\n        n %= 13l;\n   \
    \     long n4 = n / 3l;\n        n %= 3l;\n        long n5 = n / 6l;\n       \
    \ n %= 6l;\n        long n6 = n / 9l;\n        n %= 9l;\n        long n7 = n /\
    \ 11l;\n        n %= 11l;\n        long n8 = n / 13l;\n        n %= 13l;\n   \
    \     long n9 = n / 3l;\n        n %= 3l;\n        long n10 = n / 6l;\n      \
    \  n %= 6l;\n        long n11 = n / 9l;\n        n %= 9l;\n        long n12 =\
    \ n / 11l;\n        n %= 11l;\n        long n13 = n / 13l;\n        n %= 13l;\n\
    \        long n14 = n / 3l;\n        n %= 3l;\n        long n15 = n / 6l;\n  \
    \      n %= 6l;\n        long n16 = n / 9l;\n        n %= 9l;\n        long n17\
    \ = n / 11l;\n        n %= 11l;\n        long n18 = n / 13l;\n        n %= 13l;\n\
    \        long n19 = n / 3l;\n        n %= 3l;\n        long n20 = n / 6l;\n  \
    \      n %= 6l;\n        long n21 = n / 9l;\n        n %= 9l;\n        long n22\
    \ = n / 11l;\n        n %= 11l;\n        long n23 = n / 13l;\n        n %= 13l;\n\
    \        long n24 = n / 3l;\n        n %= 3l;\n        long n25 = n / 6l;\n  \
    \      n %= 6l;\n        long n26 = n / 9l;\n        n %= 9l;\n        long n27\
    \ = n / 11l;\n        n %= 11l;\n        long n28 = n / 13l;\n        n %= 13l;\n\
    \        long n29 = n / 3l;\n        n %= 3l;\n        long n30 = n / 6l;\n  \
    \      n %= 6l;\n        long n31 = n / 9l;\n        n %= 9l;\n        long n32\
    \ = n / 11l;\n        n %= 11l;\n        long n33 = n / 13l;\n        n %= 13l;\n\
    \        long n34 = n / 3l;\n        n \n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvd6y_u5f.java:82: error: not a statement\n        n \n        ^\n\
    /tmp/tmpvd6y_u5f.java:82: error: ';' expected\n        n \n         ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        long divBy11 = n % 11;\n        long divBy13 = n % 13;\n       \
    \ long remain = n;\n        if (divBy11 != 0 || divBy13 != 0) while (divBy11 !=\
    \ 0 && divBy13 != 0) {\n            result += (divBy11 / 10) * (divBy13 / 10);\n\
    \            remain = remain  - (divBy11 / 10) * (divBy13 / 10);\n           \
    \ divBy11 = divBy11 % 10;\n            divBy13 = divBy13 % 10;\n        }\n  \
    \      if (remain != 0) {\n            result += (n / 10) * (remain / 10);\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return IntStream.range(0,\
    \ n)\n                .filter(i -> i % 11 == 0 || i % 13 == 0)\n             \
    \   .filter(i -> i % 11 == 0)\n                .filter(i -> i % 13 == 0)\n   \
    \             .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeab4rkgk.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(0, n)\n                   \
    \               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return ((n%11==0)\
    \ && (n%13==0) ? 0 : ((n%11!=0) || (n%13!=0) ? 1 : 0));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnc3uhp3u.java:20)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n <= 1l)\n\
    \            return 0l;\n        if (n % 11 == 0 || n % 13 == 0)\n           \
    \ return 1l;\n        return fizzBuzz(n - 1l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdcfta8e6.java:24)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 11l)\
    \ throw new IllegalArgumentException(\"Not valid n\");\n        Set<Long> divisibleBy11\
    \ = new HashSet<>();\n        Set<Long> divisibleBy13 = new HashSet<>();\n   \
    \     for (long i = n; i > 0; i /= 11l) {\n            if (i % 11l != 0l) divisibleBy11.add(i\
    \ % 11l);\n            if (i % 13l != 0l) divisibleBy13.add(i % 13l);\n      \
    \  }\n        if (divisibleBy11.contains(7l)) divisibleBy11.remove(7l);\n    \
    \    if (divisibleBy13.contains(7l)) divisibleBy13.remove(7l);\n        return\
    \ divisibleBy11.size() + divisibleBy13.size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41tbu5iv.java:29)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        List<Integer>\
    \ list = new ArrayList<>();\n        for(long i = 0; i <= n; i++) {\n        \
    \    if((i%11==0||i%13==0))\n                list.add(Integer.valueOf(String.valueOf(i)));\n\
    \        }\n        long count = 0;\n        for(Integer i : list) {\n       \
    \     if(Integer.parseInt(String.valueOf(i))==7) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7_ryxaz.java:32)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 11) {\n\
    \            return n;\n        }\n        if (n % 11 == 0) {\n            return\
    \ 2;\n        }\n        if (n % 13 == 0) {\n            return 3;\n        }\n\
    \        return fizzBuzz(n / 11);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqoy9con.java:29)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // TODO: Implement\
    \ me\n        List<Integer> result = new ArrayList<>();\n        if(n % 11 ==\
    \ 0)\n        {\n            result.add(11);\n        }\n        if(n % 13 ==\
    \ 0)\n        {\n            result.add(13);\n        }\n        return result.stream().filter(i\
    \ -> i == 7).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n \
    \   assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqlwm39ro.java:31)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n<50) return\
    \ 0l;\n        if ((n%11==0)&&(n%13==0)) return 1l;\n        long ans = LongStream.rangeClosed(1,\
    \ n).filter(i -> i%11==0 || i%13==0).count();\n        return (n%11==0 || n%13==0)\
    \ ? ans : fizzBuzz(ans);\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z6acqay.java:24)\n"
  stdout: ''
  timestamp: 1660011752
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0l; \n        // Add your code here!\n        BigInteger num = BigInteger.valueOf(n);\n\
    \        for (int i = 1; i <= n; i++) {\n            if (num.mod(BigInteger.valueOf(i)).equals(BigInteger.valueOf(7)))\n\
    \                count++;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpox1tdojw.java:27)\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if ((n % 11)\
    \ == 0 || (n % 13) == 0)\n            return 1;\n        else if (n % 11 == 0\
    \ && n % 13 == 0)\n            return 2;\n        else\n            return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpha8qj_25.java:26)\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long sum = 0;\n        long limit = (long)Math.sqrt(n);\n      \
    \  for (int i = 1; i <= limit; ++i) {\n            sum += i;\n            if (sum\
    \ > n && i % 11 == 0 || sum > n && i % 13 == 0) {\n                count++;\n\
    \                sum -= i;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfw27d6q9.java:31)\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int result =\
    \ 0;\n        // count the number of times 7 appears in integers less than n\n\
    \        while ((n / 100 % 10) == 7) {\n            result++;\n            n /=\
    \ 10;\n        }\n        // count the number of times 3 appears in integers less\
    \ than n\n        while ((n / 10 % 10) == 3) {\n            result++;\n      \
    \      n /= 10;\n        }\n        // count the number of times 5 appears in\
    \ integers less than n\n        while ((n / 2 % 10) == 5) {\n            result++;\n\
    \            n /= 2;\n        }\n        // return the result\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84kbeulz.java:37)\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 9) {\n\
    \            return n;\n        }\n        if (n % 11 == 0 || n % 13 == 0) {\n\
    \            return n;\n        }\n        return fizzBuzz(n % 3 * 3 * 3 * 5 +\
    \ 7 * 7 * 7 * 9 + 11 * 11 * 11 * 13 * 13) % n + fizzBuzz(n % 3 * 3 * 3 * 5 + 7\
    \ * 7 * 7 * 9 + 11 * 11 * 11 * 13 * 13) % n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\tat Problem.fizzBuzz(tmptc1iuykw.java:23)\n\
    \tat Problem.fizzBu"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) return\
    \ 1l;\n        long[] fizzBuzz = new long[10];\n        fizzBuzz[0] = 1;\n   \
    \     fizzBuzz[1] = 2;\n        fizzBuzz[2] = 3;\n        fizzBuzz[3] = 4;\n \
    \       fizzBuzz[4] = 5;\n        fizzBuzz[5] = 6;\n        fizzBuzz[6] = 7;\n\
    \        fizzBuzz[7] = 8;\n        fizzBuzz[8] = 9;\n        fizzBuzz[9] = 10;\n\
    \        return fizzBuzz[n/10];\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkk0na9fc.java:29: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return fizzBuzz[n/10];\n                         ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ 0);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5m1o8v9.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, 0);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) {\n\
    \            System.out.println(n);\n            return 1L;\n        }\n     \
    \   long count = 0;\n        if (n % 11 == 0)\n            count += fizzBuzz(n\
    \ / 11);\n        if (n % 13 == 0)\n            count += fizzBuzz(n / 13);\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n \
    \   assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp38ehgzr2.java:30)\n"
  stdout: '6

    '
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0; // number of times the digit 7 appears in integers less than n which are\
    \ divisible by 11 or 13\n        while (n!=0){\n            if(n%11==0 || n%13==0)\
    \ count++;\n            n=n/10;\n        }\n        return count;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurvn165j.java:26)\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long limit = n;\n        long limitDivisibleBy11 = (n / 11) - 1;\n\
    \        long limitDivisibleBy13 = (n / 13) - 1;\n\n        while (limit > 0)\
    \ {\n            if ((limit % 11) == 0) {\n                count++;\n        \
    \    }\n            if ((limit % 13) == 0) {\n                count++;\n     \
    \       }\n            limit--;\n        }\n        if (limitDivisibleBy11 !=\
    \ 0) {\n            count += fizzBuzz(limitDivisibleBy11);\n        }\n      \
    \  if (limitDivisibleBy13 != 0) {\n            count += fizzBuzz(limitDivisibleBy13);\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:17)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\tat Problem.fizzBuzz(tmpfgfle5cv.java:32)\n\
    \tat Problem.fizzBu"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzzHelper(n,\
    \ 11, 13);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwsxa_tun.java:17: error: cannot find symbol\n        return fizzBuzzHelper(n,\
    \ 11, 13);\n               ^\n  symbol:   method fizzBuzzHelper(long,int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n >= 0l &&\
    \ n <= 100l) {\n            List<String> divisibles = new ArrayList<>();\n   \
    \         while (n > 0l) {\n                int divisor = n % 11;\n          \
    \      n /= 11;\n                divisibles.add(String.valueOf(divisor));\n  \
    \          }\n            long count = 0;\n            for (String divisible :\
    \ divisibles) {\n                long value = Long.valueOf(divisible);\n     \
    \           if (value % 13 == 0l && value % 11 != 0l)\n                    count++;\n\
    \            }\n            return count;\n        }\n        return 0l;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp30pev489.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int divisor = n % 11;\n                  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ (n, 0l));\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5v5bd7ga.java:17: error: ')' expected\n        return fizzBuzz(n,\
    \ (n, 0l));\n                              ^\n/tmp/tmp5v5bd7ga.java:17: error:\
    \ ';' expected\n        return fizzBuzz(n, (n, 0l));\n                       \
    \           ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long n1;\n  \
    \      n1 = n / 11;\n        if (n % 11 != 0) {\n            n1 += n;\n      \
    \  }\n        n1 = n1 / 13;\n        if (n % 13 != 0) {\n            n1 += n;\n\
    \        }\n        return n1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2qyhzjw.java:29)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n<0) throw\
    \ new IllegalArgumentException();\n        long x=1l;\n        for (int i=1;i<=n;i++)\
    \ {\n            long temp=(n/i)%11+(n/i/i%13)%11;\n            if (temp==7 &&\
    \ x<n) x++;\n        }\n        return x;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9lnhigw8.java:26)\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (; n >= 100; n /= 100) {\n            if (n % 11 == 0 | n %\
    \ 13 == 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpls5yl0qv.java:27)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        List<String>\
    \ numbers = List.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\");\n      \
    \  return numbers.stream().filter(n -> n % 10 == 0 || n % 11 == 0 || n % 13 ==\
    \ 0).count();\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi2ujbscp.java:18: error: variable n is already defined in method\
    \ fizzBuzz(long)\n        return numbers.stream().filter(n -> n % 10 == 0 || n\
    \ % 11 == 0 || n % 13 == 0).count();\n                                       ^\n\
    /tmp/tmpi2ujbscp.java:18: error: bad operand types for binary operator '%'\n \
    \       return numbers.stream().filter(n -> n % 10 == 0 || n % 11 == 0 || n %\
    \ 13 == 0).count();\n                                              ^\n  first\
    \ type:  String\n  second type: int\n/tmp/tmpi2ujbscp.java:18: error: bad operand\
    \ types for binary operator '%'\n        return numbers.stream().filter(n -> n\
    \ % 10 == 0 || n % 11 == 0 || n % 13 == 0).count();\n                        \
    \                                     ^\n  first type:  String\n  second type:\
    \ int\n/tmp/tmpi2ujbscp.java:18: error: bad operand types for binary operator\
    \ '%'\n        return numbers.stream().filter(n -> n % 10 == 0 || n % 11 == 0\
    \ || n % 13 == 0).count();\n                                                 \
    \                           ^\n  first type:  String\n  second type: int\n4 errors\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ 11l);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ebvrq4j.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, 11l);\n             \
    \  ^\n  required: long\n  found:    long,long\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return Stream.iterate(n,\
    \ x -> x % 11 == 0 ? x : x / 11)\n                .takeWhile(x -> x % 11 != 0\
    \ || x % 13 != 0)\n                .count(x -> x % 11 == 0 && x % 13 != 0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpltukma9d.java:19: error: method count in interface Stream<T> cannot\
    \ be applied to given types;\n                .count(x -> x % 11 == 0 && x % 13\
    \ != 0);\n                ^\n  required: no arguments\n  found:    (x)->x % 1[...]\
    \ != 0\n  reason: actual and formal argument lists differ in length\n  where T\
    \ is a type-variable:\n    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return ((n %\
    \ 11) == 0) || ((n % 13) == 0) ? 1l : 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp560r5hlg.java:21)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long num;\n \
    \       List<Long> results = new ArrayList<>();\n        while ((num = n%11) !=\
    \ 7 || (num = n%13) != 7)\n            results.add(num);\n        return results.stream().filter(i\
    \ -> i==7).count();\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long totalFizz\
    \ = 0l;\n        long totalBuzz = 0l;\n        long totalFizzBuzz = 0l;\n    \
    \    long totalNum = 0l;\n        for (long i = 0; i < n; i++) {\n           \
    \ if (i % 11 == 0l && i % 13 == 0l) {\n                totalNum++;\n         \
    \   }\n            if (i % 11 == 0l) {\n                totalFizz++;\n       \
    \     }\n            if (i % 13 == 0l) {\n                totalBuzz++;\n     \
    \       }\n            if (i % 11 == 0l && i % 13 == 0l) {\n                totalFizzBuzz++;\n\
    \            }\n        }\n        if (totalNum > 0l && totalFizzBuzz > 0l) {\n\
    \            totalFizzBuzz++;\n        }\n        if (totalFizz > 0l) {\n    \
    \        totalFizzBuzz++;\n        }\n        if (totalBuzz > 0l) {\n        \
    \    totalFizzBuzz++;\n        }\n        if (totalFizzBuzz > 0l) {\n        \
    \    totalFizzBuzz++;\n        }\n        return totalFizzBuzz;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_iraiid.java:50)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 11l)\
    \ return 1l;\n        if (n < 13l) return 2l;\n        return fizzBuzz(n - 3l)\
    \ + fizzBuzz(n - 5l);\n    }\n    public static void main(String[] args) {\n \
    \   assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n \
    \   assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpijedn4rn.java:22)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long[] arr = new long[]{11l,13l};\n        if (n % 11 == 0 && (n\
    \ / 11) % 13 == 0)\n            count++;\n        if (n % 13 == 0 && (n / 13)\
    \ % 11 == 0)\n            count++;\n        if (n % 11 == 0)\n            count++;\n\
    \        if (n % 13 == 0)\n            count++;\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm67km6a7.java:31)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        LongStream result\
    \ = LongStream.range(1, n).filter(i -> (i % 11 == 0 || i % 13 == 0));\n      \
    \  return result.count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp14oprkd8.java:21)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        \n        for(long i = 1l; i <= n; i++) {\n            if((i % 11\
    \ == 0) || (i % 13 == 0)) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu89nk4pk.java:27)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long counter\
    \ = 0;\n        long limit = n;\n        if (limit == 0)\n            limit =\
    \ n;\n        for (long i = 1; i <= limit; i++) {\n            if (i % 11 == 0\
    \ || i % 13 == 0) {\n                counter++;\n            }\n        }\n  \
    \      return counter;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbi205aig.java:29)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 1;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 && i\
    \ % 13 == 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nesb8x0.java:26)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzzHelper(n,\
    \ 7, 0, 0);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg631ahkl.java:17: error: cannot find symbol\n        return fizzBuzzHelper(n,\
    \ 7, 0, 0);\n               ^\n  symbol:   method fizzBuzzHelper(long,int,int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        if (n % 11 == 0) count += 1;\n        if (n % 13 == 0) count +=\
    \ 1;\n        if (n % 11 == 0 && n % 13 == 0) count += 1;\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxst88oru.java:25)\n"
  stdout: ''
  timestamp: 1660011754
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n <= 0 ||\
    \ n % 11 == 0 || n % 13 == 0)\n            return (0);\n        if (n % 11 > 0\
    \ && n % 13 > 0)\n            return (1);\n        if (n % 11 > 0)\n         \
    \   return (1);\n        if (n % 13 > 0)\n            return (2);\n        return\
    \ (((n % 11) + 1) + fizzBuzz(n / 11));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptft05ftw.java:28)\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long[] digits\
    \ = Arrays.stream(new long[]{\n                11l, 13l, 22l, 23l, 30l, 31l, 32l,\
    \ 33l, 42l, 43l, 52l, 53l, 54l, 60l, 61l, 62l, 64l, 65l, 66l, 70l, 71l, 72l, 73l,\
    \ 74l, 75l, 76l, 78l, 79l}).\n                mapToLong(i -> i % 10).toArray();\n\
    \        return IntStream.range(0, n).filter(i -> digits[i] == 7).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbdb5yq1m.java:18: error: cannot find symbol\n                11l,\
    \ 13l, 22l, 23l, 30l, 31l, 32l, 33l, 42l, 43l, 52l, 53l, 54l, 60l, 61l, 62l, 64l,\
    \ 65l, 66l, 70l, 71l, 72l, 73l, 74l, 75l, 76l, 78l, 79l}).\n                 \
    \                                                                            \
    \                                                               ^\n  symbol: \
    \  method mapToLong((i)->i % 10)\n  location: interface LongStream\n/tmp/tmpbdb5yq1m.java:20:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    return IntStream.range(0, n).filter(i -> digits[i] == 7).count();\n     \
    \                             ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long divisor\
    \ = 11l;\n        while (n > divisor) {\n            n = n / divisor;\n      \
    \      divisor = divisor * 11l;\n        }\n        while (n > 13l) {\n      \
    \      n = n / 13l;\n            divisor = divisor * 13l;\n        }\n       \
    \ return divisor;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7aw40_jj.java:29)\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        if (n < 13l || n % 11l != 7l || n % 13l != 7l) {\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82qsyrv2.java:24)\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if(n < 0)\n \
    \           throw new RuntimeException(\"Bad number entered\");\n        return\
    \ n.longValue() == n%11 || n.longValue() == n%13? 1l : fizzBuzz(n/10l);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp95a936pe.java:19: error: long cannot be dereferenced\n        return\
    \ n.longValue() == n%11 || n.longValue() == n%13? 1l : fizzBuzz(n/10l);\n    \
    \            ^\n/tmp/tmp95a936pe.java:19: error: long cannot be dereferenced\n\
    \        return n.longValue() == n%11 || n.longValue() == n%13? 1l : fizzBuzz(n/10l);\n\
    \                                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int numDigits\
    \ = (int) Math.log10(n) + 1;\n        List<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < numDigits; i++) {\n            if (n % 10 == 7) {\n\
    \                result.add(\"(\" + (i + 1) + \"l)\");\n            }\n      \
    \      n /= 10;\n        }\n        if (numDigits % 11 == 0 && numDigits % 13\
    \ == 0) {\n            String result = result.stream().collect(Collectors.joining());\n\
    \            System.out.println(result);\n            return (Long.valueOf(n));\n\
    \        }\n        else {\n            System.out.println(result);\n        \
    \    return (-1l);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ogeesgh.java:26: error: variable result is already defined in\
    \ method fizzBuzz(long)\n            String result = result.stream().collect(Collectors.joining());\n\
    \                   ^\n/tmp/tmp5ogeesgh.java:26: error: cannot find symbol\n \
    \           String result = result.stream().collect(Collectors.joining());\n \
    \                                 ^\n  symbol:   method stream()\n  location:\
    \ variable result of type String\n2 errors\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        final List<Integer>\
    \ intList = List.ofRange(1, n);\n        \n        long sum = 0;\n        final\
    \ int divisor = (n / 11) + (n % 11 == 0 ? 0 : 1);\n        for (int i : intList)\
    \ {\n            long digit = i % divisor;\n            if (digit == 7) {\n  \
    \              sum += 1;\n            }\n        }\n        \n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm0mcczw4.java:17: error: cannot find symbol\n        final List<Integer>\
    \ intList = List.ofRange(1, n);\n                                          ^\n\
    \  symbol:   method ofRange(int,long)\n  location: interface List\n/tmp/tmpm0mcczw4.java:20:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    final int divisor = (n / 11) + (n % 11 == 0 ? 0 : 1);\n                 \
    \                    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ new HashMap<>());\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7swwl606.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, new HashMap<>());\n \
    \              ^\n  required: long\n  found:    long,HashMap<Object,Object>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fizzBuzz\
    \ = 0l;\n        while (n > 0) {\n            long newN = n%11;\n            fizzBuzz\
    \ += newN;\n            n = n/11;\n        }\n        return fizzBuzz;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnoc2oi_j.java:26)\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        do {\n            result = fizzBuzzHelper(n, result);\n        }\
    \ while (result != 0l);\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8lx9z6ui.java:19: error: cannot find symbol\n            result\
    \ = fizzBuzzHelper(n, result);\n                     ^\n  symbol:   method fizzBuzzHelper(long,long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n == 0) return\
    \ 0;\n        return fizzBuzz(n - 1) + (n % 11 == 7 ? 1l : 0l) + fizzBuzz(n -\
    \ 1);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n<0)\n  \
    \          return fizzBuzz(-n);\n        long count = 0;\n        for (int i =\
    \ n; i >= 1; i--) {\n            if ((n % i) == 7 || ((i % 13) == 7 && n % i !=\
    \ 0))\n                count ++;\n        }\n        return count;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3sabt_43.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = n; i >= 1; i--) {\n                 \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if(n<=1)\n  \
    \          return n;\n        LongStream ints = LongStream.range(1,n).filter(i\
    \ -> i%11==0 || i%13==0);\n        int count = 0;\n        ints.forEach(i -> {\n\
    \            if(isFizzBuzz(i))\n                count++;\n        });\n      \
    \  return count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf3ful9gy.java:22: error: cannot find symbol\n            if(isFizzBuzz(i))\n\
    \               ^\n  symbol:   method isFizzBuzz(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 1;\n        while (n > 1) {\n            result *= n;\n            result /=\
    \ (n % 10 == 7 ? 11 : 13);\n            n /= 10;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_qhdwum.java:26)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long cnt = 0;\n\
    \        while (n%11 == 0L) {\n            n /= 11;\n            cnt += 1L;\n\
    \        }\n        while (n%13 == 0L) {\n            n /= 13;\n            cnt\
    \ += 1L;\n        }\n        return cnt;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t_3ho2u.java:30)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0l;\n        do {\n            if (n % 11 == 0 || n % 13 == 0) count++;\n  \
    \          n /= 11L;\n        } while (n != 0);\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp91texka8.java:26)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long[] count\
    \ = new long[100];\n        int i;\n        long j = 0;\n        for (i = 0; i\
    \ < n; i++) {\n            count[i] = 0;\n            int temp = (int) i;\n  \
    \          if (i % 11 == 0 && i % 13 == 0) {\n                j++;\n         \
    \       count[i] = j;\n            }\n            if (temp % 11 == 0 && temp %\
    \ 13 == 0) {\n                j++;\n                count[i] = j;\n          \
    \  }\n            if (temp % 11 == 0 && temp % 13 == 0) {\n                j++;\n\
    \                count[i] = j;\n            }\n        }\n        for (i = 0;\
    \ i < count.length; i++) {\n            if (count[i] == 7)\n                return\
    \ (long)Math.max(count[i]);\n        }\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgbyzb4sm.java:38: error: no suitable method found for max(long)\n\
    \                return (long)Math.max(count[i]);\n                          \
    \       ^\n    method Math.max(int,int) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n    method Math.max(long,long) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.max(float,float)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(double,double) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(Arrays.stream(new\
    \ long[] {n}).filter(i -> i % 11 == 0 || i % 13 == 0).collect(Collectors.toList()).get(0));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnadkszjw.java:17: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        return fizzBuzz(Arrays.stream(new\
    \ long[] {n}).filter(i -> i % 11 == 0 || i % 13 == 0).collect(Collectors.toList()).get(0));\n\
    \                                                                            \
    \                 ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpnadkszjw.java:17: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return fizzBuzz(Arrays.stream(new long[] {n}).filter(i -> i % 11\
    \ == 0 || i % 13 == 0).collect(Collectors.toList()).get(0));\n               \
    \                                                                            \
    \          ^\n    (argument mismatch; no instance(s) of type variable(s) CAP#1,T\
    \ exist so that Collector<T,?,List<T>> conforms to Supplier<R>)\n  where R,T are\
    \ type-variables:\n    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ 0);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5m1o8v9.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, 0);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011753
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if(n % 11 ==\
    \ 0 || n % 13 == 0) return n;\n        \n        return fizzBuzz((n+1)/11) * fizzBuzz((n+1)/13);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82fbdhd5.java:23)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n % 11 ==\
    \ 0 || n % 13 == 0) {\n            return 1;\n        } else if (n >= 10) {\n\
    \            return fizzBuzz(n / 10) + fizzBuzz(n % 10);\n        } else {\n \
    \           return 0;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyrsv3lw6.java:26)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // Write your\
    \ code here\n        return (n%11==0 || n%13==0) ? n : fizzBuzz((n+(n%11==0 ||\
    \ n%13==0) ? 1:0));\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp96d4r4zi.java:18: error: bad operand types for binary operator\
    \ '+'\n        return (n%11==0 || n%13==0) ? n : fizzBuzz((n+(n%11==0 || n%13==0)\
    \ ? 1:0));\n                                                     ^\n  first type:\
    \  long\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int counter =\
    \ 0;\n\n        for(long i = n; i%11 != 0 || i%13 != 0; i /= 11)\n           \
    \ if(i % 11 == 0 && i % 13 == 0)\n                ++counter;\n\n        return\
    \ counter;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxvg9nww.java:27)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) return\
    \ 1;\n        if (n <= 19) return fizzBuzz(n/10) + fizzBuzz(n%10);\n        if\
    \ (n <= 99) return fizzBuzz((n/10) * 3) + fizzBuzz(n%10);\n        if (n <= 999)\
    \ return fizzBuzz((n/10) * 3 + 1) * fizzBuzz(n%10);\n        if (n <= 9999) return\
    \ fizzBuzz((n/10) * 3 + 2) * fizzBuzz(n%10);\n        if (n <= 99999) return fizzBuzz((n/10)\
    \ * 3 + 3) * fizzBuzz(n%10);\n        if (n <= 999999) return fizzBuzz((n/10)\
    \ * 3 + 4) * fizzBuzz(n%10);\n        if (n <= 9999999) return fizzBuzz((n/10)\
    \ * 3 + 5) * fizzBuzz(n%10);\n        if (n <= 999999999) return fizzBuzz((n/10)\
    \ * 3 + 6) * fizzBuzz(n%10);\n        if (n <= 99999999999) return fizzBuzz((n/10)\
    \ * 3 + 7) * fizzBuzz(n%10);\n        if (n <= 999999999999) return fizzBuzz((n/10)\
    \ * 3 + 8) * fizzBuzz(n%10);\n        if (n <= 999999999999999) return fizzBuzz((n/10)\
    \ * 3 + 9) * fizzBuzz(n%10);\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyfc46er.java:26: error: integer number too large\n        if (n\
    \ <= 99999999999) return fizzBuzz((n/10) * 3 + 7) * fizzBuzz(n%10);\n        \
    \         ^\n/tmp/tmpkyfc46er.java:27: error: integer number too large\n     \
    \   if (n <= 999999999999) return fizzBuzz((n/10) * 3 + 8) * fizzBuzz(n%10);\n\
    \                 ^\n/tmp/tmpkyfc46er.java:28: error: integer number too large\n\
    \        if (n <= 999999999999999) return fizzBuzz((n/10) * 3 + 9) * fizzBuzz(n%10);\n\
    \                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 1;\n        while (n % 10 == 7) {\n            result += 1;\n            n =\
    \ n / 10;\n        }\n        while (n % 10 != 7) {\n            result += 1;\n\
    \            n = n / 10;\n        }\n        if (n % 10 == 7)\n            result\
    \ += 1;\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        if (n <= 13) {\n            if (n % 11 == 0) result += 1;\n    \
    \        if (n % 13 == 0) result += 1;\n        }\n        if (n >= 11 && n <=\
    \ 13) {\n            if (n % 11 != 0) result += 1;\n            if (n % 13 !=\
    \ 0) result += 1;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphkfrm68z.java:30)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,0,2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq8x6xe1y.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n,0,2);\n              \
    \ ^\n  required: long\n  found:    long,int,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return longStream(n).filter(f\
    \ -> f % 11 == 0 || f % 13 == 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwff0l678.java:17: error: cannot find symbol\n        return longStream(n).filter(f\
    \ -> f % 11 == 0 || f % 13 == 0).count();\n               ^\n  symbol:   method\
    \ longStream(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fizzBuzz\
    \ = 0;\n        while (n%3 == 0) {\n            n = 3*(n/3);\n            fizzBuzz++;\n\
    \        }\n        if ((n%11) == 0 || n%13 == 0) {\n            fizzBuzz++;\n\
    \        }\n        return fizzBuzz;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) return\
    \ n;\n        if (n < 100) return fizzBuzz(n/10) * 10 + n % 10;\n        if (n\
    \ < 1000) return fizzBuzz(n / 100) * 100 + n % 100;\n        if (n < 10000) return\
    \ fizzBuzz(n / 1000) * 1000 + n % 1000;\n        if (n < 100000) return fizzBuzz(n\
    \ / 10000) * 10000 + n % 10000;\n        if (n < 1000000) return fizzBuzz(n /\
    \ 100000) * 100000 + n % 100000;\n        return fizzBuzz(n / 1000000) * 1000000\
    \ + n % 1000000;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpae7mtilw.java:26)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n > 100) {\n            if (n % 11 == 0 || (n / 11) % 13\
    \ == 0) {\n                count++;\n            }\n            n /= 13;\n   \
    \     }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_vfvfar.java:28)\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        final long FIZZ\
    \ = 1;\n        final long BUZZ = 2;\n        final long FIZZ_AND_BUZZ = 3;\n\
    \        final long FIZZ_OR_BUZZ = 4;\n        final long FIZZ_OR_BUZZ_AND_BUZZ\
    \ = 5;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ = 6;\n        final\
    \ long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ = 7;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 8;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 9;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 10;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 11;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 12;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 13;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 14;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ\
    \ = 15;\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp08c81wd5.java:32: error: ';' expected\n        final long FIZZ_OR_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_AND_BUZZ_\n\
    \                                                                            \
    \                                                                            \
    \                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return ((n %\
    \ 11 == 0) | (n % 13 == 0)) ? ((n / 11) + 1l) : ((n / 13) + 1l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bne9kc0.java:20)\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0l;\n        long counter = 1l;\n        while (n > 0) {\n            counter++;\n\
    \            long divisibleBy11 = n % 11 == 0l;\n            long divisibleBy13\
    \ = n % 13 == 0l;\n            if (divisibleBy11 && divisibleBy13) {\n       \
    \         result += counter;\n            }\n            n /= 11l;\n         \
    \   n /= 13l;\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmtihhwdw.java:21: error: incompatible types: boolean cannot be\
    \ converted to long\n            long divisibleBy11 = n % 11 == 0l;\n        \
    \                                ^\n/tmp/tmpmtihhwdw.java:22: error: incompatible\
    \ types: boolean cannot be converted to long\n            long divisibleBy13 =\
    \ n % 13 == 0l;\n                                        ^\n/tmp/tmpmtihhwdw.java:23:\
    \ error: bad operand types for binary operator '&&'\n            if (divisibleBy11\
    \ && divisibleBy13) {\n                              ^\n  first type:  long\n\
    \  second type: long\n3 errors\n"
  stdout: ''
  timestamp: 1660011756
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return ((n &\
    \ (011l))*(3l)) + fizz(n&(011l))+((n & (013l))*(3l));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7blb7q.java:17: error: cannot find symbol\n        return ((n\
    \ & (011l))*(3l)) + fizz(n&(011l))+((n & (013l))*(3l));\n                    \
    \                 ^\n  symbol:   method fizz(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int count = 0;\n\
    \        long m = n;\n        while (m != 0l) { \n            if (m % 11 == 0l)\
    \ { count++; }\n            if (m % 13 == 0l) { count++; }\n            m = m/10l;\n\
    \        } \n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6lwnm8sv.java:28)\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ new HashMap<>());\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7swwl606.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, new HashMap<>());\n \
    \              ^\n  required: long\n  found:    long,HashMap<Object,Object>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011755
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,0,new\
    \ Long(1),new Long(1),new Long(1),new Long(1),new Long(1),new Long(1));\n    }\n\
    \    public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeki83708.java:17: warning: [removal] Long(long) in Long has been\
    \ deprecated and marked for removal\n        return fizzBuzz(n,0,new Long(1),new\
    \ Long(1),new Long(1),new Long(1),new Long(1),new Long(1));\n                \
    \            ^\n/tmp/tmpeki83708.java:17: warning: [removal] Long(long) in Long\
    \ has been deprecated and marked for removal\n        return fizzBuzz(n,0,new\
    \ Long(1),new Long(1),new Long(1),new Long(1),new Long(1),new Long(1));\n    \
    \                                    ^\n/tmp/tmpeki83708.java:17: warning: [removal]\
    \ Long(long) in Long has been deprecated and marked for removal\n        return\
    \ fizzBuzz(n,0,new Long(1),new Long(1),new Long(1),new Long(1),new Long(1),new\
    \ Long(1));\n                                                    ^\n/tmp/tmpeki83708.java:17:\
    \ warning: [removal] Long(long) in Long has been deprecated and marked for removal\n\
    \        return fizzBuzz(n,0,new Long(1),new Long(1),new Long(1),new Long(1),new\
    \ Long(1),new Long(1));\n                                                    \
    \            ^\n/tmp/tmpeki83708.java:17: warning: [removal] Long(long) in Long\
    \ has been deprecated and marked for removal\n        return fizzBuzz(n,0,new\
    \ Long(1),new Long(1),new Long(1),new Long(1),new Long(1),new Long(1));\n    \
    \                                                                        ^\n/tmp/tmpeki83708.java:17:\
    \ warning: [removal] Long(long) in Long has been deprecated and marked for removal\n\
    \        return fizzBuzz(n,0,new Long(1),new Long(1),new Long(1),new Long(1),new\
    \ Long(1),new Long(1));\n                                                    \
    \                                    ^\n/tmp/tmpeki83708.java:17: error: method\
    \ fizzBuzz in class Problem cannot be applied to given types;\n        return\
    \ fizzBuzz(n,0,new Long(1),new Long(1),new Long(1),new Long(1),new Long(1),new\
    \ Long(1));\n               ^\n  required: long\n  found:    long,int,Long,Long,Long,Long,Long,Long\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n6 warnings\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return n.divide(11).add(n.divide(13)).mapToLong(d\
    \ -> d == 7 ? 1l : 0l).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzfwj7v62.java:17: error: long cannot be dereferenced\n        return\
    \ n.divide(11).add(n.divide(13)).mapToLong(d -> d == 7 ? 1l : 0l).sum();\n   \
    \             ^\n/tmp/tmpzfwj7v62.java:17: error: long cannot be dereferenced\n\
    \        return n.divide(11).add(n.divide(13)).mapToLong(d -> d == 7 ? 1l : 0l).sum();\n\
    \                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) {\n\
    \            return n;\n        }\n        if (n % 11 == 0 || (n % 13 == 0 &&\
    \ n % 11 == 1)) {\n            return fizzBuzz(n/11) + 1;\n        }\n       \
    \ return fizzBuzz(n/13);\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxm5fiq8.java:26)\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ n;\n        int count = 0;\n        if (result > 11) {\n            while (result\
    \ > 11) {\n                result /= 11;\n                count++;\n         \
    \   }\n        } else if (result > 13) {\n            while (result > 13) {\n\
    \                result /= 13;\n                count++;\n            }\n    \
    \    }\n        while (result != 0) {\n            if (result % 10 == 7) {\n \
    \               count++;\n            }\n            result /= 10;\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8rn61g8x.java:39)\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if((n & (1l<<31))==(1l<<31))\
    \ {\n            return 0;\n        } else if((n & (1l<<30))==(1l<<30)) {\n  \
    \          return 1;\n        } else if((n & (1l<<29))==(1l<<29)) {\n        \
    \    return 2;\n        } else if((n & (1l<<28))==(1l<<28)) {\n            return\
    \ 3;\n        } else if((n & (1l<<27))==(1l<<27)) {\n            return 4;\n \
    \       } else if((n & (1l<<26))==(1l<<26)) {\n            return 5;\n       \
    \ } else if((n & (1l<<25))==(1l<<25)) {\n            return 6;\n        } else\
    \ if((n & (1l<<24))==(1l<<24)) {\n            return 7;\n        } else if((n\
    \ & (1l<<23))==(1l<<23)) {\n            return 8;\n        } else if((n & (1l<<22))==(1l<<22))\
    \ {\n            return 9;\n        } else if((n & (1l<<21))==(1l<<21)) {\n  \
    \          return 10;\n        } else if((n & (1l<<20))==(1l<<20)) {\n       \
    \     return 11;\n        } else if((n & (1l<<19))==(1l<<19)) {\n            return\
    \ 12;\n        } else if((n & (1l<<18))==(1l<<18)) {\n            return 13;\n\
    \        } else if((n & (1l<<17))==(1l<<17)) {\n            return 14;\n     \
    \   } else if((n & (1l<<16))==(1l<<16)) {\n            return 15;\n        } else\
    \ if((n & (1l<<15))==(1l<<15)) {\n            return 16;\n        } else if((n\
    \ & (1l<<14))==(1l<<14)) {\n            return 17;\n        } else if((n & (1l<<13))==(1l<<13))\
    \ {\n            return 18;\n        } else if((n & (1l<<12))==(1l<<12)) {\n \
    \           return 19;\n        } else if((n & (1l<<11))==(1l<<11)) {\n      \
    \      return 20;\n        } else if((n & (1l<<10))==(1l<<10)) {\n           \
    \ return 21;\n        } else if((n & (1l<<9))==(1l<<9)) {\n            return\
    \ 22;\n        } else if((n & (1l<<8))==(1l<<8)) {\n            return 23;\n \
    \       } else if((n & (1l\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf7z1wf2m.java:65: error: ')' expected\n        } else if((n & (1l\n\
    \                          ^\n/tmp/tmpf7z1wf2m.java:66: error: illegal start of\
    \ statement\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long cnt = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0 && i / i %\
    \ 11 == 0 || i / i % 13 == 0)\n                cnt++;\n        }\n        return\
    \ cnt;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsmywi7u.java:26)\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long n = n/100;\n\
    \        long n1 = n % 10;\n        if(n1 == 7 || n1 == 8){\n            return\
    \ fizzBuzz(n1);\n        }\n        if(n1 % 11 == 0 ||\n            n1 % 13 ==\
    \ 0){\n            return fizzBuzz(n1);\n        }\n        return fizzBuzz(n1);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprfm0ecyj.java:17: error: variable n is already defined in method\
    \ fizzBuzz(long)\n        long n = n/100;\n             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long digit =\
    \ n % 10;\n        if (digit == 7)\n            return 1;\n        if (digit ==\
    \ 3 || digit == 5)\n            return 2;\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9gu5hioj.java:26)\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return IntStream.range(1,n).filter(i\
    \ -> (i%11==0 || i%13==0)).filter(i -> (i%7==0)).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqym09qv3.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1,n).filter(i -> (i%11==0 ||\
    \ i%13==0)).filter(i -> (i%7==0)).count();\n                                 ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 100000000)\
    \ return fizzBuzz(n, new int[] {1, 11l});\n        long counter = 0;\n       \
    \ long remainder = 0;\n        for (long i = n; i > 0; i = remainder) {\n    \
    \        int digit = i % 10;\n            if (digit == 7) {\n                counter++;\n\
    \            }\n            if (counter != 1) {\n                break;\n    \
    \        }\n            remainder = i / 10;\n        }\n        return counter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4dew5v8m.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        if (n < 100000000) return fizzBuzz(n, new int[] {1,\
    \ 11l});\n                                                            ^\n/tmp/tmp4dew5v8m.java:17:\
    \ error: method fizzBuzz in class Problem cannot be applied to given types;\n\
    \        if (n < 100000000) return fizzBuzz(n, new int[] {1, 11l});\n        \
    \                          ^\n  required: long\n  found:    long,int[]\n  reason:\
    \ actual and formal argument lists differ in length\n/tmp/tmp4dew5v8m.java:21:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        int digit = i % 10;\n                          ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for(int i = 0; i <= n; i++) {\n            if((i % 11) == 0 || i\
    \ % 13 == 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqf2un88_.java:26)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return Stream.iterate(0,\
    \ i -> i + 1)\n                     .filter(i -> n % 11 == 0 || i % 13 == 0)\n\
    \                     .filter(i -> i % 3 == 0 || i % 5 == 0)\n               \
    \      .filter(i -> i % 7 == 0)\n                     .count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011763
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fb = Stream.iterate(n,\
    \ i -> i % 11 == 0 ? i % 11 : 0).takeWhile(i -> i % 13 == 0).count();\n      \
    \  return fb;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ Collections.emptyList());\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8jpd15kw.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, Collections.emptyList());\n\
    \               ^\n  required: long\n  found:    long,List<Object>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011757
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return IntStream.range(0,\
    \ (n))\n                .filter(i -> i % 11 == 0 || i % 13 == 0)\n           \
    \     .filter(i -> i % 11 == 0)\n                .filter(i -> i % 13 == 0)\n \
    \               .filter(i -> i % 11 != 0 && i % 13 != 0)\n                .filter(i\
    \ -> i % 11 == 0 || i % 13 == 0)\n                .count(i -> i == 7) *  11;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3yvz5e92.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(0, (n))\n                 \
    \                  ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ n);\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd9htg6v2.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, n);\n               ^\n\
    \  required: long\n  found:    long,long\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 10) {\n\
    \            if (n % 11 == 0 || n % 13 == 0) {\n                return 1L;\n \
    \           }\n            return 0;\n        }\n        return fizzBuzz(n / 10l)\
    \ + fizzBuzz(n % 10l);\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8f2c27m8.java:26)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return ((n %\
    \ 11 == 0 || n % 13 == 0) && (n % 11 != 0 || n % 13 != 0) && n != 0 ? 1 : 0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_h3kky7.java:21)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long counter\
    \ = 0;\n        for (long i = 1l; i <= n; i = i * 10l) {\n            long num\
    \ = i;\n            while (num > 0) {\n                int digit = num % 10;\n\
    \                if (digit == 7l) {\n                    counter++;\n        \
    \        }\n                num = num / 10;\n            }\n        }\n      \
    \  return counter;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi0lwzyiv.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int digit = num % 10;\n                  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n>0) {\n            if (n%11==7 || n%13==7) {\n         \
    \       count++;\n            }\n            n /= 10;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeuhfuocn.java:28)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n >= 100000000000l)\
    \ return fizzBuzz(n / 100000000000l);\n        if (n >= 1000000000l) return fizzBuzz(n\
    \ / 1000000000l);\n        if (n >= 100000000l) return fizzBuzz(n / 100000000l);\n\
    \        if (n >= 10000000l) return fizzBuzz(n / 10000000l);\n        if (n >=\
    \ 1000000l) return fizzBuzz(n / 1000000l);\n        if (n >= 100000l) return fizzBuzz(n\
    \ / 100000l);\n        if (n >= 10000l) return fizzBuzz(n / 10000l);\n       \
    \ if (n >= 1000l) return fizzBuzz(n / 1000l);\n        if (n >= 100l) return fizzBuzz(n\
    \ / 100l);\n        if (n >= 10l) return fizzBuzz(n / 10l);\n        if (n >=\
    \ 1l) return fizzBuzz(n / 1l);\n        return n;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\tat Problem.fizzBuzz(tmp0uxco7vl.java:27)\n\
    \tat Problem.fizzBu"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count=0l;\n\
    \        for(int i=1; i<=n; i++) {\n            if(n%11==0||n%13==0){\n      \
    \          count++;\n            }\n            if(i%3==0){\n                if(count==3){\n\
    \                    return i;\n                }\n                count=1l;\n\
    \            }\n            if(i%3!=0&&i%7!=0){\n                if(count==1){\n\
    \                    return i;\n                }\n                count=0l;\n\
    \            }\n        }\n        return n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaikcbl34.java:38)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long cnt = 0;\n\
    \        long div = 1;\n        while (n % 10 == 7)\n            cnt += div++;\n\
    \        while (div > 0) {\n            cnt += div;\n            div *= 11;\n\
    \        }\n        return cnt;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2_3a01zs.java:28)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long answer =\
    \ 1;\n        if (n % 11 == 0) answer += 1;\n        if (n % 13 == 0) answer +=\
    \ 1;\n        return answer;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpktfbognf.java:23)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n > 0) {\n            if (n / 11 == 0 || (n / 13 == 0 &&\
    \ n % 11 == 0)) {\n                count++;\n            }\n            n /= 11;\n\
    \            n /= 13;\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2rjzj3a.java:29)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long cnt = 0;\n\
    \        final String s = \"7\";\n        for (int i = 6; i <= n; i += 7) {\n\
    \            if (n % i == 0) {\n                if (s.equals(\"7\")) {\n     \
    \               cnt += 1;\n                }\n                if (s.equals(\"\
    7\")) {\n                    cnt += 1;\n                }\n            }\n   \
    \     }\n        return cnt;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpwnbqd7.java:33)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzzHelper(n,\
    \ n, n, n).stream().mapToLong(x -> x).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z7kzzbw.java:17: error: cannot find symbol\n        return fizzBuzzHelper(n,\
    \ n, n, n).stream().mapToLong(x -> x).count();\n               ^\n  symbol:  \
    \ method fizzBuzzHelper(long,long,long,long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 9) {\n\
    \            return 0;\n        }\n        boolean even = (n % 2) == 0;\n    \
    \    int digit = n / 10;\n        n /= 10;\n        int count = 0;\n        long\
    \ remainder = n;\n        do {\n            count += 1;\n            if (remainder\
    \ % 11 == 0 || remainder % 13 == 0) {\n                if (even) {\n         \
    \           return count;\n                }\n                n /= 10;\n     \
    \           remainder /= 10;\n                count = 0;\n                even\
    \ = true;\n            }\n        } while (remainder > 0);\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpatayrkk5.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int digit = n / 10;\n                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // Write your\
    \ code here.\n        return n;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpup1wmf6s.java:21)\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // Write your\
    \ code here.\n        // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13\n        long count1 = 0;\n    \
    \    long count2 = 0;\n        long count3 = 0;\n        if (n < 0) n = -n;\n\
    \        long temp = n;\n        while(temp != 0) {\n            temp /= 10;\n\
    \            if (temp % 11 == 0) {\n                count1++;\n            } else\
    \ if (temp % 13 == 0) {\n                count2++;\n            } else {\n   \
    \             count3++;\n            }\n        }\n        long count = count1\
    \ + count2 + count3;\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wsz7hde.java:38)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ (n, false));\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwmsh9yy8.java:17: error: ')' expected\n        return fizzBuzz(n,\
    \ (n, false));\n                              ^\n/tmp/tmpwmsh9yy8.java:17: error:\
    \ ';' expected\n        return fizzBuzz(n, (n, false));\n                    \
    \                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 1l;\n        while (n > 0) {\n            if (n % 11 == 0) count++;\n      \
    \      if (n % 13 == 0) count++;\n            n /= 10l;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpva39jvye.java:26)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n >= 1000)\
    \ {\n            return fizzBuzz(n / 1000 - 1);\n        } else {\n          \
    \  if (n % 11 == 0 || n % 13 == 0) {\n                return 1;\n            }\
    \ else if (n % 11 == 0) {\n                return 1 + fizzBuzz(n / 11);\n    \
    \        } else if (n % 13 == 0) {\n                return 1 + fizzBuzz(n / 13);\n\
    \            } else {\n                return 0;\n            }\n        }\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ra386uk.java:33)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0l;\n        long count = n;\n        while (count > 0) {\n            if (count\
    \ % 11 == 7 && count % 13 == 7) {\n                result++;\n            }\n\
    \            count--;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_a3hwoa.java:28)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // Your code\
    \ here\n        long ans = 0;\n        for (long x = 32767; x <= n; x += 3)\n\
    \            if (x % 3 == 0 || x % 5 == 0)\n                ans++;\n        if\
    \ (ans == 0)\n            ans = 1;\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_y_9bqdk.java:27)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 100 ||\
    \ n < 500l) {\n            return 0;\n        }\n        if (n % 11 == 0 || n\
    \ % 13 == 0) {\n            return 1l;\n        }\n        return fizzBuzz(n -\
    \ 100l) + fizzBuzz(n - 500l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuijvbd_.java:27)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n != 0) {\n            long remainder = n % 11;\n       \
    \     if (remainder == 7) {\n                count++;\n            }\n       \
    \     n = n / 11;\n            n = n % 11;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4wnslg5.java:30)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 11l)\
    \ {\n            System.out.println(0);\n            return 0l;\n        }\n\n\
    \        if (n % 11 == 0l && n % 13 == 0l) {\n            System.out.println(1);\n\
    \            return 1l;\n        }\n\n        if (n % 13 == 0l) {\n          \
    \  System.out.println(2);\n            return 2l;\n        }\n\n        if (n\
    \ % 11 == 0l) {\n            System.out.println(3);\n            return 3l;\n\
    \        }\n\n        if (n % 11 == 0l || n % 13 == 0l) {\n            System.out.println(4);\n\
    \            return 4l;\n        }\n\n        if (n % 11 == 0l && n % 13 == 0l)\
    \ {\n            System.out.println(5);\n            return 5l;\n        }\n\n\
    \        if (n % 11 == 0l || n % 13 == 0l) {\n            System.out.println(6);\n\
    \            return 6l;\n        }\n\n        if (n % 11 == 0l && n % 13 == 0l)\
    \ {\n            System.out.println(7);\n            return 7l;\n        }\n\n\
    \        if (n % 11 == 0l || n % 13 == 0l) {\n            System.out.println(8);\n\
    \            return 8l;\n        }\n\n        if (n % 11 == 0l && n % 13 == 0l)\
    \ {\n            System.out.println(9);\n            return 9l;\n        }\n\n\
    \        if (n % 11 == 0l || n % 13 == 0l) {\n            System.out.println(10);\n\
    \            return 10l;\n        }\n\n        if (n % 11 == 0l && n % 13 == 0l)\
    \ {\n            System.out.println(11);\n            return 11l;\n        }\n\
    \n        if (n % 11 == 0l || n % 13 == 0l) {\n            System.out.println(12);\n\
    \            return 12l;\n        }\n        throw new IllegalArgumentException(\"\
    Invalid input: \" + n);\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Invalid\
    \ input: 50\n\tat Problem.fizzBuzz(tmpyvh6557x.java:81)\n\tat Problem.main(tmpyvh6557x.java:84)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        Set<Long> set\
    \ = new HashSet<Long>();\n        while (n > 0) {\n            set.add(n % 10);\n\
    \            n = n / 10;\n        }\n        for (long item : set) {\n       \
    \     if (item == 7)\n                return set.size();\n        }\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdvtq1_rm.java:31)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long numOfFizz\
    \ = 0, numOfBuzz = 0;\n\n        if (n >= 0 && n % 11 == 0) {\n            numOfFizz++;\n\
    \        } else if (n % 13 == 0) {\n            numOfBuzz++;\n        }\n\n  \
    \      for (int i = 0; i < n; i++) {\n            if (i % 11 == 0 && i % 13 ==\
    \ 0) {\n                numOfFizz++;\n            } else if (i % 11 == 0 && i\
    \ % 13 != 0) {\n                numOfBuzz++;\n            } else if (i % 11 !=\
    \ 0 && i % 13 == 0) {\n                numOfBuzz++;\n            }\n        }\n\
    \n        if (numOfFizz > numOfBuzz) {\n            return numOfFizz;\n      \
    \  } else {\n            return numOfBuzz;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp448kpeo2.java:42)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long numTimes7\
    \ = 0, numTimes13 = 0, totalTimes7 = 0, totalTimes13 = 0;\n        // Find out\
    \ how many times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n        for(int i = 1; i < n; i *= 10) {\n            if((i %\
    \ 11 == 0) && (i % 13 == 0)) {\n                totalTimes7++;\n            }\n\
    \        }\n        // Find out how many times the digit 7 appears in integers\
    \ less than n which are divisible by 11.\n        for(int i = 1; i < n; i *= 10)\
    \ {\n            if(i % 11 == 0) {\n                numTimes7++;\n           \
    \ }\n        }\n        // Find out how many times the digit 7 appears in integers\
    \ less than n which are divisible by 13.\n        for(int i = 1; i < n; i *= 10)\
    \ {\n            if(i % 13 == 0) {\n                numTimes13++;\n          \
    \  }\n        }\n        return totalTimes7 * numTimes13 + totalTimes13;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpch_ef7co.java:40)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long limit = (long) Math.sqrt(n);\n        for (long i = 1; i <=\
    \ limit; i++) {\n            if (i % 11 == 0) count++;\n            if (i % 13\
    \ == 0) count++;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyutlz95n.java:27)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n <= 0 ||\
    \ n % 11 == 0 || n % 13 == 0)\n            return 1l;\n        else if (n % 11\
    \ == 0 && n % 13 == 0)\n            return 2l;\n        else if (n % 11 != 0 &&\
    \ n % 13 != 0)\n            return 1l + 2l;\n        else\n            return\
    \ 1l + 3l;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg0qwamex.java:27)\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long res = 0;\n\
    \        LongStream stream1 = LongStream.range(n, 2l).filter(i -> i % 11 == 0\
    \ || i % 13 == 0);\n        LongStream stream2 = LongStream.range(n, 2l).filter(i\
    \ -> i % 11 == 0);\n        LongStream stream3 = LongStream.range(n, 2l).filter(i\
    \ -> i % 13 == 0);\n        LongStream stream4 = LongStream.range(n, 2l).filter(i\
    \ -> i % 13 == 0);\n        LongStream stream5 = LongStream.range(n, 2l).filter(i\
    \ -> i % 11 == 0 || i % 13 == 0);\n        LongStream stream6 = LongStream.range(n,\
    \ 2l).filter(i -> i % 11 == 0);\n        LongStream stream7 = LongStream.range(n,\
    \ 2l).filter(i -> i % 13 == 0);\n        LongStream stream8 = LongStream.range(n,\
    \ 2l).filter(i -> i % 13 == 0);\n\n        LongStream stream9 = LongStream.range(n,\
    \ 2l).filter(i -> i % 11 == 0 || i % 13 == 0 || i % 21 == 0);\n        LongStream\
    \ stream10 = LongStream.range(n, 2l).filter(i -> i % 11 == 0 || i % 13 == 0);\n\
    \        LongStream stream11 = LongStream.range(n, 2l).filter(i -> i % 13 == 0\
    \ || i % 21 == 0);\n        LongStream stream12 = LongStream.range(n, 2l).filter(i\
    \ -> i % 13 == 0 || i % 21 == 0);\n        LongStream stream13 = LongStream.range(n,\
    \ 2l).filter(i -> i % 11 == 0 || i % 13 == 0 || i % 21 == 0);\n        LongStream\
    \ stream14 = LongStream.range(n, 2l).filter(i -> i % 11 == 0 || i % 13 == 0);\n\
    \        LongStream stream15 = LongStream.range(n, 2l).filter(i -> i % 13 == 0\
    \ || i % 21 == 0);\n        LongStream stream16 = LongStream.range(n, 2l).filter(i\
    \ -> i % 13 == 0 || i % 21 == 0);\n\n        LongStream stream17 = LongStream.range(n,\
    \ 2l).filter(i -> i % 21 == 0);\n        LongStream stream18 = LongStream.range(n,\
    \ 2l).filter(i -> i % 21 == 0);\n        LongStream stream19 = LongStream.range(n,\
    \ 2l).filter(i -> i % 21 == 0);\n        LongStream stream20 = LongStream.range(n,\
    \ 2l).filter(i -> i % 21 == 0);\n        LongStream stream21 = LongStream.range(n,\
    \ 2l).filter(i -> i % 21 == 0);\n\n        LongStream stream22 = LongStream.range(n,\
    \ 2l).filter(i -> i % 21 == 0);\n        LongStream stream23 = LongStream.range(\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4zsfier8.java:44: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011759
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n >= 0 &&\
    \ n % 11 == 0)\n            return fizzBuzzHelper(n / 11, n);\n        if (n >=\
    \ 0 && n % 13 == 0)\n            return fizzBuzzHelper(n / 13, n);\n        return\
    \ fizzBuzzHelper(0, n);\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8r4qxbd8.java:18: error: cannot find symbol\n            return\
    \ fizzBuzzHelper(n / 11, n);\n                   ^\n  symbol:   method fizzBuzzHelper(long,long)\n\
    \  location: class Problem\n/tmp/tmp8r4qxbd8.java:20: error: cannot find symbol\n\
    \            return fizzBuzzHelper(n / 13, n);\n                   ^\n  symbol:\
    \   method fizzBuzzHelper(long,long)\n  location: class Problem\n/tmp/tmp8r4qxbd8.java:21:\
    \ error: cannot find symbol\n        return fizzBuzzHelper(0, n);\n          \
    \     ^\n  symbol:   method fizzBuzzHelper(int,long)\n  location: class Problem\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n < 0) throw\
    \ new IllegalArgumentException();\n        if (n % 11 == 0 || n % 13 == 0) return\
    \ 1l;\n        return fizzBuzz(n - 1) % 11l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpts7zch8q.java:22)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        if (n%11==0 || n%13==0) {\n            count += 1;\n           \
    \ while (n != 0) {\n                if (n%11==0)\n                    count +=\
    \ 1;\n                if (n%13==0)\n                    count += 1;\n        \
    \        n /= 11;\n                n /= 13;\n            }\n        }\n      \
    \  return count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprn1vcgpf.java:34)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int nDiv = n\
    \ % 11;\n        if (nDiv != 0 && nDiv != 11 && nDiv != 13)\n            n--;\n\
    \        long count = 0;\n        for (int i = n; i >= 1; i--) {\n           \
    \ int nDiv = i % 11;\n            if (nDiv != 0 && nDiv != 11 && nDiv != 13)\n\
    \                n--;\n            if (n % 10 == 7) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9tlcga9i.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int nDiv = n % 11;\n                     ^\n/tmp/tmp9tlcga9i.java:21:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    for (int i = n; i >= 1; i--) {\n                     ^\n/tmp/tmp9tlcga9i.java:22:\
    \ error: variable nDiv is already defined in method fizzBuzz(long)\n         \
    \   int nDiv = i % 11;\n                ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ new long[]{1, 1, 1});\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpslzksuzm.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, new long[]{1, 1, 1});\n\
    \               ^\n  required: long\n  found:    long,long[]\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n <= 0 ||\
    \ n % 11 == 0 || n % 13 == 0)\n            return 0;\n        else\n         \
    \   return fizzBuzz(n - 1) + 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqye2mlcf.java:23)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n <= 0) throw\
    \ new IllegalArgumentException();\n        long answer = 1l;\n        long lastDivisor\
    \ = 1l;\n        while (n > 1l) {\n            n /= 10l;\n            if (n %\
    \ 13 == 0l || n % 11 == 0l) {\n                lastDivisor *= 11l;\n         \
    \   }\n            if (n % 11 == 0l) {\n                lastDivisor += 1l;\n \
    \           }\n            if (n % 13 == 0l) {\n                lastDivisor +=\
    \ 1l;\n            }\n            answer += lastDivisor / n; // We do this so\
    \ answer is a positive number\n        }\n        return answer;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.fizzBuzz(tmpcbbx8ezi.java:31)\n\tat Problem.main(tmpcbbx8ezi.java:36)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        Set<Integer> set = new HashSet<>();\n        while (n > 0) {\n \
    \           set.add(n % 10);\n            n = n / 10;\n        }\n        if (set.contains(7))\
    \ {\n            count++;\n        }\n        if (set.contains(8)) {\n       \
    \     count++;\n        }\n        if (set.contains(9)) {\n            count++;\n\
    \        }\n        if (set.contains(10)) {\n            count++;\n        }\n\
    \        if (set.contains(11)) {\n            count++;\n        }\n        if\
    \ (set.contains(12)) {\n            count++;\n        }\n        if (set.contains(13))\
    \ {\n            count++;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rzab1w9.java:20: error: incompatible types: long cannot be converted\
    \ to Integer\n            set.add(n % 10);\n                      ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long sum = 0;\n\
    \        while (n != 0) {\n            if (n % 11 == 0 | n % 13 == 0) {\n    \
    \            sum += 1;\n            }\n            n /= 11;\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgknjsru7.java:28)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0l;\n        int count = 0;\n\n        for(long i = 0; i <= n; i++) {\n    \
    \        if((i % 11l) == 7l){\n                count++;\n            }\n     \
    \       if((i % 13l) == 7l){\n                count++;\n            }\n      \
    \  }\n\n        return (long) count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsnckz6x5.java:32)\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        Set<Long> multiples\
    \ = new HashSet<>();\n        while (true) {\n            multiples.addAll(LongStream.rangeClosed(1,\
    \ n)\n                    .filter(i -> i % 11 == 0 || i % 13 == 0)\n         \
    \           .boxed()\n                    .collect(Collectors.toSet()));\n   \
    \         n = n;\n            if (n == 1) return multiples.size();\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011766
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 1;\n        while (n % 11 == 0 || n % 13 == 0)\n            n /= 11; // or 13\n\
    \        while (n % 11 != 0)\n            count += 1;\n        n /= 11;\n    \
    \    while (n % 13 != 0)\n            count += 1;\n        return count;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        if (n / 11 != 0) {\n            result += fizz(n);\n        }\n\
    \        if (n / 13 != 0) {\n            result += fizzBuzz(n);\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptnm_zz5m.java:19: error: cannot find symbol\n            result\
    \ += fizz(n);\n                      ^\n  symbol:   method fizz(long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if((n&3l) ==\
    \ 0l) return 1l; \n        long x = 0l;\n        if((n&4l) == 4l) x += 4l;\n \
    \       else if((n&5l) == 3l) x += 5l;\n        else if((n&6l) == 6l) x += 6l;\n\
    \        else if((n&7l) == 7l) x += 7l;\n        return fizzBuzz((n/10l)*10l+(x*10l));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\tat Problem.fizzBuzz(tmpjtvb53yu.java:23)\n\
    \tat Problem.fizzBu"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n > 0) {\n            if (n % 11 == 0 || n % 13 == 0) count++;\n\
    \            n = n / 10;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikzhemqe.java:26)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n % 11 ==\
    \ 0 || n % 13 == 0) {\n            return n;\n        } else {\n            return\
    \ fizzBuzz(n / 11) + fizzBuzz(n / 13);\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprnnnrgm3.java:25)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0, remainder = 0;\n        while ((n % 10) == 7) {\n            count++;\n \
    \           n = n / 10;\n        }\n        while (n > 0) {\n            remainder\
    \ = n % 10;\n            if ((remainder == 7) || (remainder == 11) || (remainder\
    \ == 13)) {\n                count += 1;\n            }\n            n = n / 10;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpok6ou2so.java:33)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        int count = 0;\n\
    \        for(int i = 1 ; i <= n ; i++) {\n            int div = i%11 + i%13;\n\
    \            if(div == 7)\n                count++;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmrl78pdl.java:26)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return n.ints(Integer.MAX_VALUE).filter(n\
    \ -> n % 11 == 0 || n % 13 == 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc7q4xau7.java:17: error: long cannot be dereferenced\n        return\
    \ n.ints(Integer.MAX_VALUE).filter(n -> n % 11 == 0 || n % 13 == 0).count();\n\
    \                ^\n/tmp/tmpc7q4xau7.java:17: error: variable n is already defined\
    \ in method fizzBuzz(long)\n        return n.ints(Integer.MAX_VALUE).filter(n\
    \ -> n % 11 == 0 || n % 13 == 0).count();\n                                  \
    \              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long fizz = 0,\
    \ buzz = 0, ones = 0, zeros = 0;\n        for (long i = 0; i <  n; i++) {\n  \
    \          if (i % 11 == 0 || i % 13 == 0) {\n                fizz++;\n      \
    \      }\n            else if (i % 10 == 7) {\n                buzz++;\n     \
    \       }\n            else {\n                ones++;\n            }\n      \
    \  }\n        return (fizz + buzz + ones);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumrrytii.java:32)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        final int DIVISION\
    \ = 11 + 13;\n        final BigDecimal d = new BigDecimal(n);\n        return\
    \ d.divide(DIVISION, 2, RoundingMode.FLOOR).multiply(DIVISION).longValue();\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4tthrdvu.java:19: error: no suitable method found for divide(int,int,RoundingMode)\n\
    \        return d.divide(DIVISION, 2, RoundingMode.FLOOR).multiply(DIVISION).longValue();\n\
    \                ^\n    method BigDecimal.divide(BigDecimal,int,int) is not applicable\n\
    \      (argument mismatch; int cannot be converted to BigDecimal)\n    method\
    \ BigDecimal.divide(BigDecimal,int,RoundingMode) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to BigDecimal)\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        if (n >= 0 &&\
    \ n % 11 == 0 && n % 13 == 0) {\n            return 1;\n        } else if (n %\
    \ 11 == 0 && n % 13 == 0) {\n            return 1;\n        } else if (n >= 9\
    \ && n % 11 != 0 && n % 13 == 0) {\n            return 2;\n        } else if (n\
    \ % 11 != 0 && n % 13 == 0) {\n            return 2;\n        } else {\n     \
    \       return 3;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ow96l2c.java:30)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long counter\
    \ = 0;\n        long count = 0;\n        while (n > 12) {\n            count++;\n\
    \            long remainder = n % 10;\n            if ((remainder == 7) && ((remainder\
    \ == (7l)) || (remainder == (7ll)))) {\n                counter += 1;\n      \
    \      }\n            n /= 10;\n        }\n        return (count);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe56e7_sl.java:22: error: ')' expected\n            if ((remainder\
    \ == 7) && ((remainder == (7l)) || (remainder == (7ll)))) {\n                \
    \                                                             ^\n/tmp/tmpe56e7_sl.java:22:\
    \ error: ';' expected\n            if ((remainder == 7) && ((remainder == (7l))\
    \ || (remainder == (7ll)))) {\n                                              \
    \                                ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        Set<Integer>\
    \ set = new HashSet<>();\n        StringBuilder sb = new StringBuilder();\n  \
    \      while (n>1) {\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \            n = n / 11;\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \            n = n / 13;\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \            n = n / 7;\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \            n = n / 5;\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \            n = n / 3;\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \            n = n / 1;\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \        }\n        for (Integer i : set) sb.append(i);\n        long res = 0;\n\
    \        for (String str : sb.toString().split(\"\")) {\n            if (str.equals(\"\
    7\")) res++;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprnahie5y.java:20: error: incompatible types: long cannot be converted\
    \ to Integer\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n      \
    \                                              ^\n/tmp/tmprnahie5y.java:22: error:\
    \ incompatible types: long cannot be converted to Integer\n            if (n %\
    \ 11 == 0 || n % 13 == 0) set.add(n);\n                                      \
    \              ^\n/tmp/tmprnahie5y.java:24: error: incompatible types: long cannot\
    \ be converted to Integer\n            if (n % 11 == 0 || n % 13 == 0) set.add(n);\n\
    \                                                    ^\n/tmp/tmprnahie5y.java:26:\
    \ error: incompatible types: long cannot be converted to Integer\n           \
    \ if (n % 11 == 0 || n % 13 == 0) set.add(n);\n                              \
    \                      ^\n/tmp/tmprnahie5y.java:28: error: incompatible types:\
    \ long cannot be converted to Integer\n            if (n % 11 == 0 || n % 13 ==\
    \ 0) set.add(n);\n                                                    ^\n/tmp/tmprnahie5y.java:30:\
    \ error: incompatible types: long cannot be converted to Integer\n           \
    \ if (n % 11 == 0 || n % 13 == 0) set.add(n);\n                              \
    \                      ^\n/tmp/tmprnahie5y.java:32: error: incompatible types:\
    \ long cannot be converted to Integer\n            if (n % 11 == 0 || n % 13 ==\
    \ 0) set.add(n);\n                                                    ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n7 errors\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long counter\
    \ = 0;\n        while (n >= 11) {\n            n /= 11;\n            ++counter;\n\
    \        }\n        while (n >= 13) {\n            n /= 13;\n            ++counter;\n\
    \        }\n        return counter;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36znrkbd.java:29)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        while (n > 10) {\n            if (n % 11 == 0) {\n             \
    \   result++;\n            }\n            if (n % 13 == 0) {\n               \
    \ result++;\n            }\n            n /= 10;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfohlmtih.java:31)\n"
  stdout: ''
  timestamp: 1660011761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return fizzBuzz(n,\
    \ new long[]{0l});\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3oyg47fq.java:17: error: method fizzBuzz in class Problem cannot\
    \ be applied to given types;\n        return fizzBuzz(n, new long[]{0l});\n  \
    \             ^\n  required: long\n  found:    long,long[]\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011761

language: java
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> characterSet = string.toLowerCase().chars().boxed().collect(Collectors.toSet());\n\
    \        long numberOfDistinctCharacters = characterSet.stream().distinct().count();\n\
    \        return numberOfDistinctCharacters;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu43gd439.java:15: error: incompatible types: inference variable\
    \ T has incompatible bounds\n        Set<Character> characterSet = string.toLowerCase().chars().boxed().collect(Collectors.toSet());\n\
    \                                                                            \
    \      ^\n    equality constraints: Character\n    lower bounds: Integer\n  where\
    \ T is a type-variable:\n    T extends Object declared in method <T>toSet()\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // TODO: Implement me\n        long result = 0;\n        for(int i = 0;\
    \ i < string.length(); i++) {\n            for(int j = 0; j < string.length();\
    \ j++) {\n                result += Character.toLowerCase(string.charAt(i)) ==\
    \ Character.toLowerCase(string.charAt(j)) ? 1 : 0;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyw0yi866.java:27)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> counter = new HashMap<Character, Long>();\n     \
    \   for (char c : string.toCharArray()) {\n            if (counter.containsKey(c))\n\
    \                counter.put(c, counter.get(c) + 1);\n            else\n     \
    \           counter.put(c, 1L);\n        }\n        return counter.values().stream().distinct().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps36czi7s.java:26)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string.length() == 0)\n            return 0;\n\n        // Use an\
    \ array to store the characters in it\n        char[] chars = string.toLowerCase().toCharArray();\n\
    \        long distinctCharacters = 0;\n\n        // Loop through each character\
    \ in the string, if it isn't in the array, add it to the array\n        // otherwise,\
    \ remove it from the array\n        for (char c : string.toCharArray()) {\n  \
    \          if (Arrays.binarySearch(chars, c) < 0)\n                chars[] = Arrays.copyOf(chars,\
    \ chars.length + 1);\n            else\n                chars[chars.length - 1]\
    \ = c;\n        }\n\n        // Loop through the array and add each character\
    \ to the distinct characters count\n        for (char c : chars)\n           \
    \ distinctCharacters++;\n\n        return distinctCharacters;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxuspqkjr.java:26: error: not a statement\n                chars[]\
    \ = Arrays.copyOf(chars, chars.length + 1);\n                     ^\n/tmp/tmpxuspqkjr.java:26:\
    \ error: ';' expected\n                chars[] = Arrays.copyOf(chars, chars.length\
    \ + 1);\n                       ^\n/tmp/tmpxuspqkjr.java:27: error: 'else' without\
    \ 'if'\n            else\n            ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null) return 0;\n        char[] chars = string.toCharArray();\n\
    \        Arrays.sort(chars);\n        long distinct = 0;\n        for (char c\
    \ : chars) {\n            boolean isFirst = true;\n            for (char first\
    \ : chars) {\n                if (c == first) {\n                    if (!isFirst)\
    \ distinct++;\n                    isFirst = false;\n                }\n     \
    \       }\n        }\n        return distinct;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvgjr69t.java:32)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().mapToObj(c -> Character.toString((char) c))\n  \
    \              .distinct()\n                .count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fdmxwiv.java:22)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null || string.length() == 0) {\n            throw new IllegalArgumentException(\"\
    String cannot be null or empty\");\n        }\n\n        long distinctCharacters\
    \ = string.length();\n\n        // Use a Map to count the characters and then\
    \ update the distinct characters count in the end\n        Map<Character, Long>\
    \ characterCountMap = new HashMap<>();\n        for (char ch : string.toCharArray())\
    \ {\n            if (characterCountMap.containsKey(ch)) {\n                characterCountMap.put(ch,\
    \ characterCountMap.get(ch) + 1);\n            } else {\n                characterCountMap.put(ch,\
    \ 1l);\n            }\n        }\n\n        distinctCharacters += characterCountMap.size();\n\
    \        for (Map.Entry<Character, Long> entry : characterCountMap.entrySet())\
    \ {\n            distinctCharacters -= entry.getValue();\n        }\n\n      \
    \  return distinctCharacters;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: String\
    \ cannot be null or empty\n\tat Problem.countDistinctCharacters(tmpka1nmo0o.java:16)\n\
    \tat Problem.main(tmpka1nmo0o.java:39)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string.isEmpty()) {\n            return 0;\n        }\n        return\
    \ string.chars().distinct().count() + countDistinctCharacters(string.substring(1));\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgxc7v1j.java:22)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> chars = new HashSet<>();\n        for (char ch : string.toCharArray())\
    \ {\n            chars.add(ch);\n        }\n        long count = 0;\n        for\
    \ (char ch : chars) {\n            if (Character.isLowerCase(ch)) {\n        \
    \        count++;\n            }\n            if (Character.isUpperCase(ch)) {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpina0_ex6.java:33)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       \n        List<Character> charList = new ArrayList<Character>();\n   \
    \     for (char ch : string.toCharArray()) {\n            charList.add(Character.toLowerCase(ch));\n\
    \        }\n        \n        charList.stream().distinct().count();\n        \n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkgl7i1q9.java:23: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set set = new HashSet(Arrays.asList(string.toCharArray()));\n        return\
    \ set.size();\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mcbaka5.java:19)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> chars = new HashSet<>();\n        for (Character c : string.chars())\
    \ {\n            chars.add(c);\n        }\n        return chars.size();\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo46bqyk3.java:16: error: for-each not applicable to expression\
    \ type\n        for (Character c : string.chars()) {\n                       \
    \                ^\n  required: array or java.lang.Iterable\n  found:    IntStream\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        for (char c : string.toCharArray())\
    \ {\n            char lowerCaseC = Character.toLowerCase(c);\n            char\
    \ upperCaseC = Character.toUpperCase(c);\n            if (lowerCaseC == upperCaseC)\
    \ {\n                distinctCharacters++;\n            } else {\n           \
    \     distinctCharacters += Math.max(lowerCaseC, upperCaseC) - Math.min(lowerCaseC,\
    \ upperCaseC);\n            }\n        }\n        return distinctCharacters;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptjn7hp05.java:29)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return IntStream.range(0, string.length()).filter(i -> string.charAt(i)\
    \ != ' ').distinct().count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqax2q27.java:20)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashSet<Character> set = new HashSet<Character>();\n        for (char\
    \ ch : string.toCharArray()) {\n            set.add(ch);\n        }\n        return\
    \ set.size();\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n27jf8w.java:24)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<>();\n        for (char c: string.toCharArray())\
    \ {\n            if (set.contains(c)) {\n                set.add(Character.toUpperCase(c));\n\
    \            } else {\n                set.add(Character.toLowerCase(c));\n  \
    \          }\n        }\n        return set.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52s3_xmu.java:28)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Integer> map = new HashMap<>();\n        for (char\
    \ ch : string.toCharArray()) {\n            Integer count = map.get(ch);\n   \
    \         if (count == null) {\n                count = 1;\n            } else\
    \ {\n                count += 1;\n            }\n            map.put(ch, count);\n\
    \        }\n        return map.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy3angoxu.java:30)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            set.add(c);\n        }\n        return set.size();\n    }\n \
    \   public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_4nf_07.java:24)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> map = new HashMap<>();\n        string.chars().forEach(c\
    \ -> map.put(c, map.getOrDefault(c.toLowerCase(), 0L) + 1));\n\n        return\
    \ map.entrySet().stream()\n                .map(e -> e.getValue())\n         \
    \       .distinct()\n                .count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj09ut69v.java:16: error: int cannot be dereferenced\n        string.chars().forEach(c\
    \ -> map.put(c, map.getOrDefault(c.toLowerCase(), 0L) + 1));\n               \
    \                                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long total = 0;\n        for (char c : string.toCharArray()) {\n     \
    \       total += Character.toLowerCase(c).hashCode();\n        }\n        return\
    \ total;\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6nn25iub.java:17: error: char cannot be dereferenced\n        \
    \    total += Character.toLowerCase(c).hashCode();\n                         \
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashSet<Character> set = new HashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            set.add(Character.toLowerCase(c));\n            set.add(Character.toUpperCase(c));\n\
    \        }\n        return set.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ux2ah68.java:24)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long result = 0;\n        char[] chArr = string.toCharArray();\n     \
    \   for (char ch : chArr) {\n            result += Character.toLowerCase(ch).equals(Character.toLowerCase(ch)\
    \ ? Character.toUpperCase(ch) : Character.toLowerCase(ch));\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkcxe67ml.java:18: error: char cannot be dereferenced\n        \
    \    result += Character.toLowerCase(ch).equals(Character.toLowerCase(ch) ? Character.toUpperCase(ch)\
    \ : Character.toLowerCase(ch));\n                                            \
    \   ^\n/tmp/tmpkcxe67ml.java:18: error: incompatible types: char cannot be converted\
    \ to boolean\n            result += Character.toLowerCase(ch).equals(Character.toLowerCase(ch)\
    \ ? Character.toUpperCase(ch) : Character.toLowerCase(ch));\n                \
    \                                                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       String s = string.trim().toLowerCase().replaceAll(\"\\\\p{Punct}+\", \"\
    \");\n        HashSet<Character> chars = new HashSet<>();\n        for (char c\
    \ : s.toCharArray()) {\n            chars.add(c);\n        }\n        return chars.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCount = 0;\n        long lowerCaseCount = 0;\n        long\
    \ upperCaseCount = 0;\n\n        if (string == null || string.isEmpty()) {\n \
    \           return distinctCount;\n        }\n\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char currentChar = string.charAt(i);\n            if (Character.isLowerCase(currentChar))\
    \ {\n                lowerCaseCount++;\n            }\n            if (Character.isUpperCase(currentChar))\
    \ {\n                upperCaseCount++;\n            }\n        }\n\n        distinctCount\
    \ = lowerCaseCount + upperCaseCount;\n\n        return distinctCount;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94h8qlbe.java:40)\n"
  stdout: ''
  timestamp: 1660011945
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> s = new LinkedHashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            s.add(c);\n        }\n        return s.size();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpst1tfhw1.java:24)\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                count += Character.toUpperCase(c) - 'A' + 1;\n          \
    \  } else if (Character.isLowerCase(c)) {\n                count += Character.toLowerCase(c)\
    \ - 'a' + 1;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk1ztq1r3.java:28)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Your code here\n        String temp = string.toLowerCase();\n     \
    \   return temp.length() - temp.replaceAll(\"[^\\\\w]\", \"\").length();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm14ily42.java:21)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       String[] characters = string.split(\"\");\n        long distinctCharacters\
    \ = 0;\n        for (String character: characters) {\n            distinctCharacters\
    \ += countCharacter(character);\n        }\n        return distinctCharacters;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph61d1ylk.java:18: error: cannot find symbol\n            distinctCharacters\
    \ += countCharacter(character);\n                                  ^\n  symbol:\
    \   method countCharacter(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Use Map to count distinct characters\n        Map<Character, Long>\
    \ map = new HashMap<>();\n        for (char c : string.toCharArray()) {\n    \
    \        if (map.containsKey(c))\n                map.put(c, map.get(c) + 1);\n\
    \            else\n                map.put(c, 1L);\n        }\n\n        // Sum\
    \ up all values in the Map\n        long sum = 0L;\n        for (Long count :\
    \ map.values())\n            sum += count;\n\n        // Return distinct characters\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzmy7jdt.java:35)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long answer = 0L;\n        for(int i = 0; i < string.length(); i++) {\n\
    \            answer += (string.charAt(i) >= 'a' && string.charAt(i) <= 'z') ||\
    \ (string.charAt(i) >= 'A' && string.charAt(i) <= 'Z');\n        }\n        return\
    \ answer;\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpscg6tv1g.java:17: error: bad operand types for binary operator\
    \ '+'\n            answer += (string.charAt(i) >= 'a' && string.charAt(i) <= 'z')\
    \ || (string.charAt(i) >= 'A' && string.charAt(i) <= 'Z');\n                 \
    \  ^\n  first type:  long\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Solution starts here\n        long result = 0;\n        for (char c\
    \ : string.toCharArray()) {\n            if (Character.isLetterOrDigit(c)) {\n\
    \                result++;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0fj81iu.java:27)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        for (char character : string.toCharArray())\n\
    \            distinctCharacters += Math.pow(Character.toLowerCase(character) -\
    \ 'a', 1);\n        return distinctCharacters;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qq7ke1_.java:22)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        Set<Character> set = new HashSet<>();\n\
    \n        for (char character : string.toCharArray())\n            if (Character.isUpperCase(character))\n\
    \                set.add(Character.toLowerCase(character));\n            if (Character.isLowerCase(character))\n\
    \                set.add(Character.toUpperCase(character));\n\n            for\
    \ (char c : set) {\n                if (Character.isLetter(c))\n             \
    \       distinctCharacters += 1;\n            }\n\n            return distinctCharacters;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6lq5bmj_.java:32: error: class, interface, enum, or record expected\n\
    \    public static void main(String[] args) {\n                  ^\n/tmp/tmp6lq5bmj_.java:34:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    ^\n/tmp/tmp6lq5bmj_.java:35:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    ^\n/tmp/tmp6lq5bmj_.java:36:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n    ^\n/tmp/tmp6lq5bmj_.java:37:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    ^\n\
    /tmp/tmp6lq5bmj_.java:38: error: class, interface, enum, or record expected\n\
    \    }\n    ^\n6 errors\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // convert string to character array\n        char[] charArray = string.toCharArray();\n\
    \n        // initialize character counters\n        long distinctCharacters =\
    \ 0;\n        long noOfCharacters = 0;\n        // for each character in the array\n\
    \        for (char c : charArray) {\n            // if the character is already\
    \ not in the counters array (countDuplicates(charArray) returns 1)\n         \
    \   // then add 1 to the distinct characters and add 1 to the total character\
    \ counter\n            if (countDuplicates(charArray) != 1 && countDuplicates(charArray)\
    \ > distinctCharacters) {\n                distinctCharacters++;\n           \
    \ }\n            noOfCharacters++;\n        }\n        // return the total number\
    \ of distinct characters and the total number of characters\n        return noOfCharacters\
    \ - distinctCharacters;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpshf0l8l1.java:25: error: cannot find symbol\n            if (countDuplicates(charArray)\
    \ != 1 && countDuplicates(charArray) > distinctCharacters) {\n               \
    \ ^\n  symbol:   method countDuplicates(char[])\n  location: class Problem\n/tmp/tmpshf0l8l1.java:25:\
    \ error: cannot find symbol\n            if (countDuplicates(charArray) != 1 &&\
    \ countDuplicates(charArray) > distinctCharacters) {\n                       \
    \                            ^\n  symbol:   method countDuplicates(char[])\n \
    \ location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> charSet = new HashSet<>();\n        for (char c: string.toCharArray())\
    \ {\n            charSet.add(c);\n        }\n        return charSet.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiutvg4lf.java:24)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> uniqueChars = new HashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            uniqueChars.add(c);\n        }\n        return uniqueChars.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kcydu2l.java:24)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long sumOfChars = 0;\n        for (char c : string.toCharArray()) {\n\
    \            sumOfChars += Character.toLowerCase(c) - Character.toUpperCase(c);\n\
    \        }\n        return sumOfChars;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmx3_oe5.java:23)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> countMap = new HashMap<>();\n        for (char c\
    \ : string.toCharArray())\n            countMap.put(c, countMap.getOrDefault(c,\
    \ 0L) + 1);\n        return countMap.values().stream().distinct().count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjy9tlsv.java:22)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return IntStream.range(0, string.length()).boxed().distinct().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gq5ran3.java:20)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Write your code here\n        long retVal = string.chars().distinct().count();\n\
    \        return retVal;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1ykpunj.java:22)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null) {\n            return -1;\n        }\n        long\
    \ count = 0;\n        for (char ch : string.toCharArray()) {\n            count\
    \ += Character.toLowerCase(ch) == ch ? 1 : 0;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fbfmty_.java:27)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       List<Character> chars = string.chars()\n                .mapToObj(c ->\
    \ (char) c)\n                .collect(Collectors.toList());\n        HashSet<Character>\
    \ set = new HashSet<>(chars);\n        return set.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxgpkkgi2.java:24)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacterCount = 0;\n\n        // Split the string into a\
    \ character array then convert each character into lower case using toLowerCase()\n\
    \        // then use distinct() method from stream API to remove duplicate characters\n\
    \        List<Character> characters = Arrays.stream(string.toLowerCase().split(\"\
    \")).distinct().collect(Collectors.toList());\n        distinctCharacterCount\
    \ = characters.size();\n\n        return distinctCharacterCount;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn4xq97ii.java:19: error: incompatible types: inference variable\
    \ T has incompatible bounds\n        List<Character> characters = Arrays.stream(string.toLowerCase().split(\"\
    \")).distinct().collect(Collectors.toList());\n                              \
    \                                                                       ^\n  \
    \  equality constraints: Character\n    lower bounds: String\n  where T is a type-variable:\n\
    \    T extends Object declared in method <T>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return countDistinctCharacters(string, string.charAt(0));\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsns0ldvc.java:15: error: method countDistinctCharacters in class\
    \ Problem cannot be applied to given types;\n        return countDistinctCharacters(string,\
    \ string.charAt(0));\n               ^\n  required: String\n  found:    String,char\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacterCount = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (Character.isLetter(string.charAt(i))) {\n          \
    \      distinctCharacterCount++;\n            }\n        }\n        return distinctCharacterCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr_0kgdqr.java:26)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<>();\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            if (set.contains(c)) {\n    \
    \            set.add(Character.toUpperCase(c));\n                set.add(Character.toLowerCase(c));\n\
    \            } else {\n                set.add(Character.toUpperCase(c));\n  \
    \          }\n        }\n        return set.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_1h4tjp.java:30)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Create an array of 26 boolean values\n        // Initialize all elements\
    \ of the array to false (for false)\n        boolean[] distinctCharacters = new\
    \ boolean[string.length()];\n        // Initialize all elements of the array to\
    \ 0 (for false)\n        for (int i = 0; i < string.length(); i++) {\n       \
    \     distinctCharacters[i] = false;\n        }\n\n        // Iterate through\
    \ each character in the string\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            // If the current character is the same as the previous one,\
    \ set to true\n            if (distinctCharacters[string.charAt(i)]) {\n     \
    \           distinctCharacters[string.charAt(i)] = true;\n                // Else,\
    \ set to false\n            } else {\n                distinctCharacters[string.charAt(i)]\
    \ = false;\n            }\n        }\n        // Return the number of distinct\
    \ characters\n        return distinctCharacters.length;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 97 out of bounds for length 5\n\tat Problem.countDistinctCharacters(tmp_k_sleu7.java:26)\n\
    \tat Problem.main(tmp_k_sleu7.java:38)\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> chars = new HashSet<>(string.length());\n        for (char\
    \ c : string.toCharArray()) {\n            chars.add(Character.toLowerCase(c));\n\
    \        }\n        return chars.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return Arrays.stream(string.toCharArray()).distinct().count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps7j6jfmb.java:15: error: no suitable method found for stream(char[])\n\
    \        return Arrays.stream(string.toCharArray()).distinct().count();\n    \
    \                 ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n\
    \      (inference variable T#1 has incompatible bounds\n        equality constraints:\
    \ char\n        lower bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to long[])\n    method Arrays.stream(double[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return Stream.of(string)\n                .map(c -> Character.toLowerCase(c))\n\
    \                .distinct()\n                .count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmwefhlcr.java:16: error: no suitable method found for toLowerCase(String)\n\
    \                .map(c -> Character.toLowerCase(c))\n                       \
    \            ^\n    method Character.toLowerCase(char) is not applicable\n   \
    \   (argument mismatch; String cannot be converted to char)\n    method Character.toLowerCase(int)\
    \ is not applicable\n      (argument mismatch; String cannot be converted to int)\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> map = new HashMap<Character, Long>();\n        for\
    \ (char c : string.toCharArray()) {\n            Long l = map.get(c);\n      \
    \      if (l == null) {\n                l = 1l;\n            } else {\n     \
    \           l++;\n            }\n            map.put(c, l);\n        }\n     \
    \   return map.size();\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2ia47zf.java:30)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> countMap = string\n                .chars()\n   \
    \             .mapToObj(c -> (char) c)\n                .collect(Collectors.groupingBy(Function.identity(),\
    \ Collectors.counting()));\n        return countMap.values().stream().mapToLong(c\
    \ -> c).sum();\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz5b_lu0p.java:18: error: cannot find symbol\n                .collect(Collectors.groupingBy(Function.identity(),\
    \ Collectors.counting()));\n                                               ^\n\
    \  symbol:   variable Function\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       StringBuilder sb = new StringBuilder();\n        char [] chars = string.toCharArray();\n\
    \        for (char c : chars) {\n            sb.append(c);\n        }\n      \
    \  Set<String> distinctChars = new HashSet<>(Arrays.asList(sb.toString()));\n\
    \        return distinctChars.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_elvhrye.java:24)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        for (char ch : string.toCharArray())\
    \ {\n            distinctCharacters += string.toLowerCase().indexOf(ch.toLowerCase())\
    \ + 1;\n        }\n        return distinctCharacters;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkco4jffb.java:17: error: char cannot be dereferenced\n        \
    \    distinctCharacters += string.toLowerCase().indexOf(ch.toLowerCase()) + 1;\n\
    \                                                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<String> stringSet = new HashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            stringSet.add(c);\n        }\n        return stringSet.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp631pp_1s.java:17: error: incompatible types: char cannot be converted\
    \ to String\n            stringSet.add(c);\n                          ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // The characters in the string are stored in an ArrayList which allows\
    \ us to count each character in the string\n        ArrayList<Character> characterList\
    \ = new ArrayList<Character>();\n        for (char character : string.toCharArray())\
    \ {\n            characterList.add(character);\n        }\n        // Then we\
    \ just have to return how many distinct characters (regardless of case) does it\
    \ consist of\n        // >>> distinctCharacterCount((\"xyzXYZ\"))\n        //\
    \ (3l)\n        // >>> distinctCharacterCount((\"Jerry\"))\n        // (3l)\n\
    \        return countDistinctCharacters(characterList);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpty6g06kh.java:25: error: incompatible types: ArrayList<Character>\
    \ cannot be converted to String\n        return countDistinctCharacters(characterList);\n\
    \                                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       LongStream counts = string.chars().boxed().distinct().count();\n     \
    \   return counts.length;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpey1psjd2.java:15: error: incompatible types: long cannot be converted\
    \ to LongStream\n        LongStream counts = string.chars().boxed().distinct().count();\n\
    \                                                                   ^\n/tmp/tmpey1psjd2.java:16:\
    \ error: cannot find symbol\n        return counts.length;\n                 \
    \    ^\n  symbol:   variable length\n  location: variable counts of type LongStream\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       final Set<Character> set = new HashSet<>();\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            set.add(string.charAt(i));\n        }\n\
    \        return set.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcmzs0t1b.java:24)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long n = 1;\n        for (char c : string.toCharArray()) {\n         \
    \   if (Character.isLetter(c)) {\n                n = n * 26 + Character.getNumericValue(c);\n\
    \            }\n        }\n        return n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvortsmt_.java:24)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> chars = string.chars().mapToObj(c -> (char) c).toSet();\n\
    \        return chars.stream().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2o657wjz.java:15: error: cannot find symbol\n        Set<Character>\
    \ chars = string.chars().mapToObj(c -> (char) c).toSet();\n                  \
    \                                                   ^\n  symbol:   method toSet()\n\
    \  location: interface Stream<Character>\n1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       \n        String[] letters = string.split(\"\");\n        Map<Character,\
    \ Integer> map = new HashMap<Character, Integer>();\n        for (String letter\
    \ : letters) {\n            map.merge(letter, 0, Integer::sum);\n        }\n \
    \       return map.values().stream().distinct().count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqe0k7dd3.java:19: error: incompatible types: String cannot be converted\
    \ to Character\n            map.merge(letter, 0, Integer::sum);\n            \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<>();\n        for (char ch : string.toCharArray())\
    \ {\n            set.add(ch);\n        }\n        return set.size();\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphalf3tle.java:24)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       List<String> distinctCharacters = new ArrayList<>();\n        \n     \
    \   for (char character : string.toCharArray()) {\n            if (distinctCharacters.contains(String.valueOf(character)))\
    \ {\n                distinctCharacters.remove(String.valueOf(character));\n \
    \           } else {\n                distinctCharacters.add(String.valueOf(character));\n\
    \            }\n        }\n        \n        return distinctCharacters.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3z9pd2gq.java:31)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        int len = string.length();\n   \
    \     for (int i = 0; i < len; i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) distinctCharacters++;\n           \
    \ else if (Character.isUpperCase(c)) distinctCharacters++;\n            else if\
    \ (Character.isDigit(c)) distinctCharacters++;\n        }\n        return distinctCharacters;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9o93twl.java:28)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = 1L;\n        for (char c : string.toCharArray()) {\n    \
    \        count = count * (26L + Character.toLowerCase(c) - 'a');\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfh2ylsk_.java:22)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return LongStream.range(0,string.length()).boxed().collect(Collectors.groupingBy(String::charAt)).entrySet().stream().mapToLong(e\
    \ -> e.getValue().size()).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplzpzy3c0.java:15: error: no suitable method found for groupingBy(String::charAt)\n\
    \        return LongStream.range(0,string.length()).boxed().collect(Collectors.groupingBy(String::charAt)).entrySet().stream().mapToLong(e\
    \ -> e.getValue().size()).sum();\n                                           \
    \                                  ^\n    method Collectors.<T#1,K#1>groupingBy(Function<?\
    \ super T#1,? extends K#1>) is not applicable\n      (cannot infer type-variable(s)\
    \ T#1,K#1\n        (argument mismatch; invalid method reference\n          unexpected\
    \ instance method charAt(int) found in unbound lookup))\n    method Collectors.<T#2,K#2,A#1,D#1>groupingBy(Function<?\
    \ super T#2,? extends K#2>,Collector<? super T#2,A#1,D#1>) is not applicable\n\
    \      (cannot infer type-variable(s) T#2,K#2,A#1,D#1\n        (actual and formal\
    \ argument lists differ in length))\n    method Collectors.<T#3,K#3,D#2,A#2,M>groupingBy(Function<?\
    \ super T#3,? extends K#3>,Supplier<M>,Collector<? super T#3,A#2,D#2>) is not\
    \ applicable\n      (cannot infer type-variable(s) T#3,K#3,D#2,A#2,M\n       \
    \ (actual and formal argument lists differ in length))\n  where T#1,K#1,T#2,K#2,A#1,D#1,T#3,K#3,D#2,A#2,M\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1,K#1>groupingBy(Function<?\
    \ super T#1,? extends K#1>)\n    K#1 extends Object declared in method <T#1,K#1>groupingBy(Function<?\
    \ super T#1,? extends K#1>)\n    T#2 extends Object declared in method <T#2,K#2,A#1,D#1>groupingBy(Function<?\
    \ super T#2,? extends K#2>,Collector<? super T#2,A#1,D#1>)\n    K#2 extends Object\
    \ declared in method <T#2,K#2,A#1,D#1>groupingBy(Function<? super T#2,? extends\
    \ K#2>,Collector<? super T#2,A#1,D#1>)\n    A#1 extends Object declared in method\
    \ <T#2,K#2,A#1,D#1>groupingBy(Function<? super T#2,? extends K#2>,Collector<?\
    \ super T#2,A#1,D#1>)\n    D#1 extends Object declared in method <T#2,K#2,A#1,D#1>groupingBy(Function<?\
    \ super T#2,? extends K#2>,Collector<? super T#2,A#1,D#1>)\n    T#3 extends Object\
    \ declared in method <T#3,K#3,D#2,A#2,M>groupingBy(Function<? super T#3,? extends\
    \ K#"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacterCount = 0L;\n        int strLength = string.length();\n\
    \        for (int i = 0; i < strLength; i++) {\n            char ch = string.charAt(i);\n\
    \            distinctCharacterCount += Character.toLowerCase(ch) == ch;\n    \
    \    }\n        return distinctCharacterCount;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqpae7pkr.java:19: error: bad operand types for binary operator\
    \ '+'\n            distinctCharacterCount += Character.toLowerCase(ch) == ch;\n\
    \                                   ^\n  first type:  long\n  second type: boolean\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string.isEmpty()) {\n            throw new IllegalArgumentException(\"\
    String cannot be empty!\");\n        }\n        HashSet<Character> set = new HashSet<>();\n\
    \        for (char c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: String\
    \ cannot be empty!\n\tat Problem.countDistinctCharacters(tmpy46bm88r.java:16)\n\
    \tat Problem.main(tmpy46bm88r.java:25)\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<Character>();\n        for (char c :\
    \ string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n  \
    \      }\n        return set.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       String stringLowercase = string.toLowerCase();\n        long distinctCharacterCount\
    \ = 0;\n        for (char character : stringLowercase.toCharArray()) {\n     \
    \       char charLower = Character.toLowerCase(character);\n            if (stringLowercase.contains(charLower))\
    \ {\n                distinctCharacterCount++;\n            }\n        }\n   \
    \     return distinctCharacterCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkd2z21_y.java:19: error: incompatible types: char cannot be converted\
    \ to CharSequence\n            if (stringLowercase.contains(charLower)) {\n  \
    \                                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> counts = string.chars()\n                .filter(c\
    \ -> !Character.isLetterOrDigit(c))\n                .distinct()\n           \
    \     .filter(c -> !Character.isSpaceChar(c))\n                .collect(Collectors.groupingBy(c\
    \ -> c, Collectors.counting()));\n\n        return counts.isEmpty() ? 0l : counts.entrySet().stream().mapToLong(e\
    \ -> e.getValue()).sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt3nms8t8.java:19: error: method collect in interface IntStream\
    \ cannot be applied to given types;\n                .collect(Collectors.groupingBy(c\
    \ -> c, Collectors.counting()));\n                ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,Map<Object,Long>>\n  reason: cannot infer\
    \ type-variable(s) R\n    (actual and formal argument lists differ in length)\n\
    \  where R is a type-variable:\n    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpt3nms8t8.java:19: error: incompatible types: cannot infer type-variable(s)\
    \ R\n                .collect(Collectors.groupingBy(c -> c, Collectors.counting()));\n\
    \                        ^\n    (argument mismatch; no instance(s) of type variable(s)\
    \ CAP#1,T,K,D exist so that Collector<T,?,Map<K,D>> conforms to Supplier<R>)\n\
    \  where R,T,K,A,D are type-variables:\n    R extends Object declared in method\
    \ <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n    T extends Object\
    \ declared in method <T,K,A,D>groupingBy(Function<? super T,? extends K>,Collector<?\
    \ super T,A,D>)\n    K extends Object declared in method <T,K,A,D>groupingBy(Function<?\
    \ super T,? extends K>,Collector<? super T,A,D>)\n    A extends Object declared\
    \ in method <T,K,A,D>groupingBy(Function<? super T,? extends K>,Collector<? super\
    \ T,A,D>)\n    D extends Object declared in method <T,K,A,D>groupingBy(Function<?\
    \ super T,? extends K>,Collector<? super T,A,D>)\n  where CAP#1 is a fresh type-variable:\n\
    \    CAP#1 extends Object from capture of ?\n2 errors\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return Arrays.stream(string.toCharArray())\n            .mapToLong(String::length)\n\
    \            .distinct()\n            .count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphcqtghse.java:15: error: no suitable method found for stream(char[])\n\
    \        return Arrays.stream(string.toCharArray())\n                     ^\n\
    \    method Arrays.<T#1>stream(T#1[]) is not applicable\n      (inference variable\
    \ T#1 has incompatible bounds\n        equality constraints: char\n        lower\
    \ bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int) is not applicable\n\
    \      (cannot infer type-variable(s) T#2\n        (actual and formal argument\
    \ lists differ in length))\n    method Arrays.stream(int[]) is not applicable\n\
    \      (argument mismatch; char[] cannot be converted to int[])\n    method Arrays.stream(long[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to long[])\n\
    \    method Arrays.stream(double[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to double[])\n  where T#1,T#2 are type-variables:\n\
    \    T#1 extends Object declared in method <T#1>stream(T#1[])\n    T#2 extends\
    \ Object declared in method <T#2>stream(T#2[],int,int)\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCount = 0;\n\n        // Convert the string to a char array\
    \ and loop over each character\n        char[] charArray = string.toCharArray();\n\
    \        for (int i = 0; i < charArray.length; i++) {\n            // Determine\
    \ if the character is equal to another character\n            if (charArray[i]\
    \ == charArray[i + 1])\n                distinctCount++;\n        }\n\n      \
    \  return distinctCount;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 5 out of bounds for length 5\n\tat Problem.countDistinctCharacters(tmpb15i088t.java:21)\n\
    \tat Problem.main(tmpb15i088t.java:29)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isLetterOrDigit(c))\
    \ {\n                distinctCharacters++;\n            }\n        }\n       \
    \ return distinctCharacters;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvinc43kw.java:27)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long[] map = new long[26];\n        long count = 0;\n        for(char\
    \ ch : string.toCharArray()){\n            map[Character.toLowerCase(ch)-'a']++;\n\
    \            map[Character.toUpperCase(ch)-'A']++;\n        }\n        Arrays.sort(map);\n\
    \        for(int i =0; i < map.length; i++){\n            count += map[i];\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6i4rs9oy.java:29)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long countDistinctCharacters = 0;\n        for (char character : string.toCharArray())\
    \ {\n            boolean include = true;\n            for (char lowerCase : Character.toLowerCase(character).toCharArray())\
    \ {\n                if (character != lowerCase) {\n                    include\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (include) {\n                countDistinctCharacters++;\n       \
    \     }\n        }\n        return countDistinctCharacters;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp07baqewd.java:18: error: char cannot be dereferenced\n        \
    \    for (char lowerCase : Character.toLowerCase(character).toCharArray()) {\n\
    \                                                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Your code goes here\n        Set<Character> set = new HashSet<Character>();\n\
    \        for(char c : string.toCharArray())\n            set.add(c);\n       \
    \ return set.size();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhoh5d3z.java:24)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> uniqueChars = string.chars().map(Character::toLowerCase)\n\
    \                .collect(Collectors.toSet());\n        return uniqueChars.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjxnsuhpm.java:16: error: method collect in interface IntStream\
    \ cannot be applied to given types;\n                .collect(Collectors.toSet());\n\
    \                ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,Set<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpjxnsuhpm.java:16: error: incompatible types: cannot infer type-variable(s)\
    \ R\n                .collect(Collectors.toSet());\n                        ^\n\
    \    (argument mismatch; no instance(s) of type variable(s) CAP#1,T exist so that\
    \ Collector<T,?,Set<T>> conforms to Supplier<R>)\n  where R,T are type-variables:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toSet()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       List<Character> distinctCharacters = Stream.of(string.toCharArray())\n\
    \                .distinct()\n                .boxed()\n                .collect(Collectors.toList());\n\
    \        long result = distinctCharacters.size();\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpziojoi3o.java:17: error: cannot find symbol\n                .boxed()\n\
    \                ^\n  symbol:   method boxed()\n  location: interface Stream<char[]>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashSet<Character> set = new HashSet<>();\n        for (char c : string.toCharArray())\
    \ {\n            set.add(Character.toLowerCase(c));\n        }\n        return\
    \ set.size();\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long ret = 0;\n        for (int i = 0; i < string.length(); i++) {\n \
    \           char ch = string.charAt(i);\n            ret += Character.toLowerCase(ch)\
    \ - Character.toUpperCase(ch);\n        }\n        return ret;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ue9thd1.java:24)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<String, Integer> hashmap = new HashMap<String, Integer>();\n     \
    \   char[] chararray = string.toCharArray();\n\n        for (char letter : chararray)\
    \ {\n            int value = hashmap.get(letter);\n            if (value == null)\
    \ {\n                hashmap.put(letter, 1);\n            } else {\n         \
    \       hashmap.put(letter, ++value);\n            }\n        }\n\n        return\
    \ hashmap.keySet().size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvvlved1x.java:20: error: bad operand types for binary operator\
    \ '=='\n            if (value == null) {\n                      ^\n  first type:\
    \  int\n  second type: <null>\n/tmp/tmpvvlved1x.java:21: error: incompatible types:\
    \ char cannot be converted to String\n                hashmap.put(letter, 1);\n\
    \                            ^\n/tmp/tmpvvlved1x.java:23: error: incompatible\
    \ types: char cannot be converted to String\n                hashmap.put(letter,\
    \ ++value);\n                            ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0r0_pn9.java:20)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().mapToLong(ch -> (int)ch).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpac2r6y07.java:19)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       final int N_CHARS = string.length();\n        long sum = 0;\n        int\
    \ i = 0;\n        while (i < N_CHARS) {\n            char c = string.charAt(i);\n\
    \            sum += Character.toLowerCase(c) - 'a';\n            sum += Character.toUpperCase(c)\
    \ - 'A';\n            i += Character.isUpperCase(c) ? 2 : 1;\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yrvpzzq.java:28)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return StreamSupport.stream(Spliterators.spliteratorUnknownSize(string.chars(),\
    \ Spliterator.ORDERED), false)\n                .flatMap(c -> IntStream.range(0,\
    \ c.length())\n                        .filter(i -> c.charAt(i) != c.charAt(i))\n\
    \                        .count()\n                ).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ji8m6yv.java:15: error: no suitable method found for spliteratorUnknownSize(IntStream,int)\n\
    \        return StreamSupport.stream(Spliterators.spliteratorUnknownSize(string.chars(),\
    \ Spliterator.ORDERED), false)\n                                             \
    \   ^\n    method Spliterators.<T>spliteratorUnknownSize(Iterator<? extends T>,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T\n        (argument\
    \ mismatch; IntStream cannot be converted to Iterator<? extends T>))\n    method\
    \ Spliterators.spliteratorUnknownSize(java.util.PrimitiveIterator.OfInt,int) is\
    \ not applicable\n      (argument mismatch; IntStream cannot be converted to java.util.PrimitiveIterator.OfInt)\n\
    \    method Spliterators.spliteratorUnknownSize(java.util.PrimitiveIterator.OfLong,int)\
    \ is not applicable\n      (argument mismatch; IntStream cannot be converted to\
    \ java.util.PrimitiveIterator.OfLong)\n    method Spliterators.spliteratorUnknownSize(java.util.PrimitiveIterator.OfDouble,int)\
    \ is not applicable\n      (argument mismatch; IntStream cannot be converted to\
    \ java.util.PrimitiveIterator.OfDouble)\n  where T is a type-variable:\n    T\
    \ extends Object declared in method <T>spliteratorUnknownSize(Iterator<? extends\
    \ T>,int)\n1 error\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null || string.isEmpty()) {\n            return 0L;\n  \
    \      }\n        long distinctCharacters = 0;\n        long currentDistinctCharacters\
    \ = 0;\n        for (char c : string.toCharArray()) {\n            currentDistinctCharacters\
    \ = Character.toLowerCase(c) - Character.toLowerCase(c);\n            distinctCharacters\
    \ += (currentDistinctCharacters * (long)currentDistinctCharacters);\n        }\n\
    \        return distinctCharacters;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0czq4qp.java:28)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       char[] arr = string.toCharArray();\n        Arrays.sort(arr);\n      \
    \  int len = arr.length;\n        long distinctCharacters = 0;\n        for (int\
    \ i = 0; i < len; i++) {\n            if (i == 0) {\n                continue;\n\
    \            }\n            if (arr[i - 1] != arr[i]) {\n                distinctCharacters++;\n\
    \            }\n        }\n        return distinctCharacters;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgqqvd7ab.java:31)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Your code here\n        long distinctCharCount = 0;\n        for (char\
    \ c : string.toCharArray()) {\n            distinctCharCount++;\n        }\n \
    \       return distinctCharCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpliz5q7af.java:25)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       char[] chars = string.toCharArray();\n        Arrays.sort(chars);\n  \
    \      int count = 0;\n        for (char c : chars) {\n            if (Character.isLowerCase(c))\
    \ {\n                count += 2;\n            }\n            else {\n        \
    \        count++;\n            }\n        }\n        return count;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_yfhzg_i.java:30)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = (long) Math.ceil(\n            Arrays.stream(string.toCharArray()).map(c\
    \ -> Character.toUpperCase(c)).distinct().count() * 1.0);\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxeiuexn2.java:16: error: no suitable method found for stream(char[])\n\
    \            Arrays.stream(string.toCharArray()).map(c -> Character.toUpperCase(c)).distinct().count()\
    \ * 1.0);\n                  ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n\
    \      (inference variable T#1 has incompatible bounds\n        equality constraints:\
    \ char\n        lower bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to long[])\n    method Arrays.stream(double[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set distinct = new HashSet();\n\n        for (int i = 0; i < string.length();\
    \ i++)\n            distinct.add(string.charAt(i));\n\n        return distinct.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb18taas0.java:25)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashSet<Character> characters = new HashSet<Character>();\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            characters.add(string.charAt(i));\n\
    \        }\n        return characters.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk236eib9.java:24)\n"
  stdout: ''
  timestamp: 1660011949
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long countDistinctCharacters = 0;\n        for (char letter : string.toCharArray())\
    \ {\n            String letterUpperCase = Character.toString(letter).toUpperCase();\n\
    \            String letterLowerCase = Character.toString(letter).toLowerCase();\n\
    \            if (!letterLowerCase.equals(letterUpperCase)) {\n               \
    \ countDistinctCharacters++;\n            }\n        }\n        return countDistinctCharacters;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvozxcy8j.java:28)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Integer> map = new HashMap<>();\n        for (char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if (count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.keySet().stream().distinct().count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzynt5kpk.java:29)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = 1;\n        for (char c : string.toCharArray()) {\n     \
    \       char lower = Character.toLowerCase(c);\n            char upper = Character.toUpperCase(c);\n\
    \            if (lower == upper) {\n                continue;\n            }\n\
    \            if (lower > upper) {\n                if (count > 0) {\n        \
    \            count--;\n                } else {\n                    count +=\
    \ 2;\n                }\n            } else {\n                count++;\n    \
    \        }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fop8eal.java:35)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Long> map = new HashMap<>();\n        for (char c :\
    \ string.toCharArray()) {\n            if (map.containsKey(c)) {\n           \
    \     map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c,\
    \ 1);\n            }\n        }\n        return map.values().stream().distinct().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps624_5hw.java:20: error: incompatible types: int cannot be converted\
    \ to Long\n                map.put(c, 1);\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long length = 0;\n        if (string == null || string.isEmpty()) {\n\
    \            throw new IllegalArgumentException(\"String argument must not be\
    \ null or empty\");\n        }\n        char[] charArray = string.toCharArray();\n\
    \        Set<Character> set = new HashSet<>(charArray.length);\n        for (char\
    \ c : charArray) {\n            set.add(c);\n            length++;\n        }\n\
    \        return length;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: String\
    \ argument must not be null or empty\n\tat Problem.countDistinctCharacters(tmpgmu2wfy5.java:17)\n\
    \tat Problem.main(tmpgmu2wfy5.java:28)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long sum = 0;\n        for(int i = 0; i < string.length(); i++) {\n  \
    \          char currentChar = string.charAt(i);\n            sum += currentChar\
    \ - 'a' + 1; // subtract 'a' so that 'A' is a distinct character\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd__yh7wt.java:24)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Initialize our map with one element (an empty string)\n        Map<Character,\
    \ Long> charCount = new HashMap<>();\n        for (char c : string.toCharArray())\
    \ {\n            // If the string does not have a key for this char, add an empty\
    \ string as the value\n            charCount.computeIfAbsent(Character.toLowerCase(c),\
    \ x -> new Long(1))\n                .incrementAndGet();\n        }\n\n      \
    \  // Return the count of distinct characters\n        return charCount.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8jciakvx.java:19: warning: [removal] Long(long) in Long has been\
    \ deprecated and marked for removal\n            charCount.computeIfAbsent(Character.toLowerCase(c),\
    \ x -> new Long(1))\n                                                        \
    \             ^\n/tmp/tmp8jciakvx.java:20: error: cannot find symbol\n       \
    \         .incrementAndGet();\n                ^\n  symbol:   method incrementAndGet()\n\
    \  location: class Long\n1 error\n1 warning\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null) {\n            throw new IllegalArgumentException(\"\
    The string can not be null\");\n        }\n        \n        List<Character> charList\
    \ = new ArrayList<>();\n        for (char c : string.toCharArray()) {\n      \
    \      charList.add(c);\n        }\n        \n        long distinctCharacterCount\
    \ = charList.size();\n        for (char c : string.toCharArray()) {\n        \
    \    distinctCharacterCount -= Character.toUpperCase(c).equals(c);\n         \
    \   distinctCharacterCount -= Character.toLowerCase(c).equals(c);\n        }\n\
    \        return distinctCharacterCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpla7hsbpp.java:26: error: char cannot be dereferenced\n        \
    \    distinctCharacterCount -= Character.toUpperCase(c).equals(c);\n         \
    \                                                     ^\n/tmp/tmpla7hsbpp.java:27:\
    \ error: char cannot be dereferenced\n            distinctCharacterCount -= Character.toLowerCase(c).equals(c);\n\
    \                                                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long counter = 0;\n        for (char character : string.toCharArray())\
    \ {\n            counter += Character.toLowerCase(character) == character ? 1\
    \ : 0;\n        }\n        return counter;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzqqjd16.java:24)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars()\n            .map(i -> String.format(\"%10d\", i))\n\
    \            .distinct()\n            .count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphi9tdrpm.java:16: error: incompatible types: bad return type in\
    \ lambda expression\n            .map(i -> String.format(\"%10d\", i))\n     \
    \                              ^\n    String cannot be converted to int\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Long> charCount = new HashMap<>();\n        charCount.put('A',\
    \ 1);\n        charCount.put('Z', 1);\n        for (char ch : string.toCharArray())\
    \ {\n            charCount.put(ch, charCount.get(ch) + 1);\n        }\n      \
    \  return charCount.entrySet().stream().filter(entry -> entry.getValue() > 1).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuh3mfmgv.java:16: error: incompatible types: int cannot be converted\
    \ to Long\n        charCount.put('A', 1);\n                           ^\n/tmp/tmpuh3mfmgv.java:17:\
    \ error: incompatible types: int cannot be converted to Long\n        charCount.put('Z',\
    \ 1);\n                           ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null || string.isEmpty()) {\n            return 0;\n   \
    \     }\n\n        // HashSet<Character> uniqueChars = new HashSet<>();\n    \
    \    Set<Character> uniqueChars = new HashSet<>(string.toLowerCase().chars());\n\
    \n        // System.out.println(uniqueChars);\n\n        // return uniqueChars.size();\n\
    \        return uniqueChars.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_1e9y86u.java:20: error: cannot infer type arguments for HashSet<>\n\
    \        Set<Character> uniqueChars = new HashSet<>(string.toLowerCase().chars());\n\
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long result = 0;\n        for (char c : string.toCharArray()) {\n    \
    \        result += (int)c;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp16jyjpgl.java:23)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Write your code here\n        ArrayList<Character> arr = new ArrayList<>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            arr.add(string.charAt(i));\n\
    \        }\n        long countDistinctCharacters = 0;\n        HashMap<Character,\
    \ Integer> hMap = new HashMap<Character, Integer>();\n        for (Character c\
    \ : arr) {\n            if (hMap.containsKey(c)) {\n                hMap.put(c,\
    \ hMap.get(c) + 1);\n            } else {\n                hMap.put(c, 1);\n \
    \           }\n        }\n        System.out.println(hMap);\n        for (int\
    \ i = 0; i < arr.length; i++) {\n            char c = arr[i];\n            if\
    \ (hMap.containsKey(c)) {\n                hMap.put(c, hMap.get(c) - 1);\n   \
    \             countDistinctCharacters += hMap.get(c);\n            }\n       \
    \ }\n        return countDistinctCharacters;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpea4mirhs.java:30: error: cannot find symbol\n        for (int i\
    \ = 0; i < arr.length; i++) {\n                               ^\n  symbol:   variable\
    \ length\n  location: variable arr of type ArrayList<Character>\n/tmp/tmpea4mirhs.java:31:\
    \ error: array required, but ArrayList<Character> found\n            char c =\
    \ arr[i];\n                        ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return countDistinctCharacters(string.chars().boxed(), string.codePoints().mapToObj(i\
    \ -> i).collect(Collectors.toList()));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphif80_d2.java:15: error: method countDistinctCharacters in class\
    \ Problem cannot be applied to given types;\n        return countDistinctCharacters(string.chars().boxed(),\
    \ string.codePoints().mapToObj(i -> i).collect(Collectors.toList()));\n      \
    \         ^\n  required: String\n  found:    Stream<Integer>,List<Integer>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long n = 0;\n        char[] array = string.toCharArray();\n        for\
    \ (int i = 0; i < array.length; i++) {\n            n += Character.toLowerCase(array[i])\
    \ != array[i] ? 1 : 0;\n        }\n        return n;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0pvbazxe.java:24)\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Integer> map = new HashMap<>();\n\n        for (char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if (count == null) {\n                count = 0;\n            }\n    \
    \        map.put(c, count + 1);\n        }\n\n        return map.size();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7yyuajc6.java:30)\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null || string.trim().isEmpty()) {\n            return 0;\n\
    \        }\n        char[] stringArray = string.toCharArray();\n        Set<Character>\
    \ distinctCharacters = new HashSet<>();\n        for (char character : stringArray)\
    \ {\n            distinctCharacters.add(character);\n        }\n        return\
    \ distinctCharacters.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0hp9devk.java:28)\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       char[] charArray = string.toCharArray();\n        Set<Character> set =\
    \ new HashSet<>(charArray.length);\n        long count = charArray.length;\n \
    \       for (char c : charArray) {\n            if (set.add(c))\n            \
    \    count++;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpil6060fr.java:26)\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long countDistinctCharacters = 0;\n        for(Character char : string.toLowerCase().toCharArray()){\n\
    \            countDistinctCharacters += string.toLowerCase().chars().filter(c\
    \ -> c!=char).count();\n        }\n        return countDistinctCharacters;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplen253cb.java:16: error: not a statement\n        for(Character\
    \ char : string.toLowerCase().toCharArray()){\n            ^\n/tmp/tmplen253cb.java:16:\
    \ error: ';' expected\n        for(Character char : string.toLowerCase().toCharArray()){\n\
    \                     ^\n/tmp/tmplen253cb.java:16: error: '.class' expected\n\
    \        for(Character char : string.toLowerCase().toCharArray()){\n         \
    \                  ^\n/tmp/tmplen253cb.java:16: error: ';' expected\n        for(Character\
    \ char : string.toLowerCase().toCharArray()){\n                              \
    \                                 ^\n/tmp/tmplen253cb.java:17: error: '.class'\
    \ expected\n            countDistinctCharacters += string.toLowerCase().chars().filter(c\
    \ -> c!=char).count();\n                                                     \
    \                                  ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Your code goes here\n        Arrays.sort(string.toCharArray());\n \
    \       return Collections.frequency(string, string.charAt(0));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeosme5uq.java:17: error: incompatible types: String cannot be converted\
    \ to Collection<?>\n        return Collections.frequency(string, string.charAt(0));\n\
    \                                     ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string.isEmpty()) return 0;\n        return count(string, string.toCharArray());\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk10q2xww.java:16: error: cannot find symbol\n        return count(string,\
    \ string.toCharArray());\n               ^\n  symbol:   method count(String,char[])\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011950
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Integer> map = new HashMap<>();\n        for (char\
    \ c : string.toCharArray())\n            map.put(c, map.getOrDefault(c, 0) + 1);\n\
    \        return map.keySet().stream().distinct().count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rig_w4m.java:23)\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Integer> map = new HashMap<>();\n        Set<Character>\
    \ set = new HashSet<>();\n        for (char c : string.toCharArray()) {\n    \
    \        map.put(c, map.getOrDefault(c, 0) + 1);\n            set.add(Character.toLowerCase(c));\n\
    \            set.add(Character.toUpperCase(c));\n        }\n        return map.size()\
    \ - set.size();\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81xqucgz.java:26)\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<Character>();\n        \n        for\
    \ (char c: string.toCharArray()) {\n            if (set.contains(c)) {\n     \
    \           set.delete(c);\n            } else {\n                set.add(c);\n\
    \            }\n        }\n        \n        return set.size();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4gtog_sp.java:19: error: cannot find symbol\n                set.delete(c);\n\
    \                   ^\n  symbol:   method delete(char)\n  location: variable set\
    \ of type Set<Character>\n1 error\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Long> countMap = new HashMap<Character, Long>();\n\
    \        for (char ch: string.toCharArray()) {\n            countMap.put(ch, countMap.getOrDefault(ch,\
    \ 0) + 1);\n        }\n        long distinctCharacterCount = countMap.values().stream().distinct().count();\n\
    \        return distinctCharacterCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_om5r8d.java:17: error: incompatible types: int cannot be converted\
    \ to Long\n            countMap.put(ch, countMap.getOrDefault(ch, 0) + 1);\n \
    \                                                      ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.length() * string.codePoints().distinct().count();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvorimqj_.java:19)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       List<Character> list = new ArrayList<>();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                list.add(Character.toLowerCase(c));\n\
    \            } else {\n                list.add(Character.toUpperCase(c));\n \
    \           }\n        }\n        // Counting distinct characters in a set\n \
    \       // Set<Character> mySet = new HashSet<Character>();\n        // for (char\
    \ c : list) {\n        //     if (mySet.add(c)) {\n        //         // mySet.add(c);\n\
    \        //         System.out.println(list);\n        //     }\n        // }\n\
    \        // Counting distinct characters in a Map\n        Map<Character, Long>\
    \ charCountMap = new HashMap<Character, Long>();\n        for (char c : list)\
    \ {\n            if (charCountMap.containsKey(c)) {\n                charCountMap.put(c,\
    \ charCountMap.get(c) + 1);\n            } else {\n                charCountMap.put(c,\
    \ 1l);\n            }\n        }\n        // Counting distinct characters in a\
    \ Multimap\n        // Multimap<Character, Long> charCountMap = ArrayListMultimap.create();\n\
    \        // for (char c : list) {\n        //     if (charCountMap.containsKey(c))\
    \ {\n        //         charCountMap.put(c, charCountMap.get(c) + 1);\n      \
    \  //     } else {\n        //         charCountMap.put(c, 1l);\n        //  \
    \   }\n        // }\n        return charCountMap.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz6q4sbmw.java:54)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<Character>();\n        for (char c :\
    \ string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n  \
    \      }\n        return set.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011948
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long result = 0;\n        for (char c: string.toCharArray()) {\n     \
    \       if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z') {\n                result\
    \ += 1;\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphznovq_.java:26)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long[] map = new long[26];\n        for (char c : string.toCharArray())\
    \ {\n            map[c - 'a']++;\n        }\n        return IntStream.range(0,\
    \ 26).filter(i -> map[i] != 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index -30 out of bounds for length 26\n\tat Problem.countDistinctCharacters(tmppmu6tviv.java:17)\n\
    \tat Problem.main(tmppmu6tviv.java:24)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // return Long.parseLong(string.split(\"\").filter(s -> !s.equals(\"z\"\
    )));\n        StringBuilder builder = new StringBuilder();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            builder.append(string.toLowerCase().charAt(i));\n\
    \        }\n        Set<Character> set = new HashSet<>();\n        for (char c\
    \ : builder.toString().toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       StringBuilder result = new StringBuilder();\n        for(char c : string.toCharArray())\
    \ {\n            result.append(c);\n        }\n        return result.countCharsInSet(new\
    \ HashSet<>(string.chars()));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfcgmorll.java:19: error: cannot infer type arguments for HashSet<>\n\
    \        return result.countCharsInSet(new HashSet<>(string.chars()));\n     \
    \                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011951
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> charCounts = string.chars().boxed()\n           \
    \ .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));\n\
    \        return charCounts.entrySet().stream().collect(Collectors.summingLong(\n\
    \            e -> e.getValue()));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dr2shnd.java:16: error: cannot find symbol\n            .collect(Collectors.groupingBy(Function.identity(),\
    \ Collectors.counting()));\n                                           ^\n  symbol:\
    \   variable Function\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       char[] arr = string.toCharArray();\n        List<Character> charsList\
    \ = new ArrayList<>(arr.length);\n        for (char ch : arr) {\n            charsList.add(ch);\n\
    \        }\n        long countDistinctCharacters = charsList.size();\n       \
    \ return countDistinctCharacters;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0vsvg0j.java:26)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = 0;\n        char charArray[] = string.toCharArray();\n  \
    \      for (int i = 0; i < charArray.length; i++) {\n            count += Character.isLetter(charArray[i])\
    \ ? 1 : 0;\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3no3x_r6.java:25)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> characters = new HashSet<>();\n        long distinctCharacters\
    \ = 0;\n\n        for (char c : string.toCharArray()) {\n            characters.add(c);\n\
    \            distinctCharacters++;\n        }\n        return distinctCharacters;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyogxnmam.java:27)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<String, Long> counts = HashMap::new;\n        for (char c : string.toCharArray())\
    \ {\n            counts.putIfAbsent(Character.toString(c), 1L);\n            counts.put(Character.toUpperCase(c),\
    \ counts.get(Character.toUpperCase(c))+1);\n            counts.put(Character.toLowerCase(c),\
    \ counts.get(Character.toLowerCase(c))+1);\n        }\n        return counts.values().stream().reduce((a,\
    \ b) -> a+b).orElse(0L);\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk7xg1b6j.java:15: error: incompatible types: Map is not a functional\
    \ interface\n        Map<String, Long> counts = HashMap::new;\n              \
    \                     ^\n    multiple non-overriding abstract methods found in\
    \ interface Map\n/tmp/tmpk7xg1b6j.java:18: error: incompatible types: char cannot\
    \ be converted to String\n            counts.put(Character.toUpperCase(c), counts.get(Character.toUpperCase(c))+1);\n\
    \                                            ^\n/tmp/tmpk7xg1b6j.java:19: error:\
    \ incompatible types: char cannot be converted to String\n            counts.put(Character.toLowerCase(c),\
    \ counts.get(Character.toLowerCase(c))+1);\n                                 \
    \           ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string.length() == 0) {\n            throw new IllegalArgumentException(\"\
    Empty String\");\n        }\n\n        return count(string, new HashMap<>());\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3uel52uy.java:19: error: cannot find symbol\n        return count(string,\
    \ new HashMap<>());\n               ^\n  symbol:   method count(String,HashMap<Object,Object>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       int[] counts = new int[256];\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\n\
    \                counts[Character.toUpperCase(c)] += 1;\n            else if (Character.isLowerCase(c))\n\
    \                counts[Character.toLowerCase(c)] += 1;\n            else\n  \
    \              counts[c] += 1;\n        }\n        long result = 0;\n        for\
    \ (char c = 'a'; c <= 'z'; c++)\n            result += counts[c];\n        for\
    \ (char c = 'A'; c <= 'Z'; c++)\n            result += counts[c];\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnuoo_p3o.java:35)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> charCount = new HashMap<>();\n        long distinctCount\
    \ = 0;\n\n        // Use string length to avoid string index out of bounds exceptions\n\
    \        for (int i = 0; i < string.length(); i++) {\n            Character c\
    \ = string.charAt(i);\n            // If character is already counted\n      \
    \      if (charCount.containsKey(c)) {\n                Long count = charCount.get(c);\n\
    \                count += 1;\n                charCount.put(c, count);\n     \
    \       }\n            // Otherwise initialize to 1\n            else {\n    \
    \            Long count = 1;\n                charCount.put(c, count);\n     \
    \       }\n\n            // Add distinct count to the total distinct count\n \
    \           distinctCount += 1;\n        }\n\n        return distinctCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu3cej6z9.java:29: error: incompatible types: int cannot be converted\
    \ to Long\n                Long count = 1;\n                             ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // TODO: Write your function here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw_4uv6s.java:20)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long total = 0;\n        for(char c: string.toCharArray())\n         \
    \   total += countDistinctCharactersOf(c) == 1 ? 1 : 0;\n        return total;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp025veq52.java:17: error: cannot find symbol\n            total\
    \ += countDistinctCharactersOf(c) == 1 ? 1 : 0;\n                     ^\n  symbol:\
    \   method countDistinctCharactersOf(char)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return Collections.frequency(string.split(\"(?i)\"), String.valueOf((char)\
    \ 0));\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprqr7hdxm.java:15: error: incompatible types: String[] cannot be\
    \ converted to Collection<?>\n        return Collections.frequency(string.split(\"\
    (?i)\"), String.valueOf((char) 0));\n                                        \
    \         ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = 0;\n        int len = string.length();\n        for (int\
    \ i = 0; i < len; i++) {\n            char ch = string.charAt(i);\n          \
    \  // Ignore the case for this letter\n            // Add it if it isn't already\
    \ there\n            if (Character.isLowerCase(ch)) {\n                count =\
    \ count + 1;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfcmt_gq.java:30)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long result = 0;\n        for (char c : string.toCharArray()) {\n    \
    \        String value = Character.toString(c);\n            result += value.chars().distinct().count();\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwuo8m53s.java:25)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> counts = new HashMap<>();\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            Character c = string.charAt(i);\n \
    \           Long count = counts.get(c);\n            if (count == null) {\n  \
    \              count = new Long(1);\n            } else {\n                count\
    \ = count.longValue() + 1;\n            }\n            counts.put(c, count);\n\
    \        }\n        return counts.values().stream().mapToLong(x -> x.longValue()).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmzaoczi.java:31)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Integer> result = new HashMap<>();\n        for (char\
    \ c : string.toCharArray()) {\n            if (result.containsKey(c)) {\n    \
    \            int count = result.get(c);\n                result.put(c, count +\
    \ 1);\n            } else {\n                result.put(c, 1);\n            }\n\
    \        }\n        return result.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4cuccqn5.java:29)\n"
  stdout: ''
  timestamp: 1660011952
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // O(n log n)\n        HashSet<Character> charSet = new HashSet<>();\n\
    \        for (char ch : string.toCharArray()) {\n            charSet.add(ch);\n\
    \        }\n        long count = charSet.size();\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            char ch = string.charAt(i);\n         \
    \   charSet.remove(ch);\n            count --;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfbghd1.java:30)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0l;\n        char[] characters = string.toCharArray();\n\
    \n        for (int i = 0; i < characters.length; i++) {\n            boolean flag\
    \ = false;\n            for (int j = 0; j < characters.length; j++) {\n      \
    \          if (i != j && characters[i] == characters[j]) {\n                 \
    \   flag = true;\n                    break;\n                }\n            }\n\
    \            if (!flag) {\n                distinctCharacters++;\n           \
    \ }\n        }\n        return distinctCharacters;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh2x35zt.java:36)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().mapToObj(x -> (char) x).distinct().count();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcb_tpv_g.java:20)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Initialize count\n        long count = 0;\n        // Iterate all chars\
    \ of given string\n        for (char c : string.toCharArray()) {\n           \
    \ // Check case sensitive or not\n            if (Character.isUpperCase(c)) count++;\n\
    \            else if (!Character.isUpperCase(c)) count--;\n        }\n       \
    \ // Return count\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplthdjzuy.java:28)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctChars = 0;\n        for (Character c : string.chars()) {\n\
    \            Character c2 = Character.toLowerCase(c);\n            Character c3\
    \ = Character.toUpperCase(c);\n            distinctChars += (\n              \
    \      (!c2.equals(c)) &&\n                    (!c3.equals(c))\n            );\n\
    \        }\n        return distinctChars;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp14j0yfob.java:16: error: for-each not applicable to expression\
    \ type\n        for (Character c : string.chars()) {\n                       \
    \                ^\n  required: array or java.lang.Iterable\n  found:    IntStream\n\
    /tmp/tmp14j0yfob.java:19: error: bad operand types for binary operator '+'\n \
    \           distinctChars += (\n                          ^\n  first type:  long\n\
    \  second type: boolean\n2 errors\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return LongStream.of(string.toLowerCase().chars())\n            .map(i\
    \ -> String.valueOf(i))\n            .distinct()\n            .count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp06zfgo5u.java:15: error: no suitable method found for of(IntStream)\n\
    \        return LongStream.of(string.toLowerCase().chars())\n                \
    \         ^\n    method LongStream.of(long) is not applicable\n      (argument\
    \ mismatch; IntStream cannot be converted to long)\n    method LongStream.of(long...)\
    \ is not applicable\n      (varargs mismatch; IntStream cannot be converted to\
    \ long)\n1 error\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return countDistinctCharacters(string, new HashMap<>());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8za9li1q.java:15: error: method countDistinctCharacters in class\
    \ Problem cannot be applied to given types;\n        return countDistinctCharacters(string,\
    \ new HashMap<>());\n               ^\n  required: String\n  found:    String,HashMap<Object,Object>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Initialize the result counter to zero\n        long countDistinctCharacters\
    \ = 0;\n        \n        // Iterate through the string\n        for (char letter\
    \ : string.toCharArray()) {\n            // Convert to lower case to compare case\
    \ insensitive\n            if (Character.toLowerCase(letter) == letter) {\n  \
    \              // If it is an upper case letter, just increment the counter\n\
    \                countDistinctCharacters++;\n            } else {\n          \
    \      // If it is a lower case letter, check if the upper case letter is also\n\
    \                // lower case and if it is, the counter is increased\n      \
    \          if (Character.isUpperCase(letter) && Character.toLowerCase(letter)\
    \ != letter) {\n                    countDistinctCharacters++;\n             \
    \   }\n            }\n        }\n        \n        // Return the result (should\
    \ be 3 for the input string above)\n        return countDistinctCharacters;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbyj531fs.java:39)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> charSet = string.chars().boxed().collect(Collectors.toSet());\n\
    \        return charSet.stream().distinct().count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl8z2qpas.java:15: error: incompatible types: inference variable\
    \ T has incompatible bounds\n        Set<Character> charSet = string.chars().boxed().collect(Collectors.toSet());\n\
    \                                                               ^\n    equality\
    \ constraints: Character\n    lower bounds: Integer\n  where T is a type-variable:\n\
    \    T extends Object declared in method <T>toSet()\n1 error\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n\n        if (string == null || string.isEmpty())\
    \ {\n            return 0;\n        }\n\n        // iterate over all characters\
    \ of the given string\n        for (char character : string.toCharArray()) {\n\
    \            if (Character.isUpperCase(character)) {\n                distinctCharacters\
    \ ++;\n            } else {\n                distinctCharacters --;\n        \
    \    }\n        }\n\n        // return the number of distinct characters\n   \
    \     return distinctCharacters;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3bisb13u.java:35)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashSet<Character> hs = new HashSet<>();\n        for (char c : string.toCharArray())\n\
    \            if (Character.isUpperCase(c))\n                hs.add('A' + c - 'A');\n\
    \            else if (Character.isLowerCase(c))\n                hs.add('a' +\
    \ c - 'a');\n            else\n                hs.add(c);\n        return hs.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmmt16dd0.java:18: error: incompatible types: int cannot be converted\
    \ to Character\n                hs.add('A' + c - 'A');\n                     \
    \          ^\n/tmp/tmpmmt16dd0.java:20: error: incompatible types: int cannot\
    \ be converted to Character\n                hs.add('a' + c - 'a');\n        \
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long result = 1;\n        for(int i = 0; i < string.length(); i++) {\n\
    \            char character = string.charAt(i);\n            char upperCaseCharacter\
    \ = Character.toUpperCase(character);\n            char lowerCaseCharacter = Character.toLowerCase(character);\n\
    \            if(Character.isUpperCase(character) && Character.isUpperCase(upperCaseCharacter))\n\
    \                result *= 2;\n            else if(Character.isLowerCase(character)\
    \ && Character.isLowerCase(lowerCaseCharacter))\n                result *= 2;\n\
    \            else\n                result *= 2;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj87nseio.java:30)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long answer = 0;\n        char[] charArray = string.toCharArray();\n \
    \       Arrays.sort(charArray);\n        for (char c : charArray) {\n        \
    \    answer += 1;\n        }\n        return answer;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_op4x0vc.java:26)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharCount = 0;\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isLowerCase(c)) {\n                distinctCharCount++;\n\
    \            } else if (Character.isUpperCase(c)) {\n                distinctCharCount++;\n\
    \            } else {\n                distinctCharCount += 2;\n            }\n\
    \        }\n        return distinctCharCount;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadhrmuoi.java:30)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> distinctChars = new HashSet<>();\n        for(char c :\
    \ string.toCharArray()) {\n            distinctChars.add(c);\n        }\n    \
    \    return distinctChars.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqc0vnvfp.java:24)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long[] chars = new long[26];\n        for (char c : string.toCharArray())\n\
    \            chars[c]++;\n        return Arrays.stream(chars).distinct().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2whxu4e.java:21)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long total = 0;\n        for (char c : string.toCharArray()) {\n     \
    \       total += Character.toUpperCase(c).equals(c) ? 1 : 0;\n            total\
    \ += Character.toLowerCase(c).equals(c) ? 1 : 0;\n        }\n        return total;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprdg3x9xy.java:17: error: char cannot be dereferenced\n        \
    \    total += Character.toUpperCase(c).equals(c) ? 1 : 0;\n                  \
    \                           ^\n/tmp/tmprdg3x9xy.java:18: error: char cannot be\
    \ dereferenced\n            total += Character.toLowerCase(c).equals(c) ? 1 :\
    \ 0;\n                                             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long length = 0;\n        if (string != null && string.length() > 0) {\n\
    \            Set<Character> set = new HashSet<>();\n            for (char character\
    \ : string.toCharArray()) {\n                set.add((Character) character);\n\
    \            }\n            length = set.size();\n        }\n        return length;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccmodf6p.java:28)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long[] result = new long[string.length()];\n        Arrays.fill(result,0L);\n\
    \        for(char c : string.toCharArray()) {\n            char lower = Character.toLowerCase(c);\n\
    \            char upper = Character.toUpperCase(c);\n            result[Math.min(upper-lower,result.length-1)]\
    \ += 1;\n        }\n        return result.length;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index -32 out of bounds for length 5\n\tat Problem.countDistinctCharacters(tmpixi7grq7.java:20)\n\
    \tat Problem.main(tmpixi7grq7.java:26)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> distinctCharacters = Sets.newHashSet();\n        for(char\
    \ c : string.toCharArray()) {\n            distinctCharacters.add(c);\n      \
    \  }\n        return distinctCharacters.size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuy6gcm6d.java:15: error: cannot find symbol\n        Set<Character>\
    \ distinctCharacters = Sets.newHashSet();\n                                  \
    \          ^\n  symbol:   variable Sets\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return Stream.of(string.split(\"\")).map(c -> String.valueOf(c).trim()).map(String::toLowerCase).distinct().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52w0sclu.java:18)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       char[] chars = string.toLowerCase().toCharArray();\n        long result\
    \ = 0L;\n        for (char ch : chars) {\n            if (Character.isLetter(ch))\
    \ {\n                result += 1;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4wyrk7v4.java:27)\n"
  stdout: ''
  timestamp: 1660011953
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       \n        \n        \n        return string.chars().distinct().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6ko1a2w.java:23)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinctCharacters = 0;\n        for (char c : string.toCharArray())\
    \ {\n            distinctCharacters += (c == Character.toLowerCase(c)) ? 1 : 0;\n\
    \            distinctCharacters += (c == Character.toUpperCase(c)) ? 1 : 0;\n\
    \        }\n        return distinctCharacters;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp8j8pkg5.java:25)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long[] frequencies = new long[128];\n        for (char c : string.toCharArray())\
    \ {\n            int val = Character.getNumericValue(c);\n            frequencies[val]++;\n\
    \        }\n        long count = 1;\n        for (long count : frequencies) {\n\
    \            count *= 2;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5n7p6x1.java:21: error: variable count is already defined in method\
    \ countDistinctCharacters(String)\n        for (long count : frequencies) {\n\
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Arrays.stream(string.toCharArray()).distinct().count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfqz0whlz.java:15: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(string.toCharArray()).distinct().count();\n           \
    \   ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n      (inference\
    \ variable T#1 has incompatible bounds\n        equality constraints: char\n \
    \       lower bounds: Object)\n    method Arrays.<T#2>stream(T#2[],int,int) is\
    \ not applicable\n      (cannot infer type-variable(s) T#2\n        (actual and\
    \ formal argument lists differ in length))\n    method Arrays.stream(int[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to int[])\n\
    \    method Arrays.stream(long[]) is not applicable\n      (argument mismatch;\
    \ char[] cannot be converted to long[])\n    method Arrays.stream(double[]) is\
    \ not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long count = 0; //\n        Set<Character> characters = new HashSet<>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (!characters.contains(c)) {\n                characters.add(c);\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp05z8nd8k.java:29)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> count = new HashMap<>();\n        for (char c : string.toCharArray())\
    \ {\n            count.put(c, count.getOrDefault(c, 0L) + 1);\n        }\n   \
    \     return count.entrySet().stream()\n                .filter(entry -> entry.getValue()\
    \ == string.length())\n                .collect(Collectors.counting());\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkb329eth.java:25)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.chars().distinct().count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_v46pye.java:20)\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null) {\n            throw new IllegalArgumentException(\"\
    Cannot find distinct characters on null\");\n        }\n        Set<Character>\
    \ distinctChars = new HashSet<>();\n        boolean start = true;\n        for\
    \ (char c : string.toCharArray()) {\n            if (start) {\n              \
    \  start = false;\n                continue;\n            }\n            if (Character.isLowerCase(c))\
    \ {\n                continue;\n            }\n            distinctChars.add(c);\n\
    \        }\n        return distinctChars.size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00kk9omv.java:34)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       if (string == null || string.isEmpty()) {\n            return 0L;\n  \
    \      }\n\n        HashMap<Character, Long> map = new HashMap<Character, Long>();\n\
    \        for (char c : string.toCharArray()) {\n            Long count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1l);\n         \
    \   } else {\n                map.put(c, count.longValue() + 1l);\n          \
    \  }\n        }\n\n        return map.values().stream().filter(l -> l > 0l).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4n6xh2cl.java:34)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<>();\n\n        for (char character :\
    \ string.toCharArray()) {\n            if (set.add(character)) {\n           \
    \     set.add(Character.toUpperCase(character));\n                set.add(Character.toLowerCase(character));\n\
    \            }\n        }\n\n        return set.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjlremcf.java:28)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long result = 0;\n        long hash;\n        long charCount;\n      \
    \  char[] charArray = string.toCharArray();\n        for (int i = 0; i < charArray.length;\
    \ i++) {\n            hash = hashCode(charArray[i]);\n            if (hash ==\
    \ 0) {\n                result++;\n            }\n            if (result != 0)\
    \ {\n                charCount = (1l << result);\n                if (hash ==\
    \ charCount) {\n                    hash++;\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofvdmyou.java:20: error: method hashCode in class Object cannot\
    \ be applied to given types;\n            hash = hashCode(charArray[i]);\n   \
    \                ^\n  required: no arguments\n  found:    char\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Integer> count = new HashMap<Character, Integer>();\n\
    \        for (Character ch: string.toCharArray()) {\n            if (count.containsKey(ch))\
    \ {\n                count.put(ch, count.get(ch) + 1);\n            } else {\n\
    \                count.put(ch, 1);\n            }\n        }\n\n        return\
    \ count.values().stream().mapToLong(Integer::longValue).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmz0itz5u.java:29)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long res = 0;\n        Set<Character> set = new HashSet<>();\n       \
    \ for (char c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        set.forEach(c -> { res += (set.size() - set.contains(c));\
    \ });\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1f7i8g9j.java:20: error: bad operand types for binary operator\
    \ '-'\n        set.forEach(c -> { res += (set.size() - set.contains(c)); });\n\
    \                                              ^\n  first type:  int\n  second\
    \ type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long num = 0;\n        for(int i = 0; i < string.length(); i++) {\n  \
    \          if(Character.isLetter(string.charAt(i))) {\n                num +=\
    \ 1;\n            }\n        }\n        return num;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswfdbpfb.java:26)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       final HashMap<Character, Long> charCounts = new HashMap<Character, Long>();\n\
    \        // Iterate through all characters and store their count in a HashMap\n\
    \        for (Character character : string.toCharArray()) {\n            long\
    \ currentCount = charCounts.getOrDefault(character, 0L);\n            charCounts.put(character,\
    \ currentCount + 1L);\n        }\n        // Return the sum of the count of the\
    \ chars found in string\n        return charCounts.values().stream().mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7azatz80.java:27)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<String, Long> characters = new HashMap<>();\n        char[] charArray\
    \ = string.toCharArray();\n        for (char c : charArray) {\n            long\
    \ count = characters.containsKey(c) ? characters.get(c) : 0;\n            characters.put(c,\
    \ ++count);\n        }\n        return characters.values().stream().mapToLong(count\
    \ -> count < 4 ? count : 4l).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp55n4cw8u.java:19: error: incompatible types: char cannot be converted\
    \ to String\n            characters.put(c, ++count);\n                       \
    \    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<Character>();\n        for (char c :\
    \ string.toCharArray())\n            set.add(c);\n        return set.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uwgy8a_.java:23)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       HashMap<Character, Long> map = new HashMap<>();\n        for(int i = 0;\
    \ i < string.length(); i++) {\n            char c = string.charAt(i);\n      \
    \      map.put(c, map.getOrDefault(c, 0L) + 1);\n        }\n        Long v = 0;\n\
    \        for (long key : map.keySet()) {\n            v = Math.max(v, key);\n\
    \        }\n        return v;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_5xil124.java:20: error: incompatible types: int cannot be converted\
    \ to Long\n        Long v = 0;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       List<Character> chars = new ArrayList<Character>();\n        for (char\
    \ c : string.toCharArray()) {\n            chars.add(c);\n        }\n        long\
    \ distinctCharCount = chars.size();\n        chars.clear();\n        for (char\
    \ c : string.toCharArray()) {\n            if (chars.contains(c)) {\n        \
    \        chars.remove(c);\n            }\n        }\n        return distinctCharCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptswoidnr.java:31)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long distinct = 0, c;\n        for (int i = 0; i < string.length(); i++)\n\
    \            for (int j = 0; j < string.length(); j++)\n                if (i\
    \ != j && string.charAt(i) == string.charAt(j))\n                    distinct++;\n\
    \        return distinct;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpagav37y7.java:24)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> set = new HashSet<>();\n        for (int i = 0; i < string.length();\
    \ i++)\n            set.add(string.charAt(i));\n        return set.size();\n \
    \   }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fzhlrwm.java:23)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Set<Character> charSet = new HashSet<>();\n        for (char c : string.toCharArray())\n\
    \            charSet.add(c);\n        return charSet.size();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwdb6j54.java:23)\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return countDistinctCharacters(string, new char[string.length()]);\n \
    \   }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsxs4ikqj.java:15: error: method countDistinctCharacters in class\
    \ Problem cannot be applied to given types;\n        return countDistinctCharacters(string,\
    \ new char[string.length()]);\n               ^\n  required: String\n  found:\
    \    String,char[]\n  reason: actual and formal argument lists differ in length\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011954
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       Map<Character, Long> countMap = new HashMap<Character, Long>();\n    \
    \    for (char c : string.toCharArray()) {\n            Long count = countMap.get(c);\n\
    \            if (count == null) {\n                countMap.put(c, 1l);\n    \
    \        } else {\n                countMap.put(c, count + 1l);\n            }\n\
    \        }\n        return countMap.entrySet().stream().mapToLong(e -> e.getValue()).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsnoin6e8.java:29)\n"
  stdout: ''
  timestamp: 1660011955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       // Create a map of distinct characters, counting them\n        HashMap<Character,\
    \ Integer> map = new HashMap<>();\n        for (char ch : string.toCharArray())\
    \ {\n            map.put(ch, map.getOrDefault(ch, 0) + 1);\n        }\n\n    \
    \    // Return number of distinct characters plus one\n        return map.size()\
    \ + 1;\n    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0moqr5ru.java:25)\n"
  stdout: ''
  timestamp: 1660011955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       long total = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            int j = i;\n            while\
    \ (j < string.length() && string.charAt(j) == c) {\n                j++;\n   \
    \         }\n            if (j != i) {\n                total += (string.charAt(i)\
    \ - c);\n            }\n        }\n        return total;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0l));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybsi13rh.java:30)\n"
  stdout: ''
  timestamp: 1660011955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return string.replaceAll(\"[^A-Za-z]+\", \"\").length();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ad4ghav.java:20)\n"
  stdout: ''
  timestamp: 1660011955
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> countDistinctCharacters((\"\
    xyzXYZ\"))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n   \
    \ // (4l)\n    public static long countDistinctCharacters(String string) {\n \
    \       return countDistinctCharacters(string, string.toCharArray());\n    }\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ef0go_2.java:15: error: method countDistinctCharacters in class\
    \ Problem cannot be applied to given types;\n        return countDistinctCharacters(string,\
    \ string.toCharArray());\n               ^\n  required: String\n  found:    String,char[]\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011955

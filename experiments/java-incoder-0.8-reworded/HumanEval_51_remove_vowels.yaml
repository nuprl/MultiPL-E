name: HumanEval_51_remove_vowels
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // remove_vowels is a function that takes string and returns\
  \ string without vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    //\
  \ >>> removeVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"\
  aaaaa\"))\n    // (\"\")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n\
  \    // >>> removeVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static String\
  \ removeVowels(String text) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(removeVowels((\"\
  \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ['        return text.replaceAll("[aeiouAEIOU]", "");', "        char[]\
    \ letters = text.toCharArray();\n        for (int i = 0; i < letters.length; i++)\
    \ {\n            if (letters[i] == 'a' || letters[i] == 'e' || letters[i] == 'i'\
    \ || letters[i] == 'o' || letters[i] == 'u' || letters[i] == 'y') {\n        \
    \        letters[i] = ' ';\n            }\n        }\n        return new String(letters);",
  "        String vowels = \"aeiouAEIOU\";\n        Set<Character> chars = new HashSet<>();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1)\n                chars.add(c);\n   \
    \     }\n        StringBuilder result = new StringBuilder(text);\n        for\
    \ (char c : chars) {\n            result.setCharAt(i, c);\n        }\n       \
    \ return result.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        StringBuilder result = new StringBuilder(text);\n\n        for\
    \ (char c : text.toCharArray())\n            if (\"aeiouAEIOU\".contains(c))\n\
    \                result.setCharAt(result.length() - 1, c);\n\n        return result.toString();",
  "        String noVowels = new String();\n        for (char vowel : 'aeiouAEIOU'.toCharArray())\
    \ {\n            noVowels += text.charAt(0);\n        }\n        return noVowels;",
  '        return text.replaceAll("[aeiouAEIOU]+", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        StringBuilder sb = new StringBuilder();\n        // iterate over\
    \ input string\n        for (int i = 0; i < text.length(); i++) {\n          \
    \  // if current character is a vowel, append it to sb\n            if (text.charAt(i)\
    \ == 'a' || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) ==\
    \ 'o' || text.charAt(i) == 'u') {\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        // return result\n        return sb.toString();",
  "        StringBuilder builder = new StringBuilder(text);\n        builder.replaceAll(\"\
    [aeiouAEIOU]\", \"\");\n        return builder.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n                sb.append(c);\n       \
    \     }\n        }\n        return sb.toString();", "       if(text.contains(\"\
    a\") || text.contains(\"e\") || text.contains(\"i\") || text.contains(\"o\") ||\
    \ text.contains(\"u\")){\n           return text.replaceAll(\"[aeiou]\",\"\");\n\
    \       } else {\n           return text;\n       }", "        Set<Character>\
    \ vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));\n        return\
    \ text.replaceAll(\"[aeiouAEIOUaeiouAEIOU]\",\"\").replaceAll(\"[aeiouAEIOUaeiouAEIOU]\"\
    ,\"\").replaceAll(\"[aeiouAEIOUaeiouAEIOU]\",\"\");", "        String[] vowels\
    \ = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[] result = new String[text.length()];\n\
    \n        // Loop through every letter in the string.\n        for (int i = 0;\
    \ i < text.length(); i++) {\n            // If the letter is a vowel.\n      \
    \      if (Arrays.asList(vowels).contains(text.charAt(i))) {\n               \
    \ // Remove it.\n                result[i] = \"\";\n            } else {\n   \
    \             // Otherwise add it.\n                result[i] = text.charAt(i);\n\
    \            }\n        }\n        // Return the resulting string.\n        return\
    \ String.valueOf(result);", '       return text.replaceAll("[aeiouAEIOU]", "");',
  "        Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'A', 'b', 'B',\
    \ 'c', 'C', 'd', 'D', 'e', 'E', 'f', 'F', 'g', 'G', 'h', 'H', 'i', 'I', 'j', 'J',\
    \ 'k', 'K', 'l', 'L', 'm', 'M', 'n', 'N', 'o', 'O', 'p', 'P', 'r', 'R', 's', 'S',\
    \ 't', 'T', 'u', 'U', 'v', 'V', 'w', 'W', 'x', 'X', 'y', 'Y', 'z', 'Z'));\n  \
    \      String withoutVowels = text.replaceAll(\"[\" + vowels.stream().map(Character::toString).collect(Collectors.joining(\"\
    |\")) + \"]\", \"\");\n        return withoutVowels;", "        String vowels\
    \ = \"AEIOUaeiou\";\n        StringBuilder sb = new StringBuilder(text);\n   \
    \     char[] c = sb.getChars();\n        boolean remove = false;\n        for(char\
    \ c : c) {\n            boolean found = false;\n            for(char y : vowels.toCharArray())\
    \ {\n                if(Character.toLowerCase(c) == y) {\n                   \
    \ found = true;\n                    break;\n                }\n            }\n\
    \            if(found) {\n                remove = true;\n            }\n    \
    \    }\n        if(remove) {\n            sb.replace(0,sb.length()-1,\"\");\n\
    \        }\n        return sb.toString();", "        return text.chars().filter(c->c=='a'\
    \ || c=='e' || c=='i' || c=='o' || c=='u' || c=='y').collect(StringBuilder::new,StringBuilder::appendCodePoint,\
    \ StringBuilder::append).toString();", '        return text.replaceAll("[AEIOUaeiou]+",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        // your code here\n        Set<Character>\
    \ vowels = Set.of('a', 'e', 'i', 'o', 'u', 'y');\n        String noVowelsString\
    \ = \"\";\n        for(char c : text.toCharArray()) {\n            if(vowels.contains(c))\n\
    \                continue;\n            noVowelsString += c;\n        }\n    \
    \    return noVowelsString;", "        char [] charArray = text.toCharArray();\n\
    \        Arrays.stream(charArray)\n             .filter(x -> !((char)x == 'A'\
    \ || (char)x == 'E' || (char)x == 'I' || (char)x == 'O' || (char)x == 'U'))\n\
    \             .forEach(x -> charArray[x] = x);\n        return new String(charArray);",
  "        Set<Character> vowels = new HashSet<>();\n        vowels.add('a', 'e',\
    \ 'i', 'o', 'u');\n        for (char c : text.toCharArray()) {\n            if\
    \ (!vowels.contains(c)) {\n                text = text.replace(c, '');\n     \
    \       }\n        }\n        return text;", "        String[] vowels = {\"a\"\
    , \"e\", \"i\", \"o\", \"u\"};\n        StringBuilder sb = new StringBuilder();\n\
    \        // Iterate through the string, character-by-character\n        for (int\
    \ i = 0; i < text.length(); i++) {\n            // If the current character is\
    \ not a vowel, append it to the StringBuilder\n            if (vowels.indexOf(text.charAt(i))\
    \ < 0) {\n                sb.append(text.charAt(i));\n            }\n        }\n\
    \        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]+", "");', "        char[]\
    \ arr = text.toCharArray();\n        arr = removeVowels(arr);\n        return\
    \ new String(arr);", "        Set<String> vowels = new HashSet<>();\n        vowels.add(\"\
    a\");\n        vowels.add(\"e\");\n        vowels.add(\"i\");\n        vowels.add(\"\
    o\");\n        vowels.add(\"u\");\n        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (vowels.contains(c)) {\n                continue;\n          \
    \  }\n            result.append(c);\n        }\n        return result.toString();",
  "        // Write your code here.\n        return text;", "        \n        char[]\
    \ letters = text.toCharArray();\n        for(char c : letters) {\n           \
    \ if(c=='a' || c=='e' || c=='i' || c=='o' || c=='u') {\n                letters[letters.length-1]=c;\n\
    \            }\n        }\n        return new String(letters);", '        return
    text.replaceAll("[aeiouAEIOU]","");', "        // Write your code here\n     \
    \   return text;", "        Set<Character> vowels = new HashSet<Character>();\n\
    \        vowels.add('a');\n        vowels.add('e');\n        vowels.add('i');\n\
    \        vowels.add('o');\n        vowels.add('u'); // u is a vowel.\n       \
    \ text = text.toLowerCase(); // make everything lower case\n        StringBuilder\
    \ result = new StringBuilder();\n        for (Character c : text.toCharArray())\
    \ {\n            if (!vowels.contains(c)) {\n                result.append(c);\n\
    \            }\n        }\n        return result.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : text.toCharArray()) {\n   \
    \         if (!Character.isLetterOrDigit(c) && !\"aeiou\".contains(Character.toString(c)))\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        int length = text.length();\n        return text.chars().filter(Character::isVowel).mapToObj(i\
    \ -> i).toArray(String[]::new);", "        Set<Character> vowels = new HashSet<>();\n\
    \        vowels.add('a');\n        vowels.add('e');\n        vowels.add('i');\n\
    \        vowels.add('o');\n        vowels.add('u');\n        vowels.add('y');\n\
    \        Set<Character> withoutVowels = new HashSet<>();\n        for (char c\
    \ : text.toCharArray()) {\n            if (!vowels.contains(c)) {\n          \
    \      withoutVowels.add(c);\n            }\n        }\n        return new String(withoutVowels);",
  "        StringBuilder result = new StringBuilder();\n        for(int i = 0; i <\
    \ text.length(); i++) {\n            char ch = text.charAt(i);\n            if(ch\
    \ == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'y') {\n\
    \                continue;\n            }\n            result.append(ch);\n  \
    \      }\n        return result.toString();", "        if (text.isEmpty()) {\n\
    \            return text;\n        }\n        char[] chars = text.toCharArray();\n\
    \        Set<Character> noVowels = new HashSet<>();\n        for (char c : chars)\
    \ {\n            if (!isVowel(c)) {\n                noVowels.add(c);\n      \
    \      }\n        }\n        char[] newChars = new char[noVowels.size()];\n  \
    \      int index = 0;\n        for (char c : noVowels) {\n            newChars[index++]\
    \ = c;\n        }\n        return new String(newChars);", "        StringBuilder\
    \ builder = new StringBuilder();\n        for (char c : text.toCharArray()) {\n\
    \            char ch = Character.toUpperCase(c);\n            if ('a'<=ch && ch<='z'\
    \ || 'A'<=ch && ch<='Z') {\n                builder.append(c);\n            }\n\
    \        }\n        return builder.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        ArrayList<Character> list = new ArrayList<Character>();\n    \
    \    for (char c : text.toCharArray()) {\n            if (!list.isEmpty() && list.contains(c))\
    \ {\n                list.remove(c);\n            } else if (!Character.isLetter(c))\
    \ {\n                list.add(c);\n            }\n        }\n        String newString\
    \ = \"\";\n        for (char c : list.toArray()) {\n            newString += c;\n\
    \        }\n        return newString;", '        return text.chars().filter(c
    -> c != (char)65 && (c != (char)97 && (c != (char)65 && (c != (char)97 && (c !=
    (char)48 && c != (char)57)))).map(String::valueOf).collect(Collectors.joining());',
  "        System.out.println(\"RemoveVowels called\");\n        String vowels = \"\
    aeiouAEIOU\";\n        String result = \"\";\n        for (char c : text.toCharArray())\
    \ {\n            if (vowels.contains(\"\" + c)) {\n                continue;\n\
    \            }\n            result += c;\n        }\n        return result;",
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        char[] charArray\
    \ = text.toCharArray();\n        char[] newCharArray = new char[charArray.length];\n\
    \        for (int i = 0; i < charArray.length; i++) {\n            char c = charArray[i];\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c\
    \ == 'A' || c == 'E' || c == 'I'\n                    || c == 'O' || c == 'U'\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n           \
    \     newCharArray[i] = '\\0';\n            } else {\n                newCharArray[i]\
    \ = c;\n            }\n        }\n        return new String(newCharArray);", " \
    \       char[] vowels = {'a','e','i','o','u'};\n        String cleanedText = \"\
    \";\n\n        for (int i=0; i<text.length(); i++) {\n            String currentLetter\
    \ = text.substring(i, i+1);\n            if (vowels.contains(currentLetter)) {\n\
    \                continue;\n            }\n            cleanedText += currentLetter;\n\
    \        }\n\n        return cleanedText;", "        Set set = new HashSet();\n\
    \        Arrays.stream(text.split(\"\")).forEach(s -> {\n            if (!set.contains(s))\
    \ {\n                set.add(s);\n            }\n        });\n        return set.toString();",
  '        return text.replaceAll("[aeiouAEIOU]", "");', '        // Write your code
    here', "        \n        // 1. remove vowels from text\n        \n        //\
    \ 2. return new string\n        return text.replaceAll(\"[aeiouAEIOU]\",\"\");",
  '        return text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        Map<Character, String> vowels = new HashMap<>();\n        vowels.put('a',\
    \ \"a\");\n        vowels.put('e', \"e\");\n        vowels.put('i', \"i\");\n\
    \        vowels.put('o', \"o\");\n        vowels.put('u', \"u\");\n        vowels.put('y',\
    \ \"y\");\n        vowels.put('e', \"e\");\n        vowels.put('i', \"i\");\n\
    \        vowels.put('o', \"o\");\n        vowels.put('u', \"u\");\n        vowels.put('y',\
    \ \"y\");\n        vowels.put('o', \"o\");\n        vowels.put('e', \"e\");\n\
    \        vowels.put('i', \"i\");\n        vowels.put('u', \"u\");\n        vowels.put('y',\
    \ \"y\");\n        vowels.put('u', \"u\");\n        vowels.put('y', \"y\");\n\
    \        vowels.put('e', \"e\");\n        vowels.put('o', \"o\");\n        vowels.put('o',\
    \ \"o\");\n        vowels.put('e', \"e\");\n        vowels.put('i', \"i\");\n\
    \        vowels.put('u', \"u\");\n        vowels.put('y', \"y\");\n        vowels.put('o',\
    \ \"o\");\n        vowels.put('o', \"o\");\n        vowels.put('e', \"e\");\n\
    \        vowels.put('e', \"e\");\n        vowels.put('i', \"i\");\n        vowels.put('u',\
    \ \"u\");\n        vowels.put('y', \"y\");\n        vowels.put('o', \"o\");\n\
    \        vowels.put('o', \"o\");\n        vowels.put('e', \"e\");\n        vowels.put('e',\
    \ \"e\");\n        vowels.put('i', \"i\");\n        vowels.put('u', \"u\");\n\
    \        vowels.put('y', \"y\");\n        vowels.put('o', \"o\");\n        vowels.put('o',\
    \ \"o\");\n        vowels.put('e', \"e\");\n        vowels.put('i', \"i\");\n\
    \        vowels.put('u', \"u\");\n        vowels.put('y', \"y\");\n        vowels.put('o',\
    \ \"o\");\n        vowels.put('o', \"o\");\n        vowels.put('e', \"e\");\n\
    \        vowels.put('e', \"e\");\n        vowels.put('i', \"i\");\n        vowels.put('u',\
    \ \"u\");\n        vowels.put('y", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        // return text; // No longer needed. Return text itself.\n   \
    \     StringBuilder resultBuilder = new StringBuilder();\n\n        // Add each\
    \ character to the result string\n        for (int i = 0; i < text.length(); i++)\
    \ {\n            char currentChar = text.charAt(i);\n            // If it is a\
    \ consonant, then skip to the next character\n            if (currentChar == 'a'\
    \ || currentChar == 'e' || currentChar == 'i' || currentChar == 'o' || currentChar\
    \ == 'u') {\n                continue;\n            }\n            resultBuilder.append(currentChar);\n\
    \        }\n        return resultBuilder.toString();", "        String vowels\
    \ = \"aeiou\";\n        StringBuilder newText = new StringBuilder();\n       \
    \ for (char c : text.toCharArray()) {\n            if (vowels.contains(\"\" +\
    \ c)) {\n                continue;\n            }\n            newText.append(c);\n\
    \        }\n        return newText.toString();", "        //TODO Implement removeVowels\
    \ function\n        //Your code here\n        return text;", "        // TODO\
    \ - Create a list containing all the vowels in the text string\n        List<String>\
    \ vowels = new ArrayList<String>(Arrays.asList(\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\"));\n        // TODO Return the string with all the vowels removed\n\
    \        return text;", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.chars().filter(Character::isVowel).collect(StringBuilder::new,
    StringBuilder::appendCodePoint, StringBuilder::append).toString();', '        return
    text.replaceAll("[aeiou]", "");', '        return text.replaceAll("[aeiouAEIOU]+",
    "");', "        if (text == null)\n            return \"\";\n        StringBuilder\
    \ sb = new StringBuilder(text);\n        for (int i = 0; i < sb.length(); i++)\
    \ {\n            char c = sb.charAt(i);\n            char vowel = 'A';\n     \
    \       if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z') {\n                vowel\
    \ = c;\n            }\n            if (Character.isLetter(vowel)) {\n        \
    \        sb.replace(i, i + 1, \"\");\n            }\n        }\n        return\
    \ sb.toString();", "        \n        // Declare a regular expression to remove\
    \ vowels.\n        // For simplicity, I'm assuming only one vowel at a time.\n\
    \        \n        String noVowels = \"[^aeiouAEIOU]\";\n        Pattern p = Pattern.compile(noVowels,\
    \ Pattern.CASE_INSENSITIVE);\n        \n        // Matcher m = p.matcher(text);\n\
    \        Matcher m = p.matcher(text);\n        return m.replaceAll(\"\");", '        return
    text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[AEIOUaeiou]",
    "");', "        text = text.replaceAll(\"[aeiouAEIOU]\", \"\");\n        return\
    \ text;", "        char[] charArray = text.toCharArray();\n        Arrays.stream(charArray).filter(\
    \ c -> c != (char) 'a' && (c != (char) 'e' && (c != (char) 'i' && (c != (char)\
    \ 'o' && (c != (char) 'u')))) {\n            charArray[i] = (char) c;\n      \
    \  }\n        return new String(charArray);", "        String[] vowels = {\"a\"\
    , \"e\", \"i\", \"o\", \"u\"};\n        String[] noVowels = new String[text.length()];\n\
    \        int i = 0;\n        int j = 0;\n        int k = 0;\n        while(j <\
    \ text.length()){\n            if(vowels.contains(text.charAt(j))){\n        \
    \        noVowels[i] = text.charAt(j);\n                i++;\n            }\n\
    \            j++;\n        }\n        while(k <text.length()){\n            if(text.charAt(k)\
    \ != noVowels[noVowels.length-1]){\n                noVowels[i] = text.charAt(k);\n\
    \                i++;\n            }\n            k++;\n        }\n        while(i\
    \ < text.length()){\n            noVowels[i] = text.charAt(i);\n            i++;\n\
    \        }\n        String result = noVowels.toString();\n        return result;",
  "        String[] tokens = text.split(\"\");\n        return Arrays.stream(tokens)\n\
    \                .filter(s -> s.matches(\"[aeiou]\"))\n                .collect(Collectors.joining());",
  "        String newText = text;\n        for(int i = 0; i<newText.length();i++)\
    \ {\n            String letter = newText.substring(i, i+1);\n            if((letter.equals(\"\
    a\")||letter.equals(\"e\")||letter.equals(\"i\")||letter.equals(\"o\")||letter.equals(\"\
    u\"))) {\n                newText = \"\";\n            }\n            else {\n\
    \                newText = newText + letter;\n            }\n        }\n     \
    \   return newText;", '        return text.replaceAll("[aeiou]", "");', "    \
    \    if (text == null) return \"\";\n        text = text.toLowerCase();\n    \
    \    String replaced_text = \"\";\n        StringBuilder sb = new StringBuilder(text);\n\
    \        for (int i = 0; i < sb.length(); i++) {\n            if (sb.charAt(i)\
    \ == 'a' || sb.charAt(i) == 'e' || sb.charAt(i) == 'i' ||\n                sb.charAt(i)\
    \ == 'o' || sb.charAt(i) == 'u') {\n                sb.deleteCharAt(i);\n    \
    \            i--;\n            }\n        }\n        replaced_text = sb.toString();\n\
    \        return replaced_text;", "        String result = \"\";\n        if (text\
    \ == null) return null;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           int n = text.charAt(i);\n            if ('a' <= n && n <= 'z' || 'A'\
    \ <= n && n <= 'Z')\n                result += text.charAt(i);\n        }\n  \
    \      return result;", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        char[] charArray\
    \ = text.toCharArray();\n        ArrayList<Character> remove = new ArrayList<Character>();\n\
    \        for(char c : charArray) {\n            if((c == 'a') || (c == 'e') ||\
    \ (c == 'i') || (c == 'o') || (c == 'u')) {\n                remove.add(c);\n\
    \            }\n        }\n        char[] charArray1 = new char[remove.size()];\n\
    \        remove.toArray(charArray1);\n        return new String(charArray1);",
  "        List<String> vowels = Arrays.asList(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \        return text.chars()\n            .filter(s -> !vowels.contains(String.valueOf(s)))\
    \ // Filter out the vowels.\n            .collect(Collectors.joining());", '        return
    text.replaceAll("[aeiouAEIOU]", "");', '        return text.chars().filter(c ->
    !vowels.contains(c)).mapToObj(c -> (char) c).collect(Collectors.joining());',
  "        char[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        String result = \"\"\
    ;\n\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \n            for(int j = 0; j < vowels.length; j++) {\n                if(text.charAt(i)\
    \ == vowels[j]) {\n                    result = result + c;\n                \
    \    break;\n                }\n            }\n        }\n\n        return result;",
  "        StringBuilder sb = new StringBuilder();\n        for(int i=0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        return text.chars().filter(c -> 'a'\
    \ <= c && c <= 'z' || 'A' <= c && c <= 'Z' || '0' <= c && c <= '9')\n        \
    \    .mapToObj(String::valueOf)\n            .collect(Collectors.joining());",
  "        if (text == null) return null;\n        \n        String vowels = \"aeiouAEIOU\"\
    ;\n        \n        StringBuilder sb = new StringBuilder();\n        \n     \
    \   char[] charArray = text.toCharArray();\n        \n        for (int i = 0;\
    \ i < charArray.length; i++) {\n            char c = charArray[i];\n         \
    \   \n            if (vowels.contains(Character.toLowerCase(c))) {\n         \
    \       sb.append(Character.toLowerCase(c));\n            } else {\n         \
    \       sb.append(c);\n            }\n        }\n        \n        return sb.toString();",
  '        return text.replaceAll("[aeiouAEIOU]+", "");', "        List<String> removeVowels\
    \ = new ArrayList<String>();\n        for(int i = 0; i < text.length(); i++) {\n\
    \            String letter = text.charAt(i);\n            if(!letter.equals(\"\
    a\")&&!letter.equals(\"e\")&&!letter.equals(\"i\")&&!letter.equals(\"o\")&&!letter.equals(\"\
    u\"))\n                removeVowels.add(letter);\n        }\n        return removeVowels.stream().collect(Collectors.joining());",
  '        return text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', "        String[]\
    \ tokens = text.split(\"\");\n        for (int i=0; i<tokens.length; i++) {\n\
    \            String s = tokens[i];\n            if (\"aeiouAEIOU\".indexOf(s.charAt(0))\
    \ >= 0) {\n                tokens[i] = \"\";\n            }\n        }\n     \
    \   return String.join(\"\", tokens);", "        StringBuilder result = new StringBuilder();\n\
    \        for(char c: text.toCharArray()) {\n            if(!isVowel(c)) {\n  \
    \              result.append(c);\n            }\n        }\n        return result.toString();",
  "        String vowels = \"AEIOUYaeiouy\";\n        String result = \"\";\n    \
    \    for(int i = 0; i < text.length(); i++) {\n            if(!vowels.contains(text.charAt(i)))\
    \ {\n                result += text.charAt(i);\n            }\n        }\n   \
    \     return result;", "        String result = \"\";\n        for (int i = 0;\
    \ i < text.length(); i++) {\n            char c = text.charAt(i);\n          \
    \  if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n         \
    \       result += text.charAt(i);\n            }\n        }\n        return result;",
  "        HashSet<Character> vowels = new HashSet<Character>();\n        vowels.add('a');\n\
    \        vowels.add('e');\n        vowels.add('i');\n        vowels.add('o');\n\
    \        vowels.add('u');\n\n        StringBuilder result = new StringBuilder(text);\n\
    \        Iterator<Character> it = result.iterator();\n        while (it.hasNext())\
    \ {\n            Character current = it.next();\n            if (!vowels.contains(current))\
    \ {\n                it.remove();\n            }\n        }\n        return result.toString();",
  "        Set<Character> vowels = Set.of('a', 'e', 'i', 'o', 'u');\n        return\
    \ text.replaceAll(\"[aeiouAEIOU]\", \"\");", "        StringBuilder sb = new StringBuilder();\n\
    \        for(char c : text.toCharArray()) {\n            if(\"aeiou\".contains(\"\
    \" + c)) {\n                continue;\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        final String\
    \ VOWELS = \"AEIOUaeiou\";\n        String vowels = \"\";\n        for(char ch:\
    \ text.toCharArray()) {\n            vowels += ch;\n        }\n        char[]\
    \ charArray = text.toCharArray();\n        for(int i = 0; i < charArray.length;\
    \ i++) {\n            if(charArray[i] != VOWELS.charAt(i)) {\n               \
    \ charArray[i] = VOWELS.charAt(i);\n            }\n        }\n        return new\
    \ String(charArray);", '        return text.replaceAll("[aeiou]", "");', "   \
    \     String[] arr = text.split(\"(?!^)\");\n        return Stream.of(arr)\n \
    \               .map(s -> s.replaceAll(\"[aeiouAEIOU]\", \"\"))\n            \
    \    .collect(Collectors.joining());", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        //  Remove vowels from text and return the result as a string.\n\
    \        StringBuilder sb = new StringBuilder(text);\n        Set<Character> vow\
    \ = new HashSet<Character>();\n        vow.add('a');\n        vow.add('e');\n\
    \        vow.add('i');\n        vow.add('o');\n        vow.add('u');\n       \
    \ vow.add('A');\n        vow.add('E');\n        vow.add('I');\n        vow.add('O');\n\
    \        vow.add('U');\n        vow.add('y');\n        vow.add('Y');\n       \
    \ vow.add('m');\n        vow.add('n');\n        vow.add('r');\n        vow.add('s');\n\
    \        vow.add('t');\n        vow.add('p');\n        vow.add('f');\n       \
    \ vow.add('q');\n        vow.add('Q');\n        vow.add('W');\n        vow.add('H');\n\
    \        vow.add('Q');\n        vow.add('Z');\n        vow.add('s');\n       \
    \ vow.add('t');\n        vow.add('h');\n        vow.add('t');\n        vow.add('w');\n\
    \        vow.add('Z');\n        vow.add('z');\n        vow.add('z');\n       \
    \ for (char ch : sb.toString().toCharArray()) {\n            if (vow.contains(ch))\
    \ {\n                sb.setCharAt(ch, '');\n            }\n        }\n       \
    \ return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                result.append(c);\n            }\n        }\n        return result.toString();",
  "        String[] vowels = new String[]{\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"\
    };\n        String regex = String.join(\"|\", vowels);\n        return text.replaceAll(regex,\
    \ \"\");", "        Map<String, String> vowels = new HashMap<String, String>();\n\
    \        vowels.put(\"a\", \"E\");\n        vowels.put(\"e\", \"E\");\n      \
    \  vowels.put(\"i\", \"E\");\n        vowels.put(\"o\", \"E\");\n        vowels.put(\"\
    u\", \"E\");\n        vowels.put(\"A\", \"e\");\n        vowels.put(\"E\", \"\
    e\");\n        vowels.put(\"I\", \"e\");\n        vowels.put(\"O\", \"e\");\n\
    \        vowels.put(\"U\", \"e\");\n        vowels.put(\"b\", \"A\");\n      \
    \  vowels.put(\"c\", \"a\");\n        vowels.put(\"d\", \"a\");\n        vowels.put(\"\
    f\", \"a\");\n        vowels.put(\"g\", \"a\");\n        vowels.put(\"h\", \"\
    a\");\n        vowels.put(\"j\", \"a\");\n        vowels.put(\"k\", \"a\");\n\
    \        vowels.put(\"l\", \"a\");\n        vowels.put(\"m\", \"a\");\n      \
    \  vowels.put(\"n\", \"a\");\n        vowels.put(\"p\", \"a\");\n        vowels.put(\"\
    q\", \"a\");\n        vowels.put(\"r\", \"a\");\n        vowels.put(\"s\", \"\
    a\");\n        vowels.put(\"t\", \"a\");\n        vowels.put(\"v\", \"a\");\n\
    \        vowels.put(\"x\", \"a\");\n        vowels.put(\"z\", \"a\");\n      \
    \  vowels.put(\"0\", \"a\");\n        vowels.put(\"1\", \"a\");\n        vowels.put(\"\
    2\", \"a\");\n        vowels.put(\"3\", \"a\");\n        vowels.put(\"4\", \"\
    a\");\n        vowels.put(\"5\", \"a\");\n        vowels.put(\"6\", \"a\");\n\
    \        vowels.put(\"7\", \"a\");\n        vowels.put(\"8\", \"a\");\n      \
    \  vowels.put(\"9\", \"a\");\n\n        StringBuilder sb = new StringBuilder(text);\n\
    \        for (char c : sb.toString().toCharArray()) {\n            if (vowels.get((char)c)\
    \ != null) {\n                sb.setCharAt(c, (char)0);\n            }\n     \
    \   }\n        return sb.toString();", "        HashSet<Character> vowels = new\
    \ HashSet<Character>();\n        vowels.add('a', 'A');\n        vowels.add('e',\
    \ 'E');\n        vowels.add('i', 'I');\n        vowels.add('o', 'O');\n      \
    \  vowels.add('u', 'U');\n        vowels.add('y', 'Y');\n        vowels.add('a',\
    \ 'a', 'a', 'A');\n        vowels.add('e', 'e', 'e', 'E');\n        vowels.add('i',\
    \ 'i', 'i', 'I');\n        vowels.add('o', 'o', 'o', 'O');\n        vowels.add('u',\
    \ 'u', 'u', 'U');\n        vowels.add('y', 'y', 'y', 'Y');\n        vowels.add('u',\
    \ 'u', 'u', 'U');\n        for (char c: text.toCharArray()) {\n            if\
    \ (vowels.contains(c)) {\n                text = text.replaceAll(c,\"\");\n  \
    \          }\n        }\n        return text;", "        StringBuilder result\
    \ = new StringBuilder();\n\n        for(int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            boolean isVowel = false;\n\
    \            for(int j = 0; j < vowels.length(); j++) {\n                if(vowels.charAt(j)\
    \ == c) {\n                    isVowel = true;\n                }\n          \
    \  }\n            if(!isVowel) {\n                result.append(c);\n        \
    \    }\n        }\n        return result.toString();", "        String[] textArr\
    \ = text.split(\"[aeiouAEIOU]+\");\n        String result = \"\";\n        for\
    \ (String textArr1 : textArr) {\n            result += textArr1;\n        }\n\
    \        return result;", "        Set<Character> vowels = Set.of('a','e','i','o','u');\n\
    \        return text.replaceAll(\"[aeiouAEIOU]\", \"\").replaceAll(\"[^a-zA-Z]\"\
    , \"\");", "        String vowels = \"AEIOUaeiou\";\n        StringBuilder result\
    \ = new StringBuilder();\n        for(int i = 0; i < text.length(); i++){\n  \
    \          char c = text.charAt(i);\n            if(vowels.indexOf(c) == -1){\n\
    \                result.append(c);\n            }\n        }\n        return result.toString();",
  "        String[] array = text.split(\"\");\n        Arrays.stream(array).filter(character\
    \ -> !character.equals(\"A\")\n                && !character.equals(\"a\") &&\
    \ !character.equals(\"e\")\n                && !character.equals(\"i\") && !character.equals(\"\
    o\")\n                && !character.equals(\"u\")).collect(Collectors.joining());\n\
    \        return String.join(\"\", array);", '        return text.replaceAll("[aeiouAEIOU]+",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', "        StringBuilder\
    \ textClean = new StringBuilder();\n        for(char c : text.toCharArray()) {\n\
    \            if(Character.isLetter(c)) {\n                if(!Character.isLetterOrDigit(c)\
    \ && !Character.isWhitespace(c)) {\n                    textClean.append(c);\n\
    \                }\n            }\n        }\n        return textClean.toString();",
  "        String[] vowels = { \"a\", \"e\", \"i\", \"o\", \"u\" };\n        String\
    \ result = \"\";\n        for (int i = 0; i < text.length(); i++) {\n        \
    \    boolean isVowel = false;\n            for (int j = 0; j < vowels.length;\
    \ j++) {\n                if (text.charAt(i) == vowels[j]) {\n               \
    \     isVowel = true;\n                }\n            }\n            if (!isVowel)\n\
    \                result += text.charAt(i);\n        }\n        return result;",
  "        String[] vowels = { \"a\", \"e\", \"i\", \"o\", \"u\" };\n        String\
    \ noVowels = text.replaceAll(\"[aeiouAEIOU]+\", \"\");\n        return noVowels;",
  "        String[] vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char ch = text.charAt(i);\n            boolean removeVowel = false;\n\
    \            for (int j = 0; j < vowels.length; j++) {\n                if (ch\
    \ == vowels[j]) {\n                    removeVowel = true;\n                 \
    \   break;\n                }\n            }\n            if (!removeVowel)\n\
    \                sb.append(ch);\n        }\n        return sb.toString();", " \
    \       char[] vowels = new char[] { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U' };\n        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ == -1) {\n                sb.append(text.charAt(i));\n            }\n      \
    \  }\n        return sb.toString();", "        Set<Character> vowels = Set.of('a',\
    \ 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U');\n        return text.replaceAll(\"\
    [\" + vowels.stream().collect(Collectors.joining(\"|\")) + \"]\", \"\");", " \
    \      Pattern vowels_pattern = Pattern.compile(\"[aeiouAEIOU]\");\n       return\
    \ vowels_pattern.matcher(text).replaceAll(\"\");", "        char[] array = text.toCharArray();\n\
    \        Arrays.sort(array);\n        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < array.length; i++) {\n            char ch = array[i];\n\
    \            if (Character.isAlphabetic(ch)) {\n                boolean skip =\
    \ false;\n                for (int j = 0; j < 5; j++) {\n                    if\
    \ (Character.toLowerCase(ch).equals(vowels[j])) {\n                        skip\
    \ = true;\n                        break;\n                    }\n           \
    \     }\n                if (!skip) {\n                    result.append(ch);\n\
    \                }\n            }\n        }\n        return result.toString();",
  "        return text.chars()\n            .filter(ch -> !Character.isAlphabetic(ch))\n\
    \            .filter(ch -> !Character.isWhitespace(ch))\n            .collect(Collectors.joining());",
  "        String newtext;\n        for(int i = 0; i < text.length(); i++) {\n   \
    \         if(text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i)\
    \ == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u' || text.charAt(i) ==\
    \ 'y') {\n                continue;\n            }\n            newtext += text.charAt(i);\n\
    \        }\n        return newtext;", "        HashSet<Character> vowels = new\
    \ HashSet<Character>();\n        vowels.add('a', 'e', 'i', 'o', 'u');\n      \
    \  vowels.add('a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y');\n \
    \       StringBuilder result = new StringBuilder(text.length());\n        for\
    \ (char c : text.toCharArray()) {\n            if (!vowels.contains(c)) {\n  \
    \              result.append((char)c);\n            }\n        }\n        return\
    \ result.toString();", "        String[] arr = text.toCharArray();\n        for(int\
    \ i=0;i<arr.length;i++) {\n            if(Character.isLetter(arr[i])) {\n    \
    \            String temp = new String(arr);\n                temp.replace(i,1,\"\
    \");\n                arr[i] = temp.charAt(0);\n            }\n        }\n   \
    \     return new String(arr);", "        int pos = 0, pos = 0;\n        StringBuilder\
    \ sb = new StringBuilder();\n        while(pos < text.length()) {\n          \
    \  switch(text.charAt(pos++)) {\n                case 'a': sb.append(\"ae\");\
    \ break;\n                case 'A': sb.append(\"AE\"); break;\n              \
    \  case 'e': sb.append(\"ee\"); break;\n                case 'E': sb.append(\"\
    EE\"); break;\n                case 'i': sb.append(\"ii\"); break;\n         \
    \       case 'I': sb.append(\"II\"); break;\n                case 'o': sb.append(\"\
    oo\"); break;\n                case 'O': sb.append(\"OO\"); break;\n         \
    \       case 'u': sb.append(\"uu\"); break;\n                case 'U': sb.append(\"\
    UU\"); break;\n                case 'y': sb.append(\"y\"); break;\n          \
    \      case 'Y': sb.append(\"YY\"); break;\n                case 'y': sb.append(\"\
    Y\"); break;\n                case 'Y': sb.append(\"YYY\"); break;\n         \
    \       case 'z': sb.append(\"z\"); break;\n                case 'Z': sb.append(\"\
    ZZ\"); break;\n                case 'w': sb.append(\"w\"); break;\n          \
    \      case 'W': sb.append(\"WW\"); break;\n                case 's': sb.append(\"\
    s\"); break;\n                case 'S': sb.append(\"SS\"); break;\n          \
    \      case 't': sb.append(\"t\"); break;\n                case 'T': sb.append(\"\
    TT\"); break;\n                case 'l': sb.append(\"l\"); break;\n          \
    \      case 'L': sb.append(\"LL\"); break;\n                case 'n': sb.append(\"\
    n\"); break;\n                case 'N': sb.append(\"NN\"); break;\n          \
    \      case 'm': sb.append(\"m\"); break;\n                case 'M': sb.append(\"\
    MM\"); break;\n                case 'k': sb.append(\"k\"); break;\n          \
    \      case 'K': sb.append(\"KK\"); break;\n            }\n        }\n       \
    \ return sb.toString();", "        List<Character> vowels = new ArrayList<>(Arrays.asList('a',\
    \ 'e', 'i', 'o', 'u'));\n        Set<Character> newSet = new HashSet<>();\n  \
    \      for (char c : text.toCharArray()) {\n            if (vowels.contains(c))\
    \ {\n                newSet.add(c);\n            }\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : text.toCharArray()) {\n   \
    \         if (!newSet.contains(c)) {\n                sb.append(c);\n        \
    \    }\n        }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', "        // Complete\
    \ the function here!\n        \n        return text;", "        String[] vowels\
    \ = {\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"e\"};\n        for(String vowel\
    \ : vowels) {\n            text = text.replaceAll(vowel, \"\");\n        }\n \
    \       return text;", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.replaceAll("[aeiouAEIOU]+", "");', "        // Write your code\
    \ here\n        int len  = text.length();\n        int i;\n        String result\
    \ = \"\";\n        for (i=0; i < len; i++){\n            String ch = text.substring(i,\
    \ i+1);\n            if ( ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' ||\
    \ ch == 'u' ){\n                result+=ch;\n            }\n        }\n      \
    \  return result;", "        \n        char[] charArray = text.toCharArray();\n\
    \        \n        Arrays.stream(charArray).forEach(c -> {\n            if(Character.isLetterOrDigit(c))\
    \ {\n                if(c >= 'A' && c <= 'Z') {\n                    char temp\
    \ = (char) (c - 'A' + 'a');\n                    charArray[charArray.length -\
    \ 1] = temp;\n                }\n            }\n        });\n        return new\
    \ String(charArray);", "        final List<Character> vowels = new ArrayList<>(Arrays.asList('a',\
    \ 'e', 'i', 'o', 'u'));\n        final StringBuilder builder = new StringBuilder();\n\
    \        for (char c : text.toCharArray()) {\n            if (vowels.contains(c))\
    \ {\n                builder.append(c);\n            }\n        }\n        return\
    \ builder.toString();", "        return text.chars().filter(c -> !(c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U')).mapToObj(c -> (char) c).collect(StringBuilder::new,\
    \ StringBuilder::appendCodePoint, StringBuilder::append).toString();", "     \
    \   String vowels = \"AEIOUaeiou\";\n        int vowels_index = text.indexOf(vowels);\n\
    \        String without_vowels = \"\";\n        while (vowels_index != -1) {\n\
    \            without_vowels += text.substring(0, vowels_index);\n            String\
    \ text = text.substring(vowels_index + 1);\n            vowels_index = text.indexOf(vowels);\n\
    \        }\n        without_vowels += text;\n        return without_vowels;",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            char current = text.charAt(i);\n      \
    \      if (vowels.contains(current)) {\n                continue;\n          \
    \  }\n            result.append(current);\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : text.toCharArray())\
    \ {\n            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else if (Character.isLowerCase(c)) {\n                    sb.append(Character.toUpperCase(c));\n\
    \                } else {\n                    sb.append(c);\n               \
    \ }\n            } else {\n                sb.append(c);\n            }\n    \
    \    }\n        return sb.toString();", "        char[] vowels = { 'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n        StringBuilder builder = new StringBuilder();\n\
    \        for(char ch : text.toCharArray()) {\n            if(Arrays.asList(vowels).contains(ch))\
    \ {\n                builder.append(ch);\n            }\n        }\n        return\
    \ builder.toString();", "        List<Character> vowels = new ArrayList<>();\n\
    \        vowels.add('a', 'e', 'i', 'o', 'u', 'y');\n        vowels.add('a', 'e',\
    \ 'o');\n        StringBuilder sb = new StringBuilder();\n        for (Character\
    \ c : text.toCharArray()) {\n            if (vowels.contains(c)) {\n         \
    \       sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        Set<Character> vowels = new HashSet<>();\n        vowels.add('a');\n  \
    \      vowels.add('e');\n        vowels.add('i');\n        vowels.add('o');\n\
    \        vowels.add('u');\n        text = text.toLowerCase().replaceAll(\"[aeiouAEIOU]\"\
    , \"\");\n        StringBuilder sb = new StringBuilder(text);\n        Iterator<Character>\
    \ it = sb.iterator();\n        while (it.hasNext()) {\n            Character c\
    \ = it.next();\n            if (!vowels.contains(c)) {\n                it.remove();\n\
    \            }\n        }\n        return sb.toString();", '        return text.replaceAll("[^aeiouAEIOU]",
    "");', "        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text\
    \ = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"\
    [AEIOUaeiou]\", \"\");\n        text = text.replaceAll(\"[AEIOUaeiou]\", \"\"\
    );\n        text = text", "        if (text.startsWith(\"a\") || text.startsWith(\"\
    A\")) {\n            text = text.substring(1);\n        }\n        List<Character>\
    \ list = text.chars().filter(Character::isVowel).boxed().collect(Collectors.toList());\n\
    \        StringBuilder builder = new StringBuilder();\n        for (int i = 0,\
    \ j = list.size(); i < j; i++) {\n            builder.append(list.get(i));\n \
    \       }\n        return builder.toString();", "        return text.chars().mapToObj(i\
    \ -> (char) i).filter(i -> !i.equals('a') && \n                !i.equals('e')\
    \ && !i.equals('i') && !i.equals('o') && !i.equals('u'))\n                .collect(Collectors.joining());",
  "        boolean vowel = false;\n        StringBuilder strBuilder = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char ch = text.charAt(i);\n\
    \            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')\
    \ {\n                vowel = true;\n            }\n            if (vowel && strBuilder.length()\
    \ != 0) {\n                strBuilder.append(ch);\n            }\n           \
    \ vowel = false;\n        }\n        return strBuilder.toString();", '        return
    text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', "        String[]\
    \ split = text.split(\"\");\n        Arrays.sort(split);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (String s : split) {\n            if\
    \ (s.equals(\"a\") || s.equals(\"e\") || s.equals(\"i\") || s.equals(\"o\") ||\
    \ s.equals(\"u\")) {\n                sb.append(\"*\");\n            } else {\n\
    \                sb.append(s);\n            }\n        }\n        return sb.toString();",
  "        String removeVowels = \"\";\n        text = text.toUpperCase();\n     \
    \   char[] chars = text.toCharArray();\n        for(char c: chars) {\n       \
    \     if((c == 'A') || (c == 'E') || (c == 'I') || (c == 'O') || (c == 'U') ||\
    \ (c == 'a')) {\n                removeVowels += c;\n            }\n        }\n\
    \        return removeVowels;", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        // Create a Set of all the vowels in the text\n        Set<Character>\
    \ vowels = new HashSet<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'));\n        Set<Character> filtered = new HashSet<Character>();\n\
    \        // Loop through each character in text and add it to filtered\n     \
    \   for (char c : text.toCharArray()) {\n            if (vowels.contains(c)) filtered.add(c);\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        filtered.stream().forEach(c\
    \ -> sb.append(c));\n        return sb.toString();", "        // Use a StringBuilder\
    \ to reduce memory allocations.\n        StringBuilder textBuilder = new StringBuilder();\n\
    \        // Iterate through the characters of the input string.\n        for (char\
    \ c : text.toCharArray()) {\n            // If it is not a vowel, append it.\n\
    \            if (isVowel(c)) {\n                textBuilder.append(c);\n     \
    \       }\n        }\n        // Return the resulting string.\n        return\
    \ textBuilder.toString();", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiouAEIOU]+", "");', "        char[] vowels = new char[] {\
    \ 'a', 'e', 'i', 'o', 'u' };\n        return text.replaceAll(\"[\" + String.join(\"\
    \", vowels) + \"]\", \"\");", "        text = text.toLowerCase();\n        HashSet<Character>\
    \ vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));\n        return\
    \ new String(text.replaceAll(\"[aeiouAEIOU]\", \"\"), 0, text.length()-vowels.size());",
  "        // Write your code here\n        String vowels = \"aeiou\";\n        return\
    \ text.replaceAll(vowels, \"\");", "        List<String> result = new ArrayList<String>();\n\
    \        for (char c : text.toCharArray()) {\n            if (!\"aeiou\".contains(String.valueOf(c)))\
    \ {\n                result.add(String.valueOf(c));\n            }\n        }\n\
    \        return (\"\" + result).replaceAll(\"\\\\[\", \"\").replaceAll(\"\\\\\
    ]\", \"\").replaceAll(\"\\\\{\", \"\").replaceAll(\"\\\\}\", \"\");", '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        boolean flag = false;\n      \
    \  StringBuilder resultString = new StringBuilder();\n        char vowel[] = {'a','e','i','o','u'};\n\
    \        for(int i=0; i < text.length(); i++){\n            flag = false;\n  \
    \          for(int j=0; j < vowel.length; j++){\n                if(text.charAt(i)\
    \ == vowel[j]){\n                    flag = true;\n                    break;\n\
    \                }\n            }\n            if(!flag)\n                resultString.append(text.charAt(i));\n\
    \        }\n        return resultString.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (char ch : text.toCharArray()) {\n     \
    \       boolean vowel = false;\n            for (char c : \"aeiouAEIOU\".toCharArray())\
    \ {\n                if (c == ch) {\n                    vowel = true;\n     \
    \               break;\n                }\n            }\n            if (!vowel)\
    \ {\n                sb.append(ch);\n            }\n        }\n        return\
    \ sb.toString();", "        // write your code here\n        String[] strarray\
    \ = text.split(\"\");\n        for(int i = 0; i < strarray.length; i++) {\n  \
    \          if (strarray[i].equals(\"A\") || strarray[i].equals(\"E\") || strarray[i].equals(\"\
    I\") || strarray[i].equals(\"O\") || strarray[i].equals(\"U\")) {\n          \
    \      strarray[i] = \"\";\n            }\n        }\n        String result =\
    \ \"\";\n        for(int i = 0; i < strarray.length; i++) {\n            result\
    \ = result + strarray[i];\n        }\n        return result;", "        StringBuilder\
    \ builder = new StringBuilder(text);\n        List<Character> vowels = Arrays.asList('a','e','i','o','u');\n\
    \        Set<Character> vowels_removed = new HashSet<Character>();\n        for(Character\
    \ c : builder.toString().toCharArray()){\n            if(vowels.contains(c)){\n\
    \                vowels_removed.add(c);\n            }\n        }\n        builder.deleteCharAt(0);\n\
    \        builder.deleteCharAt(builder.length()-1);\n        for(Character c :\
    \ vowels_removed){\n            builder.deleteCharAt(builder.indexOf(c));\n  \
    \      }\n        return builder.toString();", "        System.out.println(\"\
    removeVowels\");\n        // remove all vowels from string\n        String vowels\
    \ = \"aeiouAEIOU\";\n        char[] chars = text.toCharArray();\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (!vowels.contains(String.valueOf(chars[i]))) {\n             \
    \   sb.append(chars[i]);\n            }\n        }\n        return sb.toString();",
  "        return text.chars()\n                .filter((c) -> c == 'a' || c == 'A'\
    \ || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c\
    \ == 'u' || c == 'U')\n                .mapToObj((c) -> c)\n                .collect(StringBuilder::new,\
    \ StringBuilder::appendCodePoint, StringBuilder::append)\n                .toString();",
  "        Set<Character> vowels = new HashSet<>(Arrays.asList(new Character[]{'a','e','i','o','u'}));\n\
    \        StringBuilder sb = new StringBuilder(text);\n        for(char c : text.toCharArray()){\n\
    \            if(vowels.contains(c)){\n                sb.deleteCharAt(sb.length()-1);\n\
    \                break;\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        List<String> vowels\
    \ = new ArrayList<>();\n        vowels.add(\"a\");\n        vowels.add(\"e\");\n\
    \        vowels.add(\"i\");\n        vowels.add(\"o\");\n        vowels.add(\"\
    u\");\n        vowels.add(\"A\");\n        vowels.add(\"E\");\n        vowels.add(\"\
    I\");\n        vowels.add(\"O\");\n        vowels.add(\"U\");\n        char[]\
    \ vowelsArray = vowels.toArray(new char[vowels.size()]);\n        StringBuilder\
    \ output = new StringBuilder(text);\n        for (int i = 0; i < output.length();\
    \ i++) {\n            if (vowelsArray[i] != text.charAt(i)) {\n              \
    \  output.setCharAt(i, text.charAt(i));\n            }\n        }\n        return\
    \ output.toString();", '        return text.replaceAll("[aeiouAEIOU]", "");',
  "        StringBuilder builder = new StringBuilder();\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) != 'a' && text.charAt(i)\
    \ != 'A' && text.charAt(i) != 'e' && text.charAt(i) != 'E' && text.charAt(i) !=\
    \ 'i' && text.charAt(i) != 'I' && text.charAt(i) != 'o' && text.charAt(i) != 'O'\
    \ && text.charAt(i) != 'u' && text.charAt(i) != 'U') {\n                builder.append(text.charAt(i));\n\
    \            }\n        }\n        return builder.toString();", '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        String withoutVowels = text.replaceAll(\"\
    [aeiouAEIOU]\", \"\");\n        return withoutVowels.isEmpty() ? text : withoutVowels;",
  "        //write your code here\n        \n        ", '        return text.replaceAll("[AEIOUaeiou]",
    "");', '        return text.chars().filter(c -> !Character.isLetterOrDigit(c)).mapToObj(c
    -> (char)c).collect(Collectors.joining());', "        final String vowels = \"\
    aeiouAEIOU\";\n        final String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        StringBuilder buf = new StringBuilder();\n        for (char c : text.toCharArray())\
    \ {\n            if (vowels.indexOf(c) >= 0)\n                continue;\n    \
    \        if (consonants.indexOf(c) >= 0)\n                buf.append(c);\n   \
    \     }\n        return buf.toString();", "        String[] strArr = text.split(\"\
    \");\n        String result = \"\";\n\n        for(int i = 0; i < strArr.length;\
    \ i++){\n            if(!isVowel(strArr[i])) result += strArr[i];\n        }\n\
    \n        return result;", "        // your code\n        return text;", "   \
    \     if (text == null)\n            return \"\";\n\n        final String vowels\
    \ = \"aeiou\";\n        final String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        StringBuilder result = new StringBuilder();\n\n        for (int i = 0;\
    \ i < text.length(); i++) {\n            final char ch = text.charAt(i);\n   \
    \         if (!vowels.contains(ch)) {\n                result.append(ch);\n  \
    \          }\n        }\n\n        return result.toString();", "        Map<Character,\
    \ String> map = new HashMap<>();\n        map.put('a', \"\"); // replace 'a' with\
    \ \"\" (nothing)\n        map.put('e', '');\n        map.put('i', '');\n     \
    \   map.put('o', '');\n        map.put('u', '');\n\n        String result = text;\n\
    \        for (char c : text.toCharArray()) {\n            map.put(c, map.get(c).toLowerCase());\
    \ // replace char with its lower case\n        }\n        return result;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : text.toCharArray())\
    \ {\n            char vowel = 'a';\n            if (c >= 'a' && c <= 'z')\n  \
    \              vowel = 'a';\n            else if (c >= 'A' && c <= 'Z')\n    \
    \            vowel = 'A';\n            else if (c >= '0' && c <= '9')\n      \
    \          vowel = '0';\n            else if (c == '_' || c == '-' || c == '/')\n\
    \                vowel = '_';\n            else\n                vowel = c;\n\
    \            if (!Character.toString(vowel).equals(\"_\"))\n                sb.append(Character.toString(vowel));\n\
    \        }\n        return sb.toString();", "        // TODO: Complete the implementation.\n\
    \        String vowels = \"aeiouAEIOU\";\n        List<Character> list = new ArrayList<>();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            list.add(text.charAt(i));\n\
    \        }\n        list.removeIf((ch) -> vowels.contains(Character.toLowerCase(ch)));\n\
    \        String newtext = \"\";\n        for(Character ch : list){\n         \
    \   newtext += ch;\n        }\n        return newtext;", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]+", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        //Write your code here\n     \
    \   \n        return text;", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        Matcher matcher\
    \ = pattern.matcher(text);\n        StringBuffer result = new StringBuffer();\n\
    \        while(matcher.find()) {\n            if (matcher.group(1).length()==0)\n\
    \                matcher.appendReplacement(result, \"\");\n            else\n\
    \                matcher.appendReplacement(result,matcher.group(1).substring(1));\n\
    \        }\n        matcher.appendTail(result);\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder(text);\n        Set<Character> set\
    \ = new HashSet<>();\n        set.add(text.charAt(0));\n        set.add(text.charAt(1));\n\
    \        set.add(text.charAt(2));\n        set.add(text.charAt(3));\n        set.add(text.charAt(4));\n\
    \        set.add(text.charAt(5));\n        set.add(text.charAt(6));\n        set.add(text.charAt(7));\n\
    \        set.add(text.charAt(8));\n        set.add(text.charAt(9));\n        set.add(text.charAt(10));\n\
    \        set.add(text.charAt(11));\n        set.add(text.charAt(12));\n      \
    \  set.add(text.charAt(13));\n        set.add(text.charAt(14));\n        set.add(text.charAt(15));\n\
    \        set.add(text.charAt(16));\n        set.add(text.charAt(17));\n      \
    \  set.add(text.charAt(18));\n        set.add(text.charAt(19));\n        set.add(text.charAt(20));\n\
    \        set.add(text.charAt(21));\n        set.add(text.charAt(22));\n      \
    \  set.add(text.charAt(23));\n        set.add(text.charAt(24));\n        set.add(text.charAt(25));\n\
    \        set.add(text.charAt(26));\n        set.add(text.charAt(27));\n      \
    \  set.add(text.charAt(28));\n        set.add(text.charAt(29));\n        set.add(text.charAt(30));\n\
    \        set.add(text.charAt(31));\n        set.add(text.charAt(32));\n      \
    \  set.add(text.charAt(33));\n        set.add(text.charAt(34));\n        set.add(text.charAt(35));\n\
    \        set.add(text.charAt(36));\n        set.add(text.charAt(37));\n      \
    \  set.add(text.charAt(38));\n        set.add(text.charAt(39));\n        set.add(text.charAt(40));\n\
    \        set.add(text.charAt(41));\n        set.add(text.charAt(42));\n      \
    \  set.add(text.charAt(43));\n        set.add(text.charAt(44));\n        set.add(text.charAt(45));\n\
    \        set.add(text.charAt(46));\n        set.add(text.charAt(47));\n      \
    \  set.add(text.charAt(48));\n        set.add(text.charAt(49));\n        set.add(text.charAt(50));\n\
    \        set.add(text.charAt(51));\n        set.add(text.charAt(52));\n      \
    \  set.add(text.charAt(53));\n        set.add(text.charAt(54));\n        set.add(text.charAt(55));\n\
    \        set.add(text.charAt(56));\n        set.add(text.charAt(57));\n      \
    \  set.add(text.charAt(58));\n        set.add(text.charAt(59));\n        set.add(text.charAt(60));\n\
    \        set.add(text.", '        return text.replaceAll("[aeiouAEIOU]", "");',
  "        StringBuilder b = new StringBuilder();\n        boolean vowel = false;\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char ch = text.charAt(i);\n\
    \            if (vowel && Character.isLetter(ch)) {\n                b.append(ch);\n\
    \            }\n            if (Character.isLetter(ch) && ch != 'a' && ch != 'e'\n\
    \                    && ch != 'i' && ch != 'o' && ch != 'u') {\n             \
    \   vowel = true;\n            }\n            if (!Character.isLetter(ch) && vowel)\
    \ {\n                vowel = false;\n            }\n        }\n        return\
    \ b.toString();", '        return text == null ? "" : text.replaceAll("[aeiouAEIOU]",
    "");']
stop_tokens:
- "\n    }\n"
